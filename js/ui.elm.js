(function(scope){
'use strict';

function F(arity, fun, wrapper) {
  wrapper.a = arity;
  wrapper.f = fun;
  return wrapper;
}

function F2(fun) {
  return F(2, fun, function(a) { return function(b) { return fun(a,b); }; })
}
function F3(fun) {
  return F(3, fun, function(a) {
    return function(b) { return function(c) { return fun(a, b, c); }; };
  });
}
function F4(fun) {
  return F(4, fun, function(a) { return function(b) { return function(c) {
    return function(d) { return fun(a, b, c, d); }; }; };
  });
}
function F5(fun) {
  return F(5, fun, function(a) { return function(b) { return function(c) {
    return function(d) { return function(e) { return fun(a, b, c, d, e); }; }; }; };
  });
}
function F6(fun) {
  return F(6, fun, function(a) { return function(b) { return function(c) {
    return function(d) { return function(e) { return function(f) {
    return fun(a, b, c, d, e, f); }; }; }; }; };
  });
}
function F7(fun) {
  return F(7, fun, function(a) { return function(b) { return function(c) {
    return function(d) { return function(e) { return function(f) {
    return function(g) { return fun(a, b, c, d, e, f, g); }; }; }; }; }; };
  });
}
function F8(fun) {
  return F(8, fun, function(a) { return function(b) { return function(c) {
    return function(d) { return function(e) { return function(f) {
    return function(g) { return function(h) {
    return fun(a, b, c, d, e, f, g, h); }; }; }; }; }; }; };
  });
}
function F9(fun) {
  return F(9, fun, function(a) { return function(b) { return function(c) {
    return function(d) { return function(e) { return function(f) {
    return function(g) { return function(h) { return function(i) {
    return fun(a, b, c, d, e, f, g, h, i); }; }; }; }; }; }; }; };
  });
}

function A2(fun, a, b) {
  return fun.a === 2 ? fun.f(a, b) : fun(a)(b);
}
function A3(fun, a, b, c) {
  return fun.a === 3 ? fun.f(a, b, c) : fun(a)(b)(c);
}
function A4(fun, a, b, c, d) {
  return fun.a === 4 ? fun.f(a, b, c, d) : fun(a)(b)(c)(d);
}
function A5(fun, a, b, c, d, e) {
  return fun.a === 5 ? fun.f(a, b, c, d, e) : fun(a)(b)(c)(d)(e);
}
function A6(fun, a, b, c, d, e, f) {
  return fun.a === 6 ? fun.f(a, b, c, d, e, f) : fun(a)(b)(c)(d)(e)(f);
}
function A7(fun, a, b, c, d, e, f, g) {
  return fun.a === 7 ? fun.f(a, b, c, d, e, f, g) : fun(a)(b)(c)(d)(e)(f)(g);
}
function A8(fun, a, b, c, d, e, f, g, h) {
  return fun.a === 8 ? fun.f(a, b, c, d, e, f, g, h) : fun(a)(b)(c)(d)(e)(f)(g)(h);
}
function A9(fun, a, b, c, d, e, f, g, h, i) {
  return fun.a === 9 ? fun.f(a, b, c, d, e, f, g, h, i) : fun(a)(b)(c)(d)(e)(f)(g)(h)(i);
}

console.warn('Compiled in DEV mode. Follow the advice at https://elm-lang.org/0.19.1/optimize for better performance and smaller assets.');


var _JsArray_empty = [];

function _JsArray_singleton(value)
{
    return [value];
}

function _JsArray_length(array)
{
    return array.length;
}

var _JsArray_initialize = F3(function(size, offset, func)
{
    var result = new Array(size);

    for (var i = 0; i < size; i++)
    {
        result[i] = func(offset + i);
    }

    return result;
});

var _JsArray_initializeFromList = F2(function (max, ls)
{
    var result = new Array(max);

    for (var i = 0; i < max && ls.b; i++)
    {
        result[i] = ls.a;
        ls = ls.b;
    }

    result.length = i;
    return _Utils_Tuple2(result, ls);
});

var _JsArray_unsafeGet = F2(function(index, array)
{
    return array[index];
});

var _JsArray_unsafeSet = F3(function(index, value, array)
{
    var length = array.length;
    var result = new Array(length);

    for (var i = 0; i < length; i++)
    {
        result[i] = array[i];
    }

    result[index] = value;
    return result;
});

var _JsArray_push = F2(function(value, array)
{
    var length = array.length;
    var result = new Array(length + 1);

    for (var i = 0; i < length; i++)
    {
        result[i] = array[i];
    }

    result[length] = value;
    return result;
});

var _JsArray_foldl = F3(function(func, acc, array)
{
    var length = array.length;

    for (var i = 0; i < length; i++)
    {
        acc = A2(func, array[i], acc);
    }

    return acc;
});

var _JsArray_foldr = F3(function(func, acc, array)
{
    for (var i = array.length - 1; i >= 0; i--)
    {
        acc = A2(func, array[i], acc);
    }

    return acc;
});

var _JsArray_map = F2(function(func, array)
{
    var length = array.length;
    var result = new Array(length);

    for (var i = 0; i < length; i++)
    {
        result[i] = func(array[i]);
    }

    return result;
});

var _JsArray_indexedMap = F3(function(func, offset, array)
{
    var length = array.length;
    var result = new Array(length);

    for (var i = 0; i < length; i++)
    {
        result[i] = A2(func, offset + i, array[i]);
    }

    return result;
});

var _JsArray_slice = F3(function(from, to, array)
{
    return array.slice(from, to);
});

var _JsArray_appendN = F3(function(n, dest, source)
{
    var destLen = dest.length;
    var itemsToCopy = n - destLen;

    if (itemsToCopy > source.length)
    {
        itemsToCopy = source.length;
    }

    var size = destLen + itemsToCopy;
    var result = new Array(size);

    for (var i = 0; i < destLen; i++)
    {
        result[i] = dest[i];
    }

    for (var i = 0; i < itemsToCopy; i++)
    {
        result[i + destLen] = source[i];
    }

    return result;
});



// LOG

var _Debug_log_UNUSED = F2(function(tag, value)
{
	return value;
});

var _Debug_log = F2(function(tag, value)
{
	console.log(tag + ': ' + _Debug_toString(value));
	return value;
});


// TODOS

function _Debug_todo(moduleName, region)
{
	return function(message) {
		_Debug_crash(8, moduleName, region, message);
	};
}

function _Debug_todoCase(moduleName, region, value)
{
	return function(message) {
		_Debug_crash(9, moduleName, region, value, message);
	};
}


// TO STRING

function _Debug_toString_UNUSED(value)
{
	return '<internals>';
}

function _Debug_toString(value)
{
	return _Debug_toAnsiString(false, value);
}

function _Debug_toAnsiString(ansi, value)
{
	if (typeof value === 'function')
	{
		return _Debug_internalColor(ansi, '<function>');
	}

	if (typeof value === 'boolean')
	{
		return _Debug_ctorColor(ansi, value ? 'True' : 'False');
	}

	if (typeof value === 'number')
	{
		return _Debug_numberColor(ansi, value + '');
	}

	if (value instanceof String)
	{
		return _Debug_charColor(ansi, "'" + _Debug_addSlashes(value, true) + "'");
	}

	if (typeof value === 'string')
	{
		return _Debug_stringColor(ansi, '"' + _Debug_addSlashes(value, false) + '"');
	}

	if (typeof value === 'object' && '$' in value)
	{
		var tag = value.$;

		if (typeof tag === 'number')
		{
			return _Debug_internalColor(ansi, '<internals>');
		}

		if (tag[0] === '#')
		{
			var output = [];
			for (var k in value)
			{
				if (k === '$') continue;
				output.push(_Debug_toAnsiString(ansi, value[k]));
			}
			return '(' + output.join(',') + ')';
		}

		if (tag === 'Set_elm_builtin')
		{
			return _Debug_ctorColor(ansi, 'Set')
				+ _Debug_fadeColor(ansi, '.fromList') + ' '
				+ _Debug_toAnsiString(ansi, $elm$core$Set$toList(value));
		}

		if (tag === 'RBNode_elm_builtin' || tag === 'RBEmpty_elm_builtin')
		{
			return _Debug_ctorColor(ansi, 'Dict')
				+ _Debug_fadeColor(ansi, '.fromList') + ' '
				+ _Debug_toAnsiString(ansi, $elm$core$Dict$toList(value));
		}

		if (tag === 'Array_elm_builtin')
		{
			return _Debug_ctorColor(ansi, 'Array')
				+ _Debug_fadeColor(ansi, '.fromList') + ' '
				+ _Debug_toAnsiString(ansi, $elm$core$Array$toList(value));
		}

		if (tag === '::' || tag === '[]')
		{
			var output = '[';

			value.b && (output += _Debug_toAnsiString(ansi, value.a), value = value.b)

			for (; value.b; value = value.b) // WHILE_CONS
			{
				output += ',' + _Debug_toAnsiString(ansi, value.a);
			}
			return output + ']';
		}

		var output = '';
		for (var i in value)
		{
			if (i === '$') continue;
			var str = _Debug_toAnsiString(ansi, value[i]);
			var c0 = str[0];
			var parenless = c0 === '{' || c0 === '(' || c0 === '[' || c0 === '<' || c0 === '"' || str.indexOf(' ') < 0;
			output += ' ' + (parenless ? str : '(' + str + ')');
		}
		return _Debug_ctorColor(ansi, tag) + output;
	}

	if (typeof DataView === 'function' && value instanceof DataView)
	{
		return _Debug_stringColor(ansi, '<' + value.byteLength + ' bytes>');
	}

	if (typeof File !== 'undefined' && value instanceof File)
	{
		return _Debug_internalColor(ansi, '<' + value.name + '>');
	}

	if (typeof value === 'object')
	{
		var output = [];
		for (var key in value)
		{
			var field = key[0] === '_' ? key.slice(1) : key;
			output.push(_Debug_fadeColor(ansi, field) + ' = ' + _Debug_toAnsiString(ansi, value[key]));
		}
		if (output.length === 0)
		{
			return '{}';
		}
		return '{ ' + output.join(', ') + ' }';
	}

	return _Debug_internalColor(ansi, '<internals>');
}

function _Debug_addSlashes(str, isChar)
{
	var s = str
		.replace(/\\/g, '\\\\')
		.replace(/\n/g, '\\n')
		.replace(/\t/g, '\\t')
		.replace(/\r/g, '\\r')
		.replace(/\v/g, '\\v')
		.replace(/\0/g, '\\0');

	if (isChar)
	{
		return s.replace(/\'/g, '\\\'');
	}
	else
	{
		return s.replace(/\"/g, '\\"');
	}
}

function _Debug_ctorColor(ansi, string)
{
	return ansi ? '\x1b[96m' + string + '\x1b[0m' : string;
}

function _Debug_numberColor(ansi, string)
{
	return ansi ? '\x1b[95m' + string + '\x1b[0m' : string;
}

function _Debug_stringColor(ansi, string)
{
	return ansi ? '\x1b[93m' + string + '\x1b[0m' : string;
}

function _Debug_charColor(ansi, string)
{
	return ansi ? '\x1b[92m' + string + '\x1b[0m' : string;
}

function _Debug_fadeColor(ansi, string)
{
	return ansi ? '\x1b[37m' + string + '\x1b[0m' : string;
}

function _Debug_internalColor(ansi, string)
{
	return ansi ? '\x1b[36m' + string + '\x1b[0m' : string;
}

function _Debug_toHexDigit(n)
{
	return String.fromCharCode(n < 10 ? 48 + n : 55 + n);
}


// CRASH


function _Debug_crash_UNUSED(identifier)
{
	throw new Error('https://github.com/elm/core/blob/1.0.0/hints/' + identifier + '.md');
}


function _Debug_crash(identifier, fact1, fact2, fact3, fact4)
{
	switch(identifier)
	{
		case 0:
			throw new Error('What node should I take over? In JavaScript I need something like:\n\n    Elm.Main.init({\n        node: document.getElementById("elm-node")\n    })\n\nYou need to do this with any Browser.sandbox or Browser.element program.');

		case 1:
			throw new Error('Browser.application programs cannot handle URLs like this:\n\n    ' + document.location.href + '\n\nWhat is the root? The root of your file system? Try looking at this program with `elm reactor` or some other server.');

		case 2:
			var jsonErrorString = fact1;
			throw new Error('Problem with the flags given to your Elm program on initialization.\n\n' + jsonErrorString);

		case 3:
			var portName = fact1;
			throw new Error('There can only be one port named `' + portName + '`, but your program has multiple.');

		case 4:
			var portName = fact1;
			var problem = fact2;
			throw new Error('Trying to send an unexpected type of value through port `' + portName + '`:\n' + problem);

		case 5:
			throw new Error('Trying to use `(==)` on functions.\nThere is no way to know if functions are "the same" in the Elm sense.\nRead more about this at https://package.elm-lang.org/packages/elm/core/latest/Basics#== which describes why it is this way and what the better version will look like.');

		case 6:
			var moduleName = fact1;
			throw new Error('Your page is loading multiple Elm scripts with a module named ' + moduleName + '. Maybe a duplicate script is getting loaded accidentally? If not, rename one of them so I know which is which!');

		case 8:
			var moduleName = fact1;
			var region = fact2;
			var message = fact3;
			throw new Error('TODO in module `' + moduleName + '` ' + _Debug_regionToString(region) + '\n\n' + message);

		case 9:
			var moduleName = fact1;
			var region = fact2;
			var value = fact3;
			var message = fact4;
			throw new Error(
				'TODO in module `' + moduleName + '` from the `case` expression '
				+ _Debug_regionToString(region) + '\n\nIt received the following value:\n\n    '
				+ _Debug_toString(value).replace('\n', '\n    ')
				+ '\n\nBut the branch that handles it says:\n\n    ' + message.replace('\n', '\n    ')
			);

		case 10:
			throw new Error('Bug in https://github.com/elm/virtual-dom/issues');

		case 11:
			throw new Error('Cannot perform mod 0. Division by zero error.');
	}
}

function _Debug_regionToString(region)
{
	if (region.start.line === region.end.line)
	{
		return 'on line ' + region.start.line;
	}
	return 'on lines ' + region.start.line + ' through ' + region.end.line;
}



// EQUALITY

function _Utils_eq(x, y)
{
	for (
		var pair, stack = [], isEqual = _Utils_eqHelp(x, y, 0, stack);
		isEqual && (pair = stack.pop());
		isEqual = _Utils_eqHelp(pair.a, pair.b, 0, stack)
		)
	{}

	return isEqual;
}

function _Utils_eqHelp(x, y, depth, stack)
{
	if (x === y)
	{
		return true;
	}

	if (typeof x !== 'object' || x === null || y === null)
	{
		typeof x === 'function' && _Debug_crash(5);
		return false;
	}

	if (depth > 100)
	{
		stack.push(_Utils_Tuple2(x,y));
		return true;
	}

	/**/
	if (x.$ === 'Set_elm_builtin')
	{
		x = $elm$core$Set$toList(x);
		y = $elm$core$Set$toList(y);
	}
	if (x.$ === 'RBNode_elm_builtin' || x.$ === 'RBEmpty_elm_builtin')
	{
		x = $elm$core$Dict$toList(x);
		y = $elm$core$Dict$toList(y);
	}
	//*/

	/**_UNUSED/
	if (x.$ < 0)
	{
		x = $elm$core$Dict$toList(x);
		y = $elm$core$Dict$toList(y);
	}
	//*/

	for (var key in x)
	{
		if (!_Utils_eqHelp(x[key], y[key], depth + 1, stack))
		{
			return false;
		}
	}
	return true;
}

var _Utils_equal = F2(_Utils_eq);
var _Utils_notEqual = F2(function(a, b) { return !_Utils_eq(a,b); });



// COMPARISONS

// Code in Generate/JavaScript.hs, Basics.js, and List.js depends on
// the particular integer values assigned to LT, EQ, and GT.

function _Utils_cmp(x, y, ord)
{
	if (typeof x !== 'object')
	{
		return x === y ? /*EQ*/ 0 : x < y ? /*LT*/ -1 : /*GT*/ 1;
	}

	/**/
	if (x instanceof String)
	{
		var a = x.valueOf();
		var b = y.valueOf();
		return a === b ? 0 : a < b ? -1 : 1;
	}
	//*/

	/**_UNUSED/
	if (typeof x.$ === 'undefined')
	//*/
	/**/
	if (x.$[0] === '#')
	//*/
	{
		return (ord = _Utils_cmp(x.a, y.a))
			? ord
			: (ord = _Utils_cmp(x.b, y.b))
				? ord
				: _Utils_cmp(x.c, y.c);
	}

	// traverse conses until end of a list or a mismatch
	for (; x.b && y.b && !(ord = _Utils_cmp(x.a, y.a)); x = x.b, y = y.b) {} // WHILE_CONSES
	return ord || (x.b ? /*GT*/ 1 : y.b ? /*LT*/ -1 : /*EQ*/ 0);
}

var _Utils_lt = F2(function(a, b) { return _Utils_cmp(a, b) < 0; });
var _Utils_le = F2(function(a, b) { return _Utils_cmp(a, b) < 1; });
var _Utils_gt = F2(function(a, b) { return _Utils_cmp(a, b) > 0; });
var _Utils_ge = F2(function(a, b) { return _Utils_cmp(a, b) >= 0; });

var _Utils_compare = F2(function(x, y)
{
	var n = _Utils_cmp(x, y);
	return n < 0 ? $elm$core$Basics$LT : n ? $elm$core$Basics$GT : $elm$core$Basics$EQ;
});


// COMMON VALUES

var _Utils_Tuple0_UNUSED = 0;
var _Utils_Tuple0 = { $: '#0' };

function _Utils_Tuple2_UNUSED(a, b) { return { a: a, b: b }; }
function _Utils_Tuple2(a, b) { return { $: '#2', a: a, b: b }; }

function _Utils_Tuple3_UNUSED(a, b, c) { return { a: a, b: b, c: c }; }
function _Utils_Tuple3(a, b, c) { return { $: '#3', a: a, b: b, c: c }; }

function _Utils_chr_UNUSED(c) { return c; }
function _Utils_chr(c) { return new String(c); }


// RECORDS

function _Utils_update(oldRecord, updatedFields)
{
	var newRecord = {};

	for (var key in oldRecord)
	{
		newRecord[key] = oldRecord[key];
	}

	for (var key in updatedFields)
	{
		newRecord[key] = updatedFields[key];
	}

	return newRecord;
}


// APPEND

var _Utils_append = F2(_Utils_ap);

function _Utils_ap(xs, ys)
{
	// append Strings
	if (typeof xs === 'string')
	{
		return xs + ys;
	}

	// append Lists
	if (!xs.b)
	{
		return ys;
	}
	var root = _List_Cons(xs.a, ys);
	xs = xs.b
	for (var curr = root; xs.b; xs = xs.b) // WHILE_CONS
	{
		curr = curr.b = _List_Cons(xs.a, ys);
	}
	return root;
}



var _List_Nil_UNUSED = { $: 0 };
var _List_Nil = { $: '[]' };

function _List_Cons_UNUSED(hd, tl) { return { $: 1, a: hd, b: tl }; }
function _List_Cons(hd, tl) { return { $: '::', a: hd, b: tl }; }


var _List_cons = F2(_List_Cons);

function _List_fromArray(arr)
{
	var out = _List_Nil;
	for (var i = arr.length; i--; )
	{
		out = _List_Cons(arr[i], out);
	}
	return out;
}

function _List_toArray(xs)
{
	for (var out = []; xs.b; xs = xs.b) // WHILE_CONS
	{
		out.push(xs.a);
	}
	return out;
}

var _List_map2 = F3(function(f, xs, ys)
{
	for (var arr = []; xs.b && ys.b; xs = xs.b, ys = ys.b) // WHILE_CONSES
	{
		arr.push(A2(f, xs.a, ys.a));
	}
	return _List_fromArray(arr);
});

var _List_map3 = F4(function(f, xs, ys, zs)
{
	for (var arr = []; xs.b && ys.b && zs.b; xs = xs.b, ys = ys.b, zs = zs.b) // WHILE_CONSES
	{
		arr.push(A3(f, xs.a, ys.a, zs.a));
	}
	return _List_fromArray(arr);
});

var _List_map4 = F5(function(f, ws, xs, ys, zs)
{
	for (var arr = []; ws.b && xs.b && ys.b && zs.b; ws = ws.b, xs = xs.b, ys = ys.b, zs = zs.b) // WHILE_CONSES
	{
		arr.push(A4(f, ws.a, xs.a, ys.a, zs.a));
	}
	return _List_fromArray(arr);
});

var _List_map5 = F6(function(f, vs, ws, xs, ys, zs)
{
	for (var arr = []; vs.b && ws.b && xs.b && ys.b && zs.b; vs = vs.b, ws = ws.b, xs = xs.b, ys = ys.b, zs = zs.b) // WHILE_CONSES
	{
		arr.push(A5(f, vs.a, ws.a, xs.a, ys.a, zs.a));
	}
	return _List_fromArray(arr);
});

var _List_sortBy = F2(function(f, xs)
{
	return _List_fromArray(_List_toArray(xs).sort(function(a, b) {
		return _Utils_cmp(f(a), f(b));
	}));
});

var _List_sortWith = F2(function(f, xs)
{
	return _List_fromArray(_List_toArray(xs).sort(function(a, b) {
		var ord = A2(f, a, b);
		return ord === $elm$core$Basics$EQ ? 0 : ord === $elm$core$Basics$LT ? -1 : 1;
	}));
});



// MATH

var _Basics_add = F2(function(a, b) { return a + b; });
var _Basics_sub = F2(function(a, b) { return a - b; });
var _Basics_mul = F2(function(a, b) { return a * b; });
var _Basics_fdiv = F2(function(a, b) { return a / b; });
var _Basics_idiv = F2(function(a, b) { return (a / b) | 0; });
var _Basics_pow = F2(Math.pow);

var _Basics_remainderBy = F2(function(b, a) { return a % b; });

// https://www.microsoft.com/en-us/research/wp-content/uploads/2016/02/divmodnote-letter.pdf
var _Basics_modBy = F2(function(modulus, x)
{
	var answer = x % modulus;
	return modulus === 0
		? _Debug_crash(11)
		:
	((answer > 0 && modulus < 0) || (answer < 0 && modulus > 0))
		? answer + modulus
		: answer;
});


// TRIGONOMETRY

var _Basics_pi = Math.PI;
var _Basics_e = Math.E;
var _Basics_cos = Math.cos;
var _Basics_sin = Math.sin;
var _Basics_tan = Math.tan;
var _Basics_acos = Math.acos;
var _Basics_asin = Math.asin;
var _Basics_atan = Math.atan;
var _Basics_atan2 = F2(Math.atan2);


// MORE MATH

function _Basics_toFloat(x) { return x; }
function _Basics_truncate(n) { return n | 0; }
function _Basics_isInfinite(n) { return n === Infinity || n === -Infinity; }

var _Basics_ceiling = Math.ceil;
var _Basics_floor = Math.floor;
var _Basics_round = Math.round;
var _Basics_sqrt = Math.sqrt;
var _Basics_log = Math.log;
var _Basics_isNaN = isNaN;


// BOOLEANS

function _Basics_not(bool) { return !bool; }
var _Basics_and = F2(function(a, b) { return a && b; });
var _Basics_or  = F2(function(a, b) { return a || b; });
var _Basics_xor = F2(function(a, b) { return a !== b; });



var _String_cons = F2(function(chr, str)
{
	return chr + str;
});

function _String_uncons(string)
{
	var word = string.charCodeAt(0);
	return !isNaN(word)
		? $elm$core$Maybe$Just(
			0xD800 <= word && word <= 0xDBFF
				? _Utils_Tuple2(_Utils_chr(string[0] + string[1]), string.slice(2))
				: _Utils_Tuple2(_Utils_chr(string[0]), string.slice(1))
		)
		: $elm$core$Maybe$Nothing;
}

var _String_append = F2(function(a, b)
{
	return a + b;
});

function _String_length(str)
{
	return str.length;
}

var _String_map = F2(function(func, string)
{
	var len = string.length;
	var array = new Array(len);
	var i = 0;
	while (i < len)
	{
		var word = string.charCodeAt(i);
		if (0xD800 <= word && word <= 0xDBFF)
		{
			array[i] = func(_Utils_chr(string[i] + string[i+1]));
			i += 2;
			continue;
		}
		array[i] = func(_Utils_chr(string[i]));
		i++;
	}
	return array.join('');
});

var _String_filter = F2(function(isGood, str)
{
	var arr = [];
	var len = str.length;
	var i = 0;
	while (i < len)
	{
		var char = str[i];
		var word = str.charCodeAt(i);
		i++;
		if (0xD800 <= word && word <= 0xDBFF)
		{
			char += str[i];
			i++;
		}

		if (isGood(_Utils_chr(char)))
		{
			arr.push(char);
		}
	}
	return arr.join('');
});

function _String_reverse(str)
{
	var len = str.length;
	var arr = new Array(len);
	var i = 0;
	while (i < len)
	{
		var word = str.charCodeAt(i);
		if (0xD800 <= word && word <= 0xDBFF)
		{
			arr[len - i] = str[i + 1];
			i++;
			arr[len - i] = str[i - 1];
			i++;
		}
		else
		{
			arr[len - i] = str[i];
			i++;
		}
	}
	return arr.join('');
}

var _String_foldl = F3(function(func, state, string)
{
	var len = string.length;
	var i = 0;
	while (i < len)
	{
		var char = string[i];
		var word = string.charCodeAt(i);
		i++;
		if (0xD800 <= word && word <= 0xDBFF)
		{
			char += string[i];
			i++;
		}
		state = A2(func, _Utils_chr(char), state);
	}
	return state;
});

var _String_foldr = F3(function(func, state, string)
{
	var i = string.length;
	while (i--)
	{
		var char = string[i];
		var word = string.charCodeAt(i);
		if (0xDC00 <= word && word <= 0xDFFF)
		{
			i--;
			char = string[i] + char;
		}
		state = A2(func, _Utils_chr(char), state);
	}
	return state;
});

var _String_split = F2(function(sep, str)
{
	return str.split(sep);
});

var _String_join = F2(function(sep, strs)
{
	return strs.join(sep);
});

var _String_slice = F3(function(start, end, str) {
	return str.slice(start, end);
});

function _String_trim(str)
{
	return str.trim();
}

function _String_trimLeft(str)
{
	return str.replace(/^\s+/, '');
}

function _String_trimRight(str)
{
	return str.replace(/\s+$/, '');
}

function _String_words(str)
{
	return _List_fromArray(str.trim().split(/\s+/g));
}

function _String_lines(str)
{
	return _List_fromArray(str.split(/\r\n|\r|\n/g));
}

function _String_toUpper(str)
{
	return str.toUpperCase();
}

function _String_toLower(str)
{
	return str.toLowerCase();
}

var _String_any = F2(function(isGood, string)
{
	var i = string.length;
	while (i--)
	{
		var char = string[i];
		var word = string.charCodeAt(i);
		if (0xDC00 <= word && word <= 0xDFFF)
		{
			i--;
			char = string[i] + char;
		}
		if (isGood(_Utils_chr(char)))
		{
			return true;
		}
	}
	return false;
});

var _String_all = F2(function(isGood, string)
{
	var i = string.length;
	while (i--)
	{
		var char = string[i];
		var word = string.charCodeAt(i);
		if (0xDC00 <= word && word <= 0xDFFF)
		{
			i--;
			char = string[i] + char;
		}
		if (!isGood(_Utils_chr(char)))
		{
			return false;
		}
	}
	return true;
});

var _String_contains = F2(function(sub, str)
{
	return str.indexOf(sub) > -1;
});

var _String_startsWith = F2(function(sub, str)
{
	return str.indexOf(sub) === 0;
});

var _String_endsWith = F2(function(sub, str)
{
	return str.length >= sub.length &&
		str.lastIndexOf(sub) === str.length - sub.length;
});

var _String_indexes = F2(function(sub, str)
{
	var subLen = sub.length;

	if (subLen < 1)
	{
		return _List_Nil;
	}

	var i = 0;
	var is = [];

	while ((i = str.indexOf(sub, i)) > -1)
	{
		is.push(i);
		i = i + subLen;
	}

	return _List_fromArray(is);
});


// TO STRING

function _String_fromNumber(number)
{
	return number + '';
}


// INT CONVERSIONS

function _String_toInt(str)
{
	var total = 0;
	var code0 = str.charCodeAt(0);
	var start = code0 == 0x2B /* + */ || code0 == 0x2D /* - */ ? 1 : 0;

	for (var i = start; i < str.length; ++i)
	{
		var code = str.charCodeAt(i);
		if (code < 0x30 || 0x39 < code)
		{
			return $elm$core$Maybe$Nothing;
		}
		total = 10 * total + code - 0x30;
	}

	return i == start
		? $elm$core$Maybe$Nothing
		: $elm$core$Maybe$Just(code0 == 0x2D ? -total : total);
}


// FLOAT CONVERSIONS

function _String_toFloat(s)
{
	// check if it is a hex, octal, or binary number
	if (s.length === 0 || /[\sxbo]/.test(s))
	{
		return $elm$core$Maybe$Nothing;
	}
	var n = +s;
	// faster isNaN check
	return n === n ? $elm$core$Maybe$Just(n) : $elm$core$Maybe$Nothing;
}

function _String_fromList(chars)
{
	return _List_toArray(chars).join('');
}




function _Char_toCode(char)
{
	var code = char.charCodeAt(0);
	if (0xD800 <= code && code <= 0xDBFF)
	{
		return (code - 0xD800) * 0x400 + char.charCodeAt(1) - 0xDC00 + 0x10000
	}
	return code;
}

function _Char_fromCode(code)
{
	return _Utils_chr(
		(code < 0 || 0x10FFFF < code)
			? '\uFFFD'
			:
		(code <= 0xFFFF)
			? String.fromCharCode(code)
			:
		(code -= 0x10000,
			String.fromCharCode(Math.floor(code / 0x400) + 0xD800, code % 0x400 + 0xDC00)
		)
	);
}

function _Char_toUpper(char)
{
	return _Utils_chr(char.toUpperCase());
}

function _Char_toLower(char)
{
	return _Utils_chr(char.toLowerCase());
}

function _Char_toLocaleUpper(char)
{
	return _Utils_chr(char.toLocaleUpperCase());
}

function _Char_toLocaleLower(char)
{
	return _Utils_chr(char.toLocaleLowerCase());
}



/**/
function _Json_errorToString(error)
{
	return $elm$json$Json$Decode$errorToString(error);
}
//*/


// CORE DECODERS

function _Json_succeed(msg)
{
	return {
		$: 0,
		a: msg
	};
}

function _Json_fail(msg)
{
	return {
		$: 1,
		a: msg
	};
}

function _Json_decodePrim(decoder)
{
	return { $: 2, b: decoder };
}

var _Json_decodeInt = _Json_decodePrim(function(value) {
	return (typeof value !== 'number')
		? _Json_expecting('an INT', value)
		:
	(-2147483647 < value && value < 2147483647 && (value | 0) === value)
		? $elm$core$Result$Ok(value)
		:
	(isFinite(value) && !(value % 1))
		? $elm$core$Result$Ok(value)
		: _Json_expecting('an INT', value);
});

var _Json_decodeBool = _Json_decodePrim(function(value) {
	return (typeof value === 'boolean')
		? $elm$core$Result$Ok(value)
		: _Json_expecting('a BOOL', value);
});

var _Json_decodeFloat = _Json_decodePrim(function(value) {
	return (typeof value === 'number')
		? $elm$core$Result$Ok(value)
		: _Json_expecting('a FLOAT', value);
});

var _Json_decodeValue = _Json_decodePrim(function(value) {
	return $elm$core$Result$Ok(_Json_wrap(value));
});

var _Json_decodeString = _Json_decodePrim(function(value) {
	return (typeof value === 'string')
		? $elm$core$Result$Ok(value)
		: (value instanceof String)
			? $elm$core$Result$Ok(value + '')
			: _Json_expecting('a STRING', value);
});

function _Json_decodeList(decoder) { return { $: 3, b: decoder }; }
function _Json_decodeArray(decoder) { return { $: 4, b: decoder }; }

function _Json_decodeNull(value) { return { $: 5, c: value }; }

var _Json_decodeField = F2(function(field, decoder)
{
	return {
		$: 6,
		d: field,
		b: decoder
	};
});

var _Json_decodeIndex = F2(function(index, decoder)
{
	return {
		$: 7,
		e: index,
		b: decoder
	};
});

function _Json_decodeKeyValuePairs(decoder)
{
	return {
		$: 8,
		b: decoder
	};
}

function _Json_mapMany(f, decoders)
{
	return {
		$: 9,
		f: f,
		g: decoders
	};
}

var _Json_andThen = F2(function(callback, decoder)
{
	return {
		$: 10,
		b: decoder,
		h: callback
	};
});

function _Json_oneOf(decoders)
{
	return {
		$: 11,
		g: decoders
	};
}


// DECODING OBJECTS

var _Json_map1 = F2(function(f, d1)
{
	return _Json_mapMany(f, [d1]);
});

var _Json_map2 = F3(function(f, d1, d2)
{
	return _Json_mapMany(f, [d1, d2]);
});

var _Json_map3 = F4(function(f, d1, d2, d3)
{
	return _Json_mapMany(f, [d1, d2, d3]);
});

var _Json_map4 = F5(function(f, d1, d2, d3, d4)
{
	return _Json_mapMany(f, [d1, d2, d3, d4]);
});

var _Json_map5 = F6(function(f, d1, d2, d3, d4, d5)
{
	return _Json_mapMany(f, [d1, d2, d3, d4, d5]);
});

var _Json_map6 = F7(function(f, d1, d2, d3, d4, d5, d6)
{
	return _Json_mapMany(f, [d1, d2, d3, d4, d5, d6]);
});

var _Json_map7 = F8(function(f, d1, d2, d3, d4, d5, d6, d7)
{
	return _Json_mapMany(f, [d1, d2, d3, d4, d5, d6, d7]);
});

var _Json_map8 = F9(function(f, d1, d2, d3, d4, d5, d6, d7, d8)
{
	return _Json_mapMany(f, [d1, d2, d3, d4, d5, d6, d7, d8]);
});


// DECODE

var _Json_runOnString = F2(function(decoder, string)
{
	try
	{
		var value = JSON.parse(string);
		return _Json_runHelp(decoder, value);
	}
	catch (e)
	{
		return $elm$core$Result$Err(A2($elm$json$Json$Decode$Failure, 'This is not valid JSON! ' + e.message, _Json_wrap(string)));
	}
});

var _Json_run = F2(function(decoder, value)
{
	return _Json_runHelp(decoder, _Json_unwrap(value));
});

function _Json_runHelp(decoder, value)
{
	switch (decoder.$)
	{
		case 2:
			return decoder.b(value);

		case 5:
			return (value === null)
				? $elm$core$Result$Ok(decoder.c)
				: _Json_expecting('null', value);

		case 3:
			if (!_Json_isArray(value))
			{
				return _Json_expecting('a LIST', value);
			}
			return _Json_runArrayDecoder(decoder.b, value, _List_fromArray);

		case 4:
			if (!_Json_isArray(value))
			{
				return _Json_expecting('an ARRAY', value);
			}
			return _Json_runArrayDecoder(decoder.b, value, _Json_toElmArray);

		case 6:
			var field = decoder.d;
			if (typeof value !== 'object' || value === null || !(field in value))
			{
				return _Json_expecting('an OBJECT with a field named `' + field + '`', value);
			}
			var result = _Json_runHelp(decoder.b, value[field]);
			return ($elm$core$Result$isOk(result)) ? result : $elm$core$Result$Err(A2($elm$json$Json$Decode$Field, field, result.a));

		case 7:
			var index = decoder.e;
			if (!_Json_isArray(value))
			{
				return _Json_expecting('an ARRAY', value);
			}
			if (index >= value.length)
			{
				return _Json_expecting('a LONGER array. Need index ' + index + ' but only see ' + value.length + ' entries', value);
			}
			var result = _Json_runHelp(decoder.b, value[index]);
			return ($elm$core$Result$isOk(result)) ? result : $elm$core$Result$Err(A2($elm$json$Json$Decode$Index, index, result.a));

		case 8:
			if (typeof value !== 'object' || value === null || _Json_isArray(value))
			{
				return _Json_expecting('an OBJECT', value);
			}

			var keyValuePairs = _List_Nil;
			// TODO test perf of Object.keys and switch when support is good enough
			for (var key in value)
			{
				if (value.hasOwnProperty(key))
				{
					var result = _Json_runHelp(decoder.b, value[key]);
					if (!$elm$core$Result$isOk(result))
					{
						return $elm$core$Result$Err(A2($elm$json$Json$Decode$Field, key, result.a));
					}
					keyValuePairs = _List_Cons(_Utils_Tuple2(key, result.a), keyValuePairs);
				}
			}
			return $elm$core$Result$Ok($elm$core$List$reverse(keyValuePairs));

		case 9:
			var answer = decoder.f;
			var decoders = decoder.g;
			for (var i = 0; i < decoders.length; i++)
			{
				var result = _Json_runHelp(decoders[i], value);
				if (!$elm$core$Result$isOk(result))
				{
					return result;
				}
				answer = answer(result.a);
			}
			return $elm$core$Result$Ok(answer);

		case 10:
			var result = _Json_runHelp(decoder.b, value);
			return (!$elm$core$Result$isOk(result))
				? result
				: _Json_runHelp(decoder.h(result.a), value);

		case 11:
			var errors = _List_Nil;
			for (var temp = decoder.g; temp.b; temp = temp.b) // WHILE_CONS
			{
				var result = _Json_runHelp(temp.a, value);
				if ($elm$core$Result$isOk(result))
				{
					return result;
				}
				errors = _List_Cons(result.a, errors);
			}
			return $elm$core$Result$Err($elm$json$Json$Decode$OneOf($elm$core$List$reverse(errors)));

		case 1:
			return $elm$core$Result$Err(A2($elm$json$Json$Decode$Failure, decoder.a, _Json_wrap(value)));

		case 0:
			return $elm$core$Result$Ok(decoder.a);
	}
}

function _Json_runArrayDecoder(decoder, value, toElmValue)
{
	var len = value.length;
	var array = new Array(len);
	for (var i = 0; i < len; i++)
	{
		var result = _Json_runHelp(decoder, value[i]);
		if (!$elm$core$Result$isOk(result))
		{
			return $elm$core$Result$Err(A2($elm$json$Json$Decode$Index, i, result.a));
		}
		array[i] = result.a;
	}
	return $elm$core$Result$Ok(toElmValue(array));
}

function _Json_isArray(value)
{
	return Array.isArray(value) || (typeof FileList !== 'undefined' && value instanceof FileList);
}

function _Json_toElmArray(array)
{
	return A2($elm$core$Array$initialize, array.length, function(i) { return array[i]; });
}

function _Json_expecting(type, value)
{
	return $elm$core$Result$Err(A2($elm$json$Json$Decode$Failure, 'Expecting ' + type, _Json_wrap(value)));
}


// EQUALITY

function _Json_equality(x, y)
{
	if (x === y)
	{
		return true;
	}

	if (x.$ !== y.$)
	{
		return false;
	}

	switch (x.$)
	{
		case 0:
		case 1:
			return x.a === y.a;

		case 2:
			return x.b === y.b;

		case 5:
			return x.c === y.c;

		case 3:
		case 4:
		case 8:
			return _Json_equality(x.b, y.b);

		case 6:
			return x.d === y.d && _Json_equality(x.b, y.b);

		case 7:
			return x.e === y.e && _Json_equality(x.b, y.b);

		case 9:
			return x.f === y.f && _Json_listEquality(x.g, y.g);

		case 10:
			return x.h === y.h && _Json_equality(x.b, y.b);

		case 11:
			return _Json_listEquality(x.g, y.g);
	}
}

function _Json_listEquality(aDecoders, bDecoders)
{
	var len = aDecoders.length;
	if (len !== bDecoders.length)
	{
		return false;
	}
	for (var i = 0; i < len; i++)
	{
		if (!_Json_equality(aDecoders[i], bDecoders[i]))
		{
			return false;
		}
	}
	return true;
}


// ENCODE

var _Json_encode = F2(function(indentLevel, value)
{
	return JSON.stringify(_Json_unwrap(value), null, indentLevel) + '';
});

function _Json_wrap(value) { return { $: 0, a: value }; }
function _Json_unwrap(value) { return value.a; }

function _Json_wrap_UNUSED(value) { return value; }
function _Json_unwrap_UNUSED(value) { return value; }

function _Json_emptyArray() { return []; }
function _Json_emptyObject() { return {}; }

var _Json_addField = F3(function(key, value, object)
{
	object[key] = _Json_unwrap(value);
	return object;
});

function _Json_addEntry(func)
{
	return F2(function(entry, array)
	{
		array.push(_Json_unwrap(func(entry)));
		return array;
	});
}

var _Json_encodeNull = _Json_wrap(null);



// TASKS

function _Scheduler_succeed(value)
{
	return {
		$: 0,
		a: value
	};
}

function _Scheduler_fail(error)
{
	return {
		$: 1,
		a: error
	};
}

function _Scheduler_binding(callback)
{
	return {
		$: 2,
		b: callback,
		c: null
	};
}

var _Scheduler_andThen = F2(function(callback, task)
{
	return {
		$: 3,
		b: callback,
		d: task
	};
});

var _Scheduler_onError = F2(function(callback, task)
{
	return {
		$: 4,
		b: callback,
		d: task
	};
});

function _Scheduler_receive(callback)
{
	return {
		$: 5,
		b: callback
	};
}


// PROCESSES

var _Scheduler_guid = 0;

function _Scheduler_rawSpawn(task)
{
	var proc = {
		$: 0,
		e: _Scheduler_guid++,
		f: task,
		g: null,
		h: []
	};

	_Scheduler_enqueue(proc);

	return proc;
}

function _Scheduler_spawn(task)
{
	return _Scheduler_binding(function(callback) {
		callback(_Scheduler_succeed(_Scheduler_rawSpawn(task)));
	});
}

function _Scheduler_rawSend(proc, msg)
{
	proc.h.push(msg);
	_Scheduler_enqueue(proc);
}

var _Scheduler_send = F2(function(proc, msg)
{
	return _Scheduler_binding(function(callback) {
		_Scheduler_rawSend(proc, msg);
		callback(_Scheduler_succeed(_Utils_Tuple0));
	});
});

function _Scheduler_kill(proc)
{
	return _Scheduler_binding(function(callback) {
		var task = proc.f;
		if (task.$ === 2 && task.c)
		{
			task.c();
		}

		proc.f = null;

		callback(_Scheduler_succeed(_Utils_Tuple0));
	});
}


/* STEP PROCESSES

type alias Process =
  { $ : tag
  , id : unique_id
  , root : Task
  , stack : null | { $: SUCCEED | FAIL, a: callback, b: stack }
  , mailbox : [msg]
  }

*/


var _Scheduler_working = false;
var _Scheduler_queue = [];


function _Scheduler_enqueue(proc)
{
	_Scheduler_queue.push(proc);
	if (_Scheduler_working)
	{
		return;
	}
	_Scheduler_working = true;
	while (proc = _Scheduler_queue.shift())
	{
		_Scheduler_step(proc);
	}
	_Scheduler_working = false;
}


function _Scheduler_step(proc)
{
	while (proc.f)
	{
		var rootTag = proc.f.$;
		if (rootTag === 0 || rootTag === 1)
		{
			while (proc.g && proc.g.$ !== rootTag)
			{
				proc.g = proc.g.i;
			}
			if (!proc.g)
			{
				return;
			}
			proc.f = proc.g.b(proc.f.a);
			proc.g = proc.g.i;
		}
		else if (rootTag === 2)
		{
			proc.f.c = proc.f.b(function(newRoot) {
				proc.f = newRoot;
				_Scheduler_enqueue(proc);
			});
			return;
		}
		else if (rootTag === 5)
		{
			if (proc.h.length === 0)
			{
				return;
			}
			proc.f = proc.f.b(proc.h.shift());
		}
		else // if (rootTag === 3 || rootTag === 4)
		{
			proc.g = {
				$: rootTag === 3 ? 0 : 1,
				b: proc.f.b,
				i: proc.g
			};
			proc.f = proc.f.d;
		}
	}
}



function _Process_sleep(time)
{
	return _Scheduler_binding(function(callback) {
		var id = setTimeout(function() {
			callback(_Scheduler_succeed(_Utils_Tuple0));
		}, time);

		return function() { clearTimeout(id); };
	});
}




// PROGRAMS


var _Platform_worker = F4(function(impl, flagDecoder, debugMetadata, args)
{
	return _Platform_initialize(
		flagDecoder,
		args,
		impl.init,
		impl.update,
		impl.subscriptions,
		function() { return function() {} }
	);
});



// INITIALIZE A PROGRAM


function _Platform_initialize(flagDecoder, args, init, update, subscriptions, stepperBuilder)
{
	var result = A2(_Json_run, flagDecoder, _Json_wrap(args ? args['flags'] : undefined));
	$elm$core$Result$isOk(result) || _Debug_crash(2 /**/, _Json_errorToString(result.a) /**/);
	var managers = {};
	var initPair = init(result.a);
	var model = initPair.a;
	var stepper = stepperBuilder(sendToApp, model);
	var ports = _Platform_setupEffects(managers, sendToApp);

	function sendToApp(msg, viewMetadata)
	{
		var pair = A2(update, msg, model);
		stepper(model = pair.a, viewMetadata);
		_Platform_enqueueEffects(managers, pair.b, subscriptions(model));
	}

	_Platform_enqueueEffects(managers, initPair.b, subscriptions(model));

	return ports ? { ports: ports } : {};
}



// TRACK PRELOADS
//
// This is used by code in elm/browser and elm/http
// to register any HTTP requests that are triggered by init.
//


var _Platform_preload;


function _Platform_registerPreload(url)
{
	_Platform_preload.add(url);
}



// EFFECT MANAGERS


var _Platform_effectManagers = {};


function _Platform_setupEffects(managers, sendToApp)
{
	var ports;

	// setup all necessary effect managers
	for (var key in _Platform_effectManagers)
	{
		var manager = _Platform_effectManagers[key];

		if (manager.a)
		{
			ports = ports || {};
			ports[key] = manager.a(key, sendToApp);
		}

		managers[key] = _Platform_instantiateManager(manager, sendToApp);
	}

	return ports;
}


function _Platform_createManager(init, onEffects, onSelfMsg, cmdMap, subMap)
{
	return {
		b: init,
		c: onEffects,
		d: onSelfMsg,
		e: cmdMap,
		f: subMap
	};
}


function _Platform_instantiateManager(info, sendToApp)
{
	var router = {
		g: sendToApp,
		h: undefined
	};

	var onEffects = info.c;
	var onSelfMsg = info.d;
	var cmdMap = info.e;
	var subMap = info.f;

	function loop(state)
	{
		return A2(_Scheduler_andThen, loop, _Scheduler_receive(function(msg)
		{
			var value = msg.a;

			if (msg.$ === 0)
			{
				return A3(onSelfMsg, router, value, state);
			}

			return cmdMap && subMap
				? A4(onEffects, router, value.i, value.j, state)
				: A3(onEffects, router, cmdMap ? value.i : value.j, state);
		}));
	}

	return router.h = _Scheduler_rawSpawn(A2(_Scheduler_andThen, loop, info.b));
}



// ROUTING


var _Platform_sendToApp = F2(function(router, msg)
{
	return _Scheduler_binding(function(callback)
	{
		router.g(msg);
		callback(_Scheduler_succeed(_Utils_Tuple0));
	});
});


var _Platform_sendToSelf = F2(function(router, msg)
{
	return A2(_Scheduler_send, router.h, {
		$: 0,
		a: msg
	});
});



// BAGS


function _Platform_leaf(home)
{
	return function(value)
	{
		return {
			$: 1,
			k: home,
			l: value
		};
	};
}


function _Platform_batch(list)
{
	return {
		$: 2,
		m: list
	};
}


var _Platform_map = F2(function(tagger, bag)
{
	return {
		$: 3,
		n: tagger,
		o: bag
	}
});



// PIPE BAGS INTO EFFECT MANAGERS
//
// Effects must be queued!
//
// Say your init contains a synchronous command, like Time.now or Time.here
//
//   - This will produce a batch of effects (FX_1)
//   - The synchronous task triggers the subsequent `update` call
//   - This will produce a batch of effects (FX_2)
//
// If we just start dispatching FX_2, subscriptions from FX_2 can be processed
// before subscriptions from FX_1. No good! Earlier versions of this code had
// this problem, leading to these reports:
//
//   https://github.com/elm/core/issues/980
//   https://github.com/elm/core/pull/981
//   https://github.com/elm/compiler/issues/1776
//
// The queue is necessary to avoid ordering issues for synchronous commands.


// Why use true/false here? Why not just check the length of the queue?
// The goal is to detect "are we currently dispatching effects?" If we
// are, we need to bail and let the ongoing while loop handle things.
//
// Now say the queue has 1 element. When we dequeue the final element,
// the queue will be empty, but we are still actively dispatching effects.
// So you could get queue jumping in a really tricky category of cases.
//
var _Platform_effectsQueue = [];
var _Platform_effectsActive = false;


function _Platform_enqueueEffects(managers, cmdBag, subBag)
{
	_Platform_effectsQueue.push({ p: managers, q: cmdBag, r: subBag });

	if (_Platform_effectsActive) return;

	_Platform_effectsActive = true;
	for (var fx; fx = _Platform_effectsQueue.shift(); )
	{
		_Platform_dispatchEffects(fx.p, fx.q, fx.r);
	}
	_Platform_effectsActive = false;
}


function _Platform_dispatchEffects(managers, cmdBag, subBag)
{
	var effectsDict = {};
	_Platform_gatherEffects(true, cmdBag, effectsDict, null);
	_Platform_gatherEffects(false, subBag, effectsDict, null);

	for (var home in managers)
	{
		_Scheduler_rawSend(managers[home], {
			$: 'fx',
			a: effectsDict[home] || { i: _List_Nil, j: _List_Nil }
		});
	}
}


function _Platform_gatherEffects(isCmd, bag, effectsDict, taggers)
{
	switch (bag.$)
	{
		case 1:
			var home = bag.k;
			var effect = _Platform_toEffect(isCmd, home, taggers, bag.l);
			effectsDict[home] = _Platform_insert(isCmd, effect, effectsDict[home]);
			return;

		case 2:
			for (var list = bag.m; list.b; list = list.b) // WHILE_CONS
			{
				_Platform_gatherEffects(isCmd, list.a, effectsDict, taggers);
			}
			return;

		case 3:
			_Platform_gatherEffects(isCmd, bag.o, effectsDict, {
				s: bag.n,
				t: taggers
			});
			return;
	}
}


function _Platform_toEffect(isCmd, home, taggers, value)
{
	function applyTaggers(x)
	{
		for (var temp = taggers; temp; temp = temp.t)
		{
			x = temp.s(x);
		}
		return x;
	}

	var map = isCmd
		? _Platform_effectManagers[home].e
		: _Platform_effectManagers[home].f;

	return A2(map, applyTaggers, value)
}


function _Platform_insert(isCmd, newEffect, effects)
{
	effects = effects || { i: _List_Nil, j: _List_Nil };

	isCmd
		? (effects.i = _List_Cons(newEffect, effects.i))
		: (effects.j = _List_Cons(newEffect, effects.j));

	return effects;
}



// PORTS


function _Platform_checkPortName(name)
{
	if (_Platform_effectManagers[name])
	{
		_Debug_crash(3, name)
	}
}



// OUTGOING PORTS


function _Platform_outgoingPort(name, converter)
{
	_Platform_checkPortName(name);
	_Platform_effectManagers[name] = {
		e: _Platform_outgoingPortMap,
		u: converter,
		a: _Platform_setupOutgoingPort
	};
	return _Platform_leaf(name);
}


var _Platform_outgoingPortMap = F2(function(tagger, value) { return value; });


function _Platform_setupOutgoingPort(name)
{
	var subs = [];
	var converter = _Platform_effectManagers[name].u;

	// CREATE MANAGER

	var init = _Process_sleep(0);

	_Platform_effectManagers[name].b = init;
	_Platform_effectManagers[name].c = F3(function(router, cmdList, state)
	{
		for ( ; cmdList.b; cmdList = cmdList.b) // WHILE_CONS
		{
			// grab a separate reference to subs in case unsubscribe is called
			var currentSubs = subs;
			var value = _Json_unwrap(converter(cmdList.a));
			for (var i = 0; i < currentSubs.length; i++)
			{
				currentSubs[i](value);
			}
		}
		return init;
	});

	// PUBLIC API

	function subscribe(callback)
	{
		subs.push(callback);
	}

	function unsubscribe(callback)
	{
		// copy subs into a new array in case unsubscribe is called within a
		// subscribed callback
		subs = subs.slice();
		var index = subs.indexOf(callback);
		if (index >= 0)
		{
			subs.splice(index, 1);
		}
	}

	return {
		subscribe: subscribe,
		unsubscribe: unsubscribe
	};
}



// INCOMING PORTS


function _Platform_incomingPort(name, converter)
{
	_Platform_checkPortName(name);
	_Platform_effectManagers[name] = {
		f: _Platform_incomingPortMap,
		u: converter,
		a: _Platform_setupIncomingPort
	};
	return _Platform_leaf(name);
}


var _Platform_incomingPortMap = F2(function(tagger, finalTagger)
{
	return function(value)
	{
		return tagger(finalTagger(value));
	};
});


function _Platform_setupIncomingPort(name, sendToApp)
{
	var subs = _List_Nil;
	var converter = _Platform_effectManagers[name].u;

	// CREATE MANAGER

	var init = _Scheduler_succeed(null);

	_Platform_effectManagers[name].b = init;
	_Platform_effectManagers[name].c = F3(function(router, subList, state)
	{
		subs = subList;
		return init;
	});

	// PUBLIC API

	function send(incomingValue)
	{
		var result = A2(_Json_run, converter, _Json_wrap(incomingValue));

		$elm$core$Result$isOk(result) || _Debug_crash(4, name, result.a);

		var value = result.a;
		for (var temp = subs; temp.b; temp = temp.b) // WHILE_CONS
		{
			sendToApp(temp.a(value));
		}
	}

	return { send: send };
}



// EXPORT ELM MODULES
//
// Have DEBUG and PROD versions so that we can (1) give nicer errors in
// debug mode and (2) not pay for the bits needed for that in prod mode.
//


function _Platform_export_UNUSED(exports)
{
	scope['Elm']
		? _Platform_mergeExportsProd(scope['Elm'], exports)
		: scope['Elm'] = exports;
}


function _Platform_mergeExportsProd(obj, exports)
{
	for (var name in exports)
	{
		(name in obj)
			? (name == 'init')
				? _Debug_crash(6)
				: _Platform_mergeExportsProd(obj[name], exports[name])
			: (obj[name] = exports[name]);
	}
}


function _Platform_export(exports)
{
	scope['Elm']
		? _Platform_mergeExportsDebug('Elm', scope['Elm'], exports)
		: scope['Elm'] = exports;
}


function _Platform_mergeExportsDebug(moduleName, obj, exports)
{
	for (var name in exports)
	{
		(name in obj)
			? (name == 'init')
				? _Debug_crash(6, moduleName)
				: _Platform_mergeExportsDebug(moduleName + '.' + name, obj[name], exports[name])
			: (obj[name] = exports[name]);
	}
}




// HELPERS


var _VirtualDom_divertHrefToApp;

var _VirtualDom_doc = typeof document !== 'undefined' ? document : {};


function _VirtualDom_appendChild(parent, child)
{
	parent.appendChild(child);
}

var _VirtualDom_init = F4(function(virtualNode, flagDecoder, debugMetadata, args)
{
	// NOTE: this function needs _Platform_export available to work

	/**_UNUSED/
	var node = args['node'];
	//*/
	/**/
	var node = args && args['node'] ? args['node'] : _Debug_crash(0);
	//*/

	node.parentNode.replaceChild(
		_VirtualDom_render(virtualNode, function() {}),
		node
	);

	return {};
});



// TEXT


function _VirtualDom_text(string)
{
	return {
		$: 0,
		a: string
	};
}



// NODE


var _VirtualDom_nodeNS = F2(function(namespace, tag)
{
	return F2(function(factList, kidList)
	{
		for (var kids = [], descendantsCount = 0; kidList.b; kidList = kidList.b) // WHILE_CONS
		{
			var kid = kidList.a;
			descendantsCount += (kid.b || 0);
			kids.push(kid);
		}
		descendantsCount += kids.length;

		return {
			$: 1,
			c: tag,
			d: _VirtualDom_organizeFacts(factList),
			e: kids,
			f: namespace,
			b: descendantsCount
		};
	});
});


var _VirtualDom_node = _VirtualDom_nodeNS(undefined);



// KEYED NODE


var _VirtualDom_keyedNodeNS = F2(function(namespace, tag)
{
	return F2(function(factList, kidList)
	{
		for (var kids = [], descendantsCount = 0; kidList.b; kidList = kidList.b) // WHILE_CONS
		{
			var kid = kidList.a;
			descendantsCount += (kid.b.b || 0);
			kids.push(kid);
		}
		descendantsCount += kids.length;

		return {
			$: 2,
			c: tag,
			d: _VirtualDom_organizeFacts(factList),
			e: kids,
			f: namespace,
			b: descendantsCount
		};
	});
});


var _VirtualDom_keyedNode = _VirtualDom_keyedNodeNS(undefined);



// CUSTOM


function _VirtualDom_custom(factList, model, render, diff)
{
	return {
		$: 3,
		d: _VirtualDom_organizeFacts(factList),
		g: model,
		h: render,
		i: diff
	};
}



// MAP


var _VirtualDom_map = F2(function(tagger, node)
{
	return {
		$: 4,
		j: tagger,
		k: node,
		b: 1 + (node.b || 0)
	};
});



// LAZY


function _VirtualDom_thunk(refs, thunk)
{
	return {
		$: 5,
		l: refs,
		m: thunk,
		k: undefined
	};
}

var _VirtualDom_lazy = F2(function(func, a)
{
	return _VirtualDom_thunk([func, a], function() {
		return func(a);
	});
});

var _VirtualDom_lazy2 = F3(function(func, a, b)
{
	return _VirtualDom_thunk([func, a, b], function() {
		return A2(func, a, b);
	});
});

var _VirtualDom_lazy3 = F4(function(func, a, b, c)
{
	return _VirtualDom_thunk([func, a, b, c], function() {
		return A3(func, a, b, c);
	});
});

var _VirtualDom_lazy4 = F5(function(func, a, b, c, d)
{
	return _VirtualDom_thunk([func, a, b, c, d], function() {
		return A4(func, a, b, c, d);
	});
});

var _VirtualDom_lazy5 = F6(function(func, a, b, c, d, e)
{
	return _VirtualDom_thunk([func, a, b, c, d, e], function() {
		return A5(func, a, b, c, d, e);
	});
});

var _VirtualDom_lazy6 = F7(function(func, a, b, c, d, e, f)
{
	return _VirtualDom_thunk([func, a, b, c, d, e, f], function() {
		return A6(func, a, b, c, d, e, f);
	});
});

var _VirtualDom_lazy7 = F8(function(func, a, b, c, d, e, f, g)
{
	return _VirtualDom_thunk([func, a, b, c, d, e, f, g], function() {
		return A7(func, a, b, c, d, e, f, g);
	});
});

var _VirtualDom_lazy8 = F9(function(func, a, b, c, d, e, f, g, h)
{
	return _VirtualDom_thunk([func, a, b, c, d, e, f, g, h], function() {
		return A8(func, a, b, c, d, e, f, g, h);
	});
});



// FACTS


var _VirtualDom_on = F2(function(key, handler)
{
	return {
		$: 'a0',
		n: key,
		o: handler
	};
});
var _VirtualDom_style = F2(function(key, value)
{
	return {
		$: 'a1',
		n: key,
		o: value
	};
});
var _VirtualDom_property = F2(function(key, value)
{
	return {
		$: 'a2',
		n: key,
		o: value
	};
});
var _VirtualDom_attribute = F2(function(key, value)
{
	return {
		$: 'a3',
		n: key,
		o: value
	};
});
var _VirtualDom_attributeNS = F3(function(namespace, key, value)
{
	return {
		$: 'a4',
		n: key,
		o: { f: namespace, o: value }
	};
});



// XSS ATTACK VECTOR CHECKS
//
// For some reason, tabs can appear in href protocols and it still works.
// So '\tjava\tSCRIPT:alert("!!!")' and 'javascript:alert("!!!")' are the same
// in practice. That is why _VirtualDom_RE_js and _VirtualDom_RE_js_html look
// so freaky.
//
// Pulling the regular expressions out to the top level gives a slight speed
// boost in small benchmarks (4-10%) but hoisting values to reduce allocation
// can be unpredictable in large programs where JIT may have a harder time with
// functions are not fully self-contained. The benefit is more that the js and
// js_html ones are so weird that I prefer to see them near each other.


var _VirtualDom_RE_script = /^script$/i;
var _VirtualDom_RE_on_formAction = /^(on|formAction$)/i;
var _VirtualDom_RE_js = /^\s*j\s*a\s*v\s*a\s*s\s*c\s*r\s*i\s*p\s*t\s*:/i;
var _VirtualDom_RE_js_html = /^\s*(j\s*a\s*v\s*a\s*s\s*c\s*r\s*i\s*p\s*t\s*:|d\s*a\s*t\s*a\s*:\s*t\s*e\s*x\s*t\s*\/\s*h\s*t\s*m\s*l\s*(,|;))/i;


function _VirtualDom_noScript(tag)
{
	return _VirtualDom_RE_script.test(tag) ? 'p' : tag;
}

function _VirtualDom_noOnOrFormAction(key)
{
	return _VirtualDom_RE_on_formAction.test(key) ? 'data-' + key : key;
}

function _VirtualDom_noInnerHtmlOrFormAction(key)
{
	return key == 'innerHTML' || key == 'formAction' ? 'data-' + key : key;
}

function _VirtualDom_noJavaScriptUri(value)
{
	return _VirtualDom_RE_js.test(value)
		? /**_UNUSED/''//*//**/'javascript:alert("This is an XSS vector. Please use ports or web components instead.")'//*/
		: value;
}

function _VirtualDom_noJavaScriptOrHtmlUri(value)
{
	return _VirtualDom_RE_js_html.test(value)
		? /**_UNUSED/''//*//**/'javascript:alert("This is an XSS vector. Please use ports or web components instead.")'//*/
		: value;
}

function _VirtualDom_noJavaScriptOrHtmlJson(value)
{
	return (typeof _Json_unwrap(value) === 'string' && _VirtualDom_RE_js_html.test(_Json_unwrap(value)))
		? _Json_wrap(
			/**_UNUSED/''//*//**/'javascript:alert("This is an XSS vector. Please use ports or web components instead.")'//*/
		) : value;
}



// MAP FACTS


var _VirtualDom_mapAttribute = F2(function(func, attr)
{
	return (attr.$ === 'a0')
		? A2(_VirtualDom_on, attr.n, _VirtualDom_mapHandler(func, attr.o))
		: attr;
});

function _VirtualDom_mapHandler(func, handler)
{
	var tag = $elm$virtual_dom$VirtualDom$toHandlerInt(handler);

	// 0 = Normal
	// 1 = MayStopPropagation
	// 2 = MayPreventDefault
	// 3 = Custom

	return {
		$: handler.$,
		a:
			!tag
				? A2($elm$json$Json$Decode$map, func, handler.a)
				:
			A3($elm$json$Json$Decode$map2,
				tag < 3
					? _VirtualDom_mapEventTuple
					: _VirtualDom_mapEventRecord,
				$elm$json$Json$Decode$succeed(func),
				handler.a
			)
	};
}

var _VirtualDom_mapEventTuple = F2(function(func, tuple)
{
	return _Utils_Tuple2(func(tuple.a), tuple.b);
});

var _VirtualDom_mapEventRecord = F2(function(func, record)
{
	return {
		message: func(record.message),
		stopPropagation: record.stopPropagation,
		preventDefault: record.preventDefault
	}
});



// ORGANIZE FACTS


function _VirtualDom_organizeFacts(factList)
{
	for (var facts = {}; factList.b; factList = factList.b) // WHILE_CONS
	{
		var entry = factList.a;

		var tag = entry.$;
		var key = entry.n;
		var value = entry.o;

		if (tag === 'a2')
		{
			(key === 'className')
				? _VirtualDom_addClass(facts, key, _Json_unwrap(value))
				: facts[key] = _Json_unwrap(value);

			continue;
		}

		var subFacts = facts[tag] || (facts[tag] = {});
		(tag === 'a3' && key === 'class')
			? _VirtualDom_addClass(subFacts, key, value)
			: subFacts[key] = value;
	}

	return facts;
}

function _VirtualDom_addClass(object, key, newClass)
{
	var classes = object[key];
	object[key] = classes ? classes + ' ' + newClass : newClass;
}



// RENDER


function _VirtualDom_render(vNode, eventNode)
{
	var tag = vNode.$;

	if (tag === 5)
	{
		return _VirtualDom_render(vNode.k || (vNode.k = vNode.m()), eventNode);
	}

	if (tag === 0)
	{
		return _VirtualDom_doc.createTextNode(vNode.a);
	}

	if (tag === 4)
	{
		var subNode = vNode.k;
		var tagger = vNode.j;

		while (subNode.$ === 4)
		{
			typeof tagger !== 'object'
				? tagger = [tagger, subNode.j]
				: tagger.push(subNode.j);

			subNode = subNode.k;
		}

		var subEventRoot = { j: tagger, p: eventNode };
		var domNode = _VirtualDom_render(subNode, subEventRoot);
		domNode.elm_event_node_ref = subEventRoot;
		return domNode;
	}

	if (tag === 3)
	{
		var domNode = vNode.h(vNode.g);
		_VirtualDom_applyFacts(domNode, eventNode, vNode.d);
		return domNode;
	}

	// at this point `tag` must be 1 or 2

	var domNode = vNode.f
		? _VirtualDom_doc.createElementNS(vNode.f, vNode.c)
		: _VirtualDom_doc.createElement(vNode.c);

	if (_VirtualDom_divertHrefToApp && vNode.c == 'a')
	{
		domNode.addEventListener('click', _VirtualDom_divertHrefToApp(domNode));
	}

	_VirtualDom_applyFacts(domNode, eventNode, vNode.d);

	for (var kids = vNode.e, i = 0; i < kids.length; i++)
	{
		_VirtualDom_appendChild(domNode, _VirtualDom_render(tag === 1 ? kids[i] : kids[i].b, eventNode));
	}

	return domNode;
}



// APPLY FACTS


function _VirtualDom_applyFacts(domNode, eventNode, facts)
{
	for (var key in facts)
	{
		var value = facts[key];

		key === 'a1'
			? _VirtualDom_applyStyles(domNode, value)
			:
		key === 'a0'
			? _VirtualDom_applyEvents(domNode, eventNode, value)
			:
		key === 'a3'
			? _VirtualDom_applyAttrs(domNode, value)
			:
		key === 'a4'
			? _VirtualDom_applyAttrsNS(domNode, value)
			:
		((key !== 'value' && key !== 'checked') || domNode[key] !== value) && (domNode[key] = value);
	}
}



// APPLY STYLES


function _VirtualDom_applyStyles(domNode, styles)
{
	var domNodeStyle = domNode.style;

	for (var key in styles)
	{
		domNodeStyle[key] = styles[key];
	}
}



// APPLY ATTRS


function _VirtualDom_applyAttrs(domNode, attrs)
{
	for (var key in attrs)
	{
		var value = attrs[key];
		typeof value !== 'undefined'
			? domNode.setAttribute(key, value)
			: domNode.removeAttribute(key);
	}
}



// APPLY NAMESPACED ATTRS


function _VirtualDom_applyAttrsNS(domNode, nsAttrs)
{
	for (var key in nsAttrs)
	{
		var pair = nsAttrs[key];
		var namespace = pair.f;
		var value = pair.o;

		typeof value !== 'undefined'
			? domNode.setAttributeNS(namespace, key, value)
			: domNode.removeAttributeNS(namespace, key);
	}
}



// APPLY EVENTS


function _VirtualDom_applyEvents(domNode, eventNode, events)
{
	var allCallbacks = domNode.elmFs || (domNode.elmFs = {});

	for (var key in events)
	{
		var newHandler = events[key];
		var oldCallback = allCallbacks[key];

		if (!newHandler)
		{
			domNode.removeEventListener(key, oldCallback);
			allCallbacks[key] = undefined;
			continue;
		}

		if (oldCallback)
		{
			var oldHandler = oldCallback.q;
			if (oldHandler.$ === newHandler.$)
			{
				oldCallback.q = newHandler;
				continue;
			}
			domNode.removeEventListener(key, oldCallback);
		}

		oldCallback = _VirtualDom_makeCallback(eventNode, newHandler);
		domNode.addEventListener(key, oldCallback,
			_VirtualDom_passiveSupported
			&& { passive: $elm$virtual_dom$VirtualDom$toHandlerInt(newHandler) < 2 }
		);
		allCallbacks[key] = oldCallback;
	}
}



// PASSIVE EVENTS


var _VirtualDom_passiveSupported;

try
{
	window.addEventListener('t', null, Object.defineProperty({}, 'passive', {
		get: function() { _VirtualDom_passiveSupported = true; }
	}));
}
catch(e) {}



// EVENT HANDLERS


function _VirtualDom_makeCallback(eventNode, initialHandler)
{
	function callback(event)
	{
		var handler = callback.q;
		var result = _Json_runHelp(handler.a, event);

		if (!$elm$core$Result$isOk(result))
		{
			return;
		}

		var tag = $elm$virtual_dom$VirtualDom$toHandlerInt(handler);

		// 0 = Normal
		// 1 = MayStopPropagation
		// 2 = MayPreventDefault
		// 3 = Custom

		var value = result.a;
		var message = !tag ? value : tag < 3 ? value.a : value.message;
		var stopPropagation = tag == 1 ? value.b : tag == 3 && value.stopPropagation;
		var currentEventNode = (
			stopPropagation && event.stopPropagation(),
			(tag == 2 ? value.b : tag == 3 && value.preventDefault) && event.preventDefault(),
			eventNode
		);
		var tagger;
		var i;
		while (tagger = currentEventNode.j)
		{
			if (typeof tagger == 'function')
			{
				message = tagger(message);
			}
			else
			{
				for (var i = tagger.length; i--; )
				{
					message = tagger[i](message);
				}
			}
			currentEventNode = currentEventNode.p;
		}
		currentEventNode(message, stopPropagation); // stopPropagation implies isSync
	}

	callback.q = initialHandler;

	return callback;
}

function _VirtualDom_equalEvents(x, y)
{
	return x.$ == y.$ && _Json_equality(x.a, y.a);
}



// DIFF


// TODO: Should we do patches like in iOS?
//
// type Patch
//   = At Int Patch
//   | Batch (List Patch)
//   | Change ...
//
// How could it not be better?
//
function _VirtualDom_diff(x, y)
{
	var patches = [];
	_VirtualDom_diffHelp(x, y, patches, 0);
	return patches;
}


function _VirtualDom_pushPatch(patches, type, index, data)
{
	var patch = {
		$: type,
		r: index,
		s: data,
		t: undefined,
		u: undefined
	};
	patches.push(patch);
	return patch;
}


function _VirtualDom_diffHelp(x, y, patches, index)
{
	if (x === y)
	{
		return;
	}

	var xType = x.$;
	var yType = y.$;

	// Bail if you run into different types of nodes. Implies that the
	// structure has changed significantly and it's not worth a diff.
	if (xType !== yType)
	{
		if (xType === 1 && yType === 2)
		{
			y = _VirtualDom_dekey(y);
			yType = 1;
		}
		else
		{
			_VirtualDom_pushPatch(patches, 0, index, y);
			return;
		}
	}

	// Now we know that both nodes are the same $.
	switch (yType)
	{
		case 5:
			var xRefs = x.l;
			var yRefs = y.l;
			var i = xRefs.length;
			var same = i === yRefs.length;
			while (same && i--)
			{
				same = xRefs[i] === yRefs[i];
			}
			if (same)
			{
				y.k = x.k;
				return;
			}
			y.k = y.m();
			var subPatches = [];
			_VirtualDom_diffHelp(x.k, y.k, subPatches, 0);
			subPatches.length > 0 && _VirtualDom_pushPatch(patches, 1, index, subPatches);
			return;

		case 4:
			// gather nested taggers
			var xTaggers = x.j;
			var yTaggers = y.j;
			var nesting = false;

			var xSubNode = x.k;
			while (xSubNode.$ === 4)
			{
				nesting = true;

				typeof xTaggers !== 'object'
					? xTaggers = [xTaggers, xSubNode.j]
					: xTaggers.push(xSubNode.j);

				xSubNode = xSubNode.k;
			}

			var ySubNode = y.k;
			while (ySubNode.$ === 4)
			{
				nesting = true;

				typeof yTaggers !== 'object'
					? yTaggers = [yTaggers, ySubNode.j]
					: yTaggers.push(ySubNode.j);

				ySubNode = ySubNode.k;
			}

			// Just bail if different numbers of taggers. This implies the
			// structure of the virtual DOM has changed.
			if (nesting && xTaggers.length !== yTaggers.length)
			{
				_VirtualDom_pushPatch(patches, 0, index, y);
				return;
			}

			// check if taggers are "the same"
			if (nesting ? !_VirtualDom_pairwiseRefEqual(xTaggers, yTaggers) : xTaggers !== yTaggers)
			{
				_VirtualDom_pushPatch(patches, 2, index, yTaggers);
			}

			// diff everything below the taggers
			_VirtualDom_diffHelp(xSubNode, ySubNode, patches, index + 1);
			return;

		case 0:
			if (x.a !== y.a)
			{
				_VirtualDom_pushPatch(patches, 3, index, y.a);
			}
			return;

		case 1:
			_VirtualDom_diffNodes(x, y, patches, index, _VirtualDom_diffKids);
			return;

		case 2:
			_VirtualDom_diffNodes(x, y, patches, index, _VirtualDom_diffKeyedKids);
			return;

		case 3:
			if (x.h !== y.h)
			{
				_VirtualDom_pushPatch(patches, 0, index, y);
				return;
			}

			var factsDiff = _VirtualDom_diffFacts(x.d, y.d);
			factsDiff && _VirtualDom_pushPatch(patches, 4, index, factsDiff);

			var patch = y.i(x.g, y.g);
			patch && _VirtualDom_pushPatch(patches, 5, index, patch);

			return;
	}
}

// assumes the incoming arrays are the same length
function _VirtualDom_pairwiseRefEqual(as, bs)
{
	for (var i = 0; i < as.length; i++)
	{
		if (as[i] !== bs[i])
		{
			return false;
		}
	}

	return true;
}

function _VirtualDom_diffNodes(x, y, patches, index, diffKids)
{
	// Bail if obvious indicators have changed. Implies more serious
	// structural changes such that it's not worth it to diff.
	if (x.c !== y.c || x.f !== y.f)
	{
		_VirtualDom_pushPatch(patches, 0, index, y);
		return;
	}

	var factsDiff = _VirtualDom_diffFacts(x.d, y.d);
	factsDiff && _VirtualDom_pushPatch(patches, 4, index, factsDiff);

	diffKids(x, y, patches, index);
}



// DIFF FACTS


// TODO Instead of creating a new diff object, it's possible to just test if
// there *is* a diff. During the actual patch, do the diff again and make the
// modifications directly. This way, there's no new allocations. Worth it?
function _VirtualDom_diffFacts(x, y, category)
{
	var diff;

	// look for changes and removals
	for (var xKey in x)
	{
		if (xKey === 'a1' || xKey === 'a0' || xKey === 'a3' || xKey === 'a4')
		{
			var subDiff = _VirtualDom_diffFacts(x[xKey], y[xKey] || {}, xKey);
			if (subDiff)
			{
				diff = diff || {};
				diff[xKey] = subDiff;
			}
			continue;
		}

		// remove if not in the new facts
		if (!(xKey in y))
		{
			diff = diff || {};
			diff[xKey] =
				!category
					? (typeof x[xKey] === 'string' ? '' : null)
					:
				(category === 'a1')
					? ''
					:
				(category === 'a0' || category === 'a3')
					? undefined
					:
				{ f: x[xKey].f, o: undefined };

			continue;
		}

		var xValue = x[xKey];
		var yValue = y[xKey];

		// reference equal, so don't worry about it
		if (xValue === yValue && xKey !== 'value' && xKey !== 'checked'
			|| category === 'a0' && _VirtualDom_equalEvents(xValue, yValue))
		{
			continue;
		}

		diff = diff || {};
		diff[xKey] = yValue;
	}

	// add new stuff
	for (var yKey in y)
	{
		if (!(yKey in x))
		{
			diff = diff || {};
			diff[yKey] = y[yKey];
		}
	}

	return diff;
}



// DIFF KIDS


function _VirtualDom_diffKids(xParent, yParent, patches, index)
{
	var xKids = xParent.e;
	var yKids = yParent.e;

	var xLen = xKids.length;
	var yLen = yKids.length;

	// FIGURE OUT IF THERE ARE INSERTS OR REMOVALS

	if (xLen > yLen)
	{
		_VirtualDom_pushPatch(patches, 6, index, {
			v: yLen,
			i: xLen - yLen
		});
	}
	else if (xLen < yLen)
	{
		_VirtualDom_pushPatch(patches, 7, index, {
			v: xLen,
			e: yKids
		});
	}

	// PAIRWISE DIFF EVERYTHING ELSE

	for (var minLen = xLen < yLen ? xLen : yLen, i = 0; i < minLen; i++)
	{
		var xKid = xKids[i];
		_VirtualDom_diffHelp(xKid, yKids[i], patches, ++index);
		index += xKid.b || 0;
	}
}



// KEYED DIFF


function _VirtualDom_diffKeyedKids(xParent, yParent, patches, rootIndex)
{
	var localPatches = [];

	var changes = {}; // Dict String Entry
	var inserts = []; // Array { index : Int, entry : Entry }
	// type Entry = { tag : String, vnode : VNode, index : Int, data : _ }

	var xKids = xParent.e;
	var yKids = yParent.e;
	var xLen = xKids.length;
	var yLen = yKids.length;
	var xIndex = 0;
	var yIndex = 0;

	var index = rootIndex;

	while (xIndex < xLen && yIndex < yLen)
	{
		var x = xKids[xIndex];
		var y = yKids[yIndex];

		var xKey = x.a;
		var yKey = y.a;
		var xNode = x.b;
		var yNode = y.b;

		var newMatch = undefined;
		var oldMatch = undefined;

		// check if keys match

		if (xKey === yKey)
		{
			index++;
			_VirtualDom_diffHelp(xNode, yNode, localPatches, index);
			index += xNode.b || 0;

			xIndex++;
			yIndex++;
			continue;
		}

		// look ahead 1 to detect insertions and removals.

		var xNext = xKids[xIndex + 1];
		var yNext = yKids[yIndex + 1];

		if (xNext)
		{
			var xNextKey = xNext.a;
			var xNextNode = xNext.b;
			oldMatch = yKey === xNextKey;
		}

		if (yNext)
		{
			var yNextKey = yNext.a;
			var yNextNode = yNext.b;
			newMatch = xKey === yNextKey;
		}


		// swap x and y
		if (newMatch && oldMatch)
		{
			index++;
			_VirtualDom_diffHelp(xNode, yNextNode, localPatches, index);
			_VirtualDom_insertNode(changes, localPatches, xKey, yNode, yIndex, inserts);
			index += xNode.b || 0;

			index++;
			_VirtualDom_removeNode(changes, localPatches, xKey, xNextNode, index);
			index += xNextNode.b || 0;

			xIndex += 2;
			yIndex += 2;
			continue;
		}

		// insert y
		if (newMatch)
		{
			index++;
			_VirtualDom_insertNode(changes, localPatches, yKey, yNode, yIndex, inserts);
			_VirtualDom_diffHelp(xNode, yNextNode, localPatches, index);
			index += xNode.b || 0;

			xIndex += 1;
			yIndex += 2;
			continue;
		}

		// remove x
		if (oldMatch)
		{
			index++;
			_VirtualDom_removeNode(changes, localPatches, xKey, xNode, index);
			index += xNode.b || 0;

			index++;
			_VirtualDom_diffHelp(xNextNode, yNode, localPatches, index);
			index += xNextNode.b || 0;

			xIndex += 2;
			yIndex += 1;
			continue;
		}

		// remove x, insert y
		if (xNext && xNextKey === yNextKey)
		{
			index++;
			_VirtualDom_removeNode(changes, localPatches, xKey, xNode, index);
			_VirtualDom_insertNode(changes, localPatches, yKey, yNode, yIndex, inserts);
			index += xNode.b || 0;

			index++;
			_VirtualDom_diffHelp(xNextNode, yNextNode, localPatches, index);
			index += xNextNode.b || 0;

			xIndex += 2;
			yIndex += 2;
			continue;
		}

		break;
	}

	// eat up any remaining nodes with removeNode and insertNode

	while (xIndex < xLen)
	{
		index++;
		var x = xKids[xIndex];
		var xNode = x.b;
		_VirtualDom_removeNode(changes, localPatches, x.a, xNode, index);
		index += xNode.b || 0;
		xIndex++;
	}

	while (yIndex < yLen)
	{
		var endInserts = endInserts || [];
		var y = yKids[yIndex];
		_VirtualDom_insertNode(changes, localPatches, y.a, y.b, undefined, endInserts);
		yIndex++;
	}

	if (localPatches.length > 0 || inserts.length > 0 || endInserts)
	{
		_VirtualDom_pushPatch(patches, 8, rootIndex, {
			w: localPatches,
			x: inserts,
			y: endInserts
		});
	}
}



// CHANGES FROM KEYED DIFF


var _VirtualDom_POSTFIX = '_elmW6BL';


function _VirtualDom_insertNode(changes, localPatches, key, vnode, yIndex, inserts)
{
	var entry = changes[key];

	// never seen this key before
	if (!entry)
	{
		entry = {
			c: 0,
			z: vnode,
			r: yIndex,
			s: undefined
		};

		inserts.push({ r: yIndex, A: entry });
		changes[key] = entry;

		return;
	}

	// this key was removed earlier, a match!
	if (entry.c === 1)
	{
		inserts.push({ r: yIndex, A: entry });

		entry.c = 2;
		var subPatches = [];
		_VirtualDom_diffHelp(entry.z, vnode, subPatches, entry.r);
		entry.r = yIndex;
		entry.s.s = {
			w: subPatches,
			A: entry
		};

		return;
	}

	// this key has already been inserted or moved, a duplicate!
	_VirtualDom_insertNode(changes, localPatches, key + _VirtualDom_POSTFIX, vnode, yIndex, inserts);
}


function _VirtualDom_removeNode(changes, localPatches, key, vnode, index)
{
	var entry = changes[key];

	// never seen this key before
	if (!entry)
	{
		var patch = _VirtualDom_pushPatch(localPatches, 9, index, undefined);

		changes[key] = {
			c: 1,
			z: vnode,
			r: index,
			s: patch
		};

		return;
	}

	// this key was inserted earlier, a match!
	if (entry.c === 0)
	{
		entry.c = 2;
		var subPatches = [];
		_VirtualDom_diffHelp(vnode, entry.z, subPatches, index);

		_VirtualDom_pushPatch(localPatches, 9, index, {
			w: subPatches,
			A: entry
		});

		return;
	}

	// this key has already been removed or moved, a duplicate!
	_VirtualDom_removeNode(changes, localPatches, key + _VirtualDom_POSTFIX, vnode, index);
}



// ADD DOM NODES
//
// Each DOM node has an "index" assigned in order of traversal. It is important
// to minimize our crawl over the actual DOM, so these indexes (along with the
// descendantsCount of virtual nodes) let us skip touching entire subtrees of
// the DOM if we know there are no patches there.


function _VirtualDom_addDomNodes(domNode, vNode, patches, eventNode)
{
	_VirtualDom_addDomNodesHelp(domNode, vNode, patches, 0, 0, vNode.b, eventNode);
}


// assumes `patches` is non-empty and indexes increase monotonically.
function _VirtualDom_addDomNodesHelp(domNode, vNode, patches, i, low, high, eventNode)
{
	var patch = patches[i];
	var index = patch.r;

	while (index === low)
	{
		var patchType = patch.$;

		if (patchType === 1)
		{
			_VirtualDom_addDomNodes(domNode, vNode.k, patch.s, eventNode);
		}
		else if (patchType === 8)
		{
			patch.t = domNode;
			patch.u = eventNode;

			var subPatches = patch.s.w;
			if (subPatches.length > 0)
			{
				_VirtualDom_addDomNodesHelp(domNode, vNode, subPatches, 0, low, high, eventNode);
			}
		}
		else if (patchType === 9)
		{
			patch.t = domNode;
			patch.u = eventNode;

			var data = patch.s;
			if (data)
			{
				data.A.s = domNode;
				var subPatches = data.w;
				if (subPatches.length > 0)
				{
					_VirtualDom_addDomNodesHelp(domNode, vNode, subPatches, 0, low, high, eventNode);
				}
			}
		}
		else
		{
			patch.t = domNode;
			patch.u = eventNode;
		}

		i++;

		if (!(patch = patches[i]) || (index = patch.r) > high)
		{
			return i;
		}
	}

	var tag = vNode.$;

	if (tag === 4)
	{
		var subNode = vNode.k;

		while (subNode.$ === 4)
		{
			subNode = subNode.k;
		}

		return _VirtualDom_addDomNodesHelp(domNode, subNode, patches, i, low + 1, high, domNode.elm_event_node_ref);
	}

	// tag must be 1 or 2 at this point

	var vKids = vNode.e;
	var childNodes = domNode.childNodes;
	for (var j = 0; j < vKids.length; j++)
	{
		low++;
		var vKid = tag === 1 ? vKids[j] : vKids[j].b;
		var nextLow = low + (vKid.b || 0);
		if (low <= index && index <= nextLow)
		{
			i = _VirtualDom_addDomNodesHelp(childNodes[j], vKid, patches, i, low, nextLow, eventNode);
			if (!(patch = patches[i]) || (index = patch.r) > high)
			{
				return i;
			}
		}
		low = nextLow;
	}
	return i;
}



// APPLY PATCHES


function _VirtualDom_applyPatches(rootDomNode, oldVirtualNode, patches, eventNode)
{
	if (patches.length === 0)
	{
		return rootDomNode;
	}

	_VirtualDom_addDomNodes(rootDomNode, oldVirtualNode, patches, eventNode);
	return _VirtualDom_applyPatchesHelp(rootDomNode, patches);
}

function _VirtualDom_applyPatchesHelp(rootDomNode, patches)
{
	for (var i = 0; i < patches.length; i++)
	{
		var patch = patches[i];
		var localDomNode = patch.t
		var newNode = _VirtualDom_applyPatch(localDomNode, patch);
		if (localDomNode === rootDomNode)
		{
			rootDomNode = newNode;
		}
	}
	return rootDomNode;
}

function _VirtualDom_applyPatch(domNode, patch)
{
	switch (patch.$)
	{
		case 0:
			return _VirtualDom_applyPatchRedraw(domNode, patch.s, patch.u);

		case 4:
			_VirtualDom_applyFacts(domNode, patch.u, patch.s);
			return domNode;

		case 3:
			domNode.replaceData(0, domNode.length, patch.s);
			return domNode;

		case 1:
			return _VirtualDom_applyPatchesHelp(domNode, patch.s);

		case 2:
			if (domNode.elm_event_node_ref)
			{
				domNode.elm_event_node_ref.j = patch.s;
			}
			else
			{
				domNode.elm_event_node_ref = { j: patch.s, p: patch.u };
			}
			return domNode;

		case 6:
			var data = patch.s;
			for (var i = 0; i < data.i; i++)
			{
				domNode.removeChild(domNode.childNodes[data.v]);
			}
			return domNode;

		case 7:
			var data = patch.s;
			var kids = data.e;
			var i = data.v;
			var theEnd = domNode.childNodes[i];
			for (; i < kids.length; i++)
			{
				domNode.insertBefore(_VirtualDom_render(kids[i], patch.u), theEnd);
			}
			return domNode;

		case 9:
			var data = patch.s;
			if (!data)
			{
				domNode.parentNode.removeChild(domNode);
				return domNode;
			}
			var entry = data.A;
			if (typeof entry.r !== 'undefined')
			{
				domNode.parentNode.removeChild(domNode);
			}
			entry.s = _VirtualDom_applyPatchesHelp(domNode, data.w);
			return domNode;

		case 8:
			return _VirtualDom_applyPatchReorder(domNode, patch);

		case 5:
			return patch.s(domNode);

		default:
			_Debug_crash(10); // 'Ran into an unknown patch!'
	}
}


function _VirtualDom_applyPatchRedraw(domNode, vNode, eventNode)
{
	var parentNode = domNode.parentNode;
	var newNode = _VirtualDom_render(vNode, eventNode);

	if (!newNode.elm_event_node_ref)
	{
		newNode.elm_event_node_ref = domNode.elm_event_node_ref;
	}

	if (parentNode && newNode !== domNode)
	{
		parentNode.replaceChild(newNode, domNode);
	}
	return newNode;
}


function _VirtualDom_applyPatchReorder(domNode, patch)
{
	var data = patch.s;

	// remove end inserts
	var frag = _VirtualDom_applyPatchReorderEndInsertsHelp(data.y, patch);

	// removals
	domNode = _VirtualDom_applyPatchesHelp(domNode, data.w);

	// inserts
	var inserts = data.x;
	for (var i = 0; i < inserts.length; i++)
	{
		var insert = inserts[i];
		var entry = insert.A;
		var node = entry.c === 2
			? entry.s
			: _VirtualDom_render(entry.z, patch.u);
		domNode.insertBefore(node, domNode.childNodes[insert.r]);
	}

	// add end inserts
	if (frag)
	{
		_VirtualDom_appendChild(domNode, frag);
	}

	return domNode;
}


function _VirtualDom_applyPatchReorderEndInsertsHelp(endInserts, patch)
{
	if (!endInserts)
	{
		return;
	}

	var frag = _VirtualDom_doc.createDocumentFragment();
	for (var i = 0; i < endInserts.length; i++)
	{
		var insert = endInserts[i];
		var entry = insert.A;
		_VirtualDom_appendChild(frag, entry.c === 2
			? entry.s
			: _VirtualDom_render(entry.z, patch.u)
		);
	}
	return frag;
}


function _VirtualDom_virtualize(node)
{
	// TEXT NODES

	if (node.nodeType === 3)
	{
		return _VirtualDom_text(node.textContent);
	}


	// WEIRD NODES

	if (node.nodeType !== 1)
	{
		return _VirtualDom_text('');
	}


	// ELEMENT NODES

	var attrList = _List_Nil;
	var attrs = node.attributes;
	for (var i = attrs.length; i--; )
	{
		var attr = attrs[i];
		var name = attr.name;
		var value = attr.value;
		attrList = _List_Cons( A2(_VirtualDom_attribute, name, value), attrList );
	}

	var tag = node.tagName.toLowerCase();
	var kidList = _List_Nil;
	var kids = node.childNodes;

	for (var i = kids.length; i--; )
	{
		kidList = _List_Cons(_VirtualDom_virtualize(kids[i]), kidList);
	}
	return A3(_VirtualDom_node, tag, attrList, kidList);
}

function _VirtualDom_dekey(keyedNode)
{
	var keyedKids = keyedNode.e;
	var len = keyedKids.length;
	var kids = new Array(len);
	for (var i = 0; i < len; i++)
	{
		kids[i] = keyedKids[i].b;
	}

	return {
		$: 1,
		c: keyedNode.c,
		d: keyedNode.d,
		e: kids,
		f: keyedNode.f,
		b: keyedNode.b
	};
}




// ELEMENT


var _Debugger_element;

var _Browser_element = _Debugger_element || F4(function(impl, flagDecoder, debugMetadata, args)
{
	return _Platform_initialize(
		flagDecoder,
		args,
		impl.init,
		impl.update,
		impl.subscriptions,
		function(sendToApp, initialModel) {
			var view = impl.view;
			/**_UNUSED/
			var domNode = args['node'];
			//*/
			/**/
			var domNode = args && args['node'] ? args['node'] : _Debug_crash(0);
			//*/
			var currNode = _VirtualDom_virtualize(domNode);

			return _Browser_makeAnimator(initialModel, function(model)
			{
				var nextNode = view(model);
				var patches = _VirtualDom_diff(currNode, nextNode);
				domNode = _VirtualDom_applyPatches(domNode, currNode, patches, sendToApp);
				currNode = nextNode;
			});
		}
	);
});



// DOCUMENT


var _Debugger_document;

var _Browser_document = _Debugger_document || F4(function(impl, flagDecoder, debugMetadata, args)
{
	return _Platform_initialize(
		flagDecoder,
		args,
		impl.init,
		impl.update,
		impl.subscriptions,
		function(sendToApp, initialModel) {
			var divertHrefToApp = impl.setup && impl.setup(sendToApp)
			var view = impl.view;
			var title = _VirtualDom_doc.title;
			var bodyNode = _VirtualDom_doc.body;
			var currNode = _VirtualDom_virtualize(bodyNode);
			return _Browser_makeAnimator(initialModel, function(model)
			{
				_VirtualDom_divertHrefToApp = divertHrefToApp;
				var doc = view(model);
				var nextNode = _VirtualDom_node('body')(_List_Nil)(doc.body);
				var patches = _VirtualDom_diff(currNode, nextNode);
				bodyNode = _VirtualDom_applyPatches(bodyNode, currNode, patches, sendToApp);
				currNode = nextNode;
				_VirtualDom_divertHrefToApp = 0;
				(title !== doc.title) && (_VirtualDom_doc.title = title = doc.title);
			});
		}
	);
});



// ANIMATION


var _Browser_cancelAnimationFrame =
	typeof cancelAnimationFrame !== 'undefined'
		? cancelAnimationFrame
		: function(id) { clearTimeout(id); };

var _Browser_requestAnimationFrame =
	typeof requestAnimationFrame !== 'undefined'
		? requestAnimationFrame
		: function(callback) { return setTimeout(callback, 1000 / 60); };


function _Browser_makeAnimator(model, draw)
{
	draw(model);

	var state = 0;

	function updateIfNeeded()
	{
		state = state === 1
			? 0
			: ( _Browser_requestAnimationFrame(updateIfNeeded), draw(model), 1 );
	}

	return function(nextModel, isSync)
	{
		model = nextModel;

		isSync
			? ( draw(model),
				state === 2 && (state = 1)
				)
			: ( state === 0 && _Browser_requestAnimationFrame(updateIfNeeded),
				state = 2
				);
	};
}



// APPLICATION


function _Browser_application(impl)
{
	var onUrlChange = impl.onUrlChange;
	var onUrlRequest = impl.onUrlRequest;
	var key = function() { key.a(onUrlChange(_Browser_getUrl())); };

	return _Browser_document({
		setup: function(sendToApp)
		{
			key.a = sendToApp;
			_Browser_window.addEventListener('popstate', key);
			_Browser_window.navigator.userAgent.indexOf('Trident') < 0 || _Browser_window.addEventListener('hashchange', key);

			return F2(function(domNode, event)
			{
				if (!event.ctrlKey && !event.metaKey && !event.shiftKey && event.button < 1 && !domNode.target && !domNode.hasAttribute('download'))
				{
					event.preventDefault();
					var href = domNode.href;
					var curr = _Browser_getUrl();
					var next = $elm$url$Url$fromString(href).a;
					sendToApp(onUrlRequest(
						(next
							&& curr.protocol === next.protocol
							&& curr.host === next.host
							&& curr.port_.a === next.port_.a
						)
							? $elm$browser$Browser$Internal(next)
							: $elm$browser$Browser$External(href)
					));
				}
			});
		},
		init: function(flags)
		{
			return A3(impl.init, flags, _Browser_getUrl(), key);
		},
		view: impl.view,
		update: impl.update,
		subscriptions: impl.subscriptions
	});
}

function _Browser_getUrl()
{
	return $elm$url$Url$fromString(_VirtualDom_doc.location.href).a || _Debug_crash(1);
}

var _Browser_go = F2(function(key, n)
{
	return A2($elm$core$Task$perform, $elm$core$Basics$never, _Scheduler_binding(function() {
		n && history.go(n);
		key();
	}));
});

var _Browser_pushUrl = F2(function(key, url)
{
	return A2($elm$core$Task$perform, $elm$core$Basics$never, _Scheduler_binding(function() {
		history.pushState({}, '', url);
		key();
	}));
});

var _Browser_replaceUrl = F2(function(key, url)
{
	return A2($elm$core$Task$perform, $elm$core$Basics$never, _Scheduler_binding(function() {
		history.replaceState({}, '', url);
		key();
	}));
});



// GLOBAL EVENTS


var _Browser_fakeNode = { addEventListener: function() {}, removeEventListener: function() {} };
var _Browser_doc = typeof document !== 'undefined' ? document : _Browser_fakeNode;
var _Browser_window = typeof window !== 'undefined' ? window : _Browser_fakeNode;

var _Browser_on = F3(function(node, eventName, sendToSelf)
{
	return _Scheduler_spawn(_Scheduler_binding(function(callback)
	{
		function handler(event)	{ _Scheduler_rawSpawn(sendToSelf(event)); }
		node.addEventListener(eventName, handler, _VirtualDom_passiveSupported && { passive: true });
		return function() { node.removeEventListener(eventName, handler); };
	}));
});

var _Browser_decodeEvent = F2(function(decoder, event)
{
	var result = _Json_runHelp(decoder, event);
	return $elm$core$Result$isOk(result) ? $elm$core$Maybe$Just(result.a) : $elm$core$Maybe$Nothing;
});



// PAGE VISIBILITY


function _Browser_visibilityInfo()
{
	return (typeof _VirtualDom_doc.hidden !== 'undefined')
		? { hidden: 'hidden', change: 'visibilitychange' }
		:
	(typeof _VirtualDom_doc.mozHidden !== 'undefined')
		? { hidden: 'mozHidden', change: 'mozvisibilitychange' }
		:
	(typeof _VirtualDom_doc.msHidden !== 'undefined')
		? { hidden: 'msHidden', change: 'msvisibilitychange' }
		:
	(typeof _VirtualDom_doc.webkitHidden !== 'undefined')
		? { hidden: 'webkitHidden', change: 'webkitvisibilitychange' }
		: { hidden: 'hidden', change: 'visibilitychange' };
}



// ANIMATION FRAMES


function _Browser_rAF()
{
	return _Scheduler_binding(function(callback)
	{
		var id = _Browser_requestAnimationFrame(function() {
			callback(_Scheduler_succeed(Date.now()));
		});

		return function() {
			_Browser_cancelAnimationFrame(id);
		};
	});
}


function _Browser_now()
{
	return _Scheduler_binding(function(callback)
	{
		callback(_Scheduler_succeed(Date.now()));
	});
}



// DOM STUFF


function _Browser_withNode(id, doStuff)
{
	return _Scheduler_binding(function(callback)
	{
		_Browser_requestAnimationFrame(function() {
			var node = document.getElementById(id);
			callback(node
				? _Scheduler_succeed(doStuff(node))
				: _Scheduler_fail($elm$browser$Browser$Dom$NotFound(id))
			);
		});
	});
}


function _Browser_withWindow(doStuff)
{
	return _Scheduler_binding(function(callback)
	{
		_Browser_requestAnimationFrame(function() {
			callback(_Scheduler_succeed(doStuff()));
		});
	});
}


// FOCUS and BLUR


var _Browser_call = F2(function(functionName, id)
{
	return _Browser_withNode(id, function(node) {
		node[functionName]();
		return _Utils_Tuple0;
	});
});



// WINDOW VIEWPORT


function _Browser_getViewport()
{
	return {
		scene: _Browser_getScene(),
		viewport: {
			x: _Browser_window.pageXOffset,
			y: _Browser_window.pageYOffset,
			width: _Browser_doc.documentElement.clientWidth,
			height: _Browser_doc.documentElement.clientHeight
		}
	};
}

function _Browser_getScene()
{
	var body = _Browser_doc.body;
	var elem = _Browser_doc.documentElement;
	return {
		width: Math.max(body.scrollWidth, body.offsetWidth, elem.scrollWidth, elem.offsetWidth, elem.clientWidth),
		height: Math.max(body.scrollHeight, body.offsetHeight, elem.scrollHeight, elem.offsetHeight, elem.clientHeight)
	};
}

var _Browser_setViewport = F2(function(x, y)
{
	return _Browser_withWindow(function()
	{
		_Browser_window.scroll(x, y);
		return _Utils_Tuple0;
	});
});



// ELEMENT VIEWPORT


function _Browser_getViewportOf(id)
{
	return _Browser_withNode(id, function(node)
	{
		return {
			scene: {
				width: node.scrollWidth,
				height: node.scrollHeight
			},
			viewport: {
				x: node.scrollLeft,
				y: node.scrollTop,
				width: node.clientWidth,
				height: node.clientHeight
			}
		};
	});
}


var _Browser_setViewportOf = F3(function(id, x, y)
{
	return _Browser_withNode(id, function(node)
	{
		node.scrollLeft = x;
		node.scrollTop = y;
		return _Utils_Tuple0;
	});
});



// ELEMENT


function _Browser_getElement(id)
{
	return _Browser_withNode(id, function(node)
	{
		var rect = node.getBoundingClientRect();
		var x = _Browser_window.pageXOffset;
		var y = _Browser_window.pageYOffset;
		return {
			scene: _Browser_getScene(),
			viewport: {
				x: x,
				y: y,
				width: _Browser_doc.documentElement.clientWidth,
				height: _Browser_doc.documentElement.clientHeight
			},
			element: {
				x: x + rect.left,
				y: y + rect.top,
				width: rect.width,
				height: rect.height
			}
		};
	});
}



// LOAD and RELOAD


function _Browser_reload(skipCache)
{
	return A2($elm$core$Task$perform, $elm$core$Basics$never, _Scheduler_binding(function(callback)
	{
		_VirtualDom_doc.location.reload(skipCache);
	}));
}

function _Browser_load(url)
{
	return A2($elm$core$Task$perform, $elm$core$Basics$never, _Scheduler_binding(function(callback)
	{
		try
		{
			_Browser_window.location = url;
		}
		catch(err)
		{
			// Only Firefox can throw a NS_ERROR_MALFORMED_URI exception here.
			// Other browsers reload the page, so let's be consistent about that.
			_VirtualDom_doc.location.reload(false);
		}
	}));
}


function _Url_percentEncode(string)
{
	return encodeURIComponent(string);
}

function _Url_percentDecode(string)
{
	try
	{
		return $elm$core$Maybe$Just(decodeURIComponent(string));
	}
	catch (e)
	{
		return $elm$core$Maybe$Nothing;
	}
}


function _Time_now(millisToPosix)
{
	return _Scheduler_binding(function(callback)
	{
		callback(_Scheduler_succeed(millisToPosix(Date.now())));
	});
}

var _Time_setInterval = F2(function(interval, task)
{
	return _Scheduler_binding(function(callback)
	{
		var id = setInterval(function() { _Scheduler_rawSpawn(task); }, interval);
		return function() { clearInterval(id); };
	});
});

function _Time_here()
{
	return _Scheduler_binding(function(callback)
	{
		callback(_Scheduler_succeed(
			A2($elm$time$Time$customZone, -(new Date().getTimezoneOffset()), _List_Nil)
		));
	});
}


function _Time_getZoneName()
{
	return _Scheduler_binding(function(callback)
	{
		try
		{
			var name = $elm$time$Time$Name(Intl.DateTimeFormat().resolvedOptions().timeZone);
		}
		catch (e)
		{
			var name = $elm$time$Time$Offset(new Date().getTimezoneOffset());
		}
		callback(_Scheduler_succeed(name));
	});
}



// SEND REQUEST

var _Http_toTask = F3(function(router, toTask, request)
{
	return _Scheduler_binding(function(callback)
	{
		function done(response) {
			callback(toTask(request.expect.a(response)));
		}

		var xhr = new XMLHttpRequest();
		xhr.addEventListener('error', function() { done($elm$http$Http$NetworkError_); });
		xhr.addEventListener('timeout', function() { done($elm$http$Http$Timeout_); });
		xhr.addEventListener('load', function() { done(_Http_toResponse(request.expect.b, xhr)); });
		$elm$core$Maybe$isJust(request.tracker) && _Http_track(router, xhr, request.tracker.a);

		try {
			xhr.open(request.method, request.url, true);
		} catch (e) {
			return done($elm$http$Http$BadUrl_(request.url));
		}

		_Http_configureRequest(xhr, request);

		request.body.a && xhr.setRequestHeader('Content-Type', request.body.a);
		xhr.send(request.body.b);

		return function() { xhr.c = true; xhr.abort(); };
	});
});


// CONFIGURE

function _Http_configureRequest(xhr, request)
{
	for (var headers = request.headers; headers.b; headers = headers.b) // WHILE_CONS
	{
		xhr.setRequestHeader(headers.a.a, headers.a.b);
	}
	xhr.timeout = request.timeout.a || 0;
	xhr.responseType = request.expect.d;
	xhr.withCredentials = request.allowCookiesFromOtherDomains;
}


// RESPONSES

function _Http_toResponse(toBody, xhr)
{
	return A2(
		200 <= xhr.status && xhr.status < 300 ? $elm$http$Http$GoodStatus_ : $elm$http$Http$BadStatus_,
		_Http_toMetadata(xhr),
		toBody(xhr.response)
	);
}


// METADATA

function _Http_toMetadata(xhr)
{
	return {
		url: xhr.responseURL,
		statusCode: xhr.status,
		statusText: xhr.statusText,
		headers: _Http_parseHeaders(xhr.getAllResponseHeaders())
	};
}


// HEADERS

function _Http_parseHeaders(rawHeaders)
{
	if (!rawHeaders)
	{
		return $elm$core$Dict$empty;
	}

	var headers = $elm$core$Dict$empty;
	var headerPairs = rawHeaders.split('\r\n');
	for (var i = headerPairs.length; i--; )
	{
		var headerPair = headerPairs[i];
		var index = headerPair.indexOf(': ');
		if (index > 0)
		{
			var key = headerPair.substring(0, index);
			var value = headerPair.substring(index + 2);

			headers = A3($elm$core$Dict$update, key, function(oldValue) {
				return $elm$core$Maybe$Just($elm$core$Maybe$isJust(oldValue)
					? value + ', ' + oldValue.a
					: value
				);
			}, headers);
		}
	}
	return headers;
}


// EXPECT

var _Http_expect = F3(function(type, toBody, toValue)
{
	return {
		$: 0,
		d: type,
		b: toBody,
		a: toValue
	};
});

var _Http_mapExpect = F2(function(func, expect)
{
	return {
		$: 0,
		d: expect.d,
		b: expect.b,
		a: function(x) { return func(expect.a(x)); }
	};
});

function _Http_toDataView(arrayBuffer)
{
	return new DataView(arrayBuffer);
}


// BODY and PARTS

var _Http_emptyBody = { $: 0 };
var _Http_pair = F2(function(a, b) { return { $: 0, a: a, b: b }; });

function _Http_toFormData(parts)
{
	for (var formData = new FormData(); parts.b; parts = parts.b) // WHILE_CONS
	{
		var part = parts.a;
		formData.append(part.a, part.b);
	}
	return formData;
}

var _Http_bytesToBlob = F2(function(mime, bytes)
{
	return new Blob([bytes], { type: mime });
});


// PROGRESS

function _Http_track(router, xhr, tracker)
{
	// TODO check out lengthComputable on loadstart event

	xhr.upload.addEventListener('progress', function(event) {
		if (xhr.c) { return; }
		_Scheduler_rawSpawn(A2($elm$core$Platform$sendToSelf, router, _Utils_Tuple2(tracker, $elm$http$Http$Sending({
			sent: event.loaded,
			size: event.total
		}))));
	});
	xhr.addEventListener('progress', function(event) {
		if (xhr.c) { return; }
		_Scheduler_rawSpawn(A2($elm$core$Platform$sendToSelf, router, _Utils_Tuple2(tracker, $elm$http$Http$Receiving({
			received: event.loaded,
			size: event.lengthComputable ? $elm$core$Maybe$Just(event.total) : $elm$core$Maybe$Nothing
		}))));
	});
}


var _Bitwise_and = F2(function(a, b)
{
	return a & b;
});

var _Bitwise_or = F2(function(a, b)
{
	return a | b;
});

var _Bitwise_xor = F2(function(a, b)
{
	return a ^ b;
});

function _Bitwise_complement(a)
{
	return ~a;
};

var _Bitwise_shiftLeftBy = F2(function(offset, a)
{
	return a << offset;
});

var _Bitwise_shiftRightBy = F2(function(offset, a)
{
	return a >> offset;
});

var _Bitwise_shiftRightZfBy = F2(function(offset, a)
{
	return a >>> offset;
});


// CREATE

var _Regex_never = /.^/;

var _Regex_fromStringWith = F2(function(options, string)
{
	var flags = 'g';
	if (options.multiline) { flags += 'm'; }
	if (options.caseInsensitive) { flags += 'i'; }

	try
	{
		return $elm$core$Maybe$Just(new RegExp(string, flags));
	}
	catch(error)
	{
		return $elm$core$Maybe$Nothing;
	}
});


// USE

var _Regex_contains = F2(function(re, string)
{
	return string.match(re) !== null;
});


var _Regex_findAtMost = F3(function(n, re, str)
{
	var out = [];
	var number = 0;
	var string = str;
	var lastIndex = re.lastIndex;
	var prevLastIndex = -1;
	var result;
	while (number++ < n && (result = re.exec(string)))
	{
		if (prevLastIndex == re.lastIndex) break;
		var i = result.length - 1;
		var subs = new Array(i);
		while (i > 0)
		{
			var submatch = result[i];
			subs[--i] = submatch
				? $elm$core$Maybe$Just(submatch)
				: $elm$core$Maybe$Nothing;
		}
		out.push(A4($elm$regex$Regex$Match, result[0], result.index, number, _List_fromArray(subs)));
		prevLastIndex = re.lastIndex;
	}
	re.lastIndex = lastIndex;
	return _List_fromArray(out);
});


var _Regex_replaceAtMost = F4(function(n, re, replacer, string)
{
	var count = 0;
	function jsReplacer(match)
	{
		if (count++ >= n)
		{
			return match;
		}
		var i = arguments.length - 3;
		var submatches = new Array(i);
		while (i > 0)
		{
			var submatch = arguments[i];
			submatches[--i] = submatch
				? $elm$core$Maybe$Just(submatch)
				: $elm$core$Maybe$Nothing;
		}
		return replacer(A4($elm$regex$Regex$Match, match, arguments[arguments.length - 2], count, _List_fromArray(submatches)));
	}
	return string.replace(re, jsReplacer);
});

var _Regex_splitAtMost = F3(function(n, re, str)
{
	var string = str;
	var out = [];
	var start = re.lastIndex;
	var restoreLastIndex = re.lastIndex;
	while (n--)
	{
		var result = re.exec(string);
		if (!result) break;
		out.push(string.slice(start, result.index));
		start = re.lastIndex;
	}
	out.push(string.slice(start));
	re.lastIndex = restoreLastIndex;
	return _List_fromArray(out);
});

var _Regex_infinity = Infinity;




// VIRTUAL-DOM WIDGETS


var _Markdown_toHtml = F3(function(options, factList, rawMarkdown)
{
	return _VirtualDom_custom(
		factList,
		{
			a: options,
			b: rawMarkdown
		},
		_Markdown_render,
		_Markdown_diff
	);
});



// WIDGET IMPLEMENTATION


function _Markdown_render(model)
{
	return A2(_Markdown_replace, model, _VirtualDom_doc.createElement('div'));
}


function _Markdown_diff(x, y)
{
	return x.b === y.b && x.a === y.a
		? false
		: _Markdown_replace(y);
}


var _Markdown_replace = F2(function(model, div)
{
	div.innerHTML = _Markdown_marked(model.b, _Markdown_formatOptions(model.a));
	return div;
});



// ACTUAL MARKDOWN PARSER


var _Markdown_marked = function() {
	// catch the `marked` object regardless of the outer environment.
	// (ex. a CommonJS module compatible environment.)
	// note that this depends on marked's implementation of environment detection.
	var module = {};
	var exports = module.exports = {};

	/**
	 * marked - a markdown parser
	 * Copyright (c) 2011-2014, Christopher Jeffrey. (MIT Licensed)
	 * https://github.com/chjj/marked
	 * commit cd2f6f5b7091154c5526e79b5f3bfb4d15995a51
	 */
	(function(){var block={newline:/^\n+/,code:/^( {4}[^\n]+\n*)+/,fences:noop,hr:/^( *[-*_]){3,} *(?:\n+|$)/,heading:/^ *(#{1,6}) *([^\n]+?) *#* *(?:\n+|$)/,nptable:noop,lheading:/^([^\n]+)\n *(=|-){2,} *(?:\n+|$)/,blockquote:/^( *>[^\n]+(\n(?!def)[^\n]+)*\n*)+/,list:/^( *)(bull) [\s\S]+?(?:hr|def|\n{2,}(?! )(?!\1bull )\n*|\s*$)/,html:/^ *(?:comment *(?:\n|\s*$)|closed *(?:\n{2,}|\s*$)|closing *(?:\n{2,}|\s*$))/,def:/^ *\[([^\]]+)\]: *<?([^\s>]+)>?(?: +["(]([^\n]+)[")])? *(?:\n+|$)/,table:noop,paragraph:/^((?:[^\n]+\n?(?!hr|heading|lheading|blockquote|tag|def))+)\n*/,text:/^[^\n]+/};block.bullet=/(?:[*+-]|\d+\.)/;block.item=/^( *)(bull) [^\n]*(?:\n(?!\1bull )[^\n]*)*/;block.item=replace(block.item,"gm")(/bull/g,block.bullet)();block.list=replace(block.list)(/bull/g,block.bullet)("hr","\\n+(?=\\1?(?:[-*_] *){3,}(?:\\n+|$))")("def","\\n+(?="+block.def.source+")")();block.blockquote=replace(block.blockquote)("def",block.def)();block._tag="(?!(?:"+"a|em|strong|small|s|cite|q|dfn|abbr|data|time|code"+"|var|samp|kbd|sub|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo"+"|span|br|wbr|ins|del|img)\\b)\\w+(?!:/|[^\\w\\s@]*@)\\b";block.html=replace(block.html)("comment",/<!--[\s\S]*?-->/)("closed",/<(tag)[\s\S]+?<\/\1>/)("closing",/<tag(?:"[^"]*"|'[^']*'|[^'">])*?>/)(/tag/g,block._tag)();block.paragraph=replace(block.paragraph)("hr",block.hr)("heading",block.heading)("lheading",block.lheading)("blockquote",block.blockquote)("tag","<"+block._tag)("def",block.def)();block.normal=merge({},block);block.gfm=merge({},block.normal,{fences:/^ *(`{3,}|~{3,})[ \.]*(\S+)? *\n([\s\S]*?)\s*\1 *(?:\n+|$)/,paragraph:/^/,heading:/^ *(#{1,6}) +([^\n]+?) *#* *(?:\n+|$)/});block.gfm.paragraph=replace(block.paragraph)("(?!","(?!"+block.gfm.fences.source.replace("\\1","\\2")+"|"+block.list.source.replace("\\1","\\3")+"|")();block.tables=merge({},block.gfm,{nptable:/^ *(\S.*\|.*)\n *([-:]+ *\|[-| :]*)\n((?:.*\|.*(?:\n|$))*)\n*/,table:/^ *\|(.+)\n *\|( *[-:]+[-| :]*)\n((?: *\|.*(?:\n|$))*)\n*/});function Lexer(options){this.tokens=[];this.tokens.links={};this.options=options||marked.defaults;this.rules=block.normal;if(this.options.gfm){if(this.options.tables){this.rules=block.tables}else{this.rules=block.gfm}}}Lexer.rules=block;Lexer.lex=function(src,options){var lexer=new Lexer(options);return lexer.lex(src)};Lexer.prototype.lex=function(src){src=src.replace(/\r\n|\r/g,"\n").replace(/\t/g,"    ").replace(/\u00a0/g," ").replace(/\u2424/g,"\n");return this.token(src,true)};Lexer.prototype.token=function(src,top,bq){var src=src.replace(/^ +$/gm,""),next,loose,cap,bull,b,item,space,i,l;while(src){if(cap=this.rules.newline.exec(src)){src=src.substring(cap[0].length);if(cap[0].length>1){this.tokens.push({type:"space"})}}if(cap=this.rules.code.exec(src)){src=src.substring(cap[0].length);cap=cap[0].replace(/^ {4}/gm,"");this.tokens.push({type:"code",text:!this.options.pedantic?cap.replace(/\n+$/,""):cap});continue}if(cap=this.rules.fences.exec(src)){src=src.substring(cap[0].length);this.tokens.push({type:"code",lang:cap[2],text:cap[3]||""});continue}if(cap=this.rules.heading.exec(src)){src=src.substring(cap[0].length);this.tokens.push({type:"heading",depth:cap[1].length,text:cap[2]});continue}if(top&&(cap=this.rules.nptable.exec(src))){src=src.substring(cap[0].length);item={type:"table",header:cap[1].replace(/^ *| *\| *$/g,"").split(/ *\| */),align:cap[2].replace(/^ *|\| *$/g,"").split(/ *\| */),cells:cap[3].replace(/\n$/,"").split("\n")};for(i=0;i<item.align.length;i++){if(/^ *-+: *$/.test(item.align[i])){item.align[i]="right"}else if(/^ *:-+: *$/.test(item.align[i])){item.align[i]="center"}else if(/^ *:-+ *$/.test(item.align[i])){item.align[i]="left"}else{item.align[i]=null}}for(i=0;i<item.cells.length;i++){item.cells[i]=item.cells[i].split(/ *\| */)}this.tokens.push(item);continue}if(cap=this.rules.lheading.exec(src)){src=src.substring(cap[0].length);this.tokens.push({type:"heading",depth:cap[2]==="="?1:2,text:cap[1]});continue}if(cap=this.rules.hr.exec(src)){src=src.substring(cap[0].length);this.tokens.push({type:"hr"});continue}if(cap=this.rules.blockquote.exec(src)){src=src.substring(cap[0].length);this.tokens.push({type:"blockquote_start"});cap=cap[0].replace(/^ *> ?/gm,"");this.token(cap,top,true);this.tokens.push({type:"blockquote_end"});continue}if(cap=this.rules.list.exec(src)){src=src.substring(cap[0].length);bull=cap[2];this.tokens.push({type:"list_start",ordered:bull.length>1});cap=cap[0].match(this.rules.item);next=false;l=cap.length;i=0;for(;i<l;i++){item=cap[i];space=item.length;item=item.replace(/^ *([*+-]|\d+\.) +/,"");if(~item.indexOf("\n ")){space-=item.length;item=!this.options.pedantic?item.replace(new RegExp("^ {1,"+space+"}","gm"),""):item.replace(/^ {1,4}/gm,"")}if(this.options.smartLists&&i!==l-1){b=block.bullet.exec(cap[i+1])[0];if(bull!==b&&!(bull.length>1&&b.length>1)){src=cap.slice(i+1).join("\n")+src;i=l-1}}loose=next||/\n\n(?!\s*$)/.test(item);if(i!==l-1){next=item.charAt(item.length-1)==="\n";if(!loose)loose=next}this.tokens.push({type:loose?"loose_item_start":"list_item_start"});this.token(item,false,bq);this.tokens.push({type:"list_item_end"})}this.tokens.push({type:"list_end"});continue}if(cap=this.rules.html.exec(src)){src=src.substring(cap[0].length);this.tokens.push({type:this.options.sanitize?"paragraph":"html",pre:!this.options.sanitizer&&(cap[1]==="pre"||cap[1]==="script"||cap[1]==="style"),text:cap[0]});continue}if(!bq&&top&&(cap=this.rules.def.exec(src))){src=src.substring(cap[0].length);this.tokens.links[cap[1].toLowerCase()]={href:cap[2],title:cap[3]};continue}if(top&&(cap=this.rules.table.exec(src))){src=src.substring(cap[0].length);item={type:"table",header:cap[1].replace(/^ *| *\| *$/g,"").split(/ *\| */),align:cap[2].replace(/^ *|\| *$/g,"").split(/ *\| */),cells:cap[3].replace(/(?: *\| *)?\n$/,"").split("\n")};for(i=0;i<item.align.length;i++){if(/^ *-+: *$/.test(item.align[i])){item.align[i]="right"}else if(/^ *:-+: *$/.test(item.align[i])){item.align[i]="center"}else if(/^ *:-+ *$/.test(item.align[i])){item.align[i]="left"}else{item.align[i]=null}}for(i=0;i<item.cells.length;i++){item.cells[i]=item.cells[i].replace(/^ *\| *| *\| *$/g,"").split(/ *\| */)}this.tokens.push(item);continue}if(top&&(cap=this.rules.paragraph.exec(src))){src=src.substring(cap[0].length);this.tokens.push({type:"paragraph",text:cap[1].charAt(cap[1].length-1)==="\n"?cap[1].slice(0,-1):cap[1]});continue}if(cap=this.rules.text.exec(src)){src=src.substring(cap[0].length);this.tokens.push({type:"text",text:cap[0]});continue}if(src){throw new Error("Infinite loop on byte: "+src.charCodeAt(0))}}return this.tokens};var inline={escape:/^\\([\\`*{}\[\]()#+\-.!_>])/,autolink:/^<([^ >]+(@|:\/)[^ >]+)>/,url:noop,tag:/^<!--[\s\S]*?-->|^<\/?\w+(?:"[^"]*"|'[^']*'|[^'">])*?>/,link:/^!?\[(inside)\]\(href\)/,reflink:/^!?\[(inside)\]\s*\[([^\]]*)\]/,nolink:/^!?\[((?:\[[^\]]*\]|[^\[\]])*)\]/,strong:/^_\_([\s\S]+?)_\_(?!_)|^\*\*([\s\S]+?)\*\*(?!\*)/,em:/^\b_((?:[^_]|_\_)+?)_\b|^\*((?:\*\*|[\s\S])+?)\*(?!\*)/,code:/^(`+)\s*([\s\S]*?[^`])\s*\1(?!`)/,br:/^ {2,}\n(?!\s*$)/,del:noop,text:/^[\s\S]+?(?=[\\<!\[_*`]| {2,}\n|$)/};inline._inside=/(?:\[[^\]]*\]|[^\[\]]|\](?=[^\[]*\]))*/;inline._href=/\s*<?([\s\S]*?)>?(?:\s+['"]([\s\S]*?)['"])?\s*/;inline.link=replace(inline.link)("inside",inline._inside)("href",inline._href)();inline.reflink=replace(inline.reflink)("inside",inline._inside)();inline.normal=merge({},inline);inline.pedantic=merge({},inline.normal,{strong:/^_\_(?=\S)([\s\S]*?\S)_\_(?!_)|^\*\*(?=\S)([\s\S]*?\S)\*\*(?!\*)/,em:/^_(?=\S)([\s\S]*?\S)_(?!_)|^\*(?=\S)([\s\S]*?\S)\*(?!\*)/});inline.gfm=merge({},inline.normal,{escape:replace(inline.escape)("])","~|])")(),url:/^(https?:\/\/[^\s<]+[^<.,:;"')\]\s])/,del:/^~~(?=\S)([\s\S]*?\S)~~/,text:replace(inline.text)("]|","~]|")("|","|https?://|")()});inline.breaks=merge({},inline.gfm,{br:replace(inline.br)("{2,}","*")(),text:replace(inline.gfm.text)("{2,}","*")()});function InlineLexer(links,options){this.options=options||marked.defaults;this.links=links;this.rules=inline.normal;this.renderer=this.options.renderer||new Renderer;this.renderer.options=this.options;if(!this.links){throw new Error("Tokens array requires a `links` property.")}if(this.options.gfm){if(this.options.breaks){this.rules=inline.breaks}else{this.rules=inline.gfm}}else if(this.options.pedantic){this.rules=inline.pedantic}}InlineLexer.rules=inline;InlineLexer.output=function(src,links,options){var inline=new InlineLexer(links,options);return inline.output(src)};InlineLexer.prototype.output=function(src){var out="",link,text,href,cap;while(src){if(cap=this.rules.escape.exec(src)){src=src.substring(cap[0].length);out+=cap[1];continue}if(cap=this.rules.autolink.exec(src)){src=src.substring(cap[0].length);if(cap[2]==="@"){text=cap[1].charAt(6)===":"?this.mangle(cap[1].substring(7)):this.mangle(cap[1]);href=this.mangle("mailto:")+text}else{text=escape(cap[1]);href=text}out+=this.renderer.link(href,null,text);continue}if(!this.inLink&&(cap=this.rules.url.exec(src))){src=src.substring(cap[0].length);text=escape(cap[1]);href=text;out+=this.renderer.link(href,null,text);continue}if(cap=this.rules.tag.exec(src)){if(!this.inLink&&/^<a /i.test(cap[0])){this.inLink=true}else if(this.inLink&&/^<\/a>/i.test(cap[0])){this.inLink=false}src=src.substring(cap[0].length);out+=this.options.sanitize?this.options.sanitizer?this.options.sanitizer(cap[0]):escape(cap[0]):cap[0];continue}if(cap=this.rules.link.exec(src)){src=src.substring(cap[0].length);this.inLink=true;out+=this.outputLink(cap,{href:cap[2],title:cap[3]});this.inLink=false;continue}if((cap=this.rules.reflink.exec(src))||(cap=this.rules.nolink.exec(src))){src=src.substring(cap[0].length);link=(cap[2]||cap[1]).replace(/\s+/g," ");link=this.links[link.toLowerCase()];if(!link||!link.href){out+=cap[0].charAt(0);src=cap[0].substring(1)+src;continue}this.inLink=true;out+=this.outputLink(cap,link);this.inLink=false;continue}if(cap=this.rules.strong.exec(src)){src=src.substring(cap[0].length);out+=this.renderer.strong(this.output(cap[2]||cap[1]));continue}if(cap=this.rules.em.exec(src)){src=src.substring(cap[0].length);out+=this.renderer.em(this.output(cap[2]||cap[1]));continue}if(cap=this.rules.code.exec(src)){src=src.substring(cap[0].length);out+=this.renderer.codespan(escape(cap[2],true));continue}if(cap=this.rules.br.exec(src)){src=src.substring(cap[0].length);out+=this.renderer.br();continue}if(cap=this.rules.del.exec(src)){src=src.substring(cap[0].length);out+=this.renderer.del(this.output(cap[1]));continue}if(cap=this.rules.text.exec(src)){src=src.substring(cap[0].length);out+=this.renderer.text(escape(this.smartypants(cap[0])));continue}if(src){throw new Error("Infinite loop on byte: "+src.charCodeAt(0))}}return out};InlineLexer.prototype.outputLink=function(cap,link){var href=escape(link.href),title=link.title?escape(link.title):null;return cap[0].charAt(0)!=="!"?this.renderer.link(href,title,this.output(cap[1])):this.renderer.image(href,title,escape(cap[1]))};InlineLexer.prototype.smartypants=function(text){if(!this.options.smartypants)return text;return text.replace(/---/g,"—").replace(/--/g,"–").replace(/(^|[-\u2014\/(\[{"\s])'/g,"$1‘").replace(/'/g,"’").replace(/(^|[-\u2014\/(\[{\u2018\s])"/g,"$1“").replace(/"/g,"”").replace(/\.{3}/g,"…")};InlineLexer.prototype.mangle=function(text){if(!this.options.mangle)return text;var out="",l=text.length,i=0,ch;for(;i<l;i++){ch=text.charCodeAt(i);if(Math.random()>.5){ch="x"+ch.toString(16)}out+="&#"+ch+";"}return out};function Renderer(options){this.options=options||{}}Renderer.prototype.code=function(code,lang,escaped){if(this.options.highlight){var out=this.options.highlight(code,lang);if(out!=null&&out!==code){escaped=true;code=out}}if(!lang){return"<pre><code>"+(escaped?code:escape(code,true))+"\n</code></pre>"}return'<pre><code class="'+this.options.langPrefix+escape(lang,true)+'">'+(escaped?code:escape(code,true))+"\n</code></pre>\n"};Renderer.prototype.blockquote=function(quote){return"<blockquote>\n"+quote+"</blockquote>\n"};Renderer.prototype.html=function(html){return html};Renderer.prototype.heading=function(text,level,raw){return"<h"+level+' id="'+this.options.headerPrefix+raw.toLowerCase().replace(/[^\w]+/g,"-")+'">'+text+"</h"+level+">\n"};Renderer.prototype.hr=function(){return this.options.xhtml?"<hr/>\n":"<hr>\n"};Renderer.prototype.list=function(body,ordered){var type=ordered?"ol":"ul";return"<"+type+">\n"+body+"</"+type+">\n"};Renderer.prototype.listitem=function(text){return"<li>"+text+"</li>\n"};Renderer.prototype.paragraph=function(text){return"<p>"+text+"</p>\n"};Renderer.prototype.table=function(header,body){return"<table>\n"+"<thead>\n"+header+"</thead>\n"+"<tbody>\n"+body+"</tbody>\n"+"</table>\n"};Renderer.prototype.tablerow=function(content){return"<tr>\n"+content+"</tr>\n"};Renderer.prototype.tablecell=function(content,flags){var type=flags.header?"th":"td";var tag=flags.align?"<"+type+' style="text-align:'+flags.align+'">':"<"+type+">";return tag+content+"</"+type+">\n"};Renderer.prototype.strong=function(text){return"<strong>"+text+"</strong>"};Renderer.prototype.em=function(text){return"<em>"+text+"</em>"};Renderer.prototype.codespan=function(text){return"<code>"+text+"</code>"};Renderer.prototype.br=function(){return this.options.xhtml?"<br/>":"<br>"};Renderer.prototype.del=function(text){return"<del>"+text+"</del>"};Renderer.prototype.link=function(href,title,text){if(this.options.sanitize){try{var prot=decodeURIComponent(unescape(href)).replace(/[^\w:]/g,"").toLowerCase()}catch(e){return""}if(prot.indexOf("javascript:")===0||prot.indexOf("vbscript:")===0||prot.indexOf("data:")===0){return""}}var out='<a href="'+href+'"';if(title){out+=' title="'+title+'"'}out+=">"+text+"</a>";return out};Renderer.prototype.image=function(href,title,text){var out='<img src="'+href+'" alt="'+text+'"';if(title){out+=' title="'+title+'"'}out+=this.options.xhtml?"/>":">";return out};Renderer.prototype.text=function(text){return text};function Parser(options){this.tokens=[];this.token=null;this.options=options||marked.defaults;this.options.renderer=this.options.renderer||new Renderer;this.renderer=this.options.renderer;this.renderer.options=this.options}Parser.parse=function(src,options,renderer){var parser=new Parser(options,renderer);return parser.parse(src)};Parser.prototype.parse=function(src){this.inline=new InlineLexer(src.links,this.options,this.renderer);this.tokens=src.reverse();var out="";while(this.next()){out+=this.tok()}return out};Parser.prototype.next=function(){return this.token=this.tokens.pop()};Parser.prototype.peek=function(){return this.tokens[this.tokens.length-1]||0};Parser.prototype.parseText=function(){var body=this.token.text;while(this.peek().type==="text"){body+="\n"+this.next().text}return this.inline.output(body)};Parser.prototype.tok=function(){switch(this.token.type){case"space":{return""}case"hr":{return this.renderer.hr()}case"heading":{return this.renderer.heading(this.inline.output(this.token.text),this.token.depth,this.token.text)}case"code":{return this.renderer.code(this.token.text,this.token.lang,this.token.escaped)}case"table":{var header="",body="",i,row,cell,flags,j;cell="";for(i=0;i<this.token.header.length;i++){flags={header:true,align:this.token.align[i]};cell+=this.renderer.tablecell(this.inline.output(this.token.header[i]),{header:true,align:this.token.align[i]})}header+=this.renderer.tablerow(cell);for(i=0;i<this.token.cells.length;i++){row=this.token.cells[i];cell="";for(j=0;j<row.length;j++){cell+=this.renderer.tablecell(this.inline.output(row[j]),{header:false,align:this.token.align[j]})}body+=this.renderer.tablerow(cell)}return this.renderer.table(header,body)}case"blockquote_start":{var body="";while(this.next().type!=="blockquote_end"){body+=this.tok()}return this.renderer.blockquote(body)}case"list_start":{var body="",ordered=this.token.ordered;while(this.next().type!=="list_end"){body+=this.tok()}return this.renderer.list(body,ordered)}case"list_item_start":{var body="";while(this.next().type!=="list_item_end"){body+=this.token.type==="text"?this.parseText():this.tok()}return this.renderer.listitem(body)}case"loose_item_start":{var body="";while(this.next().type!=="list_item_end"){body+=this.tok()}return this.renderer.listitem(body)}case"html":{var html=!this.token.pre&&!this.options.pedantic?this.inline.output(this.token.text):this.token.text;return this.renderer.html(html)}case"paragraph":{return this.renderer.paragraph(this.inline.output(this.token.text))}case"text":{return this.renderer.paragraph(this.parseText())}}};function escape(html,encode){return html.replace(!encode?/&(?!#?\w+;)/g:/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#39;")}function unescape(html){return html.replace(/&(#(?:\d+)|(?:#x[0-9A-Fa-f]+)|(?:\w+));?/g,function(_,n){n=n.toLowerCase();if(n==="colon")return":";if(n.charAt(0)==="#"){return n.charAt(1)==="x"?String.fromCharCode(parseInt(n.substring(2),16)):String.fromCharCode(+n.substring(1))}return""})}function replace(regex,opt){regex=regex.source;opt=opt||"";return function self(name,val){if(!name)return new RegExp(regex,opt);val=val.source||val;val=val.replace(/(^|[^\[])\^/g,"$1");regex=regex.replace(name,val);return self}}function noop(){}noop.exec=noop;function merge(obj){var i=1,target,key;for(;i<arguments.length;i++){target=arguments[i];for(key in target){if(Object.prototype.hasOwnProperty.call(target,key)){obj[key]=target[key]}}}return obj}function marked(src,opt,callback){if(callback||typeof opt==="function"){if(!callback){callback=opt;opt=null}opt=merge({},marked.defaults,opt||{});var highlight=opt.highlight,tokens,pending,i=0;try{tokens=Lexer.lex(src,opt)}catch(e){return callback(e)}pending=tokens.length;var done=function(err){if(err){opt.highlight=highlight;return callback(err)}var out;try{out=Parser.parse(tokens,opt)}catch(e){err=e}opt.highlight=highlight;return err?callback(err):callback(null,out)};if(!highlight||highlight.length<3){return done()}delete opt.highlight;if(!pending)return done();for(;i<tokens.length;i++){(function(token){if(token.type!=="code"){return--pending||done()}return highlight(token.text,token.lang,function(err,code){if(err)return done(err);if(code==null||code===token.text){return--pending||done()}token.text=code;token.escaped=true;--pending||done()})})(tokens[i])}return}try{if(opt)opt=merge({},marked.defaults,opt);return Parser.parse(Lexer.lex(src,opt),opt)}catch(e){e.message+="\nPlease report this to https://github.com/chjj/marked.";if((opt||marked.defaults).silent){return"<p>An error occured:</p><pre>"+escape(e.message+"",true)+"</pre>"}throw e}}marked.options=marked.setOptions=function(opt){merge(marked.defaults,opt);return marked};marked.defaults={gfm:true,tables:true,breaks:false,pedantic:false,sanitize:false,sanitizer:null,mangle:true,smartLists:false,silent:false,highlight:null,langPrefix:"lang-",smartypants:false,headerPrefix:"",renderer:new Renderer,xhtml:false};marked.Parser=Parser;marked.parser=Parser.parse;marked.Renderer=Renderer;marked.Lexer=Lexer;marked.lexer=Lexer.lex;marked.InlineLexer=InlineLexer;marked.inlineLexer=InlineLexer.output;marked.parse=marked;if(typeof module!=="undefined"&&typeof exports==="object"){module.exports=marked}else if(typeof define==="function"&&define.amd){define(function(){return marked})}else{this.marked=marked}}).call(function(){return this||(typeof window!=="undefined"?window:global)}());

	return module.exports;
}();


// FORMAT OPTIONS FOR MARKED IMPLEMENTATION

function _Markdown_formatOptions(options)
{
	function toHighlight(code, lang)
	{
		if (!lang && $elm$core$Maybe$isJust(options.defaultHighlighting))
		{
			lang = options.defaultHighlighting.a;
		}

		if (typeof hljs !== 'undefined' && lang && hljs.listLanguages().indexOf(lang) >= 0)
		{
			return hljs.highlight(lang, code, true).value;
		}

		return code;
	}

	var gfm = options.githubFlavored.a;

	return {
		highlight: toHighlight,
		gfm: gfm,
		tables: gfm && gfm.tables,
		breaks: gfm && gfm.breaks,
		sanitize: options.sanitize,
		smartypants: options.smartypants
	};
}



// DECODER

var _File_decoder = _Json_decodePrim(function(value) {
	// NOTE: checks if `File` exists in case this is run on node
	return (typeof File !== 'undefined' && value instanceof File)
		? $elm$core$Result$Ok(value)
		: _Json_expecting('a FILE', value);
});


// METADATA

function _File_name(file) { return file.name; }
function _File_mime(file) { return file.type; }
function _File_size(file) { return file.size; }

function _File_lastModified(file)
{
	return $elm$time$Time$millisToPosix(file.lastModified);
}


// DOWNLOAD

var _File_downloadNode;

function _File_getDownloadNode()
{
	return _File_downloadNode || (_File_downloadNode = document.createElement('a'));
}

var _File_download = F3(function(name, mime, content)
{
	return _Scheduler_binding(function(callback)
	{
		var blob = new Blob([content], {type: mime});

		// for IE10+
		if (navigator.msSaveOrOpenBlob)
		{
			navigator.msSaveOrOpenBlob(blob, name);
			return;
		}

		// for HTML5
		var node = _File_getDownloadNode();
		var objectUrl = URL.createObjectURL(blob);
		node.href = objectUrl;
		node.download = name;
		_File_click(node);
		URL.revokeObjectURL(objectUrl);
	});
});

function _File_downloadUrl(href)
{
	return _Scheduler_binding(function(callback)
	{
		var node = _File_getDownloadNode();
		node.href = href;
		node.download = '';
		node.origin === location.origin || (node.target = '_blank');
		_File_click(node);
	});
}


// IE COMPATIBILITY

function _File_makeBytesSafeForInternetExplorer(bytes)
{
	// only needed by IE10 and IE11 to fix https://github.com/elm/file/issues/10
	// all other browsers can just run `new Blob([bytes])` directly with no problem
	//
	return new Uint8Array(bytes.buffer, bytes.byteOffset, bytes.byteLength);
}

function _File_click(node)
{
	// only needed by IE10 and IE11 to fix https://github.com/elm/file/issues/11
	// all other browsers have MouseEvent and do not need this conditional stuff
	//
	if (typeof MouseEvent === 'function')
	{
		node.dispatchEvent(new MouseEvent('click'));
	}
	else
	{
		var event = document.createEvent('MouseEvents');
		event.initMouseEvent('click', true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);
		document.body.appendChild(node);
		node.dispatchEvent(event);
		document.body.removeChild(node);
	}
}


// UPLOAD

var _File_node;

function _File_uploadOne(mimes)
{
	return _Scheduler_binding(function(callback)
	{
		_File_node = document.createElement('input');
		_File_node.type = 'file';
		_File_node.accept = A2($elm$core$String$join, ',', mimes);
		_File_node.addEventListener('change', function(event)
		{
			callback(_Scheduler_succeed(event.target.files[0]));
		});
		_File_click(_File_node);
	});
}

function _File_uploadOneOrMore(mimes)
{
	return _Scheduler_binding(function(callback)
	{
		_File_node = document.createElement('input');
		_File_node.type = 'file';
		_File_node.multiple = true;
		_File_node.accept = A2($elm$core$String$join, ',', mimes);
		_File_node.addEventListener('change', function(event)
		{
			var elmFiles = _List_fromArray(event.target.files);
			callback(_Scheduler_succeed(_Utils_Tuple2(elmFiles.a, elmFiles.b)));
		});
		_File_click(_File_node);
	});
}


// CONTENT

function _File_toString(blob)
{
	return _Scheduler_binding(function(callback)
	{
		var reader = new FileReader();
		reader.addEventListener('loadend', function() {
			callback(_Scheduler_succeed(reader.result));
		});
		reader.readAsText(blob);
		return function() { reader.abort(); };
	});
}

function _File_toBytes(blob)
{
	return _Scheduler_binding(function(callback)
	{
		var reader = new FileReader();
		reader.addEventListener('loadend', function() {
			callback(_Scheduler_succeed(new DataView(reader.result)));
		});
		reader.readAsArrayBuffer(blob);
		return function() { reader.abort(); };
	});
}

function _File_toUrl(blob)
{
	return _Scheduler_binding(function(callback)
	{
		var reader = new FileReader();
		reader.addEventListener('loadend', function() {
			callback(_Scheduler_succeed(reader.result));
		});
		reader.readAsDataURL(blob);
		return function() { reader.abort(); };
	});
}

var $author$project$UI$Types$LinkClicked = function (a) {
	return {$: 'LinkClicked', a: a};
};
var $author$project$UI$Types$UrlChanged = function (a) {
	return {$: 'UrlChanged', a: a};
};
var $elm$core$List$cons = _List_cons;
var $elm$core$Elm$JsArray$foldr = _JsArray_foldr;
var $elm$core$Array$foldr = F3(
	function (func, baseCase, _v0) {
		var tree = _v0.c;
		var tail = _v0.d;
		var helper = F2(
			function (node, acc) {
				if (node.$ === 'SubTree') {
					var subTree = node.a;
					return A3($elm$core$Elm$JsArray$foldr, helper, acc, subTree);
				} else {
					var values = node.a;
					return A3($elm$core$Elm$JsArray$foldr, func, acc, values);
				}
			});
		return A3(
			$elm$core$Elm$JsArray$foldr,
			helper,
			A3($elm$core$Elm$JsArray$foldr, func, baseCase, tail),
			tree);
	});
var $elm$core$Array$toList = function (array) {
	return A3($elm$core$Array$foldr, $elm$core$List$cons, _List_Nil, array);
};
var $elm$core$Dict$foldr = F3(
	function (func, acc, t) {
		foldr:
		while (true) {
			if (t.$ === 'RBEmpty_elm_builtin') {
				return acc;
			} else {
				var key = t.b;
				var value = t.c;
				var left = t.d;
				var right = t.e;
				var $temp$func = func,
					$temp$acc = A3(
					func,
					key,
					value,
					A3($elm$core$Dict$foldr, func, acc, right)),
					$temp$t = left;
				func = $temp$func;
				acc = $temp$acc;
				t = $temp$t;
				continue foldr;
			}
		}
	});
var $elm$core$Dict$toList = function (dict) {
	return A3(
		$elm$core$Dict$foldr,
		F3(
			function (key, value, list) {
				return A2(
					$elm$core$List$cons,
					_Utils_Tuple2(key, value),
					list);
			}),
		_List_Nil,
		dict);
};
var $elm$core$Dict$keys = function (dict) {
	return A3(
		$elm$core$Dict$foldr,
		F3(
			function (key, value, keyList) {
				return A2($elm$core$List$cons, key, keyList);
			}),
		_List_Nil,
		dict);
};
var $elm$core$Set$toList = function (_v0) {
	var dict = _v0.a;
	return $elm$core$Dict$keys(dict);
};
var $elm$core$Basics$EQ = {$: 'EQ'};
var $elm$core$Basics$GT = {$: 'GT'};
var $elm$core$Basics$LT = {$: 'LT'};
var $elm$core$Result$Err = function (a) {
	return {$: 'Err', a: a};
};
var $elm$json$Json$Decode$Failure = F2(
	function (a, b) {
		return {$: 'Failure', a: a, b: b};
	});
var $elm$json$Json$Decode$Field = F2(
	function (a, b) {
		return {$: 'Field', a: a, b: b};
	});
var $elm$json$Json$Decode$Index = F2(
	function (a, b) {
		return {$: 'Index', a: a, b: b};
	});
var $elm$core$Result$Ok = function (a) {
	return {$: 'Ok', a: a};
};
var $elm$json$Json$Decode$OneOf = function (a) {
	return {$: 'OneOf', a: a};
};
var $elm$core$Basics$False = {$: 'False'};
var $elm$core$Basics$add = _Basics_add;
var $elm$core$Maybe$Just = function (a) {
	return {$: 'Just', a: a};
};
var $elm$core$Maybe$Nothing = {$: 'Nothing'};
var $elm$core$String$all = _String_all;
var $elm$core$Basics$and = _Basics_and;
var $elm$core$Basics$append = _Utils_append;
var $elm$json$Json$Encode$encode = _Json_encode;
var $elm$core$String$fromInt = _String_fromNumber;
var $elm$core$String$join = F2(
	function (sep, chunks) {
		return A2(
			_String_join,
			sep,
			_List_toArray(chunks));
	});
var $elm$core$String$split = F2(
	function (sep, string) {
		return _List_fromArray(
			A2(_String_split, sep, string));
	});
var $elm$json$Json$Decode$indent = function (str) {
	return A2(
		$elm$core$String$join,
		'\n    ',
		A2($elm$core$String$split, '\n', str));
};
var $elm$core$List$foldl = F3(
	function (func, acc, list) {
		foldl:
		while (true) {
			if (!list.b) {
				return acc;
			} else {
				var x = list.a;
				var xs = list.b;
				var $temp$func = func,
					$temp$acc = A2(func, x, acc),
					$temp$list = xs;
				func = $temp$func;
				acc = $temp$acc;
				list = $temp$list;
				continue foldl;
			}
		}
	});
var $elm$core$List$length = function (xs) {
	return A3(
		$elm$core$List$foldl,
		F2(
			function (_v0, i) {
				return i + 1;
			}),
		0,
		xs);
};
var $elm$core$List$map2 = _List_map2;
var $elm$core$Basics$le = _Utils_le;
var $elm$core$Basics$sub = _Basics_sub;
var $elm$core$List$rangeHelp = F3(
	function (lo, hi, list) {
		rangeHelp:
		while (true) {
			if (_Utils_cmp(lo, hi) < 1) {
				var $temp$lo = lo,
					$temp$hi = hi - 1,
					$temp$list = A2($elm$core$List$cons, hi, list);
				lo = $temp$lo;
				hi = $temp$hi;
				list = $temp$list;
				continue rangeHelp;
			} else {
				return list;
			}
		}
	});
var $elm$core$List$range = F2(
	function (lo, hi) {
		return A3($elm$core$List$rangeHelp, lo, hi, _List_Nil);
	});
var $elm$core$List$indexedMap = F2(
	function (f, xs) {
		return A3(
			$elm$core$List$map2,
			f,
			A2(
				$elm$core$List$range,
				0,
				$elm$core$List$length(xs) - 1),
			xs);
	});
var $elm$core$Char$toCode = _Char_toCode;
var $elm$core$Char$isLower = function (_char) {
	var code = $elm$core$Char$toCode(_char);
	return (97 <= code) && (code <= 122);
};
var $elm$core$Char$isUpper = function (_char) {
	var code = $elm$core$Char$toCode(_char);
	return (code <= 90) && (65 <= code);
};
var $elm$core$Basics$or = _Basics_or;
var $elm$core$Char$isAlpha = function (_char) {
	return $elm$core$Char$isLower(_char) || $elm$core$Char$isUpper(_char);
};
var $elm$core$Char$isDigit = function (_char) {
	var code = $elm$core$Char$toCode(_char);
	return (code <= 57) && (48 <= code);
};
var $elm$core$Char$isAlphaNum = function (_char) {
	return $elm$core$Char$isLower(_char) || ($elm$core$Char$isUpper(_char) || $elm$core$Char$isDigit(_char));
};
var $elm$core$List$reverse = function (list) {
	return A3($elm$core$List$foldl, $elm$core$List$cons, _List_Nil, list);
};
var $elm$core$String$uncons = _String_uncons;
var $elm$json$Json$Decode$errorOneOf = F2(
	function (i, error) {
		return '\n\n(' + ($elm$core$String$fromInt(i + 1) + (') ' + $elm$json$Json$Decode$indent(
			$elm$json$Json$Decode$errorToString(error))));
	});
var $elm$json$Json$Decode$errorToString = function (error) {
	return A2($elm$json$Json$Decode$errorToStringHelp, error, _List_Nil);
};
var $elm$json$Json$Decode$errorToStringHelp = F2(
	function (error, context) {
		errorToStringHelp:
		while (true) {
			switch (error.$) {
				case 'Field':
					var f = error.a;
					var err = error.b;
					var isSimple = function () {
						var _v1 = $elm$core$String$uncons(f);
						if (_v1.$ === 'Nothing') {
							return false;
						} else {
							var _v2 = _v1.a;
							var _char = _v2.a;
							var rest = _v2.b;
							return $elm$core$Char$isAlpha(_char) && A2($elm$core$String$all, $elm$core$Char$isAlphaNum, rest);
						}
					}();
					var fieldName = isSimple ? ('.' + f) : ('[\'' + (f + '\']'));
					var $temp$error = err,
						$temp$context = A2($elm$core$List$cons, fieldName, context);
					error = $temp$error;
					context = $temp$context;
					continue errorToStringHelp;
				case 'Index':
					var i = error.a;
					var err = error.b;
					var indexName = '[' + ($elm$core$String$fromInt(i) + ']');
					var $temp$error = err,
						$temp$context = A2($elm$core$List$cons, indexName, context);
					error = $temp$error;
					context = $temp$context;
					continue errorToStringHelp;
				case 'OneOf':
					var errors = error.a;
					if (!errors.b) {
						return 'Ran into a Json.Decode.oneOf with no possibilities' + function () {
							if (!context.b) {
								return '!';
							} else {
								return ' at json' + A2(
									$elm$core$String$join,
									'',
									$elm$core$List$reverse(context));
							}
						}();
					} else {
						if (!errors.b.b) {
							var err = errors.a;
							var $temp$error = err,
								$temp$context = context;
							error = $temp$error;
							context = $temp$context;
							continue errorToStringHelp;
						} else {
							var starter = function () {
								if (!context.b) {
									return 'Json.Decode.oneOf';
								} else {
									return 'The Json.Decode.oneOf at json' + A2(
										$elm$core$String$join,
										'',
										$elm$core$List$reverse(context));
								}
							}();
							var introduction = starter + (' failed in the following ' + ($elm$core$String$fromInt(
								$elm$core$List$length(errors)) + ' ways:'));
							return A2(
								$elm$core$String$join,
								'\n\n',
								A2(
									$elm$core$List$cons,
									introduction,
									A2($elm$core$List$indexedMap, $elm$json$Json$Decode$errorOneOf, errors)));
						}
					}
				default:
					var msg = error.a;
					var json = error.b;
					var introduction = function () {
						if (!context.b) {
							return 'Problem with the given value:\n\n';
						} else {
							return 'Problem with the value at json' + (A2(
								$elm$core$String$join,
								'',
								$elm$core$List$reverse(context)) + ':\n\n    ');
						}
					}();
					return introduction + ($elm$json$Json$Decode$indent(
						A2($elm$json$Json$Encode$encode, 4, json)) + ('\n\n' + msg));
			}
		}
	});
var $elm$core$Array$branchFactor = 32;
var $elm$core$Array$Array_elm_builtin = F4(
	function (a, b, c, d) {
		return {$: 'Array_elm_builtin', a: a, b: b, c: c, d: d};
	});
var $elm$core$Elm$JsArray$empty = _JsArray_empty;
var $elm$core$Basics$ceiling = _Basics_ceiling;
var $elm$core$Basics$fdiv = _Basics_fdiv;
var $elm$core$Basics$logBase = F2(
	function (base, number) {
		return _Basics_log(number) / _Basics_log(base);
	});
var $elm$core$Basics$toFloat = _Basics_toFloat;
var $elm$core$Array$shiftStep = $elm$core$Basics$ceiling(
	A2($elm$core$Basics$logBase, 2, $elm$core$Array$branchFactor));
var $elm$core$Array$empty = A4($elm$core$Array$Array_elm_builtin, 0, $elm$core$Array$shiftStep, $elm$core$Elm$JsArray$empty, $elm$core$Elm$JsArray$empty);
var $elm$core$Elm$JsArray$initialize = _JsArray_initialize;
var $elm$core$Array$Leaf = function (a) {
	return {$: 'Leaf', a: a};
};
var $elm$core$Basics$apL = F2(
	function (f, x) {
		return f(x);
	});
var $elm$core$Basics$apR = F2(
	function (x, f) {
		return f(x);
	});
var $elm$core$Basics$eq = _Utils_equal;
var $elm$core$Basics$floor = _Basics_floor;
var $elm$core$Elm$JsArray$length = _JsArray_length;
var $elm$core$Basics$gt = _Utils_gt;
var $elm$core$Basics$max = F2(
	function (x, y) {
		return (_Utils_cmp(x, y) > 0) ? x : y;
	});
var $elm$core$Basics$mul = _Basics_mul;
var $elm$core$Array$SubTree = function (a) {
	return {$: 'SubTree', a: a};
};
var $elm$core$Elm$JsArray$initializeFromList = _JsArray_initializeFromList;
var $elm$core$Array$compressNodes = F2(
	function (nodes, acc) {
		compressNodes:
		while (true) {
			var _v0 = A2($elm$core$Elm$JsArray$initializeFromList, $elm$core$Array$branchFactor, nodes);
			var node = _v0.a;
			var remainingNodes = _v0.b;
			var newAcc = A2(
				$elm$core$List$cons,
				$elm$core$Array$SubTree(node),
				acc);
			if (!remainingNodes.b) {
				return $elm$core$List$reverse(newAcc);
			} else {
				var $temp$nodes = remainingNodes,
					$temp$acc = newAcc;
				nodes = $temp$nodes;
				acc = $temp$acc;
				continue compressNodes;
			}
		}
	});
var $elm$core$Tuple$first = function (_v0) {
	var x = _v0.a;
	return x;
};
var $elm$core$Array$treeFromBuilder = F2(
	function (nodeList, nodeListSize) {
		treeFromBuilder:
		while (true) {
			var newNodeSize = $elm$core$Basics$ceiling(nodeListSize / $elm$core$Array$branchFactor);
			if (newNodeSize === 1) {
				return A2($elm$core$Elm$JsArray$initializeFromList, $elm$core$Array$branchFactor, nodeList).a;
			} else {
				var $temp$nodeList = A2($elm$core$Array$compressNodes, nodeList, _List_Nil),
					$temp$nodeListSize = newNodeSize;
				nodeList = $temp$nodeList;
				nodeListSize = $temp$nodeListSize;
				continue treeFromBuilder;
			}
		}
	});
var $elm$core$Array$builderToArray = F2(
	function (reverseNodeList, builder) {
		if (!builder.nodeListSize) {
			return A4(
				$elm$core$Array$Array_elm_builtin,
				$elm$core$Elm$JsArray$length(builder.tail),
				$elm$core$Array$shiftStep,
				$elm$core$Elm$JsArray$empty,
				builder.tail);
		} else {
			var treeLen = builder.nodeListSize * $elm$core$Array$branchFactor;
			var depth = $elm$core$Basics$floor(
				A2($elm$core$Basics$logBase, $elm$core$Array$branchFactor, treeLen - 1));
			var correctNodeList = reverseNodeList ? $elm$core$List$reverse(builder.nodeList) : builder.nodeList;
			var tree = A2($elm$core$Array$treeFromBuilder, correctNodeList, builder.nodeListSize);
			return A4(
				$elm$core$Array$Array_elm_builtin,
				$elm$core$Elm$JsArray$length(builder.tail) + treeLen,
				A2($elm$core$Basics$max, 5, depth * $elm$core$Array$shiftStep),
				tree,
				builder.tail);
		}
	});
var $elm$core$Basics$idiv = _Basics_idiv;
var $elm$core$Basics$lt = _Utils_lt;
var $elm$core$Array$initializeHelp = F5(
	function (fn, fromIndex, len, nodeList, tail) {
		initializeHelp:
		while (true) {
			if (fromIndex < 0) {
				return A2(
					$elm$core$Array$builderToArray,
					false,
					{nodeList: nodeList, nodeListSize: (len / $elm$core$Array$branchFactor) | 0, tail: tail});
			} else {
				var leaf = $elm$core$Array$Leaf(
					A3($elm$core$Elm$JsArray$initialize, $elm$core$Array$branchFactor, fromIndex, fn));
				var $temp$fn = fn,
					$temp$fromIndex = fromIndex - $elm$core$Array$branchFactor,
					$temp$len = len,
					$temp$nodeList = A2($elm$core$List$cons, leaf, nodeList),
					$temp$tail = tail;
				fn = $temp$fn;
				fromIndex = $temp$fromIndex;
				len = $temp$len;
				nodeList = $temp$nodeList;
				tail = $temp$tail;
				continue initializeHelp;
			}
		}
	});
var $elm$core$Basics$remainderBy = _Basics_remainderBy;
var $elm$core$Array$initialize = F2(
	function (len, fn) {
		if (len <= 0) {
			return $elm$core$Array$empty;
		} else {
			var tailLen = len % $elm$core$Array$branchFactor;
			var tail = A3($elm$core$Elm$JsArray$initialize, tailLen, len - tailLen, fn);
			var initialFromIndex = (len - tailLen) - $elm$core$Array$branchFactor;
			return A5($elm$core$Array$initializeHelp, fn, initialFromIndex, len, _List_Nil, tail);
		}
	});
var $elm$core$Basics$True = {$: 'True'};
var $elm$core$Result$isOk = function (result) {
	if (result.$ === 'Ok') {
		return true;
	} else {
		return false;
	}
};
var $elm$json$Json$Decode$andThen = _Json_andThen;
var $elm$json$Json$Decode$map = _Json_map1;
var $elm$json$Json$Decode$map2 = _Json_map2;
var $elm$json$Json$Decode$succeed = _Json_succeed;
var $elm$virtual_dom$VirtualDom$toHandlerInt = function (handler) {
	switch (handler.$) {
		case 'Normal':
			return 0;
		case 'MayStopPropagation':
			return 1;
		case 'MayPreventDefault':
			return 2;
		default:
			return 3;
	}
};
var $elm$browser$Browser$External = function (a) {
	return {$: 'External', a: a};
};
var $elm$browser$Browser$Internal = function (a) {
	return {$: 'Internal', a: a};
};
var $elm$core$Basics$identity = function (x) {
	return x;
};
var $elm$browser$Browser$Dom$NotFound = function (a) {
	return {$: 'NotFound', a: a};
};
var $elm$url$Url$Http = {$: 'Http'};
var $elm$url$Url$Https = {$: 'Https'};
var $elm$url$Url$Url = F6(
	function (protocol, host, port_, path, query, fragment) {
		return {fragment: fragment, host: host, path: path, port_: port_, protocol: protocol, query: query};
	});
var $elm$core$String$contains = _String_contains;
var $elm$core$String$length = _String_length;
var $elm$core$String$slice = _String_slice;
var $elm$core$String$dropLeft = F2(
	function (n, string) {
		return (n < 1) ? string : A3(
			$elm$core$String$slice,
			n,
			$elm$core$String$length(string),
			string);
	});
var $elm$core$String$indexes = _String_indexes;
var $elm$core$String$isEmpty = function (string) {
	return string === '';
};
var $elm$core$String$left = F2(
	function (n, string) {
		return (n < 1) ? '' : A3($elm$core$String$slice, 0, n, string);
	});
var $elm$core$String$toInt = _String_toInt;
var $elm$url$Url$chompBeforePath = F5(
	function (protocol, path, params, frag, str) {
		if ($elm$core$String$isEmpty(str) || A2($elm$core$String$contains, '@', str)) {
			return $elm$core$Maybe$Nothing;
		} else {
			var _v0 = A2($elm$core$String$indexes, ':', str);
			if (!_v0.b) {
				return $elm$core$Maybe$Just(
					A6($elm$url$Url$Url, protocol, str, $elm$core$Maybe$Nothing, path, params, frag));
			} else {
				if (!_v0.b.b) {
					var i = _v0.a;
					var _v1 = $elm$core$String$toInt(
						A2($elm$core$String$dropLeft, i + 1, str));
					if (_v1.$ === 'Nothing') {
						return $elm$core$Maybe$Nothing;
					} else {
						var port_ = _v1;
						return $elm$core$Maybe$Just(
							A6(
								$elm$url$Url$Url,
								protocol,
								A2($elm$core$String$left, i, str),
								port_,
								path,
								params,
								frag));
					}
				} else {
					return $elm$core$Maybe$Nothing;
				}
			}
		}
	});
var $elm$url$Url$chompBeforeQuery = F4(
	function (protocol, params, frag, str) {
		if ($elm$core$String$isEmpty(str)) {
			return $elm$core$Maybe$Nothing;
		} else {
			var _v0 = A2($elm$core$String$indexes, '/', str);
			if (!_v0.b) {
				return A5($elm$url$Url$chompBeforePath, protocol, '/', params, frag, str);
			} else {
				var i = _v0.a;
				return A5(
					$elm$url$Url$chompBeforePath,
					protocol,
					A2($elm$core$String$dropLeft, i, str),
					params,
					frag,
					A2($elm$core$String$left, i, str));
			}
		}
	});
var $elm$url$Url$chompBeforeFragment = F3(
	function (protocol, frag, str) {
		if ($elm$core$String$isEmpty(str)) {
			return $elm$core$Maybe$Nothing;
		} else {
			var _v0 = A2($elm$core$String$indexes, '?', str);
			if (!_v0.b) {
				return A4($elm$url$Url$chompBeforeQuery, protocol, $elm$core$Maybe$Nothing, frag, str);
			} else {
				var i = _v0.a;
				return A4(
					$elm$url$Url$chompBeforeQuery,
					protocol,
					$elm$core$Maybe$Just(
						A2($elm$core$String$dropLeft, i + 1, str)),
					frag,
					A2($elm$core$String$left, i, str));
			}
		}
	});
var $elm$url$Url$chompAfterProtocol = F2(
	function (protocol, str) {
		if ($elm$core$String$isEmpty(str)) {
			return $elm$core$Maybe$Nothing;
		} else {
			var _v0 = A2($elm$core$String$indexes, '#', str);
			if (!_v0.b) {
				return A3($elm$url$Url$chompBeforeFragment, protocol, $elm$core$Maybe$Nothing, str);
			} else {
				var i = _v0.a;
				return A3(
					$elm$url$Url$chompBeforeFragment,
					protocol,
					$elm$core$Maybe$Just(
						A2($elm$core$String$dropLeft, i + 1, str)),
					A2($elm$core$String$left, i, str));
			}
		}
	});
var $elm$core$String$startsWith = _String_startsWith;
var $elm$url$Url$fromString = function (str) {
	return A2($elm$core$String$startsWith, 'http://', str) ? A2(
		$elm$url$Url$chompAfterProtocol,
		$elm$url$Url$Http,
		A2($elm$core$String$dropLeft, 7, str)) : (A2($elm$core$String$startsWith, 'https://', str) ? A2(
		$elm$url$Url$chompAfterProtocol,
		$elm$url$Url$Https,
		A2($elm$core$String$dropLeft, 8, str)) : $elm$core$Maybe$Nothing);
};
var $elm$core$Basics$never = function (_v0) {
	never:
	while (true) {
		var nvr = _v0.a;
		var $temp$_v0 = nvr;
		_v0 = $temp$_v0;
		continue never;
	}
};
var $elm$core$Task$Perform = function (a) {
	return {$: 'Perform', a: a};
};
var $elm$core$Task$succeed = _Scheduler_succeed;
var $elm$core$Task$init = $elm$core$Task$succeed(_Utils_Tuple0);
var $elm$core$List$foldrHelper = F4(
	function (fn, acc, ctr, ls) {
		if (!ls.b) {
			return acc;
		} else {
			var a = ls.a;
			var r1 = ls.b;
			if (!r1.b) {
				return A2(fn, a, acc);
			} else {
				var b = r1.a;
				var r2 = r1.b;
				if (!r2.b) {
					return A2(
						fn,
						a,
						A2(fn, b, acc));
				} else {
					var c = r2.a;
					var r3 = r2.b;
					if (!r3.b) {
						return A2(
							fn,
							a,
							A2(
								fn,
								b,
								A2(fn, c, acc)));
					} else {
						var d = r3.a;
						var r4 = r3.b;
						var res = (ctr > 500) ? A3(
							$elm$core$List$foldl,
							fn,
							acc,
							$elm$core$List$reverse(r4)) : A4($elm$core$List$foldrHelper, fn, acc, ctr + 1, r4);
						return A2(
							fn,
							a,
							A2(
								fn,
								b,
								A2(
									fn,
									c,
									A2(fn, d, res))));
					}
				}
			}
		}
	});
var $elm$core$List$foldr = F3(
	function (fn, acc, ls) {
		return A4($elm$core$List$foldrHelper, fn, acc, 0, ls);
	});
var $elm$core$List$map = F2(
	function (f, xs) {
		return A3(
			$elm$core$List$foldr,
			F2(
				function (x, acc) {
					return A2(
						$elm$core$List$cons,
						f(x),
						acc);
				}),
			_List_Nil,
			xs);
	});
var $elm$core$Task$andThen = _Scheduler_andThen;
var $elm$core$Task$map = F2(
	function (func, taskA) {
		return A2(
			$elm$core$Task$andThen,
			function (a) {
				return $elm$core$Task$succeed(
					func(a));
			},
			taskA);
	});
var $elm$core$Task$map2 = F3(
	function (func, taskA, taskB) {
		return A2(
			$elm$core$Task$andThen,
			function (a) {
				return A2(
					$elm$core$Task$andThen,
					function (b) {
						return $elm$core$Task$succeed(
							A2(func, a, b));
					},
					taskB);
			},
			taskA);
	});
var $elm$core$Task$sequence = function (tasks) {
	return A3(
		$elm$core$List$foldr,
		$elm$core$Task$map2($elm$core$List$cons),
		$elm$core$Task$succeed(_List_Nil),
		tasks);
};
var $elm$core$Platform$sendToApp = _Platform_sendToApp;
var $elm$core$Task$spawnCmd = F2(
	function (router, _v0) {
		var task = _v0.a;
		return _Scheduler_spawn(
			A2(
				$elm$core$Task$andThen,
				$elm$core$Platform$sendToApp(router),
				task));
	});
var $elm$core$Task$onEffects = F3(
	function (router, commands, state) {
		return A2(
			$elm$core$Task$map,
			function (_v0) {
				return _Utils_Tuple0;
			},
			$elm$core$Task$sequence(
				A2(
					$elm$core$List$map,
					$elm$core$Task$spawnCmd(router),
					commands)));
	});
var $elm$core$Task$onSelfMsg = F3(
	function (_v0, _v1, _v2) {
		return $elm$core$Task$succeed(_Utils_Tuple0);
	});
var $elm$core$Task$cmdMap = F2(
	function (tagger, _v0) {
		var task = _v0.a;
		return $elm$core$Task$Perform(
			A2($elm$core$Task$map, tagger, task));
	});
_Platform_effectManagers['Task'] = _Platform_createManager($elm$core$Task$init, $elm$core$Task$onEffects, $elm$core$Task$onSelfMsg, $elm$core$Task$cmdMap);
var $elm$core$Task$command = _Platform_leaf('Task');
var $elm$core$Task$perform = F2(
	function (toMessage, task) {
		return $elm$core$Task$command(
			$elm$core$Task$Perform(
				A2($elm$core$Task$map, toMessage, task)));
	});
var $elm$browser$Browser$application = _Browser_application;
var $elm$json$Json$Decode$bool = _Json_decodeBool;
var $elm$json$Json$Decode$field = _Json_decodeField;
var $elm$json$Json$Decode$float = _Json_decodeFloat;
var $author$project$Common$Activated = {$: 'Activated'};
var $author$project$Tracks$Album = {$: 'Album'};
var $author$project$Tracks$Asc = {$: 'Asc'};
var $author$project$Tracks$Covers = {$: 'Covers'};
var $author$project$UI$Page$Index = {$: 'Index'};
var $author$project$Common$InstallingInitial = {$: 'InstallingInitial'};
var $author$project$UI$Types$SetCurrentTime = function (a) {
	return {$: 'SetCurrentTime', a: a};
};
var $author$project$UI$Types$SetCurrentTimeZone = function (a) {
	return {$: 'SetCurrentTimeZone', a: a};
};
var $author$project$UI$Types$SyncingMsg = function (a) {
	return {$: 'SyncingMsg', a: a};
};
var $elm_community$maybe_extra$Maybe$Extra$join = function (mx) {
	if (mx.$ === 'Just') {
		var x = mx.a;
		return x;
	} else {
		return $elm$core$Maybe$Nothing;
	}
};
var $elm$url$Url$Parser$State = F5(
	function (visited, unvisited, params, frag, value) {
		return {frag: frag, params: params, unvisited: unvisited, value: value, visited: visited};
	});
var $elm$url$Url$Parser$getFirstMatch = function (states) {
	getFirstMatch:
	while (true) {
		if (!states.b) {
			return $elm$core$Maybe$Nothing;
		} else {
			var state = states.a;
			var rest = states.b;
			var _v1 = state.unvisited;
			if (!_v1.b) {
				return $elm$core$Maybe$Just(state.value);
			} else {
				if ((_v1.a === '') && (!_v1.b.b)) {
					return $elm$core$Maybe$Just(state.value);
				} else {
					var $temp$states = rest;
					states = $temp$states;
					continue getFirstMatch;
				}
			}
		}
	}
};
var $elm$url$Url$Parser$removeFinalEmpty = function (segments) {
	if (!segments.b) {
		return _List_Nil;
	} else {
		if ((segments.a === '') && (!segments.b.b)) {
			return _List_Nil;
		} else {
			var segment = segments.a;
			var rest = segments.b;
			return A2(
				$elm$core$List$cons,
				segment,
				$elm$url$Url$Parser$removeFinalEmpty(rest));
		}
	}
};
var $elm$url$Url$Parser$preparePath = function (path) {
	var _v0 = A2($elm$core$String$split, '/', path);
	if (_v0.b && (_v0.a === '')) {
		var segments = _v0.b;
		return $elm$url$Url$Parser$removeFinalEmpty(segments);
	} else {
		var segments = _v0;
		return $elm$url$Url$Parser$removeFinalEmpty(segments);
	}
};
var $elm$url$Url$Parser$addToParametersHelp = F2(
	function (value, maybeList) {
		if (maybeList.$ === 'Nothing') {
			return $elm$core$Maybe$Just(
				_List_fromArray(
					[value]));
		} else {
			var list = maybeList.a;
			return $elm$core$Maybe$Just(
				A2($elm$core$List$cons, value, list));
		}
	});
var $elm$url$Url$percentDecode = _Url_percentDecode;
var $elm$core$Basics$compare = _Utils_compare;
var $elm$core$Dict$get = F2(
	function (targetKey, dict) {
		get:
		while (true) {
			if (dict.$ === 'RBEmpty_elm_builtin') {
				return $elm$core$Maybe$Nothing;
			} else {
				var key = dict.b;
				var value = dict.c;
				var left = dict.d;
				var right = dict.e;
				var _v1 = A2($elm$core$Basics$compare, targetKey, key);
				switch (_v1.$) {
					case 'LT':
						var $temp$targetKey = targetKey,
							$temp$dict = left;
						targetKey = $temp$targetKey;
						dict = $temp$dict;
						continue get;
					case 'EQ':
						return $elm$core$Maybe$Just(value);
					default:
						var $temp$targetKey = targetKey,
							$temp$dict = right;
						targetKey = $temp$targetKey;
						dict = $temp$dict;
						continue get;
				}
			}
		}
	});
var $elm$core$Dict$Black = {$: 'Black'};
var $elm$core$Dict$RBNode_elm_builtin = F5(
	function (a, b, c, d, e) {
		return {$: 'RBNode_elm_builtin', a: a, b: b, c: c, d: d, e: e};
	});
var $elm$core$Dict$RBEmpty_elm_builtin = {$: 'RBEmpty_elm_builtin'};
var $elm$core$Dict$Red = {$: 'Red'};
var $elm$core$Dict$balance = F5(
	function (color, key, value, left, right) {
		if ((right.$ === 'RBNode_elm_builtin') && (right.a.$ === 'Red')) {
			var _v1 = right.a;
			var rK = right.b;
			var rV = right.c;
			var rLeft = right.d;
			var rRight = right.e;
			if ((left.$ === 'RBNode_elm_builtin') && (left.a.$ === 'Red')) {
				var _v3 = left.a;
				var lK = left.b;
				var lV = left.c;
				var lLeft = left.d;
				var lRight = left.e;
				return A5(
					$elm$core$Dict$RBNode_elm_builtin,
					$elm$core$Dict$Red,
					key,
					value,
					A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Black, lK, lV, lLeft, lRight),
					A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Black, rK, rV, rLeft, rRight));
			} else {
				return A5(
					$elm$core$Dict$RBNode_elm_builtin,
					color,
					rK,
					rV,
					A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Red, key, value, left, rLeft),
					rRight);
			}
		} else {
			if ((((left.$ === 'RBNode_elm_builtin') && (left.a.$ === 'Red')) && (left.d.$ === 'RBNode_elm_builtin')) && (left.d.a.$ === 'Red')) {
				var _v5 = left.a;
				var lK = left.b;
				var lV = left.c;
				var _v6 = left.d;
				var _v7 = _v6.a;
				var llK = _v6.b;
				var llV = _v6.c;
				var llLeft = _v6.d;
				var llRight = _v6.e;
				var lRight = left.e;
				return A5(
					$elm$core$Dict$RBNode_elm_builtin,
					$elm$core$Dict$Red,
					lK,
					lV,
					A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Black, llK, llV, llLeft, llRight),
					A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Black, key, value, lRight, right));
			} else {
				return A5($elm$core$Dict$RBNode_elm_builtin, color, key, value, left, right);
			}
		}
	});
var $elm$core$Dict$insertHelp = F3(
	function (key, value, dict) {
		if (dict.$ === 'RBEmpty_elm_builtin') {
			return A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Red, key, value, $elm$core$Dict$RBEmpty_elm_builtin, $elm$core$Dict$RBEmpty_elm_builtin);
		} else {
			var nColor = dict.a;
			var nKey = dict.b;
			var nValue = dict.c;
			var nLeft = dict.d;
			var nRight = dict.e;
			var _v1 = A2($elm$core$Basics$compare, key, nKey);
			switch (_v1.$) {
				case 'LT':
					return A5(
						$elm$core$Dict$balance,
						nColor,
						nKey,
						nValue,
						A3($elm$core$Dict$insertHelp, key, value, nLeft),
						nRight);
				case 'EQ':
					return A5($elm$core$Dict$RBNode_elm_builtin, nColor, nKey, value, nLeft, nRight);
				default:
					return A5(
						$elm$core$Dict$balance,
						nColor,
						nKey,
						nValue,
						nLeft,
						A3($elm$core$Dict$insertHelp, key, value, nRight));
			}
		}
	});
var $elm$core$Dict$insert = F3(
	function (key, value, dict) {
		var _v0 = A3($elm$core$Dict$insertHelp, key, value, dict);
		if ((_v0.$ === 'RBNode_elm_builtin') && (_v0.a.$ === 'Red')) {
			var _v1 = _v0.a;
			var k = _v0.b;
			var v = _v0.c;
			var l = _v0.d;
			var r = _v0.e;
			return A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Black, k, v, l, r);
		} else {
			var x = _v0;
			return x;
		}
	});
var $elm$core$Dict$getMin = function (dict) {
	getMin:
	while (true) {
		if ((dict.$ === 'RBNode_elm_builtin') && (dict.d.$ === 'RBNode_elm_builtin')) {
			var left = dict.d;
			var $temp$dict = left;
			dict = $temp$dict;
			continue getMin;
		} else {
			return dict;
		}
	}
};
var $elm$core$Dict$moveRedLeft = function (dict) {
	if (((dict.$ === 'RBNode_elm_builtin') && (dict.d.$ === 'RBNode_elm_builtin')) && (dict.e.$ === 'RBNode_elm_builtin')) {
		if ((dict.e.d.$ === 'RBNode_elm_builtin') && (dict.e.d.a.$ === 'Red')) {
			var clr = dict.a;
			var k = dict.b;
			var v = dict.c;
			var _v1 = dict.d;
			var lClr = _v1.a;
			var lK = _v1.b;
			var lV = _v1.c;
			var lLeft = _v1.d;
			var lRight = _v1.e;
			var _v2 = dict.e;
			var rClr = _v2.a;
			var rK = _v2.b;
			var rV = _v2.c;
			var rLeft = _v2.d;
			var _v3 = rLeft.a;
			var rlK = rLeft.b;
			var rlV = rLeft.c;
			var rlL = rLeft.d;
			var rlR = rLeft.e;
			var rRight = _v2.e;
			return A5(
				$elm$core$Dict$RBNode_elm_builtin,
				$elm$core$Dict$Red,
				rlK,
				rlV,
				A5(
					$elm$core$Dict$RBNode_elm_builtin,
					$elm$core$Dict$Black,
					k,
					v,
					A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Red, lK, lV, lLeft, lRight),
					rlL),
				A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Black, rK, rV, rlR, rRight));
		} else {
			var clr = dict.a;
			var k = dict.b;
			var v = dict.c;
			var _v4 = dict.d;
			var lClr = _v4.a;
			var lK = _v4.b;
			var lV = _v4.c;
			var lLeft = _v4.d;
			var lRight = _v4.e;
			var _v5 = dict.e;
			var rClr = _v5.a;
			var rK = _v5.b;
			var rV = _v5.c;
			var rLeft = _v5.d;
			var rRight = _v5.e;
			if (clr.$ === 'Black') {
				return A5(
					$elm$core$Dict$RBNode_elm_builtin,
					$elm$core$Dict$Black,
					k,
					v,
					A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Red, lK, lV, lLeft, lRight),
					A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Red, rK, rV, rLeft, rRight));
			} else {
				return A5(
					$elm$core$Dict$RBNode_elm_builtin,
					$elm$core$Dict$Black,
					k,
					v,
					A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Red, lK, lV, lLeft, lRight),
					A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Red, rK, rV, rLeft, rRight));
			}
		}
	} else {
		return dict;
	}
};
var $elm$core$Dict$moveRedRight = function (dict) {
	if (((dict.$ === 'RBNode_elm_builtin') && (dict.d.$ === 'RBNode_elm_builtin')) && (dict.e.$ === 'RBNode_elm_builtin')) {
		if ((dict.d.d.$ === 'RBNode_elm_builtin') && (dict.d.d.a.$ === 'Red')) {
			var clr = dict.a;
			var k = dict.b;
			var v = dict.c;
			var _v1 = dict.d;
			var lClr = _v1.a;
			var lK = _v1.b;
			var lV = _v1.c;
			var _v2 = _v1.d;
			var _v3 = _v2.a;
			var llK = _v2.b;
			var llV = _v2.c;
			var llLeft = _v2.d;
			var llRight = _v2.e;
			var lRight = _v1.e;
			var _v4 = dict.e;
			var rClr = _v4.a;
			var rK = _v4.b;
			var rV = _v4.c;
			var rLeft = _v4.d;
			var rRight = _v4.e;
			return A5(
				$elm$core$Dict$RBNode_elm_builtin,
				$elm$core$Dict$Red,
				lK,
				lV,
				A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Black, llK, llV, llLeft, llRight),
				A5(
					$elm$core$Dict$RBNode_elm_builtin,
					$elm$core$Dict$Black,
					k,
					v,
					lRight,
					A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Red, rK, rV, rLeft, rRight)));
		} else {
			var clr = dict.a;
			var k = dict.b;
			var v = dict.c;
			var _v5 = dict.d;
			var lClr = _v5.a;
			var lK = _v5.b;
			var lV = _v5.c;
			var lLeft = _v5.d;
			var lRight = _v5.e;
			var _v6 = dict.e;
			var rClr = _v6.a;
			var rK = _v6.b;
			var rV = _v6.c;
			var rLeft = _v6.d;
			var rRight = _v6.e;
			if (clr.$ === 'Black') {
				return A5(
					$elm$core$Dict$RBNode_elm_builtin,
					$elm$core$Dict$Black,
					k,
					v,
					A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Red, lK, lV, lLeft, lRight),
					A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Red, rK, rV, rLeft, rRight));
			} else {
				return A5(
					$elm$core$Dict$RBNode_elm_builtin,
					$elm$core$Dict$Black,
					k,
					v,
					A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Red, lK, lV, lLeft, lRight),
					A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Red, rK, rV, rLeft, rRight));
			}
		}
	} else {
		return dict;
	}
};
var $elm$core$Dict$removeHelpPrepEQGT = F7(
	function (targetKey, dict, color, key, value, left, right) {
		if ((left.$ === 'RBNode_elm_builtin') && (left.a.$ === 'Red')) {
			var _v1 = left.a;
			var lK = left.b;
			var lV = left.c;
			var lLeft = left.d;
			var lRight = left.e;
			return A5(
				$elm$core$Dict$RBNode_elm_builtin,
				color,
				lK,
				lV,
				lLeft,
				A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Red, key, value, lRight, right));
		} else {
			_v2$2:
			while (true) {
				if ((right.$ === 'RBNode_elm_builtin') && (right.a.$ === 'Black')) {
					if (right.d.$ === 'RBNode_elm_builtin') {
						if (right.d.a.$ === 'Black') {
							var _v3 = right.a;
							var _v4 = right.d;
							var _v5 = _v4.a;
							return $elm$core$Dict$moveRedRight(dict);
						} else {
							break _v2$2;
						}
					} else {
						var _v6 = right.a;
						var _v7 = right.d;
						return $elm$core$Dict$moveRedRight(dict);
					}
				} else {
					break _v2$2;
				}
			}
			return dict;
		}
	});
var $elm$core$Dict$removeMin = function (dict) {
	if ((dict.$ === 'RBNode_elm_builtin') && (dict.d.$ === 'RBNode_elm_builtin')) {
		var color = dict.a;
		var key = dict.b;
		var value = dict.c;
		var left = dict.d;
		var lColor = left.a;
		var lLeft = left.d;
		var right = dict.e;
		if (lColor.$ === 'Black') {
			if ((lLeft.$ === 'RBNode_elm_builtin') && (lLeft.a.$ === 'Red')) {
				var _v3 = lLeft.a;
				return A5(
					$elm$core$Dict$RBNode_elm_builtin,
					color,
					key,
					value,
					$elm$core$Dict$removeMin(left),
					right);
			} else {
				var _v4 = $elm$core$Dict$moveRedLeft(dict);
				if (_v4.$ === 'RBNode_elm_builtin') {
					var nColor = _v4.a;
					var nKey = _v4.b;
					var nValue = _v4.c;
					var nLeft = _v4.d;
					var nRight = _v4.e;
					return A5(
						$elm$core$Dict$balance,
						nColor,
						nKey,
						nValue,
						$elm$core$Dict$removeMin(nLeft),
						nRight);
				} else {
					return $elm$core$Dict$RBEmpty_elm_builtin;
				}
			}
		} else {
			return A5(
				$elm$core$Dict$RBNode_elm_builtin,
				color,
				key,
				value,
				$elm$core$Dict$removeMin(left),
				right);
		}
	} else {
		return $elm$core$Dict$RBEmpty_elm_builtin;
	}
};
var $elm$core$Dict$removeHelp = F2(
	function (targetKey, dict) {
		if (dict.$ === 'RBEmpty_elm_builtin') {
			return $elm$core$Dict$RBEmpty_elm_builtin;
		} else {
			var color = dict.a;
			var key = dict.b;
			var value = dict.c;
			var left = dict.d;
			var right = dict.e;
			if (_Utils_cmp(targetKey, key) < 0) {
				if ((left.$ === 'RBNode_elm_builtin') && (left.a.$ === 'Black')) {
					var _v4 = left.a;
					var lLeft = left.d;
					if ((lLeft.$ === 'RBNode_elm_builtin') && (lLeft.a.$ === 'Red')) {
						var _v6 = lLeft.a;
						return A5(
							$elm$core$Dict$RBNode_elm_builtin,
							color,
							key,
							value,
							A2($elm$core$Dict$removeHelp, targetKey, left),
							right);
					} else {
						var _v7 = $elm$core$Dict$moveRedLeft(dict);
						if (_v7.$ === 'RBNode_elm_builtin') {
							var nColor = _v7.a;
							var nKey = _v7.b;
							var nValue = _v7.c;
							var nLeft = _v7.d;
							var nRight = _v7.e;
							return A5(
								$elm$core$Dict$balance,
								nColor,
								nKey,
								nValue,
								A2($elm$core$Dict$removeHelp, targetKey, nLeft),
								nRight);
						} else {
							return $elm$core$Dict$RBEmpty_elm_builtin;
						}
					}
				} else {
					return A5(
						$elm$core$Dict$RBNode_elm_builtin,
						color,
						key,
						value,
						A2($elm$core$Dict$removeHelp, targetKey, left),
						right);
				}
			} else {
				return A2(
					$elm$core$Dict$removeHelpEQGT,
					targetKey,
					A7($elm$core$Dict$removeHelpPrepEQGT, targetKey, dict, color, key, value, left, right));
			}
		}
	});
var $elm$core$Dict$removeHelpEQGT = F2(
	function (targetKey, dict) {
		if (dict.$ === 'RBNode_elm_builtin') {
			var color = dict.a;
			var key = dict.b;
			var value = dict.c;
			var left = dict.d;
			var right = dict.e;
			if (_Utils_eq(targetKey, key)) {
				var _v1 = $elm$core$Dict$getMin(right);
				if (_v1.$ === 'RBNode_elm_builtin') {
					var minKey = _v1.b;
					var minValue = _v1.c;
					return A5(
						$elm$core$Dict$balance,
						color,
						minKey,
						minValue,
						left,
						$elm$core$Dict$removeMin(right));
				} else {
					return $elm$core$Dict$RBEmpty_elm_builtin;
				}
			} else {
				return A5(
					$elm$core$Dict$balance,
					color,
					key,
					value,
					left,
					A2($elm$core$Dict$removeHelp, targetKey, right));
			}
		} else {
			return $elm$core$Dict$RBEmpty_elm_builtin;
		}
	});
var $elm$core$Dict$remove = F2(
	function (key, dict) {
		var _v0 = A2($elm$core$Dict$removeHelp, key, dict);
		if ((_v0.$ === 'RBNode_elm_builtin') && (_v0.a.$ === 'Red')) {
			var _v1 = _v0.a;
			var k = _v0.b;
			var v = _v0.c;
			var l = _v0.d;
			var r = _v0.e;
			return A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Black, k, v, l, r);
		} else {
			var x = _v0;
			return x;
		}
	});
var $elm$core$Dict$update = F3(
	function (targetKey, alter, dictionary) {
		var _v0 = alter(
			A2($elm$core$Dict$get, targetKey, dictionary));
		if (_v0.$ === 'Just') {
			var value = _v0.a;
			return A3($elm$core$Dict$insert, targetKey, value, dictionary);
		} else {
			return A2($elm$core$Dict$remove, targetKey, dictionary);
		}
	});
var $elm$url$Url$Parser$addParam = F2(
	function (segment, dict) {
		var _v0 = A2($elm$core$String$split, '=', segment);
		if ((_v0.b && _v0.b.b) && (!_v0.b.b.b)) {
			var rawKey = _v0.a;
			var _v1 = _v0.b;
			var rawValue = _v1.a;
			var _v2 = $elm$url$Url$percentDecode(rawKey);
			if (_v2.$ === 'Nothing') {
				return dict;
			} else {
				var key = _v2.a;
				var _v3 = $elm$url$Url$percentDecode(rawValue);
				if (_v3.$ === 'Nothing') {
					return dict;
				} else {
					var value = _v3.a;
					return A3(
						$elm$core$Dict$update,
						key,
						$elm$url$Url$Parser$addToParametersHelp(value),
						dict);
				}
			}
		} else {
			return dict;
		}
	});
var $elm$core$Dict$empty = $elm$core$Dict$RBEmpty_elm_builtin;
var $elm$url$Url$Parser$prepareQuery = function (maybeQuery) {
	if (maybeQuery.$ === 'Nothing') {
		return $elm$core$Dict$empty;
	} else {
		var qry = maybeQuery.a;
		return A3(
			$elm$core$List$foldr,
			$elm$url$Url$Parser$addParam,
			$elm$core$Dict$empty,
			A2($elm$core$String$split, '&', qry));
	}
};
var $elm$url$Url$Parser$parse = F2(
	function (_v0, url) {
		var parser = _v0.a;
		return $elm$url$Url$Parser$getFirstMatch(
			parser(
				A5(
					$elm$url$Url$Parser$State,
					_List_Nil,
					$elm$url$Url$Parser$preparePath(url.path),
					$elm$url$Url$Parser$prepareQuery(url.query),
					url.fragment,
					$elm$core$Basics$identity)));
	});
var $elm$url$Url$Parser$Parser = function (a) {
	return {$: 'Parser', a: a};
};
var $elm$url$Url$Parser$query = function (_v0) {
	var queryParser = _v0.a;
	return $elm$url$Url$Parser$Parser(
		function (_v1) {
			var visited = _v1.visited;
			var unvisited = _v1.unvisited;
			var params = _v1.params;
			var frag = _v1.frag;
			var value = _v1.value;
			return _List_fromArray(
				[
					A5(
					$elm$url$Url$Parser$State,
					visited,
					unvisited,
					params,
					frag,
					value(
						queryParser(params)))
				]);
		});
};
var $elm$url$Url$Parser$Internal$Parser = function (a) {
	return {$: 'Parser', a: a};
};
var $elm$core$Maybe$withDefault = F2(
	function (_default, maybe) {
		if (maybe.$ === 'Just') {
			var value = maybe.a;
			return value;
		} else {
			return _default;
		}
	});
var $elm$url$Url$Parser$Query$custom = F2(
	function (key, func) {
		return $elm$url$Url$Parser$Internal$Parser(
			function (dict) {
				return func(
					A2(
						$elm$core$Maybe$withDefault,
						_List_Nil,
						A2($elm$core$Dict$get, key, dict)));
			});
	});
var $elm$url$Url$Parser$Query$string = function (key) {
	return A2(
		$elm$url$Url$Parser$Query$custom,
		key,
		function (stringList) {
			if (stringList.b && (!stringList.b.b)) {
				var str = stringList.a;
				return $elm$core$Maybe$Just(str);
			} else {
				return $elm$core$Maybe$Nothing;
			}
		});
};
var $author$project$Url$Ext$extractQueryParam = F2(
	function (key, url) {
		return $elm_community$maybe_extra$Maybe$Extra$join(
			A2(
				$elm$url$Url$Parser$parse,
				$elm$url$Url$Parser$query(
					$elm$url$Url$Parser$Query$string(key)),
				_Utils_update(
					url,
					{path: ''})));
	});
var $elm$core$Maybe$map = F2(
	function (f, maybe) {
		if (maybe.$ === 'Just') {
			var value = maybe.a;
			return $elm$core$Maybe$Just(
				f(value));
		} else {
			return $elm$core$Maybe$Nothing;
		}
	});
var $author$project$Url$Ext$action = function (url) {
	return A2(
		$elm$core$Maybe$withDefault,
		_List_Nil,
		A2(
			$elm$core$Maybe$map,
			$elm$core$String$split('/'),
			A2($author$project$Url$Ext$extractQueryParam, 'action', url)));
};
var $elm$core$Platform$Cmd$batch = _Platform_batch;
var $Fresheyeball$elm_return$Return$command = F2(
	function (cmd, _v0) {
		var model = _v0.a;
		var cmd_ = _v0.b;
		return _Utils_Tuple2(
			model,
			$elm$core$Platform$Cmd$batch(
				_List_fromArray(
					[cmd, cmd_])));
	});
var $Gizra$elm_debouncer$Debouncer$Internal$Config = function (a) {
	return {$: 'Config', a: a};
};
var $Gizra$elm_debouncer$Debouncer$Internal$lastInput = F2(
	function (i, o) {
		return $elm$core$Maybe$Just(i);
	});
var $Gizra$elm_debouncer$Debouncer$Internal$manual = $Gizra$elm_debouncer$Debouncer$Internal$Config(
	{accumulator: $Gizra$elm_debouncer$Debouncer$Internal$lastInput, emitWhenUnsettled: $elm$core$Maybe$Nothing, emitWhileUnsettled: $elm$core$Maybe$Nothing, settleWhenQuietFor: $elm$core$Maybe$Nothing});
var $Gizra$elm_debouncer$Debouncer$Basic$manual = $Gizra$elm_debouncer$Debouncer$Internal$manual;
var $Gizra$elm_debouncer$Debouncer$Internal$settleWhenQuietFor = F2(
	function (time, _v0) {
		var config = _v0.a;
		return $Gizra$elm_debouncer$Debouncer$Internal$Config(
			_Utils_update(
				config,
				{settleWhenQuietFor: time}));
	});
var $Gizra$elm_debouncer$Debouncer$Basic$settleWhenQuietFor = $Gizra$elm_debouncer$Debouncer$Internal$settleWhenQuietFor;
var $Gizra$elm_debouncer$Debouncer$Basic$debounce = function (interval) {
	return A2(
		$Gizra$elm_debouncer$Debouncer$Basic$settleWhenQuietFor,
		$elm$core$Maybe$Just(interval),
		$Gizra$elm_debouncer$Debouncer$Basic$manual);
};
var $author$project$Equalizer$defaultSettings = {high: 0, low: 0, mid: 0, volume: 0.5};
var $author$project$Tracks$emptyCollection = {arranged: _List_Nil, harvested: _List_Nil, identified: _List_Nil, scrollContext: '', untouched: _List_Nil};
var $elm$core$Basics$round = _Basics_round;
var $Gizra$elm_debouncer$Debouncer$Internal$fromSeconds = function (s) {
	return $elm$core$Basics$round(s * 1000);
};
var $Gizra$elm_debouncer$Debouncer$Basic$fromSeconds = $Gizra$elm_debouncer$Debouncer$Internal$fromSeconds;
var $author$project$UI$Settings$Page$Data = {$: 'Data'};
var $author$project$Sources$Dropbox = {$: 'Dropbox'};
var $author$project$UI$Playlists$Page$Edit = function (a) {
	return {$: 'Edit', a: a};
};
var $author$project$UI$Sources$Page$Edit = function (a) {
	return {$: 'Edit', a: a};
};
var $author$project$Sources$Google = {$: 'Google'};
var $author$project$UI$Queue$Page$History = {$: 'History'};
var $author$project$UI$Playlists$Page$Index = {$: 'Index'};
var $author$project$UI$Queue$Page$Index = {$: 'Index'};
var $author$project$UI$Settings$Page$Index = {$: 'Index'};
var $author$project$UI$Sources$Page$Index = {$: 'Index'};
var $author$project$UI$Playlists$Page$New = {$: 'New'};
var $author$project$UI$Sources$Page$New = {$: 'New'};
var $author$project$UI$Sources$Page$NewOnboarding = {$: 'NewOnboarding'};
var $author$project$UI$Sources$Page$NewThroughRedirect = F2(
	function (a, b) {
		return {$: 'NewThroughRedirect', a: a, b: b};
	});
var $author$project$UI$Page$Playlists = function (a) {
	return {$: 'Playlists', a: a};
};
var $author$project$UI$Page$Queue = function (a) {
	return {$: 'Queue', a: a};
};
var $author$project$UI$Sources$Page$Rename = function (a) {
	return {$: 'Rename', a: a};
};
var $author$project$UI$Page$Settings = function (a) {
	return {$: 'Settings', a: a};
};
var $author$project$UI$Page$Sources = function (a) {
	return {$: 'Sources', a: a};
};
var $author$project$UI$Settings$Page$Sync = {$: 'Sync'};
var $elm$core$Basics$composeL = F3(
	function (g, f, x) {
		return g(
			f(x));
	});
var $elm$url$Url$Parser$mapState = F2(
	function (func, _v0) {
		var visited = _v0.visited;
		var unvisited = _v0.unvisited;
		var params = _v0.params;
		var frag = _v0.frag;
		var value = _v0.value;
		return A5(
			$elm$url$Url$Parser$State,
			visited,
			unvisited,
			params,
			frag,
			func(value));
	});
var $elm$url$Url$Parser$map = F2(
	function (subValue, _v0) {
		var parseArg = _v0.a;
		return $elm$url$Url$Parser$Parser(
			function (_v1) {
				var visited = _v1.visited;
				var unvisited = _v1.unvisited;
				var params = _v1.params;
				var frag = _v1.frag;
				var value = _v1.value;
				return A2(
					$elm$core$List$map,
					$elm$url$Url$Parser$mapState(value),
					parseArg(
						A5($elm$url$Url$Parser$State, visited, unvisited, params, frag, subValue)));
			});
	});
var $elm$core$List$append = F2(
	function (xs, ys) {
		if (!ys.b) {
			return xs;
		} else {
			return A3($elm$core$List$foldr, $elm$core$List$cons, ys, xs);
		}
	});
var $elm$core$List$concat = function (lists) {
	return A3($elm$core$List$foldr, $elm$core$List$append, _List_Nil, lists);
};
var $elm$core$List$concatMap = F2(
	function (f, list) {
		return $elm$core$List$concat(
			A2($elm$core$List$map, f, list));
	});
var $elm$url$Url$Parser$oneOf = function (parsers) {
	return $elm$url$Url$Parser$Parser(
		function (state) {
			return A2(
				$elm$core$List$concatMap,
				function (_v0) {
					var parser = _v0.a;
					return parser(state);
				},
				parsers);
		});
};
var $elm$url$Url$Parser$slash = F2(
	function (_v0, _v1) {
		var parseBefore = _v0.a;
		var parseAfter = _v1.a;
		return $elm$url$Url$Parser$Parser(
			function (state) {
				return A2(
					$elm$core$List$concatMap,
					parseAfter,
					parseBefore(state));
			});
	});
var $elm$url$Url$Parser$questionMark = F2(
	function (parser, queryParser) {
		return A2(
			$elm$url$Url$Parser$slash,
			parser,
			$elm$url$Url$Parser$query(queryParser));
	});
var $elm$url$Url$Parser$s = function (str) {
	return $elm$url$Url$Parser$Parser(
		function (_v0) {
			var visited = _v0.visited;
			var unvisited = _v0.unvisited;
			var params = _v0.params;
			var frag = _v0.frag;
			var value = _v0.value;
			if (!unvisited.b) {
				return _List_Nil;
			} else {
				var next = unvisited.a;
				var rest = unvisited.b;
				return _Utils_eq(next, str) ? _List_fromArray(
					[
						A5(
						$elm$url$Url$Parser$State,
						A2($elm$core$List$cons, next, visited),
						rest,
						params,
						frag,
						value)
					]) : _List_Nil;
			}
		});
};
var $elm$url$Url$Parser$custom = F2(
	function (tipe, stringToSomething) {
		return $elm$url$Url$Parser$Parser(
			function (_v0) {
				var visited = _v0.visited;
				var unvisited = _v0.unvisited;
				var params = _v0.params;
				var frag = _v0.frag;
				var value = _v0.value;
				if (!unvisited.b) {
					return _List_Nil;
				} else {
					var next = unvisited.a;
					var rest = unvisited.b;
					var _v2 = stringToSomething(next);
					if (_v2.$ === 'Just') {
						var nextValue = _v2.a;
						return _List_fromArray(
							[
								A5(
								$elm$url$Url$Parser$State,
								A2($elm$core$List$cons, next, visited),
								rest,
								params,
								frag,
								value(nextValue))
							]);
					} else {
						return _List_Nil;
					}
				}
			});
	});
var $elm$url$Url$Parser$string = A2($elm$url$Url$Parser$custom, 'STRING', $elm$core$Maybe$Just);
var $elm$url$Url$Parser$top = $elm$url$Url$Parser$Parser(
	function (state) {
		return _List_fromArray(
			[state]);
	});
var $author$project$UI$Page$route = $elm$url$Url$Parser$oneOf(
	_List_fromArray(
		[
			A2($elm$url$Url$Parser$map, $author$project$UI$Page$Index, $elm$url$Url$Parser$top),
			A2(
			$elm$url$Url$Parser$map,
			$author$project$UI$Page$Playlists($author$project$UI$Playlists$Page$Index),
			$elm$url$Url$Parser$s('playlists')),
			A2(
			$elm$url$Url$Parser$map,
			A2($elm$core$Basics$composeL, $author$project$UI$Page$Playlists, $author$project$UI$Playlists$Page$Edit),
			A2(
				$elm$url$Url$Parser$slash,
				$elm$url$Url$Parser$s('playlists'),
				A2(
					$elm$url$Url$Parser$slash,
					$elm$url$Url$Parser$s('edit'),
					$elm$url$Url$Parser$string))),
			A2(
			$elm$url$Url$Parser$map,
			$author$project$UI$Page$Playlists($author$project$UI$Playlists$Page$New),
			A2(
				$elm$url$Url$Parser$slash,
				$elm$url$Url$Parser$s('playlists'),
				$elm$url$Url$Parser$s('new'))),
			A2(
			$elm$url$Url$Parser$map,
			$author$project$UI$Page$Queue($author$project$UI$Queue$Page$Index),
			$elm$url$Url$Parser$s('queue')),
			A2(
			$elm$url$Url$Parser$map,
			$author$project$UI$Page$Queue($author$project$UI$Queue$Page$History),
			A2(
				$elm$url$Url$Parser$slash,
				$elm$url$Url$Parser$s('queue'),
				$elm$url$Url$Parser$s('history'))),
			A2(
			$elm$url$Url$Parser$map,
			$author$project$UI$Page$Settings($author$project$UI$Settings$Page$Data),
			A2(
				$elm$url$Url$Parser$slash,
				$elm$url$Url$Parser$s('settings'),
				$elm$url$Url$Parser$s('data'))),
			A2(
			$elm$url$Url$Parser$map,
			$author$project$UI$Page$Settings($author$project$UI$Settings$Page$Sync),
			A2(
				$elm$url$Url$Parser$slash,
				$elm$url$Url$Parser$s('settings'),
				$elm$url$Url$Parser$s('sync'))),
			A2(
			$elm$url$Url$Parser$map,
			$author$project$UI$Page$Settings($author$project$UI$Settings$Page$Index),
			$elm$url$Url$Parser$s('settings')),
			A2(
			$elm$url$Url$Parser$map,
			$author$project$UI$Page$Sources($author$project$UI$Sources$Page$Index),
			$elm$url$Url$Parser$s('sources')),
			A2(
			$elm$url$Url$Parser$map,
			A2($elm$core$Basics$composeL, $author$project$UI$Page$Sources, $author$project$UI$Sources$Page$Edit),
			A2(
				$elm$url$Url$Parser$slash,
				$elm$url$Url$Parser$s('sources'),
				A2(
					$elm$url$Url$Parser$slash,
					$elm$url$Url$Parser$s('edit'),
					$elm$url$Url$Parser$string))),
			A2(
			$elm$url$Url$Parser$map,
			$author$project$UI$Page$Sources($author$project$UI$Sources$Page$New),
			A2(
				$elm$url$Url$Parser$slash,
				$elm$url$Url$Parser$s('sources'),
				$elm$url$Url$Parser$s('new'))),
			A2(
			$elm$url$Url$Parser$map,
			$author$project$UI$Page$Sources($author$project$UI$Sources$Page$NewOnboarding),
			A2(
				$elm$url$Url$Parser$slash,
				$elm$url$Url$Parser$s('sources'),
				$elm$url$Url$Parser$s('welcome'))),
			A2(
			$elm$url$Url$Parser$map,
			A2($elm$core$Basics$composeL, $author$project$UI$Page$Sources, $author$project$UI$Sources$Page$Rename),
			A2(
				$elm$url$Url$Parser$slash,
				$elm$url$Url$Parser$s('sources'),
				A2(
					$elm$url$Url$Parser$slash,
					$elm$url$Url$Parser$s('rename'),
					$elm$url$Url$Parser$string))),
			A2(
			$elm$url$Url$Parser$map,
			F2(
				function (token, state) {
					return $author$project$UI$Page$Sources(
						A2(
							$author$project$UI$Sources$Page$NewThroughRedirect,
							$author$project$Sources$Dropbox,
							{codeOrToken: token, state: state}));
				}),
			A2(
				$elm$url$Url$Parser$slash,
				$elm$url$Url$Parser$s('sources'),
				A2(
					$elm$url$Url$Parser$slash,
					$elm$url$Url$Parser$s('new'),
					A2(
						$elm$url$Url$Parser$questionMark,
						A2(
							$elm$url$Url$Parser$questionMark,
							$elm$url$Url$Parser$s('dropbox'),
							$elm$url$Url$Parser$Query$string('access_token')),
						$elm$url$Url$Parser$Query$string('state'))))),
			A2(
			$elm$url$Url$Parser$map,
			F2(
				function (code, state) {
					return $author$project$UI$Page$Sources(
						A2(
							$author$project$UI$Sources$Page$NewThroughRedirect,
							$author$project$Sources$Google,
							{codeOrToken: code, state: state}));
				}),
			A2(
				$elm$url$Url$Parser$slash,
				$elm$url$Url$Parser$s('sources'),
				A2(
					$elm$url$Url$Parser$slash,
					$elm$url$Url$Parser$s('new'),
					A2(
						$elm$url$Url$Parser$questionMark,
						A2(
							$elm$url$Url$Parser$questionMark,
							$elm$url$Url$Parser$s('google'),
							$elm$url$Url$Parser$Query$string('code')),
						$elm$url$Url$Parser$Query$string('state')))))
		]));
var $author$project$UI$Page$fromUrl = $elm$url$Url$Parser$parse($author$project$UI$Page$route);
var $elm$time$Time$Name = function (a) {
	return {$: 'Name', a: a};
};
var $elm$time$Time$Offset = function (a) {
	return {$: 'Offset', a: a};
};
var $elm$time$Time$Zone = F2(
	function (a, b) {
		return {$: 'Zone', a: a, b: b};
	});
var $elm$time$Time$customZone = $elm$time$Time$Zone;
var $elm$time$Time$here = _Time_here(_Utils_Tuple0);
var $FabienHenon$elm_infinite_list_view$InfiniteList$Model = function (a) {
	return {$: 'Model', a: a};
};
var $FabienHenon$elm_infinite_list_view$InfiniteList$init = $FabienHenon$elm_infinite_list_view$InfiniteList$Model(0);
var $author$project$UI$Syncing$Types$ExchangeDropboxAuthCode = function (a) {
	return {$: 'ExchangeDropboxAuthCode', a: a};
};
var $elm$core$String$append = _String_append;
var $author$project$User$Layer$Methods$Dropbox$clientId = 'te0c9pbeii8f8bw';
var $author$project$User$Layer$Methods$Dropbox$clientSecret = 'kxmlfdsw8k9e0ot';
var $elm$http$Http$BadStatus_ = F2(
	function (a, b) {
		return {$: 'BadStatus_', a: a, b: b};
	});
var $elm$http$Http$BadUrl_ = function (a) {
	return {$: 'BadUrl_', a: a};
};
var $elm$http$Http$GoodStatus_ = F2(
	function (a, b) {
		return {$: 'GoodStatus_', a: a, b: b};
	});
var $elm$http$Http$NetworkError_ = {$: 'NetworkError_'};
var $elm$http$Http$Receiving = function (a) {
	return {$: 'Receiving', a: a};
};
var $elm$http$Http$Sending = function (a) {
	return {$: 'Sending', a: a};
};
var $elm$http$Http$Timeout_ = {$: 'Timeout_'};
var $elm$core$Maybe$isJust = function (maybe) {
	if (maybe.$ === 'Just') {
		return true;
	} else {
		return false;
	}
};
var $elm$core$Platform$sendToSelf = _Platform_sendToSelf;
var $elm$http$Http$emptyBody = _Http_emptyBody;
var $elm$json$Json$Decode$decodeString = _Json_runOnString;
var $elm$core$Basics$composeR = F3(
	function (f, g, x) {
		return g(
			f(x));
	});
var $elm$http$Http$expectStringResponse = F2(
	function (toMsg, toResult) {
		return A3(
			_Http_expect,
			'',
			$elm$core$Basics$identity,
			A2($elm$core$Basics$composeR, toResult, toMsg));
	});
var $elm$core$Result$mapError = F2(
	function (f, result) {
		if (result.$ === 'Ok') {
			var v = result.a;
			return $elm$core$Result$Ok(v);
		} else {
			var e = result.a;
			return $elm$core$Result$Err(
				f(e));
		}
	});
var $elm$http$Http$BadBody = function (a) {
	return {$: 'BadBody', a: a};
};
var $elm$http$Http$BadStatus = function (a) {
	return {$: 'BadStatus', a: a};
};
var $elm$http$Http$BadUrl = function (a) {
	return {$: 'BadUrl', a: a};
};
var $elm$http$Http$NetworkError = {$: 'NetworkError'};
var $elm$http$Http$Timeout = {$: 'Timeout'};
var $elm$http$Http$resolve = F2(
	function (toResult, response) {
		switch (response.$) {
			case 'BadUrl_':
				var url = response.a;
				return $elm$core$Result$Err(
					$elm$http$Http$BadUrl(url));
			case 'Timeout_':
				return $elm$core$Result$Err($elm$http$Http$Timeout);
			case 'NetworkError_':
				return $elm$core$Result$Err($elm$http$Http$NetworkError);
			case 'BadStatus_':
				var metadata = response.a;
				return $elm$core$Result$Err(
					$elm$http$Http$BadStatus(metadata.statusCode));
			default:
				var body = response.b;
				return A2(
					$elm$core$Result$mapError,
					$elm$http$Http$BadBody,
					toResult(body));
		}
	});
var $elm$http$Http$expectJson = F2(
	function (toMsg, decoder) {
		return A2(
			$elm$http$Http$expectStringResponse,
			toMsg,
			$elm$http$Http$resolve(
				function (string) {
					return A2(
						$elm$core$Result$mapError,
						$elm$json$Json$Decode$errorToString,
						A2($elm$json$Json$Decode$decodeString, decoder, string));
				}));
	});
var $elm$http$Http$Request = function (a) {
	return {$: 'Request', a: a};
};
var $elm$http$Http$State = F2(
	function (reqs, subs) {
		return {reqs: reqs, subs: subs};
	});
var $elm$http$Http$init = $elm$core$Task$succeed(
	A2($elm$http$Http$State, $elm$core$Dict$empty, _List_Nil));
var $elm$core$Process$kill = _Scheduler_kill;
var $elm$core$Process$spawn = _Scheduler_spawn;
var $elm$http$Http$updateReqs = F3(
	function (router, cmds, reqs) {
		updateReqs:
		while (true) {
			if (!cmds.b) {
				return $elm$core$Task$succeed(reqs);
			} else {
				var cmd = cmds.a;
				var otherCmds = cmds.b;
				if (cmd.$ === 'Cancel') {
					var tracker = cmd.a;
					var _v2 = A2($elm$core$Dict$get, tracker, reqs);
					if (_v2.$ === 'Nothing') {
						var $temp$router = router,
							$temp$cmds = otherCmds,
							$temp$reqs = reqs;
						router = $temp$router;
						cmds = $temp$cmds;
						reqs = $temp$reqs;
						continue updateReqs;
					} else {
						var pid = _v2.a;
						return A2(
							$elm$core$Task$andThen,
							function (_v3) {
								return A3(
									$elm$http$Http$updateReqs,
									router,
									otherCmds,
									A2($elm$core$Dict$remove, tracker, reqs));
							},
							$elm$core$Process$kill(pid));
					}
				} else {
					var req = cmd.a;
					return A2(
						$elm$core$Task$andThen,
						function (pid) {
							var _v4 = req.tracker;
							if (_v4.$ === 'Nothing') {
								return A3($elm$http$Http$updateReqs, router, otherCmds, reqs);
							} else {
								var tracker = _v4.a;
								return A3(
									$elm$http$Http$updateReqs,
									router,
									otherCmds,
									A3($elm$core$Dict$insert, tracker, pid, reqs));
							}
						},
						$elm$core$Process$spawn(
							A3(
								_Http_toTask,
								router,
								$elm$core$Platform$sendToApp(router),
								req)));
				}
			}
		}
	});
var $elm$http$Http$onEffects = F4(
	function (router, cmds, subs, state) {
		return A2(
			$elm$core$Task$andThen,
			function (reqs) {
				return $elm$core$Task$succeed(
					A2($elm$http$Http$State, reqs, subs));
			},
			A3($elm$http$Http$updateReqs, router, cmds, state.reqs));
	});
var $elm$core$List$maybeCons = F3(
	function (f, mx, xs) {
		var _v0 = f(mx);
		if (_v0.$ === 'Just') {
			var x = _v0.a;
			return A2($elm$core$List$cons, x, xs);
		} else {
			return xs;
		}
	});
var $elm$core$List$filterMap = F2(
	function (f, xs) {
		return A3(
			$elm$core$List$foldr,
			$elm$core$List$maybeCons(f),
			_List_Nil,
			xs);
	});
var $elm$http$Http$maybeSend = F4(
	function (router, desiredTracker, progress, _v0) {
		var actualTracker = _v0.a;
		var toMsg = _v0.b;
		return _Utils_eq(desiredTracker, actualTracker) ? $elm$core$Maybe$Just(
			A2(
				$elm$core$Platform$sendToApp,
				router,
				toMsg(progress))) : $elm$core$Maybe$Nothing;
	});
var $elm$http$Http$onSelfMsg = F3(
	function (router, _v0, state) {
		var tracker = _v0.a;
		var progress = _v0.b;
		return A2(
			$elm$core$Task$andThen,
			function (_v1) {
				return $elm$core$Task$succeed(state);
			},
			$elm$core$Task$sequence(
				A2(
					$elm$core$List$filterMap,
					A3($elm$http$Http$maybeSend, router, tracker, progress),
					state.subs)));
	});
var $elm$http$Http$Cancel = function (a) {
	return {$: 'Cancel', a: a};
};
var $elm$http$Http$cmdMap = F2(
	function (func, cmd) {
		if (cmd.$ === 'Cancel') {
			var tracker = cmd.a;
			return $elm$http$Http$Cancel(tracker);
		} else {
			var r = cmd.a;
			return $elm$http$Http$Request(
				{
					allowCookiesFromOtherDomains: r.allowCookiesFromOtherDomains,
					body: r.body,
					expect: A2(_Http_mapExpect, func, r.expect),
					headers: r.headers,
					method: r.method,
					timeout: r.timeout,
					tracker: r.tracker,
					url: r.url
				});
		}
	});
var $elm$http$Http$MySub = F2(
	function (a, b) {
		return {$: 'MySub', a: a, b: b};
	});
var $elm$http$Http$subMap = F2(
	function (func, _v0) {
		var tracker = _v0.a;
		var toMsg = _v0.b;
		return A2(
			$elm$http$Http$MySub,
			tracker,
			A2($elm$core$Basics$composeR, toMsg, func));
	});
_Platform_effectManagers['Http'] = _Platform_createManager($elm$http$Http$init, $elm$http$Http$onEffects, $elm$http$Http$onSelfMsg, $elm$http$Http$cmdMap, $elm$http$Http$subMap);
var $elm$http$Http$command = _Platform_leaf('Http');
var $elm$http$Http$subscription = _Platform_leaf('Http');
var $elm$http$Http$request = function (r) {
	return $elm$http$Http$command(
		$elm$http$Http$Request(
			{allowCookiesFromOtherDomains: false, body: r.body, expect: r.expect, headers: r.headers, method: r.method, timeout: r.timeout, tracker: r.tracker, url: r.url}));
};
var $elm$http$Http$post = function (r) {
	return $elm$http$Http$request(
		{body: r.body, expect: r.expect, headers: _List_Nil, method: 'POST', timeout: $elm$core$Maybe$Nothing, tracker: $elm$core$Maybe$Nothing, url: r.url});
};
var $elm$url$Url$Builder$QueryParameter = F2(
	function (a, b) {
		return {$: 'QueryParameter', a: a, b: b};
	});
var $elm$url$Url$percentEncode = _Url_percentEncode;
var $elm$url$Url$Builder$string = F2(
	function (key, value) {
		return A2(
			$elm$url$Url$Builder$QueryParameter,
			$elm$url$Url$percentEncode(key),
			$elm$url$Url$percentEncode(value));
	});
var $elm$url$Url$Builder$toQueryPair = function (_v0) {
	var key = _v0.a;
	var value = _v0.b;
	return key + ('=' + value);
};
var $elm$url$Url$Builder$toQuery = function (parameters) {
	if (!parameters.b) {
		return '';
	} else {
		return '?' + A2(
			$elm$core$String$join,
			'&',
			A2($elm$core$List$map, $elm$url$Url$Builder$toQueryPair, parameters));
	}
};
var $author$project$Tuple$Ext$uncurry = F2(
	function (fn, _v0) {
		var a = _v0.a;
		var b = _v0.b;
		return A2(fn, a, b);
	});
var $author$project$Common$queryString = A2(
	$elm$core$Basics$composeR,
	$elm$core$List$map(
		$author$project$Tuple$Ext$uncurry($elm$url$Url$Builder$string)),
	$elm$url$Url$Builder$toQuery);
var $author$project$Common$urlOrigin = function (_v0) {
	var host = _v0.host;
	var port_ = _v0.port_;
	var path = _v0.path;
	var protocol = _v0.protocol;
	var thePort = A2(
		$elm$core$Maybe$withDefault,
		'',
		A2(
			$elm$core$Maybe$map,
			A2(
				$elm$core$Basics$composeR,
				$elm$core$String$fromInt,
				$elm$core$Basics$append(':')),
			port_));
	var scheme = function () {
		if (protocol.$ === 'Http') {
			return 'http://';
		} else {
			return 'https://';
		}
	}();
	return _Utils_ap(
		scheme,
		_Utils_ap(
			host,
			_Utils_ap(thePort, path)));
};
var $author$project$User$Layer$Methods$Dropbox$redirectUri = function (url) {
	return $author$project$Common$urlOrigin(url) + '?action=authenticate/dropbox';
};
var $elm$json$Json$Decode$int = _Json_decodeInt;
var $elm$json$Json$Decode$map3 = _Json_map3;
var $elm$json$Json$Decode$oneOf = _Json_oneOf;
var $elm$json$Json$Decode$maybe = function (decoder) {
	return $elm$json$Json$Decode$oneOf(
		_List_fromArray(
			[
				A2($elm$json$Json$Decode$map, $elm$core$Maybe$Just, decoder),
				$elm$json$Json$Decode$succeed($elm$core$Maybe$Nothing)
			]));
};
var $elm$json$Json$Decode$string = _Json_decodeString;
var $author$project$User$Layer$Methods$Dropbox$tokensDecoder = A4(
	$elm$json$Json$Decode$map3,
	F3(
		function (a, e, r) {
			return {accessToken: a, expiresIn: e, refreshToken: r};
		}),
	A2($elm$json$Json$Decode$field, 'access_token', $elm$json$Json$Decode$string),
	A2($elm$json$Json$Decode$field, 'expires_in', $elm$json$Json$Decode$int),
	$elm$json$Json$Decode$maybe(
		A2($elm$json$Json$Decode$field, 'refresh_token', $elm$json$Json$Decode$string)));
var $author$project$User$Layer$Methods$Dropbox$exchangeAuthCode = F3(
	function (msg, url, code) {
		return $elm$http$Http$post(
			function (u) {
				return {
					body: $elm$http$Http$emptyBody,
					expect: A2($elm$http$Http$expectJson, msg, $author$project$User$Layer$Methods$Dropbox$tokensDecoder),
					url: u
				};
			}(
				A2(
					$elm$core$String$append,
					'https://api.dropboxapi.com/oauth2/token',
					$author$project$Common$queryString(
						_List_fromArray(
							[
								_Utils_Tuple2('client_id', $author$project$User$Layer$Methods$Dropbox$clientId),
								_Utils_Tuple2('client_secret', $author$project$User$Layer$Methods$Dropbox$clientSecret),
								_Utils_Tuple2('code', code),
								_Utils_Tuple2('grant_type', 'authorization_code'),
								_Utils_Tuple2(
								'redirect_uri',
								$author$project$User$Layer$Methods$Dropbox$redirectUri(url))
							])))));
	});
var $elm$core$Platform$Cmd$none = $elm$core$Platform$Cmd$batch(_List_Nil);
var $elm$core$Dict$fromList = function (assocs) {
	return A3(
		$elm$core$List$foldl,
		F2(
			function (_v0, dict) {
				var key = _v0.a;
				var value = _v0.b;
				return A3($elm$core$Dict$insert, key, value, dict);
			}),
		$elm$core$Dict$empty,
		assocs);
};
var $author$project$Url$Ext$queryDictionary = function (url) {
	return $elm$core$Dict$fromList(
		A2(
			$elm$core$List$filterMap,
			function (s) {
				var _v0 = A2($elm$core$String$split, '=', s);
				if (_v0.b) {
					if (_v0.b.b && (!_v0.b.b.b)) {
						var k = _v0.a;
						var _v1 = _v0.b;
						var v = _v1.a;
						return $elm$core$Maybe$Just(
							_Utils_Tuple2(k, v));
					} else {
						var k = _v0.a;
						var v = _v0.b;
						return $elm$core$Maybe$Just(
							_Utils_Tuple2(
								k,
								A2($elm$core$String$join, '=', v)));
					}
				} else {
					return $elm$core$Maybe$Nothing;
				}
			},
			A2(
				$elm$core$Maybe$withDefault,
				_List_Nil,
				A2(
					$elm$core$Maybe$map,
					$elm$core$String$split('&'),
					url.query))));
};
var $author$project$UI$Syncing$State$initialCommand = function (url) {
	var _v0 = $author$project$Url$Ext$action(url);
	if ((((_v0.b && (_v0.a === 'authenticate')) && _v0.b.b) && (_v0.b.a === 'dropbox')) && (!_v0.b.b.b)) {
		var _v1 = _v0.b;
		var _v2 = A2(
			$elm$core$Dict$get,
			'code',
			$author$project$Url$Ext$queryDictionary(url));
		if (_v2.$ === 'Just') {
			var code = _v2.a;
			return A3($author$project$User$Layer$Methods$Dropbox$exchangeAuthCode, $author$project$UI$Syncing$Types$ExchangeDropboxAuthCode, url, code);
		} else {
			return $elm$core$Platform$Cmd$none;
		}
	} else {
		return $elm$core$Platform$Cmd$none;
	}
};
var $author$project$LastFm$initialModel = {authenticating: false, sessionKey: $elm$core$Maybe$Nothing};
var $author$project$UI$DnD$NotDragging = {$: 'NotDragging'};
var $author$project$UI$DnD$initialModel = $author$project$UI$DnD$NotDragging;
var $author$project$UI$Sources$Types$Where = {$: 'Where'};
var $author$project$UI$Sources$Form$defaultService = $author$project$Sources$Dropbox;
var $author$project$Sources$Services$AmazonS3$defaults = {bucketName: 'music', name: 'Music from Amazon S3', region: 'eu-west-1'};
var $author$project$Sources$Services$AmazonS3$initialData = $elm$core$Dict$fromList(
	_List_fromArray(
		[
			_Utils_Tuple2('accessKey', ''),
			_Utils_Tuple2('bucketName', $author$project$Sources$Services$AmazonS3$defaults.bucketName),
			_Utils_Tuple2('directoryPath', ''),
			_Utils_Tuple2('host', ''),
			_Utils_Tuple2('name', $author$project$Sources$Services$AmazonS3$defaults.name),
			_Utils_Tuple2('region', $author$project$Sources$Services$AmazonS3$defaults.region),
			_Utils_Tuple2('secretKey', '')
		]));
var $author$project$Sources$Services$AzureBlob$defaults = {name: 'Music from Azure Blob Storage'};
var $author$project$Sources$Services$AzureBlob$initialData = $elm$core$Dict$fromList(
	_List_fromArray(
		[
			_Utils_Tuple2('accountName', ''),
			_Utils_Tuple2('accountKey', ''),
			_Utils_Tuple2('container', ''),
			_Utils_Tuple2('directoryPath', ''),
			_Utils_Tuple2('name', $author$project$Sources$Services$AzureBlob$defaults.name)
		]));
var $author$project$Sources$Services$AzureFile$defaults = {name: 'Music from Azure File Storage'};
var $author$project$Sources$Services$AzureFile$initialData = $elm$core$Dict$fromList(
	_List_fromArray(
		[
			_Utils_Tuple2('accountName', ''),
			_Utils_Tuple2('accountKey', ''),
			_Utils_Tuple2('container', ''),
			_Utils_Tuple2('directoryPath', ''),
			_Utils_Tuple2('name', $author$project$Sources$Services$AzureFile$defaults.name)
		]));
var $author$project$Sources$Services$Btfs$defaults = {gateway: '', name: 'Music from BTFS'};
var $author$project$Sources$Services$Btfs$initialData = $elm$core$Dict$fromList(
	_List_fromArray(
		[
			_Utils_Tuple2('directoryHash', ''),
			_Utils_Tuple2('name', $author$project$Sources$Services$Btfs$defaults.name),
			_Utils_Tuple2('gateway', $author$project$Sources$Services$Btfs$defaults.gateway)
		]));
var $author$project$Sources$Services$Dropbox$defaults = {appKey: 'kwsydtrzban41zr', name: 'Music from Dropbox'};
var $author$project$Sources$Services$Dropbox$initialData = $elm$core$Dict$fromList(
	_List_fromArray(
		[
			_Utils_Tuple2('appKey', $author$project$Sources$Services$Dropbox$defaults.appKey),
			_Utils_Tuple2('directoryPath', ''),
			_Utils_Tuple2('name', $author$project$Sources$Services$Dropbox$defaults.name)
		]));
var $elm$core$String$concat = function (strings) {
	return A2($elm$core$String$join, '', strings);
};
var $author$project$Sources$Services$Google$defaultClientId = $elm$core$String$concat(
	_List_fromArray(
		['720114869239-74amkqeila5ursobjqvo9c263u1cllhu', '.apps.googleusercontent.com']));
var $author$project$Sources$Services$Google$defaults = {clientId: $author$project$Sources$Services$Google$defaultClientId, clientSecret: 'uHBInBeGnA38FOlpLTEyPlUv', folderId: '', name: 'Music from Google Drive'};
var $author$project$Sources$Services$Google$initialData = $elm$core$Dict$fromList(
	_List_fromArray(
		[
			_Utils_Tuple2('clientId', $author$project$Sources$Services$Google$defaults.clientId),
			_Utils_Tuple2('clientSecret', $author$project$Sources$Services$Google$defaults.clientSecret),
			_Utils_Tuple2('folderId', $author$project$Sources$Services$Google$defaults.folderId),
			_Utils_Tuple2('name', $author$project$Sources$Services$Google$defaults.name)
		]));
var $author$project$Common$boolToString = function (bool) {
	return bool ? 't' : 'f';
};
var $author$project$Sources$Services$Ipfs$defaults = {
	gateway: '',
	ipns: $author$project$Common$boolToString(false),
	local: $author$project$Common$boolToString(false),
	name: 'Music from IPFS'
};
var $author$project$Sources$Services$Ipfs$initialData = $elm$core$Dict$fromList(
	_List_fromArray(
		[
			_Utils_Tuple2('directoryHash', ''),
			_Utils_Tuple2('gateway', $author$project$Sources$Services$Ipfs$defaults.gateway),
			_Utils_Tuple2('ipns', $author$project$Sources$Services$Ipfs$defaults.ipns),
			_Utils_Tuple2('local', $author$project$Sources$Services$Ipfs$defaults.local),
			_Utils_Tuple2('name', $author$project$Sources$Services$Ipfs$defaults.name)
		]));
var $author$project$Sources$Services$WebDav$defaults = {name: 'Music from WebDAV'};
var $author$project$Sources$Services$WebDav$initialData = $elm$core$Dict$fromList(
	_List_fromArray(
		[
			_Utils_Tuple2('directoryPath', ''),
			_Utils_Tuple2('url', ''),
			_Utils_Tuple2('username', ''),
			_Utils_Tuple2('password', ''),
			_Utils_Tuple2('name', $author$project$Sources$Services$WebDav$defaults.name)
		]));
var $author$project$Sources$Services$initialData = function (service) {
	switch (service.$) {
		case 'AmazonS3':
			return $author$project$Sources$Services$AmazonS3$initialData;
		case 'AzureBlob':
			return $author$project$Sources$Services$AzureBlob$initialData;
		case 'AzureFile':
			return $author$project$Sources$Services$AzureFile$initialData;
		case 'Btfs':
			return $author$project$Sources$Services$Btfs$initialData;
		case 'Dropbox':
			return $author$project$Sources$Services$Dropbox$initialData;
		case 'Google':
			return $author$project$Sources$Services$Google$initialData;
		case 'Ipfs':
			return $author$project$Sources$Services$Ipfs$initialData;
		default:
			return $author$project$Sources$Services$WebDav$initialData;
	}
};
var $author$project$UI$Sources$Form$defaultContext = {
	data: $author$project$Sources$Services$initialData($author$project$UI$Sources$Form$defaultService),
	directoryPlaylists: true,
	enabled: true,
	id: 'CHANGE_ME_PLEASE',
	service: $author$project$UI$Sources$Form$defaultService
};
var $author$project$UI$Sources$Form$initialModel = {context: $author$project$UI$Sources$Form$defaultContext, step: $author$project$UI$Sources$Types$Where};
var $author$project$UI$Syncing$Types$NewEncryptionKeyScreen = F2(
	function (a, b) {
		return {$: 'NewEncryptionKeyScreen', a: a, b: b};
	});
var $author$project$UI$Syncing$Types$NotSynced = {$: 'NotSynced'};
var $author$project$User$Layer$RemoteStorage = function (a) {
	return {$: 'RemoteStorage', a: a};
};
var $elm$core$Maybe$andThen = F2(
	function (callback, maybeValue) {
		if (maybeValue.$ === 'Just') {
			var value = maybeValue.a;
			return callback(value);
		} else {
			return $elm$core$Maybe$Nothing;
		}
	});
var $truqu$elm_base64$Base64$Decode$pad = function (input) {
	var _v0 = $elm$core$String$length(input) % 4;
	switch (_v0) {
		case 3:
			return input + '=';
		case 2:
			return input + '==';
		default:
			return input;
	}
};
var $elm$core$Result$andThen = F2(
	function (callback, result) {
		if (result.$ === 'Ok') {
			var value = result.a;
			return callback(value);
		} else {
			var msg = result.a;
			return $elm$core$Result$Err(msg);
		}
	});
var $truqu$elm_base64$Base64$Decode$charToInt = function (_char) {
	switch (_char.valueOf()) {
		case 'A':
			return 0;
		case 'B':
			return 1;
		case 'C':
			return 2;
		case 'D':
			return 3;
		case 'E':
			return 4;
		case 'F':
			return 5;
		case 'G':
			return 6;
		case 'H':
			return 7;
		case 'I':
			return 8;
		case 'J':
			return 9;
		case 'K':
			return 10;
		case 'L':
			return 11;
		case 'M':
			return 12;
		case 'N':
			return 13;
		case 'O':
			return 14;
		case 'P':
			return 15;
		case 'Q':
			return 16;
		case 'R':
			return 17;
		case 'S':
			return 18;
		case 'T':
			return 19;
		case 'U':
			return 20;
		case 'V':
			return 21;
		case 'W':
			return 22;
		case 'X':
			return 23;
		case 'Y':
			return 24;
		case 'Z':
			return 25;
		case 'a':
			return 26;
		case 'b':
			return 27;
		case 'c':
			return 28;
		case 'd':
			return 29;
		case 'e':
			return 30;
		case 'f':
			return 31;
		case 'g':
			return 32;
		case 'h':
			return 33;
		case 'i':
			return 34;
		case 'j':
			return 35;
		case 'k':
			return 36;
		case 'l':
			return 37;
		case 'm':
			return 38;
		case 'n':
			return 39;
		case 'o':
			return 40;
		case 'p':
			return 41;
		case 'q':
			return 42;
		case 'r':
			return 43;
		case 's':
			return 44;
		case 't':
			return 45;
		case 'u':
			return 46;
		case 'v':
			return 47;
		case 'w':
			return 48;
		case 'x':
			return 49;
		case 'y':
			return 50;
		case 'z':
			return 51;
		case '0':
			return 52;
		case '1':
			return 53;
		case '2':
			return 54;
		case '3':
			return 55;
		case '4':
			return 56;
		case '5':
			return 57;
		case '6':
			return 58;
		case '7':
			return 59;
		case '8':
			return 60;
		case '9':
			return 61;
		case '+':
			return 62;
		case '/':
			return 63;
		default:
			return 0;
	}
};
var $elm$core$Bitwise$or = _Bitwise_or;
var $elm$core$Bitwise$shiftLeftBy = _Bitwise_shiftLeftBy;
var $elm$core$Bitwise$and = _Bitwise_and;
var $elm$core$String$cons = _String_cons;
var $elm$core$String$fromChar = function (_char) {
	return A2($elm$core$String$cons, _char, '');
};
var $elm$core$Char$fromCode = _Char_fromCode;
var $truqu$elm_base64$Base64$Decode$intToString = A2($elm$core$Basics$composeR, $elm$core$Char$fromCode, $elm$core$String$fromChar);
var $truqu$elm_base64$Base64$Decode$add = F2(
	function (_char, _v0) {
		var curr = _v0.a;
		var need = _v0.b;
		var res = _v0.c;
		var shiftAndAdd = function (_int) {
			return (63 & _int) | (curr << 6);
		};
		return (!need) ? ((!(128 & _char)) ? _Utils_Tuple3(
			0,
			0,
			_Utils_ap(
				res,
				$truqu$elm_base64$Base64$Decode$intToString(_char))) : (((224 & _char) === 192) ? _Utils_Tuple3(31 & _char, 1, res) : (((240 & _char) === 224) ? _Utils_Tuple3(15 & _char, 2, res) : _Utils_Tuple3(7 & _char, 3, res)))) : ((need === 1) ? _Utils_Tuple3(
			0,
			0,
			_Utils_ap(
				res,
				$truqu$elm_base64$Base64$Decode$intToString(
					shiftAndAdd(_char)))) : _Utils_Tuple3(
			shiftAndAdd(_char),
			need - 1,
			res));
	});
var $elm$core$Bitwise$shiftRightZfBy = _Bitwise_shiftRightZfBy;
var $truqu$elm_base64$Base64$Decode$toUTF16 = F2(
	function (_char, acc) {
		return _Utils_Tuple3(
			0,
			0,
			A2(
				$truqu$elm_base64$Base64$Decode$add,
				255 & (_char >>> 0),
				A2(
					$truqu$elm_base64$Base64$Decode$add,
					255 & (_char >>> 8),
					A2($truqu$elm_base64$Base64$Decode$add, 255 & (_char >>> 16), acc))));
	});
var $truqu$elm_base64$Base64$Decode$chomp = F2(
	function (char_, _v0) {
		var curr = _v0.a;
		var cnt = _v0.b;
		var utf8ToUtf16 = _v0.c;
		var _char = $truqu$elm_base64$Base64$Decode$charToInt(char_);
		if (cnt === 3) {
			return A2($truqu$elm_base64$Base64$Decode$toUTF16, curr | _char, utf8ToUtf16);
		} else {
			return _Utils_Tuple3((_char << ((3 - cnt) * 6)) | curr, cnt + 1, utf8ToUtf16);
		}
	});
var $elm$core$String$foldl = _String_foldl;
var $truqu$elm_base64$Base64$Decode$initial = _Utils_Tuple3(
	0,
	0,
	_Utils_Tuple3(0, 0, ''));
var $elm$core$Result$map = F2(
	function (func, ra) {
		if (ra.$ === 'Ok') {
			var a = ra.a;
			return $elm$core$Result$Ok(
				func(a));
		} else {
			var e = ra.a;
			return $elm$core$Result$Err(e);
		}
	});
var $elm$core$Basics$negate = function (n) {
	return -n;
};
var $elm$core$String$dropRight = F2(
	function (n, string) {
		return (n < 1) ? string : A3($elm$core$String$slice, 0, -n, string);
	});
var $elm$core$String$endsWith = _String_endsWith;
var $truqu$elm_base64$Base64$Decode$stripNulls = F2(
	function (input, output) {
		return A2($elm$core$String$endsWith, '==', input) ? A2($elm$core$String$dropRight, 2, output) : (A2($elm$core$String$endsWith, '=', input) ? A2($elm$core$String$dropRight, 1, output) : output);
	});
var $elm$regex$Regex$Match = F4(
	function (match, index, number, submatches) {
		return {index: index, match: match, number: number, submatches: submatches};
	});
var $elm$regex$Regex$contains = _Regex_contains;
var $elm$regex$Regex$fromStringWith = _Regex_fromStringWith;
var $elm$regex$Regex$fromString = function (string) {
	return A2(
		$elm$regex$Regex$fromStringWith,
		{caseInsensitive: false, multiline: false},
		string);
};
var $elm$regex$Regex$never = _Regex_never;
var $truqu$elm_base64$Base64$Decode$validBase64Regex = A2(
	$elm$core$Maybe$withDefault,
	$elm$regex$Regex$never,
	$elm$regex$Regex$fromString('^([A-Za-z0-9\\/+]{4})*([A-Za-z0-9\\/+]{2}[A-Za-z0-9\\/+=]{2})?$'));
var $truqu$elm_base64$Base64$Decode$validate = function (input) {
	return A2($elm$regex$Regex$contains, $truqu$elm_base64$Base64$Decode$validBase64Regex, input) ? $elm$core$Result$Ok(input) : $elm$core$Result$Err('Invalid base64');
};
var $truqu$elm_base64$Base64$Decode$wrapUp = function (_v0) {
	var _v1 = _v0.c;
	var need = _v1.b;
	var res = _v1.c;
	return (need > 0) ? $elm$core$Result$Err('Invalid UTF-16') : $elm$core$Result$Ok(res);
};
var $truqu$elm_base64$Base64$Decode$validateAndDecode = function (input) {
	return A2(
		$elm$core$Result$map,
		$truqu$elm_base64$Base64$Decode$stripNulls(input),
		A2(
			$elm$core$Result$andThen,
			A2(
				$elm$core$Basics$composeR,
				A2($elm$core$String$foldl, $truqu$elm_base64$Base64$Decode$chomp, $truqu$elm_base64$Base64$Decode$initial),
				$truqu$elm_base64$Base64$Decode$wrapUp),
			$truqu$elm_base64$Base64$Decode$validate(input)));
};
var $truqu$elm_base64$Base64$Decode$decode = A2($elm$core$Basics$composeR, $truqu$elm_base64$Base64$Decode$pad, $truqu$elm_base64$Base64$Decode$validateAndDecode);
var $truqu$elm_base64$Base64$decode = $truqu$elm_base64$Base64$Decode$decode;
var $elm$core$Basics$modBy = _Basics_modBy;
var $elm$core$Bitwise$shiftRightBy = _Bitwise_shiftRightBy;
var $elm$core$String$repeatHelp = F3(
	function (n, chunk, result) {
		return (n <= 0) ? result : A3(
			$elm$core$String$repeatHelp,
			n >> 1,
			_Utils_ap(chunk, chunk),
			(!(n & 1)) ? result : _Utils_ap(result, chunk));
	});
var $elm$core$String$repeat = F2(
	function (n, chunk) {
		return A3($elm$core$String$repeatHelp, n, chunk, '');
	});
var $elm$regex$Regex$replace = _Regex_replaceAtMost(_Regex_infinity);
var $prozacchiwawa$elm_urlbase64$UrlBase64$replaceFromUrl = A2(
	$elm$core$Maybe$withDefault,
	$elm$regex$Regex$never,
	$elm$regex$Regex$fromString('[-_]'));
var $prozacchiwawa$elm_urlbase64$UrlBase64$decode = F2(
	function (dec, e) {
		var strlen = $elm$core$String$length(e);
		var replaceChar = function (rematch) {
			var _v0 = rematch.match;
			if (_v0 === '-') {
				return '+';
			} else {
				return '/';
			}
		};
		var hanging = (!strlen) ? 4 : A2($elm$core$Basics$modBy, 4, strlen);
		var ilen = (!hanging) ? 0 : (4 - hanging);
		return dec(
			A3(
				$elm$regex$Regex$replace,
				$prozacchiwawa$elm_urlbase64$UrlBase64$replaceFromUrl,
				replaceChar,
				_Utils_ap(
					e,
					A2($elm$core$String$repeat, ilen, '='))));
	});
var $elm$core$Result$toMaybe = function (result) {
	if (result.$ === 'Ok') {
		var v = result.a;
		return $elm$core$Maybe$Just(v);
	} else {
		return $elm$core$Maybe$Nothing;
	}
};
var $author$project$UI$Syncing$State$initialModel = function (url) {
	var _v0 = $author$project$Url$Ext$action(url);
	if (((((_v0.b && (_v0.a === 'authenticate')) && _v0.b.b) && (_v0.b.a === 'remotestorage')) && _v0.b.b.b) && (!_v0.b.b.b.b)) {
		var _v1 = _v0.b;
		var _v2 = _v1.b;
		var encodedUserAddress = _v2.a;
		var userAddress = A2(
			$elm$core$Maybe$withDefault,
			encodedUserAddress,
			A2(
				$elm$core$Maybe$andThen,
				A2(
					$elm$core$Basics$composeR,
					$prozacchiwawa$elm_urlbase64$UrlBase64$decode($truqu$elm_base64$Base64$decode),
					$elm$core$Result$toMaybe),
				$elm$url$Url$percentDecode(encodedUserAddress)));
		var dict = $author$project$Url$Ext$queryDictionary(
			_Utils_update(
				url,
				{query: url.fragment}));
		var _v3 = A2($elm$core$Dict$get, 'access_token', dict);
		if (_v3.$ === 'Just') {
			var t = _v3.a;
			return A2(
				$author$project$UI$Syncing$Types$NewEncryptionKeyScreen,
				$author$project$User$Layer$RemoteStorage(
					{token: t, userAddress: userAddress}),
				$elm$core$Maybe$Nothing);
		} else {
			return $author$project$UI$Syncing$Types$NotSynced;
		}
	} else {
		return $author$project$UI$Syncing$Types$NotSynced;
	}
};
var $elm$random$Random$Seed = F2(
	function (a, b) {
		return {$: 'Seed', a: a, b: b};
	});
var $elm$random$Random$next = function (_v0) {
	var state0 = _v0.a;
	var incr = _v0.b;
	return A2($elm$random$Random$Seed, ((state0 * 1664525) + incr) >>> 0, incr);
};
var $elm$random$Random$initialSeed = function (x) {
	var _v0 = $elm$random$Random$next(
		A2($elm$random$Random$Seed, 0, 1013904223));
	var state1 = _v0.a;
	var incr = _v0.b;
	var state2 = (state1 + x) >>> 0;
	return $elm$random$Random$next(
		A2($elm$random$Random$Seed, state2, incr));
};
var $elm_community$maybe_extra$Maybe$Extra$isNothing = function (m) {
	if (m.$ === 'Nothing') {
		return true;
	} else {
		return false;
	}
};
var $elm$core$Platform$Cmd$map = _Platform_map;
var $elm$time$Time$Posix = function (a) {
	return {$: 'Posix', a: a};
};
var $elm$time$Time$millisToPosix = $elm$time$Time$Posix;
var $elm$time$Time$now = _Time_now($elm$time$Time$millisToPosix);
var $elm$browser$Browser$Navigation$replaceUrl = _Browser_replaceUrl;
var $author$project$UI$Page$toString_ = function (page) {
	switch (page.$) {
		case 'Index':
			return '';
		case 'Playlists':
			switch (page.a.$) {
				case 'Index':
					var _v1 = page.a;
					return 'playlists';
				case 'New':
					var _v2 = page.a;
					return 'playlists/new';
				default:
					var playlistName = page.a.a;
					return 'playlists/edit/' + playlistName;
			}
		case 'Queue':
			if (page.a.$ === 'History') {
				var _v3 = page.a;
				return 'queue/history';
			} else {
				var _v4 = page.a;
				return 'queue';
			}
		case 'Settings':
			switch (page.a.$) {
				case 'Data':
					var _v5 = page.a;
					return 'settings/data';
				case 'Index':
					var _v6 = page.a;
					return 'settings';
				default:
					var _v7 = page.a;
					return 'settings/sync';
			}
		default:
			switch (page.a.$) {
				case 'Edit':
					var sourceId = page.a.a;
					return 'sources/edit/' + sourceId;
				case 'Index':
					var _v8 = page.a;
					return 'sources';
				case 'New':
					var _v9 = page.a;
					return 'sources/new';
				case 'NewOnboarding':
					var _v10 = page.a;
					return 'sources/welcome';
				case 'NewThroughRedirect':
					switch (page.a.a.$) {
						case 'Dropbox':
							var _v11 = page.a;
							var _v12 = _v11.a;
							return 'sources/new/dropbox';
						case 'Google':
							var _v13 = page.a;
							var _v14 = _v13.a;
							return 'sources/new/google';
						default:
							var _v15 = page.a;
							return 'sources/new';
					}
				default:
					var sourceId = page.a.a;
					return 'sources/rename/' + sourceId;
			}
	}
};
var $author$project$UI$Page$toString = A2(
	$elm$core$Basics$composeR,
	$author$project$UI$Page$toString_,
	$elm$core$Basics$append('#/'));
var $author$project$UI$Routing$State$resetUrl = F3(
	function (key, url, page) {
		return A2(
			$elm$browser$Browser$Navigation$replaceUrl,
			key,
			_Utils_ap(
				url.path,
				$author$project$UI$Page$toString(page)));
	});
var $elm_community$maybe_extra$Maybe$Extra$unwrap = F3(
	function (_default, f, m) {
		if (m.$ === 'Nothing') {
			return _default;
		} else {
			var a = m.a;
			return f(a);
		}
	});
var $author$project$UI$Page$rewriteUrl = function (url) {
	if (A3(
		$elm_community$maybe_extra$Maybe$Extra$unwrap,
		false,
		$elm$core$String$contains('path='),
		url.query)) {
		var maybePath = A2($author$project$Url$Ext$extractQueryParam, 'path', url);
		var path = A2($elm$core$Maybe$withDefault, '', maybePath);
		return A3(
			$elm_community$maybe_extra$Maybe$Extra$unwrap,
			false,
			function (f) {
				return A2($elm$core$String$contains, 'token=', f) || A2($elm$core$String$contains, 'code=', f);
			},
			url.fragment) ? _Utils_update(
			url,
			{path: path, query: url.fragment}) : _Utils_update(
			url,
			{path: path});
	} else {
		return _Utils_update(
			url,
			{
				path: A2($elm$core$Maybe$withDefault, '', url.fragment)
			});
	}
};
var $Gizra$elm_debouncer$Debouncer$Internal$Debouncer = F2(
	function (a, b) {
		return {$: 'Debouncer', a: a, b: b};
	});
var $Gizra$elm_debouncer$Debouncer$Internal$Settled = {$: 'Settled'};
var $Gizra$elm_debouncer$Debouncer$Internal$nothingIfNegative = $elm$core$Maybe$andThen(
	function (num) {
		return (num < 0) ? $elm$core$Maybe$Nothing : $elm$core$Maybe$Just(num);
	});
var $Gizra$elm_debouncer$Debouncer$Internal$sanitizeConfig = function (_v0) {
	var config = _v0.a;
	return $Gizra$elm_debouncer$Debouncer$Internal$Config(
		{
			accumulator: config.accumulator,
			emitWhenUnsettled: $Gizra$elm_debouncer$Debouncer$Internal$nothingIfNegative(config.emitWhenUnsettled),
			emitWhileUnsettled: $Gizra$elm_debouncer$Debouncer$Internal$nothingIfNegative(config.emitWhileUnsettled),
			settleWhenQuietFor: $Gizra$elm_debouncer$Debouncer$Internal$nothingIfNegative(config.settleWhenQuietFor)
		});
};
var $Gizra$elm_debouncer$Debouncer$Internal$toDebouncer = function (config) {
	return A2(
		$Gizra$elm_debouncer$Debouncer$Internal$Debouncer,
		$Gizra$elm_debouncer$Debouncer$Internal$sanitizeConfig(config),
		$Gizra$elm_debouncer$Debouncer$Internal$Settled);
};
var $Gizra$elm_debouncer$Debouncer$Basic$toDebouncer = $Gizra$elm_debouncer$Debouncer$Internal$toDebouncer;
var $author$project$UI$Sources$Types$By = {$: 'By'};
var $elm$json$Json$Decode$keyValuePairs = _Json_decodeKeyValuePairs;
var $elm$json$Json$Decode$dict = function (decoder) {
	return A2(
		$elm$json$Json$Decode$map,
		$elm$core$Dict$fromList,
		$elm$json$Json$Decode$keyValuePairs(decoder));
};
var $elm$core$Dict$foldl = F3(
	function (func, acc, dict) {
		foldl:
		while (true) {
			if (dict.$ === 'RBEmpty_elm_builtin') {
				return acc;
			} else {
				var key = dict.b;
				var value = dict.c;
				var left = dict.d;
				var right = dict.e;
				var $temp$func = func,
					$temp$acc = A3(
					func,
					key,
					value,
					A3($elm$core$Dict$foldl, func, acc, left)),
					$temp$dict = right;
				func = $temp$func;
				acc = $temp$acc;
				dict = $temp$dict;
				continue foldl;
			}
		}
	});
var $elm$core$Dict$union = F2(
	function (t1, t2) {
		return A3($elm$core$Dict$foldl, $elm$core$Dict$insert, t2, t1);
	});
var $author$project$Dict$Ext$unionFlipped = F2(
	function (a, b) {
		return A2($elm$core$Dict$union, b, a);
	});
var $elm$core$Result$withDefault = F2(
	function (def, result) {
		if (result.$ === 'Ok') {
			var a = result.a;
			return a;
		} else {
			return def;
		}
	});
var $author$project$Sources$Services$Dropbox$authorizationSourceData = function (args) {
	return A3(
		$elm$core$Dict$update,
		'accessToken',
		function (_v0) {
			return args.codeOrToken;
		},
		A2(
			$author$project$Dict$Ext$unionFlipped,
			$author$project$Sources$Services$Dropbox$initialData,
			A2(
				$elm$core$Result$withDefault,
				$elm$core$Dict$empty,
				A2(
					$elm$json$Json$Decode$decodeString,
					$elm$json$Json$Decode$dict($elm$json$Json$Decode$string),
					A2(
						$elm$core$Maybe$withDefault,
						'{}',
						A2(
							$elm$core$Maybe$andThen,
							A2($elm$core$Basics$composeR, $truqu$elm_base64$Base64$decode, $elm$core$Result$toMaybe),
							args.state))))));
};
var $author$project$Sources$Services$Google$authorizationSourceData = function (args) {
	return A3(
		$elm$core$Dict$update,
		'authCode',
		function (_v0) {
			return args.codeOrToken;
		},
		A2(
			$author$project$Dict$Ext$unionFlipped,
			$author$project$Sources$Services$Google$initialData,
			A2(
				$elm$core$Result$withDefault,
				$elm$core$Dict$empty,
				A2(
					$elm$json$Json$Decode$decodeString,
					$elm$json$Json$Decode$dict($elm$json$Json$Decode$string),
					A2(
						$elm$core$Maybe$withDefault,
						'{}',
						A2(
							$elm$core$Maybe$andThen,
							A2($elm$core$Basics$composeR, $truqu$elm_base64$Base64$decode, $elm$core$Result$toMaybe),
							args.state))))));
};
var $elm$browser$Browser$Navigation$pushUrl = _Browser_pushUrl;
var $Fresheyeball$elm_return$Return$return = F2(
	function (a, b) {
		return $elm$core$Basics$identity(
			_Utils_Tuple2(a, b));
	});
var $author$project$UI$Common$State$changeUrlUsingPage = F2(
	function (page, model) {
		return A2(
			$Fresheyeball$elm_return$Return$return,
			model,
			A2(
				$elm$browser$Browser$Navigation$pushUrl,
				model.navKey,
				$author$project$UI$Page$toString(page)));
	});
var $elm_community$list_extra$List$Extra$find = F2(
	function (predicate, list) {
		find:
		while (true) {
			if (!list.b) {
				return $elm$core$Maybe$Nothing;
			} else {
				var first = list.a;
				var rest = list.b;
				if (predicate(first)) {
					return $elm$core$Maybe$Just(first);
				} else {
					var $temp$predicate = predicate,
						$temp$list = rest;
					predicate = $temp$predicate;
					list = $temp$list;
					continue find;
				}
			}
		}
	});
var $author$project$UI$Sources$State$formLens = {
	get: function ($) {
		return $.sourceForm;
	},
	set: F2(
		function (form, m) {
			return _Utils_update(
				m,
				{sourceForm: form});
		})
};
var $arturopala$elm_monocle$Monocle$Lens$modify = F2(
	function (lens, f) {
		var mf = function (a) {
			return function (b) {
				return A2(lens.set, b, a);
			}(
				f(
					lens.get(a)));
		};
		return mf;
	});
var $Fresheyeball$elm_return$Return$singleton = function (a) {
	return _Utils_Tuple2(a, $elm$core$Platform$Cmd$none);
};
var $author$project$UI$Routing$State$loadSourceForForm = F2(
	function (sourceId, model) {
		var maybeSource = A2(
			$elm_community$list_extra$List$Extra$find,
			A2(
				$elm$core$Basics$composeR,
				function ($) {
					return $.id;
				},
				$elm$core$Basics$eq(sourceId)),
			model.sources);
		var isLoading = model.isLoading;
		var _v0 = _Utils_Tuple2(isLoading, maybeSource);
		if (!_v0.a) {
			if (_v0.b.$ === 'Just') {
				var source = _v0.b.a;
				return $Fresheyeball$elm_return$Return$singleton(
					A3(
						$arturopala$elm_monocle$Monocle$Lens$modify,
						$author$project$UI$Sources$State$formLens,
						function (m) {
							return _Utils_update(
								m,
								{context: source});
						},
						model));
			} else {
				var _v1 = _v0.b;
				return $Fresheyeball$elm_return$Return$singleton(model);
			}
		} else {
			return A2(
				$author$project$UI$Common$State$changeUrlUsingPage,
				$author$project$UI$Page$Sources($author$project$UI$Sources$Page$Index),
				model);
		}
	});
var $author$project$UI$Routing$State$transition = F2(
	function (page, model) {
		_v0$3:
		while (true) {
			if (page.$ === 'Sources') {
				switch (page.a.$) {
					case 'NewThroughRedirect':
						var _v1 = page.a;
						var service = _v1.a;
						var args = _v1.b;
						var _v2 = _Utils_Tuple2(model.sourceForm, $author$project$UI$Sources$Form$defaultContext);
						var form = _v2.a;
						var defaultContext = _v2.b;
						return $Fresheyeball$elm_return$Return$singleton(
							function (f) {
								return _Utils_update(
									model,
									{sourceForm: f});
							}(
								function (c) {
									return _Utils_update(
										form,
										{context: c, step: $author$project$UI$Sources$Types$By});
								}(
									_Utils_update(
										defaultContext,
										{
											data: function () {
												switch (service.$) {
													case 'Dropbox':
														return $author$project$Sources$Services$Dropbox$authorizationSourceData(args);
													case 'Google':
														return $author$project$Sources$Services$Google$authorizationSourceData(args);
													default:
														return defaultContext.data;
												}
											}(),
											service: service
										}))));
					case 'Edit':
						var sourceId = page.a.a;
						return A2($author$project$UI$Routing$State$loadSourceForForm, sourceId, model);
					case 'Rename':
						var sourceId = page.a.a;
						return A2($author$project$UI$Routing$State$loadSourceForForm, sourceId, model);
					default:
						break _v0$3;
				}
			} else {
				break _v0$3;
			}
		}
		return $Fresheyeball$elm_return$Return$singleton(model);
	});
var $elm$time$Time$utc = A2($elm$time$Time$Zone, 0, _List_Nil);
var $author$project$UI$init = F3(
	function (flags, url, key) {
		var serviceWorkerStatus = flags.isInstallingServiceWorker ? $author$project$Common$InstallingInitial : $author$project$Common$Activated;
		var rewrittenUrl = $author$project$UI$Page$rewriteUrl(url);
		var maybePage = $author$project$UI$Page$fromUrl(rewrittenUrl);
		var page = A2($elm$core$Maybe$withDefault, $author$project$UI$Page$Index, maybePage);
		return A2(
			$Fresheyeball$elm_return$Return$command,
			A2($elm$core$Task$perform, $author$project$UI$Types$SetCurrentTimeZone, $elm$time$Time$here),
			A2(
				$Fresheyeball$elm_return$Return$command,
				A2($elm$core$Task$perform, $author$project$UI$Types$SetCurrentTime, $elm$time$Time$now),
				A2(
					$Fresheyeball$elm_return$Return$command,
					function () {
						if ($elm_community$maybe_extra$Maybe$Extra$isNothing(maybePage)) {
							return A3($author$project$UI$Routing$State$resetUrl, key, url, page);
						} else {
							var _v0 = $author$project$Url$Ext$action(url);
							if ((((_v0.b && (_v0.a === 'authenticate')) && _v0.b.b) && (_v0.b.a === 'dropbox')) && (!_v0.b.b.b)) {
								var _v1 = _v0.b;
								return A3($author$project$UI$Routing$State$resetUrl, key, url, page);
							} else {
								return $elm$core$Platform$Cmd$none;
							}
						}
					}(),
					A2(
						$Fresheyeball$elm_return$Return$command,
						A2(
							$elm$core$Platform$Cmd$map,
							$author$project$UI$Types$SyncingMsg,
							$author$project$UI$Syncing$State$initialCommand(url)),
						A2(
							$author$project$UI$Routing$State$transition,
							page,
							{
								alfred: $elm$core$Maybe$Nothing,
								audioDuration: 0,
								audioHasStalled: false,
								audioIsLoading: false,
								audioIsPlaying: false,
								audioPosition: 0,
								buildTimestamp: flags.buildTimestamp,
								cachedCovers: $elm$core$Maybe$Nothing,
								cachedTracks: _List_Nil,
								cachedTracksOnly: false,
								cachingTracksInProgress: _List_Nil,
								chosenBackdrop: $elm$core$Maybe$Nothing,
								confirmation: $elm$core$Maybe$Nothing,
								contextMenu: $elm$core$Maybe$Nothing,
								coverSelectionReducesPool: true,
								covers: {arranged: _List_Nil, harvested: _List_Nil},
								currentTime: $elm$time$Time$millisToPosix(flags.initialTime),
								currentTimeZone: $elm$time$Time$utc,
								darkMode: flags.darkMode,
								dnd: $author$project$UI$DnD$initialModel,
								dontPlay: _List_Nil,
								downloading: $elm$core$Maybe$Nothing,
								editPlaylistContext: $elm$core$Maybe$Nothing,
								eqSettings: $author$project$Equalizer$defaultSettings,
								extractedBackdropColor: $elm$core$Maybe$Nothing,
								fadeInBackdrop: true,
								favourites: _List_Nil,
								favouritesOnly: false,
								focusedOnInput: false,
								grouping: $elm$core$Maybe$Nothing,
								hideDuplicates: false,
								infiniteList: $FabienHenon$elm_infinite_list_view$InfiniteList$init,
								isDragging: false,
								isLoading: true,
								isOnline: flags.isOnline,
								isTouchDevice: false,
								isUpgrading: flags.upgrade,
								lastFm: $author$project$LastFm$initialModel,
								lastModifiedPlaylist: $elm$core$Maybe$Nothing,
								loadedBackdrops: _List_Nil,
								navKey: key,
								newPlaylistContext: $elm$core$Maybe$Nothing,
								notifications: _List_Nil,
								nowPlaying: $elm$core$Maybe$Nothing,
								page: page,
								playedPreviously: _List_Nil,
								playingNext: _List_Nil,
								playlistToActivate: $elm$core$Maybe$Nothing,
								playlists: _List_Nil,
								pressedKeys: _List_Nil,
								processAutomatically: true,
								processingContext: _List_Nil,
								processingError: $elm$core$Maybe$Nothing,
								processingNotificationId: $elm$core$Maybe$Nothing,
								progress: $elm$core$Dict$empty,
								rememberProgress: true,
								repeat: false,
								resizeDebouncer: $Gizra$elm_debouncer$Debouncer$Basic$toDebouncer(
									$Gizra$elm_debouncer$Debouncer$Basic$debounce(
										$Gizra$elm_debouncer$Debouncer$Basic$fromSeconds(0.25))),
								scene: $author$project$Tracks$Covers,
								searchDebouncer: $Gizra$elm_debouncer$Debouncer$Basic$toDebouncer(
									$Gizra$elm_debouncer$Debouncer$Basic$debounce(
										$Gizra$elm_debouncer$Debouncer$Basic$fromSeconds(0.5))),
								searchResults: $elm$core$Maybe$Nothing,
								searchTerm: $elm$core$Maybe$Nothing,
								selectedCover: $elm$core$Maybe$Nothing,
								selectedPlaylist: $elm$core$Maybe$Nothing,
								selectedQueueItem: $elm$core$Maybe$Nothing,
								selectedTrackIndexes: _List_Nil,
								serviceWorkerStatus: serviceWorkerStatus,
								showVolumeSlider: false,
								shuffle: false,
								sortBy: $author$project$Tracks$Album,
								sortDirection: $author$project$Tracks$Asc,
								sourceForm: $author$project$UI$Sources$Form$initialModel,
								sources: _List_Nil,
								syncing: $author$project$UI$Syncing$State$initialModel(url),
								tracks: $author$project$Tracks$emptyCollection,
								url: url,
								uuidSeed: $elm$random$Random$initialSeed(flags.initialTime),
								version: flags.version,
								viewport: flags.viewport
							})))));
	});
var $author$project$UI$Syncing$Types$ActivateSync = function (a) {
	return {$: 'ActivateSync', a: a};
};
var $author$project$UI$Tracks$Types$DownloadFinished = {$: 'DownloadFinished'};
var $author$project$UI$Types$ExtractedBackdropColor = function (a) {
	return {$: 'ExtractedBackdropColor', a: a};
};
var $author$project$User$Layer$Fission = function (a) {
	return {$: 'Fission', a: a};
};
var $author$project$UI$Tracks$Types$InsertCoverCache = function (a) {
	return {$: 'InsertCoverCache', a: a};
};
var $author$project$UI$Types$InstalledServiceWorker = {$: 'InstalledServiceWorker'};
var $author$project$UI$Types$InstallingServiceWorker = {$: 'InstallingServiceWorker'};
var $author$project$UI$Types$KeyboardMsg = function (a) {
	return {$: 'KeyboardMsg', a: a};
};
var $author$project$UI$Types$LostWindowFocus = {$: 'LostWindowFocus'};
var $author$project$UI$Types$NoteProgress = function (a) {
	return {$: 'NoteProgress', a: a};
};
var $author$project$UI$Types$Pause = {$: 'Pause'};
var $author$project$UI$Types$Play = {$: 'Play'};
var $author$project$UI$Types$PreferredColorSchemaChanged = function (a) {
	return {$: 'PreferredColorSchemaChanged', a: a};
};
var $author$project$UI$Types$QueueMsg = function (a) {
	return {$: 'QueueMsg', a: a};
};
var $author$project$UI$Types$RedirectToBrain = function (a) {
	return {$: 'RedirectToBrain', a: a};
};
var $author$project$Alien$RefreshedAccessToken = {$: 'RefreshedAccessToken'};
var $author$project$UI$Queue$Types$Rewind = {$: 'Rewind'};
var $author$project$UI$Types$Scrobble = function (a) {
	return {$: 'Scrobble', a: a};
};
var $author$project$UI$Types$SetAudioDuration = function (a) {
	return {$: 'SetAudioDuration', a: a};
};
var $author$project$UI$Types$SetAudioHasStalled = function (a) {
	return {$: 'SetAudioHasStalled', a: a};
};
var $author$project$UI$Types$SetAudioIsLoading = function (a) {
	return {$: 'SetAudioIsLoading', a: a};
};
var $author$project$UI$Types$SetAudioIsPlaying = function (a) {
	return {$: 'SetAudioIsPlaying', a: a};
};
var $author$project$UI$Types$SetAudioPosition = function (a) {
	return {$: 'SetAudioPosition', a: a};
};
var $author$project$UI$Types$SetIsOnline = function (a) {
	return {$: 'SetIsOnline', a: a};
};
var $author$project$UI$Types$SetIsTouchDevice = function (a) {
	return {$: 'SetIsTouchDevice', a: a};
};
var $author$project$UI$Queue$Types$Shift = {$: 'Shift'};
var $author$project$UI$Types$ShowNotification = function (a) {
	return {$: 'ShowNotification', a: a};
};
var $author$project$UI$Types$Stop = {$: 'Stop'};
var $author$project$UI$Types$TogglePlay = {$: 'TogglePlay'};
var $author$project$UI$Types$TracksMsg = function (a) {
	return {$: 'TracksMsg', a: a};
};
var $elm$json$Json$Decode$null = _Json_decodeNull;
var $author$project$UI$Ports$activeQueueItemEnded = _Platform_incomingPort(
	'activeQueueItemEnded',
	$elm$json$Json$Decode$null(_Utils_Tuple0));
var $author$project$UI$Types$Bypass = {$: 'Bypass'};
var $author$project$Alien$AddTracks = {$: 'AddTracks'};
var $author$project$Alien$CollectFissionCapabilities = {$: 'CollectFissionCapabilities'};
var $author$project$Alien$DownloadTracks = {$: 'DownloadTracks'};
var $author$project$Alien$EnclosedData = {$: 'EnclosedData'};
var $author$project$Alien$FinishedProcessingSource = {$: 'FinishedProcessingSource'};
var $author$project$Alien$FinishedProcessingSources = {$: 'FinishedProcessingSources'};
var $author$project$Alien$GotCachedCover = {$: 'GotCachedCover'};
var $author$project$Alien$HideLoadingScreen = {$: 'HideLoadingScreen'};
var $author$project$Alien$LoadEnclosedUserData = {$: 'LoadEnclosedUserData'};
var $author$project$Alien$LoadHypaethralUserData = {$: 'LoadHypaethralUserData'};
var $author$project$Alien$ProcessSources = {$: 'ProcessSources'};
var $author$project$Alien$ReloadTracks = {$: 'ReloadTracks'};
var $author$project$Alien$RemoveEncryptionKey = {$: 'RemoveEncryptionKey'};
var $author$project$Alien$RemoveTracksByPath = {$: 'RemoveTracksByPath'};
var $author$project$Alien$RemoveTracksBySourceId = {$: 'RemoveTracksBySourceId'};
var $author$project$Alien$RemoveTracksFromCache = {$: 'RemoveTracksFromCache'};
var $author$project$Alien$ReportError = {$: 'ReportError'};
var $author$project$Alien$ReportProcessingError = {$: 'ReportProcessingError'};
var $author$project$Alien$ReportProcessingProgress = {$: 'ReportProcessingProgress'};
var $author$project$Alien$SaveEnclosedUserData = {$: 'SaveEnclosedUserData'};
var $author$project$Alien$SaveFavourites = {$: 'SaveFavourites'};
var $author$project$Alien$SavePlaylists = {$: 'SavePlaylists'};
var $author$project$Alien$SaveProgress = {$: 'SaveProgress'};
var $author$project$Alien$SaveSettings = {$: 'SaveSettings'};
var $author$project$Alien$SaveSources = {$: 'SaveSources'};
var $author$project$Alien$SaveTracks = {$: 'SaveTracks'};
var $author$project$Alien$SearchTracks = {$: 'SearchTracks'};
var $author$project$Alien$SecretKey = {$: 'SecretKey'};
var $author$project$Alien$SetSyncMethod = {$: 'SetSyncMethod'};
var $author$project$Alien$StartedSyncing = {$: 'StartedSyncing'};
var $author$project$Alien$StopProcessing = {$: 'StopProcessing'};
var $author$project$Alien$StoreTracksInCache = {$: 'StoreTracksInCache'};
var $author$project$Alien$SyncHypaethralData = {$: 'SyncHypaethralData'};
var $author$project$Alien$SyncLocal = {$: 'SyncLocal'};
var $author$project$Alien$SyncMethod = {$: 'SyncMethod'};
var $author$project$Alien$SyncTrackTags = {$: 'SyncTrackTags'};
var $author$project$Alien$ToCache = {$: 'ToCache'};
var $author$project$Alien$UnsetSyncMethod = {$: 'UnsetSyncMethod'};
var $author$project$Alien$UpdateEncryptionKey = {$: 'UpdateEncryptionKey'};
var $author$project$Alien$UpdateSourceData = {$: 'UpdateSourceData'};
var $elm$json$Json$Decode$fail = _Json_fail;
var $elm$core$List$filter = F2(
	function (isGood, list) {
		return A3(
			$elm$core$List$foldr,
			F2(
				function (x, xs) {
					return isGood(x) ? A2($elm$core$List$cons, x, xs) : xs;
				}),
			_List_Nil,
			list);
	});
var $elm$core$List$head = function (list) {
	if (list.b) {
		var x = list.a;
		var xs = list.b;
		return $elm$core$Maybe$Just(x);
	} else {
		return $elm$core$Maybe$Nothing;
	}
};
var $elm$json$Json$Encode$string = _Json_wrap;
var $Herteby$enum$Enum$create = function (list) {
	var toString = function (a) {
		var _v1 = $elm$core$List$head(
			A2(
				$elm$core$List$filter,
				function (_v2) {
					var str = _v2.a;
					var b = _v2.b;
					return _Utils_eq(b, a);
				},
				list));
		if (_v1.$ === 'Just') {
			var _v3 = _v1.a;
			var str = _v3.a;
			var b = _v3.b;
			return str;
		} else {
			return 'Missing enum';
		}
	};
	var dict = $elm$core$Dict$fromList(list);
	var fromString = function (string) {
		return A2($elm$core$Dict$get, string, dict);
	};
	return {
		decoder: A2(
			$elm$json$Json$Decode$andThen,
			function (string) {
				var _v0 = A2($elm$core$Dict$get, string, dict);
				if (_v0.$ === 'Just') {
					var a = _v0.a;
					return $elm$json$Json$Decode$succeed(a);
				} else {
					return $elm$json$Json$Decode$fail('Missing enum: ' + string);
				}
			},
			$elm$json$Json$Decode$string),
		encode: A2($elm$core$Basics$composeR, toString, $elm$json$Json$Encode$string),
		fromString: fromString,
		list: list,
		toString: toString
	};
};
var $author$project$Alien$enum = $Herteby$enum$Enum$create(
	_List_fromArray(
		[
			_Utils_Tuple2('ENCLOSED_DATA', $author$project$Alien$EnclosedData),
			_Utils_Tuple2('SEARCH_TRACKS', $author$project$Alien$SearchTracks),
			_Utils_Tuple2('SECRET_KEY', $author$project$Alien$SecretKey),
			_Utils_Tuple2('SYNC_LOCAL', $author$project$Alien$SyncLocal),
			_Utils_Tuple2('SYNC_METHOD', $author$project$Alien$SyncMethod),
			_Utils_Tuple2('DOWNLOAD_TRACKS', $author$project$Alien$DownloadTracks),
			_Utils_Tuple2('PROCESS_SOURCES', $author$project$Alien$ProcessSources),
			_Utils_Tuple2('REFRESHED_ACCESS_TOKEN', $author$project$Alien$RefreshedAccessToken),
			_Utils_Tuple2('REMOVE_ENCRYPTION_KEY', $author$project$Alien$RemoveEncryptionKey),
			_Utils_Tuple2('REMOVE_TRACKS_BY_SOURCE_ID', $author$project$Alien$RemoveTracksBySourceId),
			_Utils_Tuple2('REMOVE_TRACKS_FROM_CACHE', $author$project$Alien$RemoveTracksFromCache),
			_Utils_Tuple2('SAVE_ENCLOSED_USER_DATA', $author$project$Alien$SaveEnclosedUserData),
			_Utils_Tuple2('SAVE_FAVOURITES', $author$project$Alien$SaveFavourites),
			_Utils_Tuple2('SAVE_PLAYLISTS', $author$project$Alien$SavePlaylists),
			_Utils_Tuple2('SAVE_PROGRESS', $author$project$Alien$SaveProgress),
			_Utils_Tuple2('SAVE_SETTINGS', $author$project$Alien$SaveSettings),
			_Utils_Tuple2('SAVE_SOURCES', $author$project$Alien$SaveSources),
			_Utils_Tuple2('SAVE_TRACKS', $author$project$Alien$SaveTracks),
			_Utils_Tuple2('SET_SYNC_METHOD', $author$project$Alien$SetSyncMethod),
			_Utils_Tuple2('STOP_PROCESSING', $author$project$Alien$StopProcessing),
			_Utils_Tuple2('STORE_TRACKS_IN_CACHE', $author$project$Alien$StoreTracksInCache),
			_Utils_Tuple2('SYNC_HYPAETHRAL_DATA', $author$project$Alien$SyncHypaethralData),
			_Utils_Tuple2('SYNC_TRACK_TAGS', $author$project$Alien$SyncTrackTags),
			_Utils_Tuple2('TO_CACHE', $author$project$Alien$ToCache),
			_Utils_Tuple2('UNSET_SYNC_METHOD', $author$project$Alien$UnsetSyncMethod),
			_Utils_Tuple2('UPDATE_ENCRYPTION_KEY', $author$project$Alien$UpdateEncryptionKey),
			_Utils_Tuple2('ADD_TRACKS', $author$project$Alien$AddTracks),
			_Utils_Tuple2('COLLECT_FISSION_CAPABILITIES', $author$project$Alien$CollectFissionCapabilities),
			_Utils_Tuple2('FINISHED_PROCESSING_SOURCE', $author$project$Alien$FinishedProcessingSource),
			_Utils_Tuple2('FINISHED_PROCESSING_SOURCES', $author$project$Alien$FinishedProcessingSources),
			_Utils_Tuple2('GOT_CACHED_COVER', $author$project$Alien$GotCachedCover),
			_Utils_Tuple2('HIDE_LOADING_SCREEN', $author$project$Alien$HideLoadingScreen),
			_Utils_Tuple2('LOAD_ENCLOSED_USER_DATA', $author$project$Alien$LoadEnclosedUserData),
			_Utils_Tuple2('LOAD_HYPAETHRAL_USER_DATA', $author$project$Alien$LoadHypaethralUserData),
			_Utils_Tuple2('RELOAD_TRACKS', $author$project$Alien$ReloadTracks),
			_Utils_Tuple2('REMOVE_TRACKS_BY_PATH', $author$project$Alien$RemoveTracksByPath),
			_Utils_Tuple2('REPORT_ERROR', $author$project$Alien$ReportError),
			_Utils_Tuple2('REPORT_PROCESSING_ERROR', $author$project$Alien$ReportProcessingError),
			_Utils_Tuple2('REPORT_PROCESSING_PROGRESS', $author$project$Alien$ReportProcessingProgress),
			_Utils_Tuple2('STARTED_SYNCING', $author$project$Alien$StartedSyncing),
			_Utils_Tuple2('UPDATE_SOURCE_DATA', $author$project$Alien$UpdateSourceData)
		]));
var $author$project$Alien$tagFromString = $author$project$Alien$enum.fromString;
var $author$project$UI$Tracks$Types$Add = function (a) {
	return {$: 'Add', a: a};
};
var $author$project$UI$Syncing$Types$CollectFissionCapabilities = {$: 'CollectFissionCapabilities'};
var $author$project$UI$Sources$Types$FinishedProcessing = {$: 'FinishedProcessing'};
var $author$project$UI$Sources$Types$FinishedProcessingSource = function (a) {
	return {$: 'FinishedProcessingSource', a: a};
};
var $author$project$UI$Tracks$Types$GotCachedCover = function (a) {
	return {$: 'GotCachedCover', a: a};
};
var $author$project$UI$Syncing$Types$GotSyncMethod = function (a) {
	return {$: 'GotSyncMethod', a: a};
};
var $author$project$UI$Types$LoadEnclosedUserData = function (a) {
	return {$: 'LoadEnclosedUserData', a: a};
};
var $author$project$UI$Types$LoadHypaethralUserData = function (a) {
	return {$: 'LoadHypaethralUserData', a: a};
};
var $author$project$Common$Off = {$: 'Off'};
var $author$project$UI$Tracks$Types$Reload = function (a) {
	return {$: 'Reload', a: a};
};
var $author$project$UI$Tracks$Types$RemoveByPaths = function (a) {
	return {$: 'RemoveByPaths', a: a};
};
var $author$project$UI$Sources$Types$ReportProcessingError = function (a) {
	return {$: 'ReportProcessingError', a: a};
};
var $author$project$UI$Sources$Types$ReportProcessingProgress = function (a) {
	return {$: 'ReportProcessingProgress', a: a};
};
var $author$project$UI$Tracks$Types$SetSearchResults = function (a) {
	return {$: 'SetSearchResults', a: a};
};
var $author$project$UI$Types$SourcesMsg = function (a) {
	return {$: 'SourcesMsg', a: a};
};
var $author$project$UI$Syncing$Types$StartedSyncing = function (a) {
	return {$: 'StartedSyncing', a: a};
};
var $author$project$UI$Tracks$Types$StoredInCache = F2(
	function (a, b) {
		return {$: 'StoredInCache', a: a, b: b};
	});
var $author$project$UI$Types$ToggleLoadingScreen = function (a) {
	return {$: 'ToggleLoadingScreen', a: a};
};
var $author$project$UI$Sources$Types$UpdateSourceData = function (a) {
	return {$: 'UpdateSourceData', a: a};
};
var $author$project$UI$translateAlienData = F2(
	function (tag, data) {
		switch (tag.$) {
			case 'AddTracks':
				return $author$project$UI$Types$TracksMsg(
					$author$project$UI$Tracks$Types$Add(data));
			case 'CollectFissionCapabilities':
				return $author$project$UI$Types$SyncingMsg($author$project$UI$Syncing$Types$CollectFissionCapabilities);
			case 'FinishedProcessingSource':
				return $author$project$UI$Types$SourcesMsg(
					$author$project$UI$Sources$Types$FinishedProcessingSource(data));
			case 'FinishedProcessingSources':
				return $author$project$UI$Types$SourcesMsg($author$project$UI$Sources$Types$FinishedProcessing);
			case 'GotCachedCover':
				return $author$project$UI$Types$TracksMsg(
					$author$project$UI$Tracks$Types$GotCachedCover(data));
			case 'HideLoadingScreen':
				return $author$project$UI$Types$ToggleLoadingScreen($author$project$Common$Off);
			case 'LoadEnclosedUserData':
				return $author$project$UI$Types$LoadEnclosedUserData(data);
			case 'LoadHypaethralUserData':
				return $author$project$UI$Types$LoadHypaethralUserData(data);
			case 'ReloadTracks':
				return $author$project$UI$Types$TracksMsg(
					$author$project$UI$Tracks$Types$Reload(data));
			case 'RemoveTracksByPath':
				return $author$project$UI$Types$TracksMsg(
					$author$project$UI$Tracks$Types$RemoveByPaths(data));
			case 'ReportProcessingError':
				return $author$project$UI$Types$SourcesMsg(
					$author$project$UI$Sources$Types$ReportProcessingError(data));
			case 'ReportProcessingProgress':
				return $author$project$UI$Types$SourcesMsg(
					$author$project$UI$Sources$Types$ReportProcessingProgress(data));
			case 'SearchTracks':
				return $author$project$UI$Types$TracksMsg(
					$author$project$UI$Tracks$Types$SetSearchResults(data));
			case 'StartedSyncing':
				return $author$project$UI$Types$SyncingMsg(
					$author$project$UI$Syncing$Types$StartedSyncing(data));
			case 'StoreTracksInCache':
				return $author$project$UI$Types$TracksMsg(
					A2($author$project$UI$Tracks$Types$StoredInCache, data, $elm$core$Maybe$Nothing));
			case 'SyncMethod':
				return $author$project$UI$Types$SyncingMsg(
					$author$project$UI$Syncing$Types$GotSyncMethod(data));
			case 'UpdateSourceData':
				return $author$project$UI$Types$SourcesMsg(
					$author$project$UI$Sources$Types$UpdateSourceData(data));
			default:
				return $author$project$UI$Types$Bypass;
		}
	});
var $author$project$UI$Syncing$Types$NeedEncryptionKey = function (a) {
	return {$: 'NeedEncryptionKey', a: a};
};
var $author$project$Notifications$Error = {$: 'Error'};
var $author$project$Notifications$Notification = F4(
	function (a, b, c, d) {
		return {$: 'Notification', a: a, b: b, c: c, d: d};
	});
var $robinheghan$murmur3$Murmur3$HashData = F4(
	function (shift, seed, hash, charsProcessed) {
		return {charsProcessed: charsProcessed, hash: hash, seed: seed, shift: shift};
	});
var $robinheghan$murmur3$Murmur3$c1 = 3432918353;
var $robinheghan$murmur3$Murmur3$c2 = 461845907;
var $robinheghan$murmur3$Murmur3$multiplyBy = F2(
	function (b, a) {
		return ((a & 65535) * b) + ((((a >>> 16) * b) & 65535) << 16);
	});
var $elm$core$Basics$neq = _Utils_notEqual;
var $robinheghan$murmur3$Murmur3$rotlBy = F2(
	function (b, a) {
		return (a << b) | (a >>> (32 - b));
	});
var $elm$core$Bitwise$xor = _Bitwise_xor;
var $robinheghan$murmur3$Murmur3$finalize = function (data) {
	var acc = (!(!data.hash)) ? (data.seed ^ A2(
		$robinheghan$murmur3$Murmur3$multiplyBy,
		$robinheghan$murmur3$Murmur3$c2,
		A2(
			$robinheghan$murmur3$Murmur3$rotlBy,
			15,
			A2($robinheghan$murmur3$Murmur3$multiplyBy, $robinheghan$murmur3$Murmur3$c1, data.hash)))) : data.seed;
	var h0 = acc ^ data.charsProcessed;
	var h1 = A2($robinheghan$murmur3$Murmur3$multiplyBy, 2246822507, h0 ^ (h0 >>> 16));
	var h2 = A2($robinheghan$murmur3$Murmur3$multiplyBy, 3266489909, h1 ^ (h1 >>> 13));
	return (h2 ^ (h2 >>> 16)) >>> 0;
};
var $robinheghan$murmur3$Murmur3$mix = F2(
	function (h1, k1) {
		return A2(
			$robinheghan$murmur3$Murmur3$multiplyBy,
			5,
			A2(
				$robinheghan$murmur3$Murmur3$rotlBy,
				13,
				h1 ^ A2(
					$robinheghan$murmur3$Murmur3$multiplyBy,
					$robinheghan$murmur3$Murmur3$c2,
					A2(
						$robinheghan$murmur3$Murmur3$rotlBy,
						15,
						A2($robinheghan$murmur3$Murmur3$multiplyBy, $robinheghan$murmur3$Murmur3$c1, k1))))) + 3864292196;
	});
var $robinheghan$murmur3$Murmur3$hashFold = F2(
	function (c, data) {
		var res = data.hash | ((255 & $elm$core$Char$toCode(c)) << data.shift);
		var _v0 = data.shift;
		if (_v0 === 24) {
			return {
				charsProcessed: data.charsProcessed + 1,
				hash: 0,
				seed: A2($robinheghan$murmur3$Murmur3$mix, data.seed, res),
				shift: 0
			};
		} else {
			return {charsProcessed: data.charsProcessed + 1, hash: res, seed: data.seed, shift: data.shift + 8};
		}
	});
var $robinheghan$murmur3$Murmur3$hashString = F2(
	function (seed, str) {
		return $robinheghan$murmur3$Murmur3$finalize(
			A3(
				$elm$core$String$foldl,
				$robinheghan$murmur3$Murmur3$hashFold,
				A4($robinheghan$murmur3$Murmur3$HashData, 0, seed, 0, 0),
				str));
	});
var $elm$core$String$lines = _String_lines;
var $elm_explorations$markdown$Markdown$defaultOptions = {
	defaultHighlighting: $elm$core$Maybe$Nothing,
	githubFlavored: $elm$core$Maybe$Just(
		{breaks: false, tables: false}),
	sanitize: true,
	smartypants: false
};
var $elm_explorations$markdown$Markdown$toHtmlWith = _Markdown_toHtml;
var $elm_explorations$markdown$Markdown$toHtml = $elm_explorations$markdown$Markdown$toHtmlWith($elm_explorations$markdown$Markdown$defaultOptions);
var $elm$core$String$trimLeft = _String_trimLeft;
var $author$project$Notifications$render = function (content) {
	return A2(
		$elm_explorations$markdown$Markdown$toHtml,
		_List_Nil,
		A2(
			$elm$core$String$join,
			'\n',
			A2(
				$elm$core$List$map,
				$elm$core$String$trimLeft,
				$elm$core$String$lines(content))));
};
var $author$project$Notifications$stickyError = function (content) {
	return A4(
		$author$project$Notifications$Notification,
		$author$project$Notifications$Error,
		A2($robinheghan$murmur3$Murmur3$hashString, 0, content),
		{sticky: true, wasDismissed: false},
		$author$project$Notifications$render(content));
};
var $author$project$UI$translateAlienError = F3(
	function (tag, data, err) {
		if (tag.$ === 'StoreTracksInCache') {
			return $author$project$UI$Types$TracksMsg(
				A2(
					$author$project$UI$Tracks$Types$StoredInCache,
					data,
					$elm$core$Maybe$Just(err)));
		} else {
			return A2($elm$core$String$startsWith, 'There seems to be existing data that\'s encrypted, I will need the passphrase', err) ? $author$project$UI$Types$SyncingMsg(
				$author$project$UI$Syncing$Types$NeedEncryptionKey(
					{error: err})) : $author$project$UI$Types$ShowNotification(
				$author$project$Notifications$stickyError(err));
		}
	});
var $author$project$UI$alien = function (event) {
	var _v0 = _Utils_Tuple2(
		event.error,
		$author$project$Alien$tagFromString(event.tag));
	_v0$2:
	while (true) {
		if (_v0.a.$ === 'Nothing') {
			if (_v0.b.$ === 'Just') {
				var _v1 = _v0.a;
				var tag = _v0.b.a;
				return A2($author$project$UI$translateAlienData, tag, event.data);
			} else {
				break _v0$2;
			}
		} else {
			if (_v0.b.$ === 'Just') {
				var err = _v0.a.a;
				var tag = _v0.b.a;
				return A3($author$project$UI$translateAlienError, tag, event.data, err);
			} else {
				break _v0$2;
			}
		}
	}
	return $author$project$UI$Types$Bypass;
};
var $elm$core$Basics$always = F2(
	function (a, _v0) {
		return a;
	});
var $elm$core$Platform$Sub$batch = _Platform_batch;
var $author$project$Alien$tagToString = $author$project$Alien$enum.toString;
var $author$project$Alien$broadcast = F2(
	function (tag, data) {
		return {
			data: data,
			error: $elm$core$Maybe$Nothing,
			tag: $author$project$Alien$tagToString(tag)
		};
	});
var $author$project$UI$Ports$collectedFissionCapabilities = _Platform_incomingPort(
	'collectedFissionCapabilities',
	$elm$json$Json$Decode$null(_Utils_Tuple0));
var $author$project$UI$Ports$downloadTracksFinished = _Platform_incomingPort(
	'downloadTracksFinished',
	$elm$json$Json$Decode$null(_Utils_Tuple0));
var $author$project$Notifications$error = function (content) {
	return A4(
		$author$project$Notifications$Notification,
		$author$project$Notifications$Error,
		A2($robinheghan$murmur3$Murmur3$hashString, 0, content),
		{sticky: false, wasDismissed: false},
		$author$project$Notifications$render(content));
};
var $elm$time$Time$Every = F2(
	function (a, b) {
		return {$: 'Every', a: a, b: b};
	});
var $elm$time$Time$State = F2(
	function (taggers, processes) {
		return {processes: processes, taggers: taggers};
	});
var $elm$time$Time$init = $elm$core$Task$succeed(
	A2($elm$time$Time$State, $elm$core$Dict$empty, $elm$core$Dict$empty));
var $elm$time$Time$addMySub = F2(
	function (_v0, state) {
		var interval = _v0.a;
		var tagger = _v0.b;
		var _v1 = A2($elm$core$Dict$get, interval, state);
		if (_v1.$ === 'Nothing') {
			return A3(
				$elm$core$Dict$insert,
				interval,
				_List_fromArray(
					[tagger]),
				state);
		} else {
			var taggers = _v1.a;
			return A3(
				$elm$core$Dict$insert,
				interval,
				A2($elm$core$List$cons, tagger, taggers),
				state);
		}
	});
var $elm$core$Dict$merge = F6(
	function (leftStep, bothStep, rightStep, leftDict, rightDict, initialResult) {
		var stepState = F3(
			function (rKey, rValue, _v0) {
				stepState:
				while (true) {
					var list = _v0.a;
					var result = _v0.b;
					if (!list.b) {
						return _Utils_Tuple2(
							list,
							A3(rightStep, rKey, rValue, result));
					} else {
						var _v2 = list.a;
						var lKey = _v2.a;
						var lValue = _v2.b;
						var rest = list.b;
						if (_Utils_cmp(lKey, rKey) < 0) {
							var $temp$rKey = rKey,
								$temp$rValue = rValue,
								$temp$_v0 = _Utils_Tuple2(
								rest,
								A3(leftStep, lKey, lValue, result));
							rKey = $temp$rKey;
							rValue = $temp$rValue;
							_v0 = $temp$_v0;
							continue stepState;
						} else {
							if (_Utils_cmp(lKey, rKey) > 0) {
								return _Utils_Tuple2(
									list,
									A3(rightStep, rKey, rValue, result));
							} else {
								return _Utils_Tuple2(
									rest,
									A4(bothStep, lKey, lValue, rValue, result));
							}
						}
					}
				}
			});
		var _v3 = A3(
			$elm$core$Dict$foldl,
			stepState,
			_Utils_Tuple2(
				$elm$core$Dict$toList(leftDict),
				initialResult),
			rightDict);
		var leftovers = _v3.a;
		var intermediateResult = _v3.b;
		return A3(
			$elm$core$List$foldl,
			F2(
				function (_v4, result) {
					var k = _v4.a;
					var v = _v4.b;
					return A3(leftStep, k, v, result);
				}),
			intermediateResult,
			leftovers);
	});
var $elm$time$Time$setInterval = _Time_setInterval;
var $elm$time$Time$spawnHelp = F3(
	function (router, intervals, processes) {
		if (!intervals.b) {
			return $elm$core$Task$succeed(processes);
		} else {
			var interval = intervals.a;
			var rest = intervals.b;
			var spawnTimer = $elm$core$Process$spawn(
				A2(
					$elm$time$Time$setInterval,
					interval,
					A2($elm$core$Platform$sendToSelf, router, interval)));
			var spawnRest = function (id) {
				return A3(
					$elm$time$Time$spawnHelp,
					router,
					rest,
					A3($elm$core$Dict$insert, interval, id, processes));
			};
			return A2($elm$core$Task$andThen, spawnRest, spawnTimer);
		}
	});
var $elm$time$Time$onEffects = F3(
	function (router, subs, _v0) {
		var processes = _v0.processes;
		var rightStep = F3(
			function (_v6, id, _v7) {
				var spawns = _v7.a;
				var existing = _v7.b;
				var kills = _v7.c;
				return _Utils_Tuple3(
					spawns,
					existing,
					A2(
						$elm$core$Task$andThen,
						function (_v5) {
							return kills;
						},
						$elm$core$Process$kill(id)));
			});
		var newTaggers = A3($elm$core$List$foldl, $elm$time$Time$addMySub, $elm$core$Dict$empty, subs);
		var leftStep = F3(
			function (interval, taggers, _v4) {
				var spawns = _v4.a;
				var existing = _v4.b;
				var kills = _v4.c;
				return _Utils_Tuple3(
					A2($elm$core$List$cons, interval, spawns),
					existing,
					kills);
			});
		var bothStep = F4(
			function (interval, taggers, id, _v3) {
				var spawns = _v3.a;
				var existing = _v3.b;
				var kills = _v3.c;
				return _Utils_Tuple3(
					spawns,
					A3($elm$core$Dict$insert, interval, id, existing),
					kills);
			});
		var _v1 = A6(
			$elm$core$Dict$merge,
			leftStep,
			bothStep,
			rightStep,
			newTaggers,
			processes,
			_Utils_Tuple3(
				_List_Nil,
				$elm$core$Dict$empty,
				$elm$core$Task$succeed(_Utils_Tuple0)));
		var spawnList = _v1.a;
		var existingDict = _v1.b;
		var killTask = _v1.c;
		return A2(
			$elm$core$Task$andThen,
			function (newProcesses) {
				return $elm$core$Task$succeed(
					A2($elm$time$Time$State, newTaggers, newProcesses));
			},
			A2(
				$elm$core$Task$andThen,
				function (_v2) {
					return A3($elm$time$Time$spawnHelp, router, spawnList, existingDict);
				},
				killTask));
	});
var $elm$time$Time$onSelfMsg = F3(
	function (router, interval, state) {
		var _v0 = A2($elm$core$Dict$get, interval, state.taggers);
		if (_v0.$ === 'Nothing') {
			return $elm$core$Task$succeed(state);
		} else {
			var taggers = _v0.a;
			var tellTaggers = function (time) {
				return $elm$core$Task$sequence(
					A2(
						$elm$core$List$map,
						function (tagger) {
							return A2(
								$elm$core$Platform$sendToApp,
								router,
								tagger(time));
						},
						taggers));
			};
			return A2(
				$elm$core$Task$andThen,
				function (_v1) {
					return $elm$core$Task$succeed(state);
				},
				A2($elm$core$Task$andThen, tellTaggers, $elm$time$Time$now));
		}
	});
var $elm$time$Time$subMap = F2(
	function (f, _v0) {
		var interval = _v0.a;
		var tagger = _v0.b;
		return A2(
			$elm$time$Time$Every,
			interval,
			A2($elm$core$Basics$composeL, f, tagger));
	});
_Platform_effectManagers['Time'] = _Platform_createManager($elm$time$Time$init, $elm$time$Time$onEffects, $elm$time$Time$onSelfMsg, 0, $elm$time$Time$subMap);
var $elm$time$Time$subscription = _Platform_leaf('Time');
var $elm$time$Time$every = F2(
	function (interval, tagger) {
		return $elm$time$Time$subscription(
			A2($elm$time$Time$Every, interval, tagger));
	});
var $elm$json$Json$Decode$value = _Json_decodeValue;
var $author$project$UI$Ports$fromAlien = _Platform_incomingPort(
	'fromAlien',
	A2(
		$elm$json$Json$Decode$andThen,
		function (tag) {
			return A2(
				$elm$json$Json$Decode$andThen,
				function (error) {
					return A2(
						$elm$json$Json$Decode$andThen,
						function (data) {
							return $elm$json$Json$Decode$succeed(
								{data: data, error: error, tag: tag});
						},
						A2($elm$json$Json$Decode$field, 'data', $elm$json$Json$Decode$value));
				},
				A2(
					$elm$json$Json$Decode$field,
					'error',
					$elm$json$Json$Decode$oneOf(
						_List_fromArray(
							[
								$elm$json$Json$Decode$null($elm$core$Maybe$Nothing),
								A2($elm$json$Json$Decode$map, $elm$core$Maybe$Just, $elm$json$Json$Decode$string)
							]))));
		},
		A2($elm$json$Json$Decode$field, 'tag', $elm$json$Json$Decode$string)));
var $author$project$UI$Ports$indicateTouchDevice = _Platform_incomingPort(
	'indicateTouchDevice',
	$elm$json$Json$Decode$null(_Utils_Tuple0));
var $author$project$UI$Ports$insertCoverCache = _Platform_incomingPort('insertCoverCache', $elm$json$Json$Decode$value);
var $author$project$UI$Ports$installedNewServiceWorker = _Platform_incomingPort(
	'installedNewServiceWorker',
	$elm$json$Json$Decode$null(_Utils_Tuple0));
var $author$project$UI$Ports$installingNewServiceWorker = _Platform_incomingPort(
	'installingNewServiceWorker',
	$elm$json$Json$Decode$null(_Utils_Tuple0));
var $author$project$UI$Ports$lostWindowFocus = _Platform_incomingPort(
	'lostWindowFocus',
	$elm$json$Json$Decode$null(_Utils_Tuple0));
var $elm$core$Platform$Sub$map = _Platform_map;
var $author$project$UI$Ports$noteProgress = _Platform_incomingPort(
	'noteProgress',
	A2(
		$elm$json$Json$Decode$andThen,
		function (trackId) {
			return A2(
				$elm$json$Json$Decode$andThen,
				function (progress) {
					return $elm$json$Json$Decode$succeed(
						{progress: progress, trackId: trackId});
				},
				A2($elm$json$Json$Decode$field, 'progress', $elm$json$Json$Decode$float));
		},
		A2($elm$json$Json$Decode$field, 'trackId', $elm$json$Json$Decode$string)));
var $elm$browser$Browser$Events$Window = {$: 'Window'};
var $elm$browser$Browser$Events$MySub = F3(
	function (a, b, c) {
		return {$: 'MySub', a: a, b: b, c: c};
	});
var $elm$browser$Browser$Events$State = F2(
	function (subs, pids) {
		return {pids: pids, subs: subs};
	});
var $elm$browser$Browser$Events$init = $elm$core$Task$succeed(
	A2($elm$browser$Browser$Events$State, _List_Nil, $elm$core$Dict$empty));
var $elm$browser$Browser$Events$nodeToKey = function (node) {
	if (node.$ === 'Document') {
		return 'd_';
	} else {
		return 'w_';
	}
};
var $elm$browser$Browser$Events$addKey = function (sub) {
	var node = sub.a;
	var name = sub.b;
	return _Utils_Tuple2(
		_Utils_ap(
			$elm$browser$Browser$Events$nodeToKey(node),
			name),
		sub);
};
var $elm$browser$Browser$Events$Event = F2(
	function (key, event) {
		return {event: event, key: key};
	});
var $elm$browser$Browser$Events$spawn = F3(
	function (router, key, _v0) {
		var node = _v0.a;
		var name = _v0.b;
		var actualNode = function () {
			if (node.$ === 'Document') {
				return _Browser_doc;
			} else {
				return _Browser_window;
			}
		}();
		return A2(
			$elm$core$Task$map,
			function (value) {
				return _Utils_Tuple2(key, value);
			},
			A3(
				_Browser_on,
				actualNode,
				name,
				function (event) {
					return A2(
						$elm$core$Platform$sendToSelf,
						router,
						A2($elm$browser$Browser$Events$Event, key, event));
				}));
	});
var $elm$browser$Browser$Events$onEffects = F3(
	function (router, subs, state) {
		var stepRight = F3(
			function (key, sub, _v6) {
				var deads = _v6.a;
				var lives = _v6.b;
				var news = _v6.c;
				return _Utils_Tuple3(
					deads,
					lives,
					A2(
						$elm$core$List$cons,
						A3($elm$browser$Browser$Events$spawn, router, key, sub),
						news));
			});
		var stepLeft = F3(
			function (_v4, pid, _v5) {
				var deads = _v5.a;
				var lives = _v5.b;
				var news = _v5.c;
				return _Utils_Tuple3(
					A2($elm$core$List$cons, pid, deads),
					lives,
					news);
			});
		var stepBoth = F4(
			function (key, pid, _v2, _v3) {
				var deads = _v3.a;
				var lives = _v3.b;
				var news = _v3.c;
				return _Utils_Tuple3(
					deads,
					A3($elm$core$Dict$insert, key, pid, lives),
					news);
			});
		var newSubs = A2($elm$core$List$map, $elm$browser$Browser$Events$addKey, subs);
		var _v0 = A6(
			$elm$core$Dict$merge,
			stepLeft,
			stepBoth,
			stepRight,
			state.pids,
			$elm$core$Dict$fromList(newSubs),
			_Utils_Tuple3(_List_Nil, $elm$core$Dict$empty, _List_Nil));
		var deadPids = _v0.a;
		var livePids = _v0.b;
		var makeNewPids = _v0.c;
		return A2(
			$elm$core$Task$andThen,
			function (pids) {
				return $elm$core$Task$succeed(
					A2(
						$elm$browser$Browser$Events$State,
						newSubs,
						A2(
							$elm$core$Dict$union,
							livePids,
							$elm$core$Dict$fromList(pids))));
			},
			A2(
				$elm$core$Task$andThen,
				function (_v1) {
					return $elm$core$Task$sequence(makeNewPids);
				},
				$elm$core$Task$sequence(
					A2($elm$core$List$map, $elm$core$Process$kill, deadPids))));
	});
var $elm$browser$Browser$Events$onSelfMsg = F3(
	function (router, _v0, state) {
		var key = _v0.key;
		var event = _v0.event;
		var toMessage = function (_v2) {
			var subKey = _v2.a;
			var _v3 = _v2.b;
			var node = _v3.a;
			var name = _v3.b;
			var decoder = _v3.c;
			return _Utils_eq(subKey, key) ? A2(_Browser_decodeEvent, decoder, event) : $elm$core$Maybe$Nothing;
		};
		var messages = A2($elm$core$List$filterMap, toMessage, state.subs);
		return A2(
			$elm$core$Task$andThen,
			function (_v1) {
				return $elm$core$Task$succeed(state);
			},
			$elm$core$Task$sequence(
				A2(
					$elm$core$List$map,
					$elm$core$Platform$sendToApp(router),
					messages)));
	});
var $elm$browser$Browser$Events$subMap = F2(
	function (func, _v0) {
		var node = _v0.a;
		var name = _v0.b;
		var decoder = _v0.c;
		return A3(
			$elm$browser$Browser$Events$MySub,
			node,
			name,
			A2($elm$json$Json$Decode$map, func, decoder));
	});
_Platform_effectManagers['Browser.Events'] = _Platform_createManager($elm$browser$Browser$Events$init, $elm$browser$Browser$Events$onEffects, $elm$browser$Browser$Events$onSelfMsg, 0, $elm$browser$Browser$Events$subMap);
var $elm$browser$Browser$Events$subscription = _Platform_leaf('Browser.Events');
var $elm$browser$Browser$Events$on = F3(
	function (node, name, decoder) {
		return $elm$browser$Browser$Events$subscription(
			A3($elm$browser$Browser$Events$MySub, node, name, decoder));
	});
var $elm$browser$Browser$Events$onResize = function (func) {
	return A3(
		$elm$browser$Browser$Events$on,
		$elm$browser$Browser$Events$Window,
		'resize',
		A2(
			$elm$json$Json$Decode$field,
			'target',
			A3(
				$elm$json$Json$Decode$map2,
				func,
				A2($elm$json$Json$Decode$field, 'innerWidth', $elm$json$Json$Decode$int),
				A2($elm$json$Json$Decode$field, 'innerHeight', $elm$json$Json$Decode$int))));
};
var $author$project$UI$Types$ResizeDebounce = function (a) {
	return {$: 'ResizeDebounce', a: a};
};
var $author$project$UI$Types$ResizedWindow = function (a) {
	return {$: 'ResizedWindow', a: a};
};
var $Gizra$elm_debouncer$Debouncer$Basic$ProvideInput = function (a) {
	return {$: 'ProvideInput', a: a};
};
var $Gizra$elm_debouncer$Debouncer$Basic$provideInput = $Gizra$elm_debouncer$Debouncer$Basic$ProvideInput;
var $author$project$UI$Interface$State$onResize = F2(
	function (w, h) {
		return $author$project$UI$Types$ResizeDebounce(
			$Gizra$elm_debouncer$Debouncer$Basic$provideInput(
				$author$project$UI$Types$ResizedWindow(
					_Utils_Tuple2(w, h))));
	});
var $author$project$UI$Ports$preferredColorSchemaChanged = _Platform_incomingPort(
	'preferredColorSchemaChanged',
	A2(
		$elm$json$Json$Decode$andThen,
		function (dark) {
			return $elm$json$Json$Decode$succeed(
				{dark: dark});
		},
		A2($elm$json$Json$Decode$field, 'dark', $elm$json$Json$Decode$bool)));
var $author$project$UI$Ports$refreshedAccessToken = _Platform_incomingPort('refreshedAccessToken', $elm$json$Json$Decode$value);
var $author$project$UI$Ports$requestNext = _Platform_incomingPort(
	'requestNext',
	$elm$json$Json$Decode$null(_Utils_Tuple0));
var $author$project$UI$Ports$requestPause = _Platform_incomingPort(
	'requestPause',
	$elm$json$Json$Decode$null(_Utils_Tuple0));
var $author$project$UI$Ports$requestPlay = _Platform_incomingPort(
	'requestPlay',
	$elm$json$Json$Decode$null(_Utils_Tuple0));
var $author$project$UI$Ports$requestPlayPause = _Platform_incomingPort(
	'requestPlayPause',
	$elm$json$Json$Decode$null(_Utils_Tuple0));
var $author$project$UI$Ports$requestPrevious = _Platform_incomingPort(
	'requestPrevious',
	$elm$json$Json$Decode$null(_Utils_Tuple0));
var $author$project$UI$Ports$requestStop = _Platform_incomingPort(
	'requestStop',
	$elm$json$Json$Decode$null(_Utils_Tuple0));
var $author$project$UI$Ports$scrobble = _Platform_incomingPort(
	'scrobble',
	A2(
		$elm$json$Json$Decode$andThen,
		function (trackId) {
			return A2(
				$elm$json$Json$Decode$andThen,
				function (timestamp) {
					return A2(
						$elm$json$Json$Decode$andThen,
						function (duration) {
							return $elm$json$Json$Decode$succeed(
								{duration: duration, timestamp: timestamp, trackId: trackId});
						},
						A2($elm$json$Json$Decode$field, 'duration', $elm$json$Json$Decode$int));
				},
				A2($elm$json$Json$Decode$field, 'timestamp', $elm$json$Json$Decode$int));
		},
		A2($elm$json$Json$Decode$field, 'trackId', $elm$json$Json$Decode$string)));
var $author$project$UI$Ports$setAudioDuration = _Platform_incomingPort('setAudioDuration', $elm$json$Json$Decode$float);
var $author$project$UI$Ports$setAudioHasStalled = _Platform_incomingPort('setAudioHasStalled', $elm$json$Json$Decode$bool);
var $author$project$UI$Ports$setAudioIsLoading = _Platform_incomingPort('setAudioIsLoading', $elm$json$Json$Decode$bool);
var $author$project$UI$Ports$setAudioIsPlaying = _Platform_incomingPort('setAudioIsPlaying', $elm$json$Json$Decode$bool);
var $author$project$UI$Ports$setAudioPosition = _Platform_incomingPort('setAudioPosition', $elm$json$Json$Decode$float);
var $author$project$UI$Ports$setAverageBackgroundColor = _Platform_incomingPort(
	'setAverageBackgroundColor',
	A2(
		$elm$json$Json$Decode$andThen,
		function (r) {
			return A2(
				$elm$json$Json$Decode$andThen,
				function (g) {
					return A2(
						$elm$json$Json$Decode$andThen,
						function (b) {
							return $elm$json$Json$Decode$succeed(
								{b: b, g: g, r: r});
						},
						A2($elm$json$Json$Decode$field, 'b', $elm$json$Json$Decode$int));
				},
				A2($elm$json$Json$Decode$field, 'g', $elm$json$Json$Decode$int));
		},
		A2($elm$json$Json$Decode$field, 'r', $elm$json$Json$Decode$int)));
var $author$project$UI$Ports$setIsOnline = _Platform_incomingPort('setIsOnline', $elm$json$Json$Decode$bool);
var $author$project$UI$Ports$showErrorNotification = _Platform_incomingPort('showErrorNotification', $elm$json$Json$Decode$string);
var $author$project$UI$Ports$showStickyErrorNotification = _Platform_incomingPort('showStickyErrorNotification', $elm$json$Json$Decode$string);
var $ohanhi$keyboard$Keyboard$Down = function (a) {
	return {$: 'Down', a: a};
};
var $ohanhi$keyboard$Keyboard$Up = function (a) {
	return {$: 'Up', a: a};
};
var $ohanhi$keyboard$Keyboard$RawKey = function (a) {
	return {$: 'RawKey', a: a};
};
var $ohanhi$keyboard$Keyboard$eventKeyDecoder = A2(
	$elm$json$Json$Decode$field,
	'key',
	A2($elm$json$Json$Decode$map, $ohanhi$keyboard$Keyboard$RawKey, $elm$json$Json$Decode$string));
var $elm$browser$Browser$Events$Document = {$: 'Document'};
var $elm$browser$Browser$Events$onKeyDown = A2($elm$browser$Browser$Events$on, $elm$browser$Browser$Events$Document, 'keydown');
var $ohanhi$keyboard$Keyboard$downs = function (toMsg) {
	return $elm$browser$Browser$Events$onKeyDown(
		A2($elm$json$Json$Decode$map, toMsg, $ohanhi$keyboard$Keyboard$eventKeyDecoder));
};
var $elm$browser$Browser$Events$onKeyUp = A2($elm$browser$Browser$Events$on, $elm$browser$Browser$Events$Document, 'keyup');
var $ohanhi$keyboard$Keyboard$ups = function (toMsg) {
	return $elm$browser$Browser$Events$onKeyUp(
		A2($elm$json$Json$Decode$map, toMsg, $ohanhi$keyboard$Keyboard$eventKeyDecoder));
};
var $ohanhi$keyboard$Keyboard$subscriptions = $elm$core$Platform$Sub$batch(
	_List_fromArray(
		[
			$ohanhi$keyboard$Keyboard$downs($ohanhi$keyboard$Keyboard$Down),
			$ohanhi$keyboard$Keyboard$ups($ohanhi$keyboard$Keyboard$Up)
		]));
var $author$project$UI$subscriptions = function (_v0) {
	return $elm$core$Platform$Sub$batch(
		_List_fromArray(
			[
				$author$project$UI$Ports$fromAlien($author$project$UI$alien),
				$author$project$UI$Ports$noteProgress($author$project$UI$Types$NoteProgress),
				$author$project$UI$Ports$requestPause(
				$elm$core$Basics$always($author$project$UI$Types$Pause)),
				$author$project$UI$Ports$requestPlay(
				$elm$core$Basics$always($author$project$UI$Types$Play)),
				$author$project$UI$Ports$requestPlayPause(
				$elm$core$Basics$always($author$project$UI$Types$TogglePlay)),
				$author$project$UI$Ports$requestStop(
				$elm$core$Basics$always($author$project$UI$Types$Stop)),
				$author$project$UI$Ports$setAudioDuration($author$project$UI$Types$SetAudioDuration),
				$author$project$UI$Ports$setAudioHasStalled($author$project$UI$Types$SetAudioHasStalled),
				$author$project$UI$Ports$setAudioIsLoading($author$project$UI$Types$SetAudioIsLoading),
				$author$project$UI$Ports$setAudioIsPlaying($author$project$UI$Types$SetAudioIsPlaying),
				$author$project$UI$Ports$setAudioPosition($author$project$UI$Types$SetAudioPosition),
				$author$project$UI$Ports$setAverageBackgroundColor($author$project$UI$Types$ExtractedBackdropColor),
				$elm$browser$Browser$Events$onResize($author$project$UI$Interface$State$onResize),
				$author$project$UI$Ports$indicateTouchDevice(
				function (_v1) {
					return $author$project$UI$Types$SetIsTouchDevice(true);
				}),
				$author$project$UI$Ports$lostWindowFocus(
				$elm$core$Basics$always($author$project$UI$Types$LostWindowFocus)),
				$author$project$UI$Ports$preferredColorSchemaChanged($author$project$UI$Types$PreferredColorSchemaChanged),
				$author$project$UI$Ports$showErrorNotification(
				A2($elm$core$Basics$composeR, $author$project$Notifications$error, $author$project$UI$Types$ShowNotification)),
				$author$project$UI$Ports$showStickyErrorNotification(
				A2($elm$core$Basics$composeR, $author$project$Notifications$stickyError, $author$project$UI$Types$ShowNotification)),
				$author$project$UI$Ports$activeQueueItemEnded(
				A2(
					$elm$core$Basics$composeL,
					$author$project$UI$Types$QueueMsg,
					$elm$core$Basics$always($author$project$UI$Queue$Types$Shift))),
				$author$project$UI$Ports$requestNext(
				function (_v2) {
					return $author$project$UI$Types$QueueMsg($author$project$UI$Queue$Types$Shift);
				}),
				$author$project$UI$Ports$requestPrevious(
				function (_v3) {
					return $author$project$UI$Types$QueueMsg($author$project$UI$Queue$Types$Rewind);
				}),
				$author$project$UI$Ports$scrobble($author$project$UI$Types$Scrobble),
				$author$project$UI$Ports$downloadTracksFinished(
				function (_v4) {
					return $author$project$UI$Types$TracksMsg($author$project$UI$Tracks$Types$DownloadFinished);
				}),
				$author$project$UI$Ports$insertCoverCache(
				A2($elm$core$Basics$composeL, $author$project$UI$Types$TracksMsg, $author$project$UI$Tracks$Types$InsertCoverCache)),
				$author$project$UI$Ports$collectedFissionCapabilities(
				function (_v5) {
					return $author$project$UI$Types$SyncingMsg(
						$author$project$UI$Syncing$Types$ActivateSync(
							$author$project$User$Layer$Fission(
								{})));
				}),
				$author$project$UI$Ports$installedNewServiceWorker(
				function (_v6) {
					return $author$project$UI$Types$InstalledServiceWorker;
				}),
				$author$project$UI$Ports$installingNewServiceWorker(
				function (_v7) {
					return $author$project$UI$Types$InstallingServiceWorker;
				}),
				$author$project$UI$Ports$refreshedAccessToken(
				A2(
					$elm$core$Basics$composeR,
					$author$project$Alien$broadcast($author$project$Alien$RefreshedAccessToken),
					$author$project$UI$Types$RedirectToBrain)),
				$author$project$UI$Ports$setIsOnline($author$project$UI$Types$SetIsOnline),
				A2($elm$core$Platform$Sub$map, $author$project$UI$Types$KeyboardMsg, $ohanhi$keyboard$Keyboard$subscriptions),
				A2($elm$time$Time$every, 60 * 1000, $author$project$UI$Types$SetCurrentTime)
			]));
};
var $Fresheyeball$elm_return$Return$andThen = F2(
	function (f, _v0) {
		var model = _v0.a;
		var cmd = _v0.b;
		var _v1 = f(model);
		var model_ = _v1.a;
		var cmd_ = _v1.b;
		return _Utils_Tuple2(
			model_,
			$elm$core$Platform$Cmd$batch(
				_List_fromArray(
					[cmd, cmd_])));
	});
var $author$project$Conditional$ifThenElse = F3(
	function (bool, x, y) {
		return bool ? x : y;
	});
var $author$project$Tracks$Desc = {$: 'Desc'};
var $elm$core$String$toLower = _String_toLower;
var $elm$core$String$trim = _String_trim;
var $author$project$Tracks$Sorting$low = A2($elm$core$Basics$composeR, $elm$core$String$trim, $elm$core$String$toLower);
var $author$project$Tracks$Sorting$album = A2(
	$elm$core$Basics$composeR,
	function ($) {
		return $.tags;
	},
	A2(
		$elm$core$Basics$composeR,
		function ($) {
			return $.album;
		},
		$author$project$Tracks$Sorting$low));
var $author$project$Tracks$Sorting$andThenCompare = F4(
	function (fn, a, b, order) {
		return _Utils_eq(order, $elm$core$Basics$EQ) ? A2(
			$elm$core$Basics$compare,
			fn(a),
			fn(b)) : order;
	});
var $author$project$Tracks$Sorting$artist = A2(
	$elm$core$Basics$composeR,
	function ($) {
		return $.tags;
	},
	A2(
		$elm$core$Basics$composeR,
		function ($) {
			return $.artist;
		},
		$author$project$Tracks$Sorting$low));
var $author$project$Tracks$Sorting$disc = A2(
	$elm$core$Basics$composeR,
	function ($) {
		return $.tags;
	},
	function ($) {
		return $.disc;
	});
var $author$project$Tracks$Sorting$nr = A2(
	$elm$core$Basics$composeR,
	function ($) {
		return $.tags;
	},
	function ($) {
		return $.nr;
	});
var $author$project$Tracks$Sorting$parentDir = A2(
	$elm$core$Basics$composeR,
	function ($) {
		return $.parentDirectory;
	},
	$author$project$Tracks$Sorting$low);
var $author$project$Tracks$Sorting$title = A2(
	$elm$core$Basics$composeR,
	function ($) {
		return $.tags;
	},
	A2(
		$elm$core$Basics$composeR,
		function ($) {
			return $.title;
		},
		$author$project$Tracks$Sorting$low));
var $author$project$Tracks$Sorting$sortByAlbum = F2(
	function (_v0, _v1) {
		var x = _v0.a;
		var a = _v0.b;
		var y = _v1.a;
		var b = _v1.b;
		return A4(
			$author$project$Tracks$Sorting$andThenCompare,
			$author$project$Tracks$Sorting$title,
			a,
			b,
			A4(
				$author$project$Tracks$Sorting$andThenCompare,
				$author$project$Tracks$Sorting$artist,
				a,
				b,
				A4(
					$author$project$Tracks$Sorting$andThenCompare,
					$author$project$Tracks$Sorting$nr,
					a,
					b,
					A4(
						$author$project$Tracks$Sorting$andThenCompare,
						$author$project$Tracks$Sorting$disc,
						a,
						b,
						A4(
							$author$project$Tracks$Sorting$andThenCompare,
							$author$project$Tracks$Sorting$parentDir,
							x,
							y,
							A4($author$project$Tracks$Sorting$andThenCompare, $author$project$Tracks$Sorting$album, a, b, $elm$core$Basics$EQ))))));
	});
var $author$project$Tracks$Sorting$sortByArtist = F2(
	function (_v0, _v1) {
		var x = _v0.a;
		var a = _v0.b;
		var y = _v1.a;
		var b = _v1.b;
		return A4(
			$author$project$Tracks$Sorting$andThenCompare,
			$author$project$Tracks$Sorting$title,
			a,
			b,
			A4(
				$author$project$Tracks$Sorting$andThenCompare,
				$author$project$Tracks$Sorting$nr,
				a,
				b,
				A4(
					$author$project$Tracks$Sorting$andThenCompare,
					$author$project$Tracks$Sorting$disc,
					a,
					b,
					A4(
						$author$project$Tracks$Sorting$andThenCompare,
						$author$project$Tracks$Sorting$parentDir,
						x,
						y,
						A4(
							$author$project$Tracks$Sorting$andThenCompare,
							$author$project$Tracks$Sorting$album,
							a,
							b,
							A4($author$project$Tracks$Sorting$andThenCompare, $author$project$Tracks$Sorting$artist, a, b, $elm$core$Basics$EQ))))));
	});
var $author$project$Tracks$Sorting$sortByPlaylistIndex = F2(
	function (_v0, _v1) {
		var a = _v0.a;
		var b = _v1.a;
		return A4(
			$author$project$Tracks$Sorting$andThenCompare,
			A2(
				$elm$core$Basics$composeR,
				function ($) {
					return $.indexInPlaylist;
				},
				$elm$core$Maybe$withDefault(0)),
			a,
			b,
			$elm$core$Basics$EQ);
	});
var $author$project$Tracks$Sorting$sortByTitle = F2(
	function (_v0, _v1) {
		var a = _v0.b;
		var b = _v1.b;
		return A4(
			$author$project$Tracks$Sorting$andThenCompare,
			$author$project$Tracks$Sorting$album,
			a,
			b,
			A4(
				$author$project$Tracks$Sorting$andThenCompare,
				$author$project$Tracks$Sorting$artist,
				a,
				b,
				A4($author$project$Tracks$Sorting$andThenCompare, $author$project$Tracks$Sorting$title, a, b, $elm$core$Basics$EQ)));
	});
var $elm$core$List$sortWith = _List_sortWith;
var $author$project$Tracks$Sorting$sort = F3(
	function (property, direction, list) {
		var sortFn = function () {
			switch (property.$) {
				case 'Album':
					return $author$project$Tracks$Sorting$sortByAlbum;
				case 'Artist':
					return $author$project$Tracks$Sorting$sortByArtist;
				case 'PlaylistIndex':
					return $author$project$Tracks$Sorting$sortByPlaylistIndex;
				default:
					return $author$project$Tracks$Sorting$sortByTitle;
			}
		}();
		var dirFn = _Utils_eq(direction, $author$project$Tracks$Desc) ? $elm$core$List$reverse : $elm$core$Basics$identity;
		return dirFn(
			A2($elm$core$List$sortWith, sortFn, list));
	});
var $elm$core$Dict$values = function (dict) {
	return A3(
		$elm$core$Dict$foldr,
		F3(
			function (key, value, valueList) {
				return A2($elm$core$List$cons, value, valueList);
			}),
		_List_Nil,
		dict);
};
var $author$project$Tracks$Collection$Internal$Arrange$groupBy = F4(
	function (_v0, folder, deps, collection) {
		var reversed = _v0.reversed;
		return function (arranged) {
			return _Utils_update(
				collection,
				{arranged: arranged});
		}(
			A2(
				$elm$core$List$concatMap,
				A2($author$project$Tracks$Sorting$sort, deps.sortBy, deps.sortDirection),
				A4(
					$author$project$Conditional$ifThenElse,
					reversed,
					$elm$core$List$reverse,
					$elm$core$Basics$identity,
					$elm$core$Dict$values(
						A3($elm$core$List$foldl, folder, $elm$core$Dict$empty, collection.identified)))));
	});
var $author$project$Tracks$Collection$Internal$Arrange$addToList = F2(
	function (item, maybeList) {
		if (maybeList.$ === 'Just') {
			var list = maybeList.a;
			return $elm$core$Maybe$Just(
				A2($elm$core$List$cons, item, list));
		} else {
			return $elm$core$Maybe$Just(
				_List_fromArray(
					[item]));
		}
	});
var $author$project$String$Ext$chopStart = F2(
	function (needle, str) {
		return A2($elm$core$String$startsWith, needle, str) ? A2(
			$author$project$String$Ext$chopStart,
			needle,
			A2(
				$elm$core$String$dropLeft,
				$elm$core$String$length(needle),
				str)) : str;
	});
var $elm$core$List$tail = function (list) {
	if (list.b) {
		var x = list.a;
		var xs = list.b;
		return $elm$core$Maybe$Just(xs);
	} else {
		return $elm$core$Maybe$Nothing;
	}
};
var $elm_community$list_extra$List$Extra$init = function (items) {
	if (!items.b) {
		return $elm$core$Maybe$Nothing;
	} else {
		var nonEmptyList = items;
		return A2(
			$elm$core$Maybe$map,
			$elm$core$List$reverse,
			$elm$core$List$tail(
				$elm$core$List$reverse(nonEmptyList)));
	}
};
var $author$project$Tracks$Collection$Internal$Arrange$groupByDirectoryFolder = F2(
	function (deps, _v0) {
		var i = _v0.a;
		var t = _v0.b;
		var prefix = function () {
			var _v1 = deps.selectedPlaylist;
			if (_v1.$ === 'Just') {
				var playlist = _v1.a;
				return playlist.autoGenerated ? (playlist.name + '/') : '';
			} else {
				return '';
			}
		}();
		var directory = A2(
			$elm$core$Maybe$withDefault,
			t.path,
			A2(
				$elm$core$Maybe$map,
				$elm$core$String$join(' / '),
				$elm_community$list_extra$List$Extra$init(
					A2(
						$elm$core$String$split,
						'/',
						A2(
							$author$project$String$Ext$chopStart,
							'/',
							A2(
								$elm$core$String$dropLeft,
								$elm$core$String$length(prefix),
								t.path))))));
		var group = {firstInGroup: false, name: directory};
		var item = _Utils_Tuple2(
			_Utils_update(
				i,
				{
					group: $elm$core$Maybe$Just(group)
				}),
			t);
		return A2(
			$elm$core$Dict$update,
			directory,
			$author$project$Tracks$Collection$Internal$Arrange$addToList(item));
	});
var $author$project$Tracks$Collection$Internal$Arrange$groupByDirectory = function (deps) {
	return A3(
		$author$project$Tracks$Collection$Internal$Arrange$groupBy,
		{reversed: false},
		$author$project$Tracks$Collection$Internal$Arrange$groupByDirectoryFolder(deps),
		deps);
};
var $elm$core$String$fromList = _String_fromList;
var $elm$core$String$foldr = _String_foldr;
var $elm$core$String$toList = function (string) {
	return A3($elm$core$String$foldr, $elm$core$List$cons, _List_Nil, string);
};
var $elm$core$Char$toUpper = _Char_toUpper;
var $author$project$Tracks$Collection$Internal$Arrange$groupByFirstAlphaCharacterFolder = F2(
	function (deps, _v0) {
		var i = _v0.a;
		var t = _v0.b;
		var tag = function () {
			var _v1 = deps.sortBy;
			switch (_v1.$) {
				case 'Artist':
					return t.tags.artist;
				case 'Album':
					return t.tags.album;
				case 'PlaylistIndex':
					return '';
				default:
					return t.tags.title;
			}
		}();
		var group = {
			firstInGroup: false,
			name: A2(
				$elm$core$Maybe$withDefault,
				'#',
				A2(
					$elm$core$Maybe$andThen,
					function (_char) {
						return $elm$core$Char$isAlpha(_char) ? $elm$core$Maybe$Just(
							$elm$core$String$fromList(
								_List_fromArray(
									[
										$elm$core$Char$toUpper(_char)
									]))) : $elm$core$Maybe$Nothing;
					},
					$elm$core$List$head(
						$elm$core$String$toList(tag))))
		};
		var item = _Utils_Tuple2(
			_Utils_update(
				i,
				{
					group: $elm$core$Maybe$Just(group)
				}),
			t);
		return A2(
			$elm$core$Dict$update,
			group.name,
			$author$project$Tracks$Collection$Internal$Arrange$addToList(item));
	});
var $author$project$Tracks$Collection$Internal$Arrange$groupByFirstAlphaCharacter = function (deps) {
	return A3(
		$author$project$Tracks$Collection$Internal$Arrange$groupBy,
		{reversed: false},
		$author$project$Tracks$Collection$Internal$Arrange$groupByFirstAlphaCharacterFolder(deps),
		deps);
};
var $author$project$Time$Ext$monthName = function (month) {
	switch (month.$) {
		case 'Jan':
			return 'January';
		case 'Feb':
			return 'February';
		case 'Mar':
			return 'March';
		case 'Apr':
			return 'April';
		case 'May':
			return 'May';
		case 'Jun':
			return 'June';
		case 'Jul':
			return 'July';
		case 'Aug':
			return 'August';
		case 'Sep':
			return 'September';
		case 'Oct':
			return 'October';
		case 'Nov':
			return 'November';
		default:
			return 'December';
	}
};
var $author$project$Tracks$Collection$Internal$Arrange$insertedAtGroupName = F2(
	function (year, month) {
		return (year === 1970) ? 'MANY MOONS AGO' : ($author$project$Time$Ext$monthName(month) + (' ' + $elm$core$String$fromInt(year)));
	});
var $author$project$Time$Ext$monthNumber = function (month) {
	switch (month.$) {
		case 'Jan':
			return 1;
		case 'Feb':
			return 2;
		case 'Mar':
			return 3;
		case 'Apr':
			return 4;
		case 'May':
			return 5;
		case 'Jun':
			return 6;
		case 'Jul':
			return 7;
		case 'Aug':
			return 8;
		case 'Sep':
			return 9;
		case 'Oct':
			return 10;
		case 'Nov':
			return 11;
		default:
			return 12;
	}
};
var $elm$time$Time$Apr = {$: 'Apr'};
var $elm$time$Time$Aug = {$: 'Aug'};
var $elm$time$Time$Dec = {$: 'Dec'};
var $elm$time$Time$Feb = {$: 'Feb'};
var $elm$time$Time$Jan = {$: 'Jan'};
var $elm$time$Time$Jul = {$: 'Jul'};
var $elm$time$Time$Jun = {$: 'Jun'};
var $elm$time$Time$Mar = {$: 'Mar'};
var $elm$time$Time$May = {$: 'May'};
var $elm$time$Time$Nov = {$: 'Nov'};
var $elm$time$Time$Oct = {$: 'Oct'};
var $elm$time$Time$Sep = {$: 'Sep'};
var $elm$time$Time$flooredDiv = F2(
	function (numerator, denominator) {
		return $elm$core$Basics$floor(numerator / denominator);
	});
var $elm$time$Time$posixToMillis = function (_v0) {
	var millis = _v0.a;
	return millis;
};
var $elm$time$Time$toAdjustedMinutesHelp = F3(
	function (defaultOffset, posixMinutes, eras) {
		toAdjustedMinutesHelp:
		while (true) {
			if (!eras.b) {
				return posixMinutes + defaultOffset;
			} else {
				var era = eras.a;
				var olderEras = eras.b;
				if (_Utils_cmp(era.start, posixMinutes) < 0) {
					return posixMinutes + era.offset;
				} else {
					var $temp$defaultOffset = defaultOffset,
						$temp$posixMinutes = posixMinutes,
						$temp$eras = olderEras;
					defaultOffset = $temp$defaultOffset;
					posixMinutes = $temp$posixMinutes;
					eras = $temp$eras;
					continue toAdjustedMinutesHelp;
				}
			}
		}
	});
var $elm$time$Time$toAdjustedMinutes = F2(
	function (_v0, time) {
		var defaultOffset = _v0.a;
		var eras = _v0.b;
		return A3(
			$elm$time$Time$toAdjustedMinutesHelp,
			defaultOffset,
			A2(
				$elm$time$Time$flooredDiv,
				$elm$time$Time$posixToMillis(time),
				60000),
			eras);
	});
var $elm$core$Basics$ge = _Utils_ge;
var $elm$time$Time$toCivil = function (minutes) {
	var rawDay = A2($elm$time$Time$flooredDiv, minutes, 60 * 24) + 719468;
	var era = (((rawDay >= 0) ? rawDay : (rawDay - 146096)) / 146097) | 0;
	var dayOfEra = rawDay - (era * 146097);
	var yearOfEra = ((((dayOfEra - ((dayOfEra / 1460) | 0)) + ((dayOfEra / 36524) | 0)) - ((dayOfEra / 146096) | 0)) / 365) | 0;
	var dayOfYear = dayOfEra - (((365 * yearOfEra) + ((yearOfEra / 4) | 0)) - ((yearOfEra / 100) | 0));
	var mp = (((5 * dayOfYear) + 2) / 153) | 0;
	var month = mp + ((mp < 10) ? 3 : (-9));
	var year = yearOfEra + (era * 400);
	return {
		day: (dayOfYear - ((((153 * mp) + 2) / 5) | 0)) + 1,
		month: month,
		year: year + ((month <= 2) ? 1 : 0)
	};
};
var $elm$time$Time$toMonth = F2(
	function (zone, time) {
		var _v0 = $elm$time$Time$toCivil(
			A2($elm$time$Time$toAdjustedMinutes, zone, time)).month;
		switch (_v0) {
			case 1:
				return $elm$time$Time$Jan;
			case 2:
				return $elm$time$Time$Feb;
			case 3:
				return $elm$time$Time$Mar;
			case 4:
				return $elm$time$Time$Apr;
			case 5:
				return $elm$time$Time$May;
			case 6:
				return $elm$time$Time$Jun;
			case 7:
				return $elm$time$Time$Jul;
			case 8:
				return $elm$time$Time$Aug;
			case 9:
				return $elm$time$Time$Sep;
			case 10:
				return $elm$time$Time$Oct;
			case 11:
				return $elm$time$Time$Nov;
			default:
				return $elm$time$Time$Dec;
		}
	});
var $elm$time$Time$toYear = F2(
	function (zone, time) {
		return $elm$time$Time$toCivil(
			A2($elm$time$Time$toAdjustedMinutes, zone, time)).year;
	});
var $author$project$Tracks$Collection$Internal$Arrange$groupByInsertedAtFolder = function (_v0) {
	var i = _v0.a;
	var t = _v0.b;
	var _v1 = _Utils_Tuple2(
		A2($elm$time$Time$toYear, $elm$time$Time$utc, t.insertedAt),
		A2($elm$time$Time$toMonth, $elm$time$Time$utc, t.insertedAt));
	var year = _v1.a;
	var month = _v1.b;
	var group = {
		firstInGroup: false,
		name: A2($author$project$Tracks$Collection$Internal$Arrange$insertedAtGroupName, year, month)
	};
	var item = _Utils_Tuple2(
		_Utils_update(
			i,
			{
				group: $elm$core$Maybe$Just(group)
			}),
		t);
	return A2(
		$elm$core$Dict$update,
		(year * 1000) + $author$project$Time$Ext$monthNumber(month),
		$author$project$Tracks$Collection$Internal$Arrange$addToList(item));
};
var $author$project$Tracks$Collection$Internal$Arrange$groupByInsertedAt = A2(
	$author$project$Tracks$Collection$Internal$Arrange$groupBy,
	{reversed: true},
	$author$project$Tracks$Collection$Internal$Arrange$groupByInsertedAtFolder);
var $author$project$Tracks$Collection$Internal$Arrange$groupByYearFolder = function (_v0) {
	var i = _v0.a;
	var t = _v0.b;
	var group = {
		firstInGroup: false,
		name: A3($elm_community$maybe_extra$Maybe$Extra$unwrap, '0000 - Unknown', $elm$core$String$fromInt, t.tags.year)
	};
	var item = _Utils_Tuple2(
		_Utils_update(
			i,
			{
				group: $elm$core$Maybe$Just(group)
			}),
		t);
	return A2(
		$elm$core$Dict$update,
		A2($elm$core$Maybe$withDefault, 0, t.tags.year),
		$author$project$Tracks$Collection$Internal$Arrange$addToList(item));
};
var $author$project$Tracks$Collection$Internal$Arrange$groupByYear = A2(
	$author$project$Tracks$Collection$Internal$Arrange$groupBy,
	{reversed: true},
	$author$project$Tracks$Collection$Internal$Arrange$groupByYearFolder);
var $author$project$Tracks$Collection$Internal$Arrange$arrangeByGroup = function (_v0) {
	var deps = _v0.a;
	var collection = _v0.b;
	var _v1 = deps.grouping;
	if (_v1.$ === 'Just') {
		switch (_v1.a.$) {
			case 'AddedOn':
				var _v2 = _v1.a;
				return _Utils_Tuple2(
					deps,
					A2($author$project$Tracks$Collection$Internal$Arrange$groupByInsertedAt, deps, collection));
			case 'Directory':
				var _v3 = _v1.a;
				return _Utils_Tuple2(
					deps,
					A2($author$project$Tracks$Collection$Internal$Arrange$groupByDirectory, deps, collection));
			case 'FirstAlphaCharacter':
				var _v4 = _v1.a;
				return _Utils_Tuple2(
					deps,
					A2($author$project$Tracks$Collection$Internal$Arrange$groupByFirstAlphaCharacter, deps, collection));
			default:
				var _v5 = _v1.a;
				return _Utils_Tuple2(
					deps,
					A2($author$project$Tracks$Collection$Internal$Arrange$groupByYear, deps, collection));
		}
	} else {
		return function (x) {
			return _Utils_Tuple2(deps, x);
		}(
			function (x) {
				return _Utils_update(
					collection,
					{arranged: x});
			}(
				A3($author$project$Tracks$Sorting$sort, deps.sortBy, deps.sortDirection, collection.identified)));
	}
};
var $author$project$Tracks$PlaylistIndex = {$: 'PlaylistIndex'};
var $author$project$Time$Ext$default = $elm$time$Time$millisToPosix(0);
var $author$project$Tracks$missingId = '<missing>';
var $elm$core$Tuple$pair = F2(
	function (a, b) {
		return _Utils_Tuple2(a, b);
	});
var $author$project$Tracks$Collection$Internal$Arrange$makeMissingPlaylistTrack = function (_v0) {
	var identifiers = _v0.a;
	var playlistTrack = _v0.b;
	var tags = {album: playlistTrack.album, artist: playlistTrack.artist, disc: 1, genre: $elm$core$Maybe$Nothing, nr: 0, picture: $elm$core$Maybe$Nothing, title: playlistTrack.title, year: $elm$core$Maybe$Nothing};
	return A2(
		$elm$core$Tuple$pair,
		{
			filename: '',
			group: $elm$core$Maybe$Nothing,
			indexInList: 0,
			indexInPlaylist: $elm$core$Maybe$Just(identifiers.index),
			isFavourite: false,
			isMissing: true,
			parentDirectory: ''
		},
		{id: $author$project$Tracks$missingId, insertedAt: $author$project$Time$Ext$default, path: $author$project$Tracks$missingId, sourceId: $author$project$Tracks$missingId, tags: tags});
};
var $author$project$Tracks$Collection$Internal$Arrange$dealWithMissingPlaylistTracks = function (_v0) {
	var identifiedTracks = _v0.a;
	var remainingPlaylistTracks = _v0.b;
	return _Utils_ap(
		identifiedTracks,
		A2($elm$core$List$map, $author$project$Tracks$Collection$Internal$Arrange$makeMissingPlaylistTrack, remainingPlaylistTracks));
};
var $elm$core$Tuple$mapBoth = F3(
	function (funcA, funcB, _v0) {
		var x = _v0.a;
		var y = _v0.b;
		return _Utils_Tuple2(
			funcA(x),
			funcB(y));
	});
var $author$project$Playlists$Matching$playlistTrackIdentifiers = F2(
	function (i, pi) {
		return _Utils_update(
			i,
			{
				indexInPlaylist: $elm$core$Maybe$Just(pi.index)
			});
	});
var $author$project$Playlists$Matching$match = function (playlist) {
	return A2(
		$elm$core$List$foldl,
		F2(
			function (_v0, _v1) {
				var i = _v0.a;
				var t = _v0.b;
				var identifiedTracks = _v1.a;
				var remainingPlaylistTracks = _v1.b;
				var imaginaryPlaylistTrack = {album: t.tags.album, artist: t.tags.artist, title: t.tags.title};
				var _v2 = A3(
					$elm$core$List$foldl,
					function (_v3) {
						var pi = _v3.a;
						var pt = _v3.b;
						return _Utils_eq(imaginaryPlaylistTrack, pt) ? A2(
							$elm$core$Tuple$mapBoth,
							$elm$core$List$cons(
								_Utils_Tuple2(
									A2($author$project$Playlists$Matching$playlistTrackIdentifiers, i, pi),
									t)),
							$elm$core$Basics$identity) : A2(
							$elm$core$Tuple$mapBoth,
							$elm$core$Basics$identity,
							$elm$core$List$cons(
								_Utils_Tuple2(pi, pt)));
					},
					_Utils_Tuple2(_List_Nil, _List_Nil),
					remainingPlaylistTracks);
				var matches = _v2.a;
				var remainingPlaylistTracksWithoutMatches = _v2.b;
				return _Utils_Tuple2(
					_Utils_ap(identifiedTracks, matches),
					remainingPlaylistTracksWithoutMatches);
			}),
		_Utils_Tuple2(
			_List_Nil,
			A2(
				$elm$core$List$indexedMap,
				function (idx) {
					return $elm$core$Tuple$pair(
						{index: idx});
				},
				playlist.tracks)));
};
var $author$project$Tracks$Collection$Internal$Arrange$arrangeByPlaylist = F2(
	function (_v0, playlist) {
		var deps = _v0.a;
		var collection = _v0.b;
		return function (x) {
			return _Utils_Tuple2(deps, x);
		}(
			function (x) {
				return _Utils_update(
					collection,
					{arranged: x});
			}(
				A3(
					$author$project$Tracks$Sorting$sort,
					$author$project$Tracks$PlaylistIndex,
					$author$project$Tracks$Asc,
					$author$project$Tracks$Collection$Internal$Arrange$dealWithMissingPlaylistTracks(
						A2($author$project$Playlists$Matching$match, playlist, collection.identified)))));
	});
var $author$project$Tracks$Collection$Internal$Arrange$arrange = function (_v0) {
	var deps = _v0.a;
	var collection = _v0.b;
	var _v1 = deps.selectedPlaylist;
	if (_v1.$ === 'Just') {
		var playlist = _v1.a;
		return playlist.autoGenerated ? $author$project$Tracks$Collection$Internal$Arrange$arrangeByGroup(
			_Utils_Tuple2(deps, collection)) : A2(
			$author$project$Tracks$Collection$Internal$Arrange$arrangeByPlaylist,
			_Utils_Tuple2(deps, collection),
			playlist);
	} else {
		return $author$project$Tracks$Collection$Internal$Arrange$arrangeByGroup(
			_Utils_Tuple2(deps, collection));
	}
};
var $author$project$Tracks$Collection$Internal$arrange = $author$project$Tracks$Collection$Internal$Arrange$arrange;
var $author$project$Tracks$emptyIdentifiers = {filename: '', group: $elm$core$Maybe$Nothing, indexInList: 0, indexInPlaylist: $elm$core$Maybe$Nothing, isFavourite: false, isMissing: false, parentDirectory: ''};
var $elm_community$list_extra$List$Extra$findIndexHelp = F3(
	function (index, predicate, list) {
		findIndexHelp:
		while (true) {
			if (!list.b) {
				return $elm$core$Maybe$Nothing;
			} else {
				var x = list.a;
				var xs = list.b;
				if (predicate(x)) {
					return $elm$core$Maybe$Just(index);
				} else {
					var $temp$index = index + 1,
						$temp$predicate = predicate,
						$temp$list = xs;
					index = $temp$index;
					predicate = $temp$predicate;
					list = $temp$list;
					continue findIndexHelp;
				}
			}
		}
	});
var $elm_community$list_extra$List$Extra$findIndex = $elm_community$list_extra$List$Extra$findIndexHelp(0);
var $elm$core$List$drop = F2(
	function (n, list) {
		drop:
		while (true) {
			if (n <= 0) {
				return list;
			} else {
				if (!list.b) {
					return list;
				} else {
					var x = list.a;
					var xs = list.b;
					var $temp$n = n - 1,
						$temp$list = xs;
					n = $temp$n;
					list = $temp$list;
					continue drop;
				}
			}
		}
	});
var $elm$core$List$takeReverse = F3(
	function (n, list, kept) {
		takeReverse:
		while (true) {
			if (n <= 0) {
				return kept;
			} else {
				if (!list.b) {
					return kept;
				} else {
					var x = list.a;
					var xs = list.b;
					var $temp$n = n - 1,
						$temp$list = xs,
						$temp$kept = A2($elm$core$List$cons, x, kept);
					n = $temp$n;
					list = $temp$list;
					kept = $temp$kept;
					continue takeReverse;
				}
			}
		}
	});
var $elm$core$List$takeTailRec = F2(
	function (n, list) {
		return $elm$core$List$reverse(
			A3($elm$core$List$takeReverse, n, list, _List_Nil));
	});
var $elm$core$List$takeFast = F3(
	function (ctr, n, list) {
		if (n <= 0) {
			return _List_Nil;
		} else {
			var _v0 = _Utils_Tuple2(n, list);
			_v0$1:
			while (true) {
				_v0$5:
				while (true) {
					if (!_v0.b.b) {
						return list;
					} else {
						if (_v0.b.b.b) {
							switch (_v0.a) {
								case 1:
									break _v0$1;
								case 2:
									var _v2 = _v0.b;
									var x = _v2.a;
									var _v3 = _v2.b;
									var y = _v3.a;
									return _List_fromArray(
										[x, y]);
								case 3:
									if (_v0.b.b.b.b) {
										var _v4 = _v0.b;
										var x = _v4.a;
										var _v5 = _v4.b;
										var y = _v5.a;
										var _v6 = _v5.b;
										var z = _v6.a;
										return _List_fromArray(
											[x, y, z]);
									} else {
										break _v0$5;
									}
								default:
									if (_v0.b.b.b.b && _v0.b.b.b.b.b) {
										var _v7 = _v0.b;
										var x = _v7.a;
										var _v8 = _v7.b;
										var y = _v8.a;
										var _v9 = _v8.b;
										var z = _v9.a;
										var _v10 = _v9.b;
										var w = _v10.a;
										var tl = _v10.b;
										return (ctr > 1000) ? A2(
											$elm$core$List$cons,
											x,
											A2(
												$elm$core$List$cons,
												y,
												A2(
													$elm$core$List$cons,
													z,
													A2(
														$elm$core$List$cons,
														w,
														A2($elm$core$List$takeTailRec, n - 4, tl))))) : A2(
											$elm$core$List$cons,
											x,
											A2(
												$elm$core$List$cons,
												y,
												A2(
													$elm$core$List$cons,
													z,
													A2(
														$elm$core$List$cons,
														w,
														A3($elm$core$List$takeFast, ctr + 1, n - 4, tl)))));
									} else {
										break _v0$5;
									}
							}
						} else {
							if (_v0.a === 1) {
								break _v0$1;
							} else {
								break _v0$5;
							}
						}
					}
				}
				return list;
			}
			var _v1 = _v0.b;
			var x = _v1.a;
			return _List_fromArray(
				[x]);
		}
	});
var $elm$core$List$take = F2(
	function (n, list) {
		return A3($elm$core$List$takeFast, 0, n, list);
	});
var $elm_community$list_extra$List$Extra$removeAt = F2(
	function (index, l) {
		if (index < 0) {
			return l;
		} else {
			var _v0 = A2($elm$core$List$drop, index, l);
			if (!_v0.b) {
				return l;
			} else {
				var rest = _v0.b;
				return _Utils_ap(
					A2($elm$core$List$take, index, l),
					rest);
			}
		}
	});
var $author$project$Tracks$Collection$Internal$Harvest$harvester = F2(
	function (_v0, _v1) {
		var i = _v0.a;
		var t = _v0.b;
		var acc = _v1.a;
		var trackIds = _v1.b;
		var _v2 = A2(
			$elm_community$list_extra$List$Extra$findIndex,
			$elm$core$Basics$eq(t.id),
			trackIds);
		if (_v2.$ === 'Just') {
			var idx = _v2.a;
			return _Utils_Tuple2(
				_Utils_ap(
					acc,
					_List_fromArray(
						[
							_Utils_Tuple2(i, t)
						])),
				A2($elm_community$list_extra$List$Extra$removeAt, idx, trackIds));
		} else {
			return _Utils_Tuple2(acc, trackIds);
		}
	});
var $elm_community$maybe_extra$Maybe$Extra$isJust = function (m) {
	if (m.$ === 'Nothing') {
		return false;
	} else {
		return true;
	}
};
var $author$project$Tracks$matchesAutoGeneratedPlaylist = F2(
	function (playlist, track) {
		return playlist.autoGenerated && _Utils_eq(
			$elm$core$Maybe$Just(playlist.name),
			$elm$core$List$head(
				A2($elm$core$String$split, '/', track.path)));
	});
var $elm$core$Dict$member = F2(
	function (key, dict) {
		var _v0 = A2($elm$core$Dict$get, key, dict);
		if (_v0.$ === 'Just') {
			return true;
		} else {
			return false;
		}
	});
var $elm$core$List$any = F2(
	function (isOkay, list) {
		any:
		while (true) {
			if (!list.b) {
				return false;
			} else {
				var x = list.a;
				var xs = list.b;
				if (isOkay(x)) {
					return true;
				} else {
					var $temp$isOkay = isOkay,
						$temp$list = xs;
					isOkay = $temp$isOkay;
					list = $temp$list;
					continue any;
				}
			}
		}
	});
var $elm$core$List$member = F2(
	function (x, xs) {
		return A2(
			$elm$core$List$any,
			function (a) {
				return _Utils_eq(a, x);
			},
			xs);
	});
var $author$project$Tracks$Collection$Internal$Harvest$harvest = function (_v0) {
	var deps = _v0.a;
	var collection = _v0.b;
	var harvested = function () {
		var _v9 = deps.searchResults;
		if (_v9.$ === 'Just') {
			if (!_v9.a.b) {
				return _List_Nil;
			} else {
				var trackIds = _v9.a;
				return A3(
					$elm$core$List$foldl,
					$author$project$Tracks$Collection$Internal$Harvest$harvester,
					_Utils_Tuple2(_List_Nil, trackIds),
					collection.arranged).a;
			}
		} else {
			return collection.arranged;
		}
	}();
	var filters = _List_fromArray(
		[
			deps.favouritesOnly ? A2(
			$elm$core$Basics$composeR,
			$elm$core$Tuple$first,
			A2(
				$elm$core$Basics$composeR,
				function ($) {
					return $.isFavourite;
				},
				$elm$core$Basics$eq(true))) : (_Utils_eq(
			A2(
				$elm$core$Maybe$map,
				function ($) {
					return $.autoGenerated;
				},
				deps.selectedPlaylist),
			$elm$core$Maybe$Just(false)) ? $elm$core$Basics$always(true) : A2(
			$elm$core$Basics$composeR,
			$elm$core$Tuple$first,
			A2(
				$elm$core$Basics$composeR,
				function ($) {
					return $.isMissing;
				},
				$elm$core$Basics$eq(false)))),
			function () {
			var _v5 = deps.selectedPlaylist;
			if (_v5.$ === 'Just') {
				var playlist = _v5.a;
				return playlist.autoGenerated ? function (_v6) {
					var t = _v6.b;
					return A2($author$project$Tracks$matchesAutoGeneratedPlaylist, playlist, t);
				} : function (_v7) {
					var i = _v7.a;
					return $elm_community$maybe_extra$Maybe$Extra$isJust(i.indexInPlaylist);
				};
			} else {
				return $elm$core$Basics$always(true);
			}
		}(),
			deps.cachedOnly ? function (_v8) {
			var t = _v8.b;
			return A2($elm$core$List$member, t.id, deps.cached);
		} : $elm$core$Basics$always(true)
		]);
	var theFilter = function (x) {
		return A3(
			$elm$core$List$foldl,
			F2(
				function (filter, bool) {
					return bool ? filter(x) : bool;
				}),
			true,
			filters);
	};
	return function (c) {
		return _Utils_Tuple2(deps, c);
	}(
		function (h) {
			return _Utils_update(
				collection,
				{
					harvested: $elm$core$List$reverse(h)
				});
		}(
			function (_v4) {
				var c = _v4.c;
				return c;
			}(
				A3(
					$elm$core$List$foldl,
					F2(
						function (_v1, _v2) {
							var i = _v1.a;
							var t = _v1.b;
							var dict = _v2.a;
							var _v3 = _v2.b;
							var idx = _v3.a;
							var prevIdentifiers = _v3.b;
							var acc = _v2.c;
							var s = $elm$core$String$toLower(
								_Utils_ap(t.tags.artist, t.tags.title));
							if (!theFilter(
								_Utils_Tuple2(i, t))) {
								return _Utils_Tuple3(
									dict,
									_Utils_Tuple2(idx, prevIdentifiers),
									acc);
							} else {
								if (deps.hideDuplicates && A2($elm$core$Dict$member, s, dict)) {
									return _Utils_Tuple3(
										dict,
										_Utils_Tuple2(idx, prevIdentifiers),
										acc);
								} else {
									var prevGroup = A3(
										$elm_community$maybe_extra$Maybe$Extra$unwrap,
										'',
										function ($) {
											return $.name;
										},
										prevIdentifiers.group);
									var newIdentifiers = _Utils_update(
										i,
										{
											group: A2(
												$elm$core$Maybe$map,
												function (g) {
													return _Utils_update(
														g,
														{
															firstInGroup: !_Utils_eq(prevGroup, g.name)
														});
												},
												i.group),
											indexInList: idx
										});
									return _Utils_Tuple3(
										deps.hideDuplicates ? A3($elm$core$Dict$insert, s, _Utils_Tuple0, dict) : dict,
										_Utils_Tuple2(idx + 1, newIdentifiers),
										A2(
											$elm$core$List$cons,
											_Utils_Tuple2(newIdentifiers, t),
											acc));
								}
							}
						}),
					_Utils_Tuple3(
						$elm$core$Dict$empty,
						_Utils_Tuple2(0, $author$project$Tracks$emptyIdentifiers),
						_List_Nil),
					harvested))));
};
var $author$project$Tracks$Collection$Internal$harvest = $author$project$Tracks$Collection$Internal$Harvest$harvest;
var $author$project$Tracks$Collection$arrange = A2($elm$core$Basics$composeR, $author$project$Tracks$Collection$Internal$arrange, $author$project$Tracks$Collection$Internal$harvest);
var $author$project$Tracks$List = {$: 'List'};
var $elm$core$Basics$not = _Basics_not;
var $elm_community$list_extra$List$Extra$filterNot = F2(
	function (pred, list) {
		return A2(
			$elm$core$List$filter,
			A2($elm$core$Basics$composeL, $elm$core$Basics$not, pred),
			list);
	});
var $elm$core$Set$Set_elm_builtin = function (a) {
	return {$: 'Set_elm_builtin', a: a};
};
var $elm$core$Set$empty = $elm$core$Set$Set_elm_builtin($elm$core$Dict$empty);
var $author$project$UI$Playlists$Directory$fixPath = function (string) {
	return function (s) {
		return ($elm$core$String$isEmpty(s) || A2($elm$core$String$endsWith, '/', s)) ? s : (s + '/');
	}(
		A2($author$project$String$Ext$chopStart, '/', string));
};
var $elm$core$Set$insert = F2(
	function (key, _v0) {
		var dict = _v0.a;
		return $elm$core$Set$Set_elm_builtin(
			A3($elm$core$Dict$insert, key, _Utils_Tuple0, dict));
	});
var $author$project$UI$Playlists$Directory$reducer = F2(
	function (sourceDirectories, track) {
		var _v0 = A2($elm$core$Dict$get, track.sourceId, sourceDirectories);
		if (_v0.$ === 'Just') {
			var prefix = _v0.a;
			var path = A2(
				$elm$core$String$dropLeft,
				$elm$core$String$length(prefix),
				track.path);
			var _v1 = A2($elm$core$String$split, '/', path);
			if (_v1.b && _v1.b.b) {
				var a = _v1.a;
				var _v2 = _v1.b;
				return $elm$core$Set$insert(a);
			} else {
				return $elm$core$Basics$identity;
			}
		} else {
			return $elm$core$Basics$identity;
		}
	});
var $author$project$UI$Playlists$Directory$generate = F2(
	function (sources, tracks) {
		var sourceDirectories = A3(
			$elm$core$List$foldl,
			function (s) {
				return (s.enabled && s.directoryPlaylists) ? A2(
					$elm$core$Dict$insert,
					s.id,
					A2(
						$elm$core$Maybe$withDefault,
						'',
						A2(
							$elm$core$Maybe$map,
							$author$project$UI$Playlists$Directory$fixPath,
							A2($elm$core$Dict$get, 'directoryPath', s.data)))) : $elm$core$Basics$identity;
			},
			$elm$core$Dict$empty,
			sources);
		var playlistNames = A3(
			$elm$core$List$foldr,
			$author$project$UI$Playlists$Directory$reducer(sourceDirectories),
			$elm$core$Set$empty,
			tracks);
		return A2(
			$elm$core$List$map,
			function (n) {
				return {autoGenerated: true, name: n, _public: false, tracks: _List_Nil};
			},
			A2(
				$elm$core$List$filter,
				function (n) {
					if (n === '') {
						return false;
					} else {
						return true;
					}
				},
				$elm$core$Set$toList(playlistNames)));
	});
var $author$project$UI$Common$State$generateDirectoryPlaylists = function (model) {
	var nonDirectoryPlaylists = A2(
		$elm_community$list_extra$List$Extra$filterNot,
		function ($) {
			return $.autoGenerated;
		},
		model.playlists);
	var directoryPlaylists = A2($author$project$UI$Playlists$Directory$generate, model.sources, model.tracks.untouched);
	return $Fresheyeball$elm_return$Return$singleton(
		function (c) {
			return _Utils_update(
				model,
				{playlists: c});
		}(
			$elm$core$List$concat(
				_List_fromArray(
					[nonDirectoryPlaylists, directoryPlaylists]))));
};
var $elm$core$Maybe$destruct = F3(
	function (_default, func, maybe) {
		if (maybe.$ === 'Just') {
			var a = maybe.a;
			return func(a);
		} else {
			return _default;
		}
	});
var $elm$json$Json$Encode$null = _Json_encodeNull;
var $elm$json$Json$Encode$object = function (pairs) {
	return _Json_wrap(
		A3(
			$elm$core$List$foldl,
			F2(
				function (_v0, obj) {
					var k = _v0.a;
					var v = _v0.b;
					return A3(_Json_addField, k, v, obj);
				}),
			_Json_emptyObject(_Utils_Tuple0),
			pairs));
};
var $author$project$UI$Ports$toBrain = _Platform_outgoingPort(
	'toBrain',
	function ($) {
		return $elm$json$Json$Encode$object(
			_List_fromArray(
				[
					_Utils_Tuple2(
					'data',
					$elm$core$Basics$identity($.data)),
					_Utils_Tuple2(
					'error',
					function ($) {
						return A3($elm$core$Maybe$destruct, $elm$json$Json$Encode$null, $elm$json$Json$Encode$string, $);
					}($.error)),
					_Utils_Tuple2(
					'tag',
					$elm$json$Json$Encode$string($.tag))
				]));
	});
var $author$project$UI$Ports$giveBrain = F2(
	function (tag, data) {
		return $author$project$UI$Ports$toBrain(
			A2($author$project$Alien$broadcast, tag, data));
	});
var $author$project$Tracks$Collection$harvest = $author$project$Tracks$Collection$Internal$harvest;
var $author$project$Tracks$Collection$identifiedTracksChanged = F2(
	function (listA, listB) {
		identifiedTracksChanged:
		while (true) {
			var _v0 = _Utils_Tuple2(listA, listB);
			_v0$2:
			while (true) {
				if (!_v0.a.b) {
					if (!_v0.b.b) {
						return false;
					} else {
						break _v0$2;
					}
				} else {
					if (_v0.b.b) {
						var _v1 = _v0.a;
						var _v2 = _v1.a;
						var a = _v2.b;
						var restA = _v1.b;
						var _v3 = _v0.b;
						var _v4 = _v3.a;
						var b = _v4.b;
						var restB = _v3.b;
						if (!_Utils_eq(a.id, b.id)) {
							return true;
						} else {
							var $temp$listA = restA,
								$temp$listB = restB;
							listA = $temp$listA;
							listB = $temp$listB;
							continue identifiedTracksChanged;
						}
					} else {
						break _v0$2;
					}
				}
			}
			return true;
		}
	});
var $elm$json$Json$Encode$int = _Json_wrap;
var $author$project$Sources$enabledSourceIds = $elm$core$List$filterMap(
	function (s) {
		return A3(
			$author$project$Conditional$ifThenElse,
			s.enabled,
			$elm$core$Maybe$Just(s.id),
			$elm$core$Maybe$Nothing);
	});
var $author$project$UI$Tracks$State$makeParcel = function (model) {
	return _Utils_Tuple2(
		{
			cached: model.cachedTracks,
			cachedOnly: model.cachedTracksOnly,
			enabledSourceIds: $author$project$Sources$enabledSourceIds(model.sources),
			favourites: model.favourites,
			favouritesOnly: model.favouritesOnly,
			grouping: model.grouping,
			hideDuplicates: model.hideDuplicates,
			searchResults: model.searchResults,
			selectedPlaylist: model.selectedPlaylist,
			sortBy: model.sortBy,
			sortDirection: model.sortDirection
		},
		model.tracks);
};
var $author$project$UI$Tracks$State$scrollContext = function (model) {
	return $elm$core$String$concat(
		_List_fromArray(
			[
				A2($elm$core$Maybe$withDefault, '', model.searchTerm),
				A2(
				$elm$core$Maybe$withDefault,
				'',
				A2(
					$elm$core$Maybe$map,
					function ($) {
						return $.name;
					},
					model.selectedPlaylist))
			]));
};
var $elm$core$Task$onError = _Scheduler_onError;
var $elm$core$Task$attempt = F2(
	function (resultToMessage, task) {
		return $elm$core$Task$command(
			$elm$core$Task$Perform(
				A2(
					$elm$core$Task$onError,
					A2(
						$elm$core$Basics$composeL,
						A2($elm$core$Basics$composeL, $elm$core$Task$succeed, resultToMessage),
						$elm$core$Result$Err),
					A2(
						$elm$core$Task$andThen,
						A2(
							$elm$core$Basics$composeL,
							A2($elm$core$Basics$composeL, $elm$core$Task$succeed, resultToMessage),
							$elm$core$Result$Ok),
						task))));
	});
var $author$project$UI$Tracks$Scene$Covers$containerId = 'diffuse__track-covers';
var $elm$browser$Browser$Dom$setViewportOf = _Browser_setViewportOf;
var $author$project$UI$Tracks$Scene$Covers$scrollToTop = A2(
	$elm$core$Task$attempt,
	$elm$core$Basics$always($author$project$UI$Types$Bypass),
	A3($elm$browser$Browser$Dom$setViewportOf, $author$project$UI$Tracks$Scene$Covers$containerId, 0, 0));
var $author$project$UI$Tracks$Scene$List$containerId = 'diffuse__track-list';
var $author$project$UI$Tracks$Scene$List$scrollToTop = A2(
	$elm$core$Task$attempt,
	$elm$core$Basics$always($author$project$UI$Types$Bypass),
	A3($elm$browser$Browser$Dom$setViewportOf, $author$project$UI$Tracks$Scene$List$containerId, 0, 0));
var $author$project$Tracks$Collection$tracksChanged = F2(
	function (listA, listB) {
		tracksChanged:
		while (true) {
			var _v0 = _Utils_Tuple2(listA, listB);
			_v0$2:
			while (true) {
				if (!_v0.a.b) {
					if (!_v0.b.b) {
						return false;
					} else {
						break _v0$2;
					}
				} else {
					if (_v0.b.b) {
						var _v1 = _v0.a;
						var a = _v1.a;
						var restA = _v1.b;
						var _v2 = _v0.b;
						var b = _v2.a;
						var restB = _v2.b;
						if (!_Utils_eq(a.id, b.id)) {
							return true;
						} else {
							var $temp$listA = restA,
								$temp$listB = restB;
							listA = $temp$listA;
							listB = $temp$listB;
							continue tracksChanged;
						}
					} else {
						break _v0$2;
					}
				}
			}
			return true;
		}
	});
var $elm$json$Json$Decode$at = F2(
	function (fields, decoder) {
		return A3($elm$core$List$foldr, $elm$json$Json$Decode$field, decoder, fields);
	});
var $FabienHenon$elm_infinite_list_view$InfiniteList$decodeToModel = A2(
	$elm$json$Json$Decode$map,
	$FabienHenon$elm_infinite_list_view$InfiniteList$Model,
	A2(
		$elm$json$Json$Decode$at,
		_List_fromArray(
			['target', 'scrollTop']),
		$elm$json$Json$Decode$float));
var $elm$json$Json$Decode$decodeValue = _Json_run;
var $FabienHenon$elm_infinite_list_view$InfiniteList$updateScroll = F2(
	function (value, _v0) {
		var model = _v0.a;
		var _v1 = A2($elm$json$Json$Decode$decodeValue, $FabienHenon$elm_infinite_list_view$InfiniteList$decodeToModel, value);
		if (_v1.$ === 'Ok') {
			var m = _v1.a;
			return m;
		} else {
			return $FabienHenon$elm_infinite_list_view$InfiniteList$init;
		}
	});
var $author$project$Tracks$coverGroup = F2(
	function (sort, _v0) {
		var identifiers = _v0.a;
		var track = _v0.b;
		var tags = track.tags;
		return $elm$core$String$toLower(
			$elm$core$String$trim(
				function () {
					switch (sort.$) {
						case 'Artist':
							return tags.artist;
						case 'Album':
							return _Utils_ap(identifiers.parentDirectory, tags.album);
						case 'PlaylistIndex':
							return '';
						default:
							return tags.title;
					}
				}()));
	});
var $author$project$Tracks$emptyTags = {album: 'Empty', artist: 'Empty', disc: 1, genre: $elm$core$Maybe$Nothing, nr: 0, picture: $elm$core$Maybe$Nothing, title: 'Empty', year: $elm$core$Maybe$Nothing};
var $author$project$Tracks$emptyTrack = {id: '', insertedAt: $author$project$Time$Ext$default, path: '', sourceId: '', tags: $author$project$Tracks$emptyTags};
var $elm$core$Tuple$mapSecond = F2(
	function (func, _v0) {
		var x = _v0.a;
		var y = _v0.b;
		return _Utils_Tuple2(
			x,
			func(y));
	});
var $author$project$UI$Tracks$Covers$increaseSequence = $elm$core$Maybe$map(
	$elm$core$Tuple$mapSecond(
		$elm$core$Basics$add(1)));
var $elm$core$Tuple$second = function (_v0) {
	var y = _v0.b;
	return y;
};
var $elm_community$list_extra$List$Extra$indexedFoldr = F3(
	function (func, acc, list) {
		var step = F2(
			function (x, _v0) {
				var i = _v0.a;
				var thisAcc = _v0.b;
				return _Utils_Tuple2(
					i - 1,
					A3(func, i, x, thisAcc));
			});
		return A3(
			$elm$core$List$foldr,
			step,
			_Utils_Tuple2(
				$elm$core$List$length(list) - 1,
				acc),
			list).b;
	});
var $author$project$Tracks$coverKey = F2(
	function (isVariousArtists, _v0) {
		var tags = _v0.tags;
		return isVariousArtists ? tags.album : (tags.artist + (' --- ' + tags.album));
	});
var $truqu$elm_base64$Base64$Encode$intToBase64 = function (i) {
	switch (i) {
		case 0:
			return 'A';
		case 1:
			return 'B';
		case 2:
			return 'C';
		case 3:
			return 'D';
		case 4:
			return 'E';
		case 5:
			return 'F';
		case 6:
			return 'G';
		case 7:
			return 'H';
		case 8:
			return 'I';
		case 9:
			return 'J';
		case 10:
			return 'K';
		case 11:
			return 'L';
		case 12:
			return 'M';
		case 13:
			return 'N';
		case 14:
			return 'O';
		case 15:
			return 'P';
		case 16:
			return 'Q';
		case 17:
			return 'R';
		case 18:
			return 'S';
		case 19:
			return 'T';
		case 20:
			return 'U';
		case 21:
			return 'V';
		case 22:
			return 'W';
		case 23:
			return 'X';
		case 24:
			return 'Y';
		case 25:
			return 'Z';
		case 26:
			return 'a';
		case 27:
			return 'b';
		case 28:
			return 'c';
		case 29:
			return 'd';
		case 30:
			return 'e';
		case 31:
			return 'f';
		case 32:
			return 'g';
		case 33:
			return 'h';
		case 34:
			return 'i';
		case 35:
			return 'j';
		case 36:
			return 'k';
		case 37:
			return 'l';
		case 38:
			return 'm';
		case 39:
			return 'n';
		case 40:
			return 'o';
		case 41:
			return 'p';
		case 42:
			return 'q';
		case 43:
			return 'r';
		case 44:
			return 's';
		case 45:
			return 't';
		case 46:
			return 'u';
		case 47:
			return 'v';
		case 48:
			return 'w';
		case 49:
			return 'x';
		case 50:
			return 'y';
		case 51:
			return 'z';
		case 52:
			return '0';
		case 53:
			return '1';
		case 54:
			return '2';
		case 55:
			return '3';
		case 56:
			return '4';
		case 57:
			return '5';
		case 58:
			return '6';
		case 59:
			return '7';
		case 60:
			return '8';
		case 61:
			return '9';
		case 62:
			return '+';
		default:
			return '/';
	}
};
var $truqu$elm_base64$Base64$Encode$toBase64 = function (_int) {
	return _Utils_ap(
		$truqu$elm_base64$Base64$Encode$intToBase64(63 & (_int >>> 18)),
		_Utils_ap(
			$truqu$elm_base64$Base64$Encode$intToBase64(63 & (_int >>> 12)),
			_Utils_ap(
				$truqu$elm_base64$Base64$Encode$intToBase64(63 & (_int >>> 6)),
				$truqu$elm_base64$Base64$Encode$intToBase64(63 & (_int >>> 0)))));
};
var $truqu$elm_base64$Base64$Encode$add = F2(
	function (_char, _v0) {
		var res = _v0.a;
		var count = _v0.b;
		var acc = _v0.c;
		var current = (acc << 8) | _char;
		if (count === 2) {
			return _Utils_Tuple3(
				_Utils_ap(
					res,
					$truqu$elm_base64$Base64$Encode$toBase64(current)),
				0,
				0);
		} else {
			return _Utils_Tuple3(res, count + 1, current);
		}
	});
var $truqu$elm_base64$Base64$Encode$chomp = F2(
	function (char_, acc) {
		var _char = $elm$core$Char$toCode(char_);
		return (_char < 128) ? A2($truqu$elm_base64$Base64$Encode$add, _char, acc) : ((_char < 2048) ? A2(
			$truqu$elm_base64$Base64$Encode$add,
			128 | (63 & _char),
			A2($truqu$elm_base64$Base64$Encode$add, 192 | (_char >>> 6), acc)) : (((_char < 55296) || ((_char >= 57344) && (_char <= 65535))) ? A2(
			$truqu$elm_base64$Base64$Encode$add,
			128 | (63 & _char),
			A2(
				$truqu$elm_base64$Base64$Encode$add,
				128 | (63 & (_char >>> 6)),
				A2($truqu$elm_base64$Base64$Encode$add, 224 | (_char >>> 12), acc))) : A2(
			$truqu$elm_base64$Base64$Encode$add,
			128 | (63 & _char),
			A2(
				$truqu$elm_base64$Base64$Encode$add,
				128 | (63 & (_char >>> 6)),
				A2(
					$truqu$elm_base64$Base64$Encode$add,
					128 | (63 & (_char >>> 12)),
					A2($truqu$elm_base64$Base64$Encode$add, 240 | (_char >>> 18), acc))))));
	});
var $truqu$elm_base64$Base64$Encode$initial = _Utils_Tuple3('', 0, 0);
var $truqu$elm_base64$Base64$Encode$wrapUp = function (_v0) {
	var res = _v0.a;
	var cnt = _v0.b;
	var acc = _v0.c;
	switch (cnt) {
		case 1:
			return res + ($truqu$elm_base64$Base64$Encode$intToBase64(63 & (acc >>> 2)) + ($truqu$elm_base64$Base64$Encode$intToBase64(63 & (acc << 4)) + '=='));
		case 2:
			return res + ($truqu$elm_base64$Base64$Encode$intToBase64(63 & (acc >>> 10)) + ($truqu$elm_base64$Base64$Encode$intToBase64(63 & (acc >>> 4)) + ($truqu$elm_base64$Base64$Encode$intToBase64(63 & (acc << 2)) + '=')));
		default:
			return res;
	}
};
var $truqu$elm_base64$Base64$Encode$encode = function (input) {
	return $truqu$elm_base64$Base64$Encode$wrapUp(
		A3($elm$core$String$foldl, $truqu$elm_base64$Base64$Encode$chomp, $truqu$elm_base64$Base64$Encode$initial, input));
};
var $truqu$elm_base64$Base64$encode = $truqu$elm_base64$Base64$Encode$encode;
var $elm_community$maybe_extra$Maybe$Extra$orElse = F2(
	function (ma, mb) {
		if (mb.$ === 'Nothing') {
			return ma;
		} else {
			return mb;
		}
	});
var $author$project$UI$Tracks$Covers$makeCoverWithFallback = F3(
	function (_v0, gathering, fallback) {
		var identifiedTrack = A2(
			$elm$core$Maybe$withDefault,
			fallback,
			A2(
				$elm$core$Maybe$map,
				$elm$core$Tuple$first,
				A2($elm_community$maybe_extra$Maybe$Extra$orElse, gathering.largestAlbumSequence, gathering.largestAlbumFavsSequence)));
		var group = gathering.previousGroup;
		var amountOfTracks = $elm$core$List$length(gathering.accIds);
		var _v1 = identifiedTrack;
		var track = _v1.b;
		var _v2 = _Utils_Tuple2(
			A3($elm_community$maybe_extra$Maybe$Extra$unwrap, 0, $elm$core$Tuple$second, gathering.largestAlbumSequence),
			A3($elm_community$maybe_extra$Maybe$Extra$unwrap, 0, $elm$core$Tuple$second, gathering.largestArtistSequence));
		var largestAlbumSequence = _v2.a;
		var largestArtistSequence = _v2.b;
		var _v3 = _Utils_Tuple2(
			_Utils_eq(largestAlbumSequence, amountOfTracks),
			_Utils_eq(largestArtistSequence, amountOfTracks));
		var sameAlbum = _v3.a;
		var sameArtist = _v3.b;
		var isVariousArtists = false || (((amountOfTracks > 4) && (largestArtistSequence < 3)) || ($elm$core$String$toLower(track.tags.artist) === 'va'));
		return {
			group: group,
			identifiedTrackCover: identifiedTrack,
			key: $truqu$elm_base64$Base64$encode(
				A2($author$project$Tracks$coverKey, isVariousArtists, track)),
			sameAlbum: sameAlbum,
			sameArtist: sameArtist,
			trackIds: gathering.accIds,
			tracks: gathering.acc,
			variousArtists: isVariousArtists
		};
	});
var $author$project$UI$Tracks$Covers$resolveLargestSequence = F2(
	function (curr, state) {
		var _v0 = _Utils_Tuple2(curr, state);
		if (_v0.a.$ === 'Just') {
			if (_v0.b.$ === 'Just') {
				var _v1 = _v0.a.a;
				var c = _v1.b;
				var _v2 = _v0.b.a;
				var s = _v2.b;
				return A3(
					$author$project$Conditional$ifThenElse,
					_Utils_cmp(c, s) > 0,
					curr,
					state);
			} else {
				var _v3 = _v0.b;
				return curr;
			}
		} else {
			if (_v0.b.$ === 'Just') {
				var _v4 = _v0.a;
				return state;
			} else {
				var _v5 = _v0.a;
				var _v6 = _v0.b;
				return $elm$core$Maybe$Nothing;
			}
		}
	});
var $author$project$UI$Tracks$Covers$makeCover = F3(
	function (sortBy_, gathering, collection) {
		var closedGathering = _Utils_update(
			gathering,
			{
				largestAlbumFavsSequence: A2($author$project$UI$Tracks$Covers$resolveLargestSequence, gathering.currentAlbumFavsSequence, gathering.largestAlbumFavsSequence),
				largestAlbumSequence: A2($author$project$UI$Tracks$Covers$resolveLargestSequence, gathering.currentAlbumSequence, gathering.largestAlbumSequence),
				largestArtistSequence: A2($author$project$UI$Tracks$Covers$resolveLargestSequence, gathering.currentArtistSequence, gathering.largestArtistSequence)
			});
		var _v0 = closedGathering.acc;
		if (!_v0.b) {
			return collection;
		} else {
			var fallback = _v0.a;
			return A2(
				$elm$core$List$cons,
				A3($author$project$UI$Tracks$Covers$makeCoverWithFallback, sortBy_, closedGathering, fallback),
				collection);
		}
	});
var $author$project$UI$Tracks$Covers$generate = F2(
	function (sortBy, tracks) {
		var makeCoverFn = $author$project$UI$Tracks$Covers$makeCover(sortBy);
		var groupFn = $author$project$Tracks$coverGroup(sortBy);
		return function (collection) {
			return {arranged: collection, harvested: _List_Nil};
		}(
			function (_v4) {
				var covers = _v4.covers;
				var gathering = _v4.gathering;
				return A2(makeCoverFn, gathering, covers);
			}(
				A3(
					$elm_community$list_extra$List$Extra$indexedFoldr,
					F3(
						function (_v0, identifiedTrack, _v1) {
							var covers = _v1.covers;
							var gathering = _v1.gathering;
							var group = groupFn(identifiedTrack);
							var _v2 = identifiedTrack;
							var identifiers = _v2.a;
							var track = _v2.b;
							var _v3 = track.tags;
							var artist = _v3.artist;
							var album = _v3.album;
							if (!_Utils_eq(group, gathering.previousGroup)) {
								var collection = A2(makeCoverFn, gathering, covers);
								return {
									covers: collection,
									gathering: {
										acc: _List_fromArray(
											[identifiedTrack]),
										accIds: _List_fromArray(
											[track.id]),
										currentAlbumFavsSequence: $elm$core$Maybe$Just(
											_Utils_Tuple2(
												identifiedTrack,
												A3($author$project$Conditional$ifThenElse, identifiers.isFavourite, 1, 0))),
										currentAlbumSequence: $elm$core$Maybe$Just(
											_Utils_Tuple2(identifiedTrack, 1)),
										currentArtistSequence: $elm$core$Maybe$Just(
											_Utils_Tuple2(identifiedTrack, 1)),
										largestAlbumFavsSequence: $elm$core$Maybe$Nothing,
										largestAlbumSequence: $elm$core$Maybe$Nothing,
										largestArtistSequence: $elm$core$Maybe$Nothing,
										previousGroup: group,
										previousTrack: track
									}
								};
							} else {
								return {
									covers: covers,
									gathering: {
										acc: A2($elm$core$List$cons, identifiedTrack, gathering.acc),
										accIds: A2($elm$core$List$cons, track.id, gathering.accIds),
										currentAlbumFavsSequence: (!_Utils_eq(album, gathering.previousTrack.tags.album)) ? $elm$core$Maybe$Just(
											_Utils_Tuple2(
												identifiedTrack,
												A3($author$project$Conditional$ifThenElse, identifiers.isFavourite, 1, 0))) : (identifiers.isFavourite ? $author$project$UI$Tracks$Covers$increaseSequence(gathering.currentAlbumFavsSequence) : gathering.currentAlbumFavsSequence),
										currentAlbumSequence: (!_Utils_eq(album, gathering.previousTrack.tags.album)) ? $elm$core$Maybe$Just(
											_Utils_Tuple2(identifiedTrack, 1)) : $author$project$UI$Tracks$Covers$increaseSequence(gathering.currentAlbumSequence),
										currentArtistSequence: (!_Utils_eq(artist, gathering.previousTrack.tags.artist)) ? $elm$core$Maybe$Just(
											_Utils_Tuple2(identifiedTrack, 1)) : $author$project$UI$Tracks$Covers$increaseSequence(gathering.currentArtistSequence),
										largestAlbumFavsSequence: (!_Utils_eq(album, gathering.previousTrack.tags.album)) ? A2($author$project$UI$Tracks$Covers$resolveLargestSequence, gathering.currentAlbumFavsSequence, gathering.largestAlbumFavsSequence) : gathering.largestAlbumFavsSequence,
										largestAlbumSequence: (!_Utils_eq(album, gathering.previousTrack.tags.album)) ? A2($author$project$UI$Tracks$Covers$resolveLargestSequence, gathering.currentAlbumSequence, gathering.largestAlbumSequence) : gathering.largestAlbumSequence,
										largestArtistSequence: (!_Utils_eq(artist, gathering.previousTrack.tags.artist)) ? A2($author$project$UI$Tracks$Covers$resolveLargestSequence, gathering.currentArtistSequence, gathering.largestArtistSequence) : gathering.largestArtistSequence,
										previousGroup: group,
										previousTrack: track
									}
								};
							}
						}),
					{
						covers: _List_Nil,
						gathering: {acc: _List_Nil, accIds: _List_Nil, currentAlbumFavsSequence: $elm$core$Maybe$Nothing, currentAlbumSequence: $elm$core$Maybe$Nothing, currentArtistSequence: $elm$core$Maybe$Nothing, largestAlbumFavsSequence: $elm$core$Maybe$Nothing, largestAlbumSequence: $elm$core$Maybe$Nothing, largestArtistSequence: $elm$core$Maybe$Nothing, previousGroup: '', previousTrack: $author$project$Tracks$emptyTrack}
					},
					tracks.arranged)));
	});
var $author$project$UI$Tracks$State$generateCovers = function (model) {
	return $Fresheyeball$elm_return$Return$singleton(
		function (c) {
			return _Utils_update(
				model,
				{covers: c});
		}(
			A2($author$project$UI$Tracks$Covers$generate, model.sortBy, model.tracks)));
};
var $author$project$Return$Ext$communicate = F2(
	function (c, m) {
		return _Utils_Tuple2(m, c);
	});
var $elm$core$Tuple$mapFirst = F2(
	function (func, _v0) {
		var x = _v0.a;
		var y = _v0.b;
		return _Utils_Tuple2(
			func(x),
			y);
	});
var $author$project$UI$Tracks$Covers$harvest = F4(
	function (previouslySelectedCover, sortBy, tracks, covers) {
		var groupFn = $author$project$Tracks$coverGroup(sortBy);
		var _v0 = A3(
			$elm$core$List$foldr,
			F2(
				function (identifiedTrack, _v1) {
					var previousGroup = _v1.a;
					var acc = _v1.b;
					var dict = _v1.c;
					var group = groupFn(identifiedTrack);
					return _Utils_Tuple3(
						group,
						(!_Utils_eq(group, previousGroup)) ? A2($elm$core$List$cons, group, acc) : acc,
						A3(
							$elm$core$Dict$update,
							group,
							A2(
								$elm$core$Basics$composeR,
								A2(
									$elm_community$maybe_extra$Maybe$Extra$unwrap,
									_List_fromArray(
										[identifiedTrack]),
									$elm$core$List$cons(identifiedTrack)),
								$elm$core$Maybe$Just),
							dict));
				}),
			_Utils_Tuple3('', _List_Nil, $elm$core$Dict$empty),
			tracks.harvested);
		var groups = _v0.b;
		var tracksPerGroup = _v0.c;
		return A2(
			$elm$core$Tuple$mapFirst,
			function (h) {
				return _Utils_update(
					covers,
					{harvested: h});
			},
			A3(
				$elm$core$List$foldr,
				F2(
					function (cover, _v2) {
						var acc = _v2.a;
						var sel = _v2.b;
						if (A2($elm$core$List$member, cover.group, groups)) {
							var groupTracks = A2(
								$elm$core$Maybe$withDefault,
								_List_Nil,
								A2($elm$core$Dict$get, cover.group, tracksPerGroup));
							var trackIds = A2(
								$elm$core$List$map,
								A2(
									$elm$core$Basics$composeR,
									$elm$core$Tuple$second,
									function ($) {
										return $.id;
									}),
								groupTracks);
							var harvestedCover = _Utils_update(
								cover,
								{trackIds: trackIds, tracks: groupTracks});
							var _v3 = _Utils_Tuple2(previouslySelectedCover, sel);
							if (_v3.a.$ === 'Just') {
								if (_v3.b.$ === 'Nothing') {
									var pre = _v3.a.a;
									var _v4 = _v3.b;
									return _Utils_Tuple2(
										A2($elm$core$List$cons, harvestedCover, acc),
										_Utils_eq(pre.key, harvestedCover.key) ? $elm$core$Maybe$Just(harvestedCover) : $elm$core$Maybe$Nothing);
								} else {
									var s = _v3.b.a;
									return _Utils_Tuple2(
										A2($elm$core$List$cons, harvestedCover, acc),
										$elm$core$Maybe$Just(s));
								}
							} else {
								var _v5 = _v3.a;
								return _Utils_Tuple2(
									A2($elm$core$List$cons, harvestedCover, acc),
									$elm$core$Maybe$Nothing);
							}
						} else {
							return _Utils_Tuple2(acc, sel);
						}
					}),
				_Utils_Tuple2(_List_Nil, $elm$core$Maybe$Nothing),
				covers.arranged));
	});
var $elm$json$Json$Encode$bool = _Json_wrap;
var $author$project$UI$Ports$loadAlbumCovers = _Platform_outgoingPort(
	'loadAlbumCovers',
	function ($) {
		return $elm$json$Json$Encode$object(
			_List_fromArray(
				[
					_Utils_Tuple2(
					'coverView',
					$elm$json$Json$Encode$bool($.coverView)),
					_Utils_Tuple2(
					'list',
					$elm$json$Json$Encode$bool($.list))
				]));
	});
var $author$project$UI$Tracks$State$harvestCovers = function (model) {
	return A2(
		$author$project$Return$Ext$communicate,
		$author$project$UI$Ports$loadAlbumCovers(
			{coverView: true, list: true}),
		function (_v0) {
			var c = _v0.a;
			var s = _v0.b;
			return _Utils_update(
				model,
				{covers: c, selectedCover: s});
		}(
			A4($author$project$UI$Tracks$Covers$harvest, model.selectedCover, model.sortBy, model.tracks, model.covers)));
};
var $author$project$UI$Queue$State$coverTracksHarvester = F2(
	function (_v0, _v1) {
		var i = _v0.a;
		var t = _v0.b;
		var acc = _v1.a;
		var coverTrackIds = _v1.b;
		var _v2 = A2(
			$elm_community$list_extra$List$Extra$findIndex,
			$elm$core$Basics$eq(t.id),
			coverTrackIds);
		if (_v2.$ === 'Just') {
			var idx = _v2.a;
			return _Utils_Tuple2(
				_Utils_ap(
					acc,
					_List_fromArray(
						[
							_Utils_Tuple2(i, t)
						])),
				A2($elm_community$list_extra$List$Extra$removeAt, idx, coverTrackIds));
		} else {
			return _Utils_Tuple2(acc, coverTrackIds);
		}
	});
var $author$project$Tracks$isNowPlaying = F2(
	function (_v0, _v1) {
		var a = _v0.a;
		var b = _v0.b;
		var x = _v1.a;
		var y = _v1.b;
		return _Utils_eq(a.indexInPlaylist, x.indexInPlaylist) && _Utils_eq(b.id, y.id);
	});
var $author$project$UI$Queue$Fill$itemTrackId = A2(
	$elm$core$Basics$composeR,
	function ($) {
		return $.identifiedTrack;
	},
	A2(
		$elm$core$Basics$composeR,
		$elm$core$Tuple$second,
		function ($) {
			return $.id;
		}));
var $elm_community$list_extra$List$Extra$last = function (items) {
	last:
	while (true) {
		if (!items.b) {
			return $elm$core$Maybe$Nothing;
		} else {
			if (!items.b.b) {
				var x = items.a;
				return $elm$core$Maybe$Just(x);
			} else {
				var rest = items.b;
				var $temp$items = rest;
				items = $temp$items;
				continue last;
			}
		}
	}
};
var $author$project$Queue$makeItem = F2(
	function (isManualEntry, identifiedTrack) {
		return {identifiedTrack: identifiedTrack, manualEntry: isManualEntry};
	});
var $elm$core$Basics$min = F2(
	function (x, y) {
		return (_Utils_cmp(x, y) < 0) ? x : y;
	});
var $elm_community$maybe_extra$Maybe$Extra$or = F2(
	function (ma, mb) {
		if (ma.$ === 'Nothing') {
			return mb;
		} else {
			return ma;
		}
	});
var $author$project$Maybe$Ext$preferFirst = $elm_community$maybe_extra$Maybe$Extra$or;
var $elm_community$list_extra$List$Extra$elemIndex = function (x) {
	return $elm_community$list_extra$List$Extra$findIndex(
		$elm$core$Basics$eq(x));
};
var $author$project$UI$Queue$Fill$purifier = F2(
	function (tracks, _v0) {
		purifier:
		while (true) {
			var acc = _v0.a;
			var idsToIgnore = _v0.b;
			if (!idsToIgnore.b) {
				return _Utils_Tuple2(
					_Utils_ap(acc, tracks),
					_List_Nil);
			} else {
				if (!tracks.b) {
					return _Utils_Tuple2(acc, idsToIgnore);
				} else {
					var identifiedTrack = tracks.a;
					var track = identifiedTrack.b;
					var rest = tracks.b;
					var _v3 = A2($elm_community$list_extra$List$Extra$elemIndex, track.id, idsToIgnore);
					if (_v3.$ === 'Just') {
						var ignoreIdx = _v3.a;
						var $temp$tracks = rest,
							$temp$_v0 = _Utils_Tuple2(
							acc,
							A2($elm_community$list_extra$List$Extra$removeAt, ignoreIdx, idsToIgnore));
						tracks = $temp$tracks;
						_v0 = $temp$_v0;
						continue purifier;
					} else {
						var $temp$tracks = rest,
							$temp$_v0 = _Utils_Tuple2(
							A2($elm$core$List$cons, identifiedTrack, acc),
							idsToIgnore);
						tracks = $temp$tracks;
						_v0 = $temp$_v0;
						continue purifier;
					}
				}
			}
		}
	});
var $author$project$UI$Queue$Fill$queueLength = 30;
var $author$project$UI$Queue$Fill$ordered = F3(
	function (_v0, unfilteredTracks, state) {
		var tracks = A2(
			$author$project$UI$Queue$Fill$purifier,
			unfilteredTracks,
			A2(
				$elm$core$Tuple$pair,
				_List_Nil,
				A2($elm$core$List$map, $author$project$UI$Queue$Fill$itemTrackId, state.ignored))).a;
		var manualEntries = A2(
			$elm$core$List$filter,
			A2(
				$elm$core$Basics$composeR,
				function ($) {
					return $.manualEntry;
				},
				$elm$core$Basics$eq(true)),
			state.future);
		var remaining = A2(
			$elm$core$Basics$max,
			$author$project$UI$Queue$Fill$queueLength - $elm$core$List$length(manualEntries),
			0);
		var focus = A2(
			$author$project$Maybe$Ext$preferFirst,
			$elm_community$list_extra$List$Extra$last(manualEntries),
			state.activeItem);
		if (focus.$ === 'Just') {
			var item = focus.a;
			var maybeNowPlayingIndex = A2(
				$elm_community$list_extra$List$Extra$findIndex,
				$author$project$Tracks$isNowPlaying(item.identifiedTrack),
				tracks);
			return A2(
				$elm$core$List$append,
				manualEntries,
				A2(
					$elm$core$List$map,
					$author$project$Queue$makeItem(false),
					function (a) {
						var n = A2(
							$elm$core$Maybe$withDefault,
							$elm$core$List$length(tracks),
							maybeNowPlayingIndex);
						var actualRemaining = remaining - $elm$core$List$length(a);
						return _Utils_ap(
							a,
							A2(
								$elm$core$List$take,
								A2($elm$core$Basics$min, n, actualRemaining),
								tracks));
					}(
						A2(
							$elm$core$List$take,
							remaining,
							A2(
								$elm$core$Maybe$withDefault,
								tracks,
								A2(
									$elm$core$Maybe$map,
									function (idx) {
										return A2($elm$core$List$drop, idx + 1, tracks);
									},
									maybeNowPlayingIndex))))));
		} else {
			return A2(
				$elm$core$List$append,
				manualEntries,
				A2(
					$elm$core$List$map,
					$author$project$Queue$makeItem(false),
					A2($elm$core$List$take, remaining, tracks)));
		}
	});
var $author$project$Sources$Processing$Get = {$: 'Get'};
var $author$project$String$Ext$chopEnd = F2(
	function (needle, str) {
		return A2($elm$core$String$endsWith, needle, str) ? A2(
			$author$project$String$Ext$chopEnd,
			needle,
			A2(
				$elm$core$String$dropRight,
				$elm$core$String$length(needle),
				str)) : str;
	});
var $ryannhg$date_format$DateFormat$DayOfMonthFixed = {$: 'DayOfMonthFixed'};
var $ryannhg$date_format$DateFormat$dayOfMonthFixed = $ryannhg$date_format$DateFormat$DayOfMonthFixed;
var $rtfeldman$elm_hex$Hex$unsafeToDigit = function (num) {
	unsafeToDigit:
	while (true) {
		switch (num) {
			case 0:
				return _Utils_chr('0');
			case 1:
				return _Utils_chr('1');
			case 2:
				return _Utils_chr('2');
			case 3:
				return _Utils_chr('3');
			case 4:
				return _Utils_chr('4');
			case 5:
				return _Utils_chr('5');
			case 6:
				return _Utils_chr('6');
			case 7:
				return _Utils_chr('7');
			case 8:
				return _Utils_chr('8');
			case 9:
				return _Utils_chr('9');
			case 10:
				return _Utils_chr('a');
			case 11:
				return _Utils_chr('b');
			case 12:
				return _Utils_chr('c');
			case 13:
				return _Utils_chr('d');
			case 14:
				return _Utils_chr('e');
			case 15:
				return _Utils_chr('f');
			default:
				var $temp$num = num;
				num = $temp$num;
				continue unsafeToDigit;
		}
	}
};
var $rtfeldman$elm_hex$Hex$unsafePositiveToDigits = F2(
	function (digits, num) {
		unsafePositiveToDigits:
		while (true) {
			if (num < 16) {
				return A2(
					$elm$core$List$cons,
					$rtfeldman$elm_hex$Hex$unsafeToDigit(num),
					digits);
			} else {
				var $temp$digits = A2(
					$elm$core$List$cons,
					$rtfeldman$elm_hex$Hex$unsafeToDigit(
						A2($elm$core$Basics$modBy, 16, num)),
					digits),
					$temp$num = (num / 16) | 0;
				digits = $temp$digits;
				num = $temp$num;
				continue unsafePositiveToDigits;
			}
		}
	});
var $rtfeldman$elm_hex$Hex$toString = function (num) {
	return $elm$core$String$fromList(
		(num < 0) ? A2(
			$elm$core$List$cons,
			_Utils_chr('-'),
			A2($rtfeldman$elm_hex$Hex$unsafePositiveToDigits, _List_Nil, -num)) : A2($rtfeldman$elm_hex$Hex$unsafePositiveToDigits, _List_Nil, num));
};
var $elm$core$String$toUpper = _String_toUpper;
var $author$project$Sources$Services$AmazonS3$Presign$encodeAdditionalCharacters = function (query) {
	return A3(
		$elm$regex$Regex$replace,
		A2(
			$elm$core$Maybe$withDefault,
			$elm$regex$Regex$never,
			$elm$regex$Regex$fromString('[!*\'()]')),
		function (_v0) {
			var match = _v0.match;
			return $elm$core$String$concat(
				A2(
					$elm$core$List$map,
					A2(
						$elm$core$Basics$composeR,
						$elm$core$Char$toCode,
						A2(
							$elm$core$Basics$composeR,
							$rtfeldman$elm_hex$Hex$toString,
							A2(
								$elm$core$Basics$composeR,
								$elm$core$String$toUpper,
								$elm$core$Basics$append('%')))),
					$elm$core$String$toList(match)));
		},
		query);
};
var $author$project$Dict$Ext$fetch = F3(
	function (key, _default, dict) {
		return A2(
			$elm$core$Maybe$withDefault,
			_default,
			A2($elm$core$Dict$get, key, dict));
	});
var $author$project$Dict$Ext$fetchUnknown = F2(
	function (key, dict) {
		return A3($author$project$Dict$Ext$fetch, key, 'MISSING_VALUE', dict);
	});
var $ryannhg$date_format$DateFormat$Language$Language = F6(
	function (toMonthName, toMonthAbbreviation, toWeekdayName, toWeekdayAbbreviation, toAmPm, toOrdinalSuffix) {
		return {toAmPm: toAmPm, toMonthAbbreviation: toMonthAbbreviation, toMonthName: toMonthName, toOrdinalSuffix: toOrdinalSuffix, toWeekdayAbbreviation: toWeekdayAbbreviation, toWeekdayName: toWeekdayName};
	});
var $ryannhg$date_format$DateFormat$Language$toEnglishAmPm = function (hour) {
	return (hour > 11) ? 'pm' : 'am';
};
var $ryannhg$date_format$DateFormat$Language$toEnglishMonthName = function (month) {
	switch (month.$) {
		case 'Jan':
			return 'January';
		case 'Feb':
			return 'February';
		case 'Mar':
			return 'March';
		case 'Apr':
			return 'April';
		case 'May':
			return 'May';
		case 'Jun':
			return 'June';
		case 'Jul':
			return 'July';
		case 'Aug':
			return 'August';
		case 'Sep':
			return 'September';
		case 'Oct':
			return 'October';
		case 'Nov':
			return 'November';
		default:
			return 'December';
	}
};
var $ryannhg$date_format$DateFormat$Language$toEnglishSuffix = function (num) {
	var _v0 = A2($elm$core$Basics$modBy, 100, num);
	switch (_v0) {
		case 11:
			return 'th';
		case 12:
			return 'th';
		case 13:
			return 'th';
		default:
			var _v1 = A2($elm$core$Basics$modBy, 10, num);
			switch (_v1) {
				case 1:
					return 'st';
				case 2:
					return 'nd';
				case 3:
					return 'rd';
				default:
					return 'th';
			}
	}
};
var $ryannhg$date_format$DateFormat$Language$toEnglishWeekdayName = function (weekday) {
	switch (weekday.$) {
		case 'Mon':
			return 'Monday';
		case 'Tue':
			return 'Tuesday';
		case 'Wed':
			return 'Wednesday';
		case 'Thu':
			return 'Thursday';
		case 'Fri':
			return 'Friday';
		case 'Sat':
			return 'Saturday';
		default:
			return 'Sunday';
	}
};
var $ryannhg$date_format$DateFormat$Language$english = A6(
	$ryannhg$date_format$DateFormat$Language$Language,
	$ryannhg$date_format$DateFormat$Language$toEnglishMonthName,
	A2(
		$elm$core$Basics$composeR,
		$ryannhg$date_format$DateFormat$Language$toEnglishMonthName,
		$elm$core$String$left(3)),
	$ryannhg$date_format$DateFormat$Language$toEnglishWeekdayName,
	A2(
		$elm$core$Basics$composeR,
		$ryannhg$date_format$DateFormat$Language$toEnglishWeekdayName,
		$elm$core$String$left(3)),
	$ryannhg$date_format$DateFormat$Language$toEnglishAmPm,
	$ryannhg$date_format$DateFormat$Language$toEnglishSuffix);
var $elm$time$Time$toHour = F2(
	function (zone, time) {
		return A2(
			$elm$core$Basics$modBy,
			24,
			A2(
				$elm$time$Time$flooredDiv,
				A2($elm$time$Time$toAdjustedMinutes, zone, time),
				60));
	});
var $ryannhg$date_format$DateFormat$amPm = F3(
	function (language, zone, posix) {
		return language.toAmPm(
			A2($elm$time$Time$toHour, zone, posix));
	});
var $elm$time$Time$toDay = F2(
	function (zone, time) {
		return $elm$time$Time$toCivil(
			A2($elm$time$Time$toAdjustedMinutes, zone, time)).day;
	});
var $ryannhg$date_format$DateFormat$dayOfMonth = $elm$time$Time$toDay;
var $elm$time$Time$Sun = {$: 'Sun'};
var $elm$time$Time$Fri = {$: 'Fri'};
var $elm$time$Time$Mon = {$: 'Mon'};
var $elm$time$Time$Sat = {$: 'Sat'};
var $elm$time$Time$Thu = {$: 'Thu'};
var $elm$time$Time$Tue = {$: 'Tue'};
var $elm$time$Time$Wed = {$: 'Wed'};
var $ryannhg$date_format$DateFormat$days = _List_fromArray(
	[$elm$time$Time$Sun, $elm$time$Time$Mon, $elm$time$Time$Tue, $elm$time$Time$Wed, $elm$time$Time$Thu, $elm$time$Time$Fri, $elm$time$Time$Sat]);
var $elm$time$Time$toWeekday = F2(
	function (zone, time) {
		var _v0 = A2(
			$elm$core$Basics$modBy,
			7,
			A2(
				$elm$time$Time$flooredDiv,
				A2($elm$time$Time$toAdjustedMinutes, zone, time),
				60 * 24));
		switch (_v0) {
			case 0:
				return $elm$time$Time$Thu;
			case 1:
				return $elm$time$Time$Fri;
			case 2:
				return $elm$time$Time$Sat;
			case 3:
				return $elm$time$Time$Sun;
			case 4:
				return $elm$time$Time$Mon;
			case 5:
				return $elm$time$Time$Tue;
			default:
				return $elm$time$Time$Wed;
		}
	});
var $ryannhg$date_format$DateFormat$dayOfWeek = F2(
	function (zone, posix) {
		return function (_v1) {
			var i = _v1.a;
			return i;
		}(
			A2(
				$elm$core$Maybe$withDefault,
				_Utils_Tuple2(0, $elm$time$Time$Sun),
				$elm$core$List$head(
					A2(
						$elm$core$List$filter,
						function (_v0) {
							var day = _v0.b;
							return _Utils_eq(
								day,
								A2($elm$time$Time$toWeekday, zone, posix));
						},
						A2(
							$elm$core$List$indexedMap,
							F2(
								function (i, day) {
									return _Utils_Tuple2(i, day);
								}),
							$ryannhg$date_format$DateFormat$days)))));
	});
var $ryannhg$date_format$DateFormat$isLeapYear = function (year_) {
	return (!(!A2($elm$core$Basics$modBy, 4, year_))) ? false : ((!(!A2($elm$core$Basics$modBy, 100, year_))) ? true : ((!(!A2($elm$core$Basics$modBy, 400, year_))) ? false : true));
};
var $ryannhg$date_format$DateFormat$daysInMonth = F2(
	function (year_, month) {
		switch (month.$) {
			case 'Jan':
				return 31;
			case 'Feb':
				return $ryannhg$date_format$DateFormat$isLeapYear(year_) ? 29 : 28;
			case 'Mar':
				return 31;
			case 'Apr':
				return 30;
			case 'May':
				return 31;
			case 'Jun':
				return 30;
			case 'Jul':
				return 31;
			case 'Aug':
				return 31;
			case 'Sep':
				return 30;
			case 'Oct':
				return 31;
			case 'Nov':
				return 30;
			default:
				return 31;
		}
	});
var $ryannhg$date_format$DateFormat$months = _List_fromArray(
	[$elm$time$Time$Jan, $elm$time$Time$Feb, $elm$time$Time$Mar, $elm$time$Time$Apr, $elm$time$Time$May, $elm$time$Time$Jun, $elm$time$Time$Jul, $elm$time$Time$Aug, $elm$time$Time$Sep, $elm$time$Time$Oct, $elm$time$Time$Nov, $elm$time$Time$Dec]);
var $ryannhg$date_format$DateFormat$monthPair = F2(
	function (zone, posix) {
		return A2(
			$elm$core$Maybe$withDefault,
			_Utils_Tuple2(0, $elm$time$Time$Jan),
			$elm$core$List$head(
				A2(
					$elm$core$List$filter,
					function (_v0) {
						var i = _v0.a;
						var m = _v0.b;
						return _Utils_eq(
							m,
							A2($elm$time$Time$toMonth, zone, posix));
					},
					A2(
						$elm$core$List$indexedMap,
						F2(
							function (a, b) {
								return _Utils_Tuple2(a, b);
							}),
						$ryannhg$date_format$DateFormat$months))));
	});
var $ryannhg$date_format$DateFormat$monthNumber_ = F2(
	function (zone, posix) {
		return 1 + function (_v0) {
			var i = _v0.a;
			var m = _v0.b;
			return i;
		}(
			A2($ryannhg$date_format$DateFormat$monthPair, zone, posix));
	});
var $elm$core$List$sum = function (numbers) {
	return A3($elm$core$List$foldl, $elm$core$Basics$add, 0, numbers);
};
var $ryannhg$date_format$DateFormat$dayOfYear = F2(
	function (zone, posix) {
		var monthsBeforeThisOne = A2(
			$elm$core$List$take,
			A2($ryannhg$date_format$DateFormat$monthNumber_, zone, posix) - 1,
			$ryannhg$date_format$DateFormat$months);
		var daysBeforeThisMonth = $elm$core$List$sum(
			A2(
				$elm$core$List$map,
				$ryannhg$date_format$DateFormat$daysInMonth(
					A2($elm$time$Time$toYear, zone, posix)),
				monthsBeforeThisOne));
		return daysBeforeThisMonth + A2($ryannhg$date_format$DateFormat$dayOfMonth, zone, posix);
	});
var $ryannhg$date_format$DateFormat$quarter = F2(
	function (zone, posix) {
		return (A2($ryannhg$date_format$DateFormat$monthNumber_, zone, posix) / 4) | 0;
	});
var $elm$core$String$right = F2(
	function (n, string) {
		return (n < 1) ? '' : A3(
			$elm$core$String$slice,
			-n,
			$elm$core$String$length(string),
			string);
	});
var $ryannhg$date_format$DateFormat$toFixedLength = F2(
	function (totalChars, num) {
		var numStr = $elm$core$String$fromInt(num);
		var numZerosNeeded = totalChars - $elm$core$String$length(numStr);
		var zeros = A2(
			$elm$core$String$join,
			'',
			A2(
				$elm$core$List$map,
				function (_v0) {
					return '0';
				},
				A2($elm$core$List$range, 1, numZerosNeeded)));
		return _Utils_ap(zeros, numStr);
	});
var $elm$time$Time$toMillis = F2(
	function (_v0, time) {
		return A2(
			$elm$core$Basics$modBy,
			1000,
			$elm$time$Time$posixToMillis(time));
	});
var $elm$time$Time$toMinute = F2(
	function (zone, time) {
		return A2(
			$elm$core$Basics$modBy,
			60,
			A2($elm$time$Time$toAdjustedMinutes, zone, time));
	});
var $ryannhg$date_format$DateFormat$toNonMilitary = function (num) {
	return (!num) ? 12 : ((num <= 12) ? num : (num - 12));
};
var $elm$time$Time$toSecond = F2(
	function (_v0, time) {
		return A2(
			$elm$core$Basics$modBy,
			60,
			A2(
				$elm$time$Time$flooredDiv,
				$elm$time$Time$posixToMillis(time),
				1000));
	});
var $ryannhg$date_format$DateFormat$millisecondsPerYear = $elm$core$Basics$round((((1000 * 60) * 60) * 24) * 365.25);
var $ryannhg$date_format$DateFormat$firstDayOfYear = F2(
	function (zone, time) {
		return $elm$time$Time$millisToPosix(
			$ryannhg$date_format$DateFormat$millisecondsPerYear * A2($elm$time$Time$toYear, zone, time));
	});
var $ryannhg$date_format$DateFormat$weekOfYear = F2(
	function (zone, posix) {
		var firstDay = A2($ryannhg$date_format$DateFormat$firstDayOfYear, zone, posix);
		var firstDayOffset = A2($ryannhg$date_format$DateFormat$dayOfWeek, zone, firstDay);
		var daysSoFar = A2($ryannhg$date_format$DateFormat$dayOfYear, zone, posix);
		return (((daysSoFar + firstDayOffset) / 7) | 0) + 1;
	});
var $ryannhg$date_format$DateFormat$year = F2(
	function (zone, time) {
		return $elm$core$String$fromInt(
			A2($elm$time$Time$toYear, zone, time));
	});
var $ryannhg$date_format$DateFormat$piece = F4(
	function (language, zone, posix, token) {
		switch (token.$) {
			case 'MonthNumber':
				return $elm$core$String$fromInt(
					A2($ryannhg$date_format$DateFormat$monthNumber_, zone, posix));
			case 'MonthSuffix':
				return function (num) {
					return _Utils_ap(
						$elm$core$String$fromInt(num),
						language.toOrdinalSuffix(num));
				}(
					A2($ryannhg$date_format$DateFormat$monthNumber_, zone, posix));
			case 'MonthFixed':
				return A2(
					$ryannhg$date_format$DateFormat$toFixedLength,
					2,
					A2($ryannhg$date_format$DateFormat$monthNumber_, zone, posix));
			case 'MonthNameAbbreviated':
				return language.toMonthAbbreviation(
					A2($elm$time$Time$toMonth, zone, posix));
			case 'MonthNameFull':
				return language.toMonthName(
					A2($elm$time$Time$toMonth, zone, posix));
			case 'QuarterNumber':
				return $elm$core$String$fromInt(
					1 + A2($ryannhg$date_format$DateFormat$quarter, zone, posix));
			case 'QuarterSuffix':
				return function (num) {
					return _Utils_ap(
						$elm$core$String$fromInt(num),
						language.toOrdinalSuffix(num));
				}(
					1 + A2($ryannhg$date_format$DateFormat$quarter, zone, posix));
			case 'DayOfMonthNumber':
				return $elm$core$String$fromInt(
					A2($ryannhg$date_format$DateFormat$dayOfMonth, zone, posix));
			case 'DayOfMonthSuffix':
				return function (num) {
					return _Utils_ap(
						$elm$core$String$fromInt(num),
						language.toOrdinalSuffix(num));
				}(
					A2($ryannhg$date_format$DateFormat$dayOfMonth, zone, posix));
			case 'DayOfMonthFixed':
				return A2(
					$ryannhg$date_format$DateFormat$toFixedLength,
					2,
					A2($ryannhg$date_format$DateFormat$dayOfMonth, zone, posix));
			case 'DayOfYearNumber':
				return $elm$core$String$fromInt(
					A2($ryannhg$date_format$DateFormat$dayOfYear, zone, posix));
			case 'DayOfYearSuffix':
				return function (num) {
					return _Utils_ap(
						$elm$core$String$fromInt(num),
						language.toOrdinalSuffix(num));
				}(
					A2($ryannhg$date_format$DateFormat$dayOfYear, zone, posix));
			case 'DayOfYearFixed':
				return A2(
					$ryannhg$date_format$DateFormat$toFixedLength,
					3,
					A2($ryannhg$date_format$DateFormat$dayOfYear, zone, posix));
			case 'DayOfWeekNumber':
				return $elm$core$String$fromInt(
					A2($ryannhg$date_format$DateFormat$dayOfWeek, zone, posix));
			case 'DayOfWeekSuffix':
				return function (num) {
					return _Utils_ap(
						$elm$core$String$fromInt(num),
						language.toOrdinalSuffix(num));
				}(
					A2($ryannhg$date_format$DateFormat$dayOfWeek, zone, posix));
			case 'DayOfWeekNameAbbreviated':
				return language.toWeekdayAbbreviation(
					A2($elm$time$Time$toWeekday, zone, posix));
			case 'DayOfWeekNameFull':
				return language.toWeekdayName(
					A2($elm$time$Time$toWeekday, zone, posix));
			case 'WeekOfYearNumber':
				return $elm$core$String$fromInt(
					A2($ryannhg$date_format$DateFormat$weekOfYear, zone, posix));
			case 'WeekOfYearSuffix':
				return function (num) {
					return _Utils_ap(
						$elm$core$String$fromInt(num),
						language.toOrdinalSuffix(num));
				}(
					A2($ryannhg$date_format$DateFormat$weekOfYear, zone, posix));
			case 'WeekOfYearFixed':
				return A2(
					$ryannhg$date_format$DateFormat$toFixedLength,
					2,
					A2($ryannhg$date_format$DateFormat$weekOfYear, zone, posix));
			case 'YearNumberLastTwo':
				return A2(
					$elm$core$String$right,
					2,
					A2($ryannhg$date_format$DateFormat$year, zone, posix));
			case 'YearNumber':
				return A2($ryannhg$date_format$DateFormat$year, zone, posix);
			case 'AmPmUppercase':
				return $elm$core$String$toUpper(
					A3($ryannhg$date_format$DateFormat$amPm, language, zone, posix));
			case 'AmPmLowercase':
				return $elm$core$String$toLower(
					A3($ryannhg$date_format$DateFormat$amPm, language, zone, posix));
			case 'HourMilitaryNumber':
				return $elm$core$String$fromInt(
					A2($elm$time$Time$toHour, zone, posix));
			case 'HourMilitaryFixed':
				return A2(
					$ryannhg$date_format$DateFormat$toFixedLength,
					2,
					A2($elm$time$Time$toHour, zone, posix));
			case 'HourNumber':
				return $elm$core$String$fromInt(
					$ryannhg$date_format$DateFormat$toNonMilitary(
						A2($elm$time$Time$toHour, zone, posix)));
			case 'HourFixed':
				return A2(
					$ryannhg$date_format$DateFormat$toFixedLength,
					2,
					$ryannhg$date_format$DateFormat$toNonMilitary(
						A2($elm$time$Time$toHour, zone, posix)));
			case 'HourMilitaryFromOneNumber':
				return $elm$core$String$fromInt(
					1 + A2($elm$time$Time$toHour, zone, posix));
			case 'HourMilitaryFromOneFixed':
				return A2(
					$ryannhg$date_format$DateFormat$toFixedLength,
					2,
					1 + A2($elm$time$Time$toHour, zone, posix));
			case 'MinuteNumber':
				return $elm$core$String$fromInt(
					A2($elm$time$Time$toMinute, zone, posix));
			case 'MinuteFixed':
				return A2(
					$ryannhg$date_format$DateFormat$toFixedLength,
					2,
					A2($elm$time$Time$toMinute, zone, posix));
			case 'SecondNumber':
				return $elm$core$String$fromInt(
					A2($elm$time$Time$toSecond, zone, posix));
			case 'SecondFixed':
				return A2(
					$ryannhg$date_format$DateFormat$toFixedLength,
					2,
					A2($elm$time$Time$toSecond, zone, posix));
			case 'MillisecondNumber':
				return $elm$core$String$fromInt(
					A2($elm$time$Time$toMillis, zone, posix));
			case 'MillisecondFixed':
				return A2(
					$ryannhg$date_format$DateFormat$toFixedLength,
					3,
					A2($elm$time$Time$toMillis, zone, posix));
			default:
				var string = token.a;
				return string;
		}
	});
var $ryannhg$date_format$DateFormat$formatWithLanguage = F4(
	function (language, tokens, zone, time) {
		return A2(
			$elm$core$String$join,
			'',
			A2(
				$elm$core$List$map,
				A3($ryannhg$date_format$DateFormat$piece, language, zone, time),
				tokens));
	});
var $ryannhg$date_format$DateFormat$format = $ryannhg$date_format$DateFormat$formatWithLanguage($ryannhg$date_format$DateFormat$Language$english);
var $icidasset$elm_binary$Binary$Bits = function (a) {
	return {$: 'Bits', a: a};
};
var $icidasset$elm_binary$Binary$ifThenElse = F3(
	function (bool, a, b) {
		return bool ? a : b;
	});
var $icidasset$elm_binary$Binary$fromIntegers = A2(
	$elm$core$Basics$composeR,
	$elm$core$List$map(
		function (i) {
			return A3($icidasset$elm_binary$Binary$ifThenElse, i <= 0, false, true);
		}),
	$icidasset$elm_binary$Binary$Bits);
var $elm$core$List$repeatHelp = F3(
	function (result, n, value) {
		repeatHelp:
		while (true) {
			if (n <= 0) {
				return result;
			} else {
				var $temp$result = A2($elm$core$List$cons, value, result),
					$temp$n = n - 1,
					$temp$value = value;
				result = $temp$result;
				n = $temp$n;
				value = $temp$value;
				continue repeatHelp;
			}
		}
	});
var $elm$core$List$repeat = F2(
	function (n, value) {
		return A3($elm$core$List$repeatHelp, _List_Nil, n, value);
	});
var $icidasset$elm_binary$Binary$ensureSize = F2(
	function (size, _v0) {
		var bits = _v0.a;
		var currentLength = $elm$core$List$length(bits);
		return _Utils_eq(currentLength, size) ? $icidasset$elm_binary$Binary$Bits(bits) : ((_Utils_cmp(currentLength, size) > 0) ? $icidasset$elm_binary$Binary$Bits(
			A2($elm$core$List$drop, currentLength - size, bits)) : $icidasset$elm_binary$Binary$Bits(
			_Utils_ap(
				A2($elm$core$List$repeat, size - currentLength, false),
				bits)));
	});
var $icidasset$elm_binary$Binary$fromDecimal_ = F2(
	function (acc, n) {
		fromDecimal_:
		while (true) {
			var _v0 = _Utils_Tuple2((n / 2) | 0, n % 2);
			var x = _v0.a;
			var bit = _v0.b;
			var bits = A2(
				$elm$core$List$cons,
				A2($elm$core$Basics$modBy, 2, bit),
				acc);
			if (x > 0) {
				var $temp$acc = bits,
					$temp$n = x;
				acc = $temp$acc;
				n = $temp$n;
				continue fromDecimal_;
			} else {
				return bits;
			}
		}
	});
var $icidasset$elm_binary$Binary$fromDecimal = A2(
	$elm$core$Basics$composeR,
	$icidasset$elm_binary$Binary$fromDecimal_(_List_Nil),
	$icidasset$elm_binary$Binary$fromIntegers);
var $icidasset$elm_binary$Binary$toIntegers = function (_v0) {
	var bits = _v0.a;
	return A2(
		$elm$core$List$map,
		function (b) {
			return A3($icidasset$elm_binary$Binary$ifThenElse, b, 1, 0);
		},
		bits);
};
var $elm_community$list_extra$List$Extra$splitAt = F2(
	function (n, xs) {
		return _Utils_Tuple2(
			A2($elm$core$List$take, n, xs),
			A2($elm$core$List$drop, n, xs));
	});
var $icidasset$elm_binary$Binary$unicodeCharToUtf8Bits_ = F2(
	function (startingBits, codepoint) {
		return A3(
			$elm$core$List$foldr,
			F2(
				function (start, _v0) {
					var all = _v0.a;
					var acc = _v0.b;
					var takeAway = 8 - $elm$core$List$length(start);
					var _v1 = A2($elm_community$list_extra$List$Extra$splitAt, takeAway, acc);
					var end = _v1.a;
					var rest = _v1.b;
					return _Utils_Tuple2(
						_Utils_ap(
							start,
							_Utils_ap(
								$elm$core$List$reverse(end),
								all)),
						rest);
				}),
			_Utils_Tuple2(
				_List_Nil,
				$elm$core$List$reverse(
					$icidasset$elm_binary$Binary$toIntegers(
						A2(
							$icidasset$elm_binary$Binary$ensureSize,
							8 * $elm$core$List$length(startingBits),
							$icidasset$elm_binary$Binary$fromDecimal(codepoint))))),
			startingBits).a;
	});
var $icidasset$elm_binary$Binary$unicodeCharToUtf8Bits = function (_char) {
	var codepoint = $elm$core$Char$toCode(_char);
	return (codepoint < 128) ? $icidasset$elm_binary$Binary$toIntegers(
		A2(
			$icidasset$elm_binary$Binary$ensureSize,
			8,
			$icidasset$elm_binary$Binary$fromDecimal(codepoint))) : ((codepoint < 2048) ? A2(
		$icidasset$elm_binary$Binary$unicodeCharToUtf8Bits_,
		_List_fromArray(
			[
				_List_fromArray(
				[1, 1, 0]),
				_List_fromArray(
				[1, 0])
			]),
		codepoint) : ((codepoint < 65536) ? A2(
		$icidasset$elm_binary$Binary$unicodeCharToUtf8Bits_,
		_List_fromArray(
			[
				_List_fromArray(
				[1, 1, 1, 0]),
				_List_fromArray(
				[1, 0]),
				_List_fromArray(
				[1, 0])
			]),
		codepoint) : A2(
		$icidasset$elm_binary$Binary$unicodeCharToUtf8Bits_,
		_List_fromArray(
			[
				_List_fromArray(
				[1, 1, 1, 1, 0]),
				_List_fromArray(
				[1, 0]),
				_List_fromArray(
				[1, 0]),
				_List_fromArray(
				[1, 0])
			]),
		codepoint)));
};
var $icidasset$elm_binary$Binary$fromStringAsUtf8 = function (string) {
	return $icidasset$elm_binary$Binary$fromIntegers(
		A2(
			$elm$core$List$concatMap,
			$icidasset$elm_binary$Binary$unicodeCharToUtf8Bits,
			$elm$core$String$toList(string)));
};
var $icidasset$elm_binary$Binary$append = F2(
	function (_v0, _v1) {
		var a = _v0.a;
		var b = _v1.a;
		return $icidasset$elm_binary$Binary$Bits(
			A2($elm$core$List$append, a, b));
	});
var $icidasset$elm_binary$Binary$concatMap = function (fn) {
	return A2(
		$elm$core$List$foldr,
		function (a) {
			return $elm$core$List$append(
				fn(a));
		},
		_List_Nil);
};
var $icidasset$elm_binary$Binary$unwrap = function (_v0) {
	var bits = _v0.a;
	return bits;
};
var $icidasset$elm_binary$Binary$fromString_ = F2(
	function (amountOfBitsPerCharacter, _char) {
		return $icidasset$elm_binary$Binary$unwrap(
			A2(
				$icidasset$elm_binary$Binary$ensureSize,
				amountOfBitsPerCharacter,
				$icidasset$elm_binary$Binary$fromDecimal(
					$elm$core$Char$toCode(_char))));
	});
var $icidasset$elm_binary$Binary$fromString = F2(
	function (amountOfBitsPerCharacter, string) {
		return $icidasset$elm_binary$Binary$Bits(
			A2(
				$icidasset$elm_binary$Binary$concatMap,
				$icidasset$elm_binary$Binary$fromString_(amountOfBitsPerCharacter),
				$elm$core$String$toList(string)));
	});
var $icidasset$elm_binary$Binary$fromBooleans = $icidasset$elm_binary$Binary$Bits;
var $icidasset$elm_binary$Binary$toBooleans = function (_v0) {
	var bits = _v0.a;
	return bits;
};
var $icidasset$elm_binary$Binary$width = function (_v0) {
	var bits = _v0.a;
	return $elm$core$List$length(bits);
};
var $author$project$Cryptography$Hmac$padRight = F2(
	function (_int, bits) {
		var size = $icidasset$elm_binary$Binary$width(bits);
		return $icidasset$elm_binary$Binary$fromBooleans(
			A2(
				$elm$core$List$append,
				$icidasset$elm_binary$Binary$toBooleans(bits),
				A2($elm$core$List$repeat, _int - size, false)));
	});
var $icidasset$elm_binary$Binary$concat = A2(
	$elm$core$Basics$composeR,
	$icidasset$elm_binary$Binary$concatMap($icidasset$elm_binary$Binary$unwrap),
	$icidasset$elm_binary$Binary$Bits);
var $icidasset$elm_binary$Binary$hexCharToBinary = function (_char) {
	var _v0 = $elm$core$Char$toUpper(_char);
	switch (_v0.valueOf()) {
		case '0':
			return _List_fromArray(
				[false, false, false, false]);
		case '1':
			return _List_fromArray(
				[false, false, false, true]);
		case '2':
			return _List_fromArray(
				[false, false, true, false]);
		case '3':
			return _List_fromArray(
				[false, false, true, true]);
		case '4':
			return _List_fromArray(
				[false, true, false, false]);
		case '5':
			return _List_fromArray(
				[false, true, false, true]);
		case '6':
			return _List_fromArray(
				[false, true, true, false]);
		case '7':
			return _List_fromArray(
				[false, true, true, true]);
		case '8':
			return _List_fromArray(
				[true, false, false, false]);
		case '9':
			return _List_fromArray(
				[true, false, false, true]);
		case 'A':
			return _List_fromArray(
				[true, false, true, false]);
		case 'B':
			return _List_fromArray(
				[true, false, true, true]);
		case 'C':
			return _List_fromArray(
				[true, true, false, false]);
		case 'D':
			return _List_fromArray(
				[true, true, false, true]);
		case 'E':
			return _List_fromArray(
				[true, true, true, false]);
		case 'F':
			return _List_fromArray(
				[true, true, true, true]);
		default:
			return _List_Nil;
	}
};
var $icidasset$elm_binary$Binary$fromHex = function (hex) {
	return $icidasset$elm_binary$Binary$Bits(
		A2(
			$icidasset$elm_binary$Binary$concatMap,
			$icidasset$elm_binary$Binary$hexCharToBinary,
			$elm$core$String$toList(hex)));
};
var $author$project$Cryptography$Hmac$padding128 = _Utils_Tuple2(
	$icidasset$elm_binary$Binary$concat(
		A2(
			$elm$core$List$repeat,
			128,
			$icidasset$elm_binary$Binary$fromHex('36'))),
	$icidasset$elm_binary$Binary$concat(
		A2(
			$elm$core$List$repeat,
			128,
			$icidasset$elm_binary$Binary$fromHex('5C'))));
var $author$project$Cryptography$Hmac$padding64 = _Utils_Tuple2(
	$icidasset$elm_binary$Binary$concat(
		A2(
			$elm$core$List$repeat,
			64,
			$icidasset$elm_binary$Binary$fromHex('36'))),
	$icidasset$elm_binary$Binary$concat(
		A2(
			$elm$core$List$repeat,
			64,
			$icidasset$elm_binary$Binary$fromHex('5C'))));
var $author$project$Cryptography$Hmac$padding = function (blockSize) {
	switch (blockSize) {
		case 64:
			return $author$project$Cryptography$Hmac$padding64;
		case 128:
			return $author$project$Cryptography$Hmac$padding128;
		default:
			return _Utils_Tuple2(
				$icidasset$elm_binary$Binary$concat(
					A2(
						$elm$core$List$repeat,
						blockSize,
						$icidasset$elm_binary$Binary$fromHex('36'))),
				$icidasset$elm_binary$Binary$concat(
					A2(
						$elm$core$List$repeat,
						blockSize,
						$icidasset$elm_binary$Binary$fromHex('5C'))));
	}
};
var $icidasset$elm_binary$Binary$condense = F2(
	function (fn, _v0) {
		var a = _v0.a.a;
		var b = _v0.b.a;
		return $icidasset$elm_binary$Binary$Bits(
			A3($elm$core$List$map2, fn, a, b));
	});
var $icidasset$elm_binary$Binary$makeIsometric = F2(
	function (a, b) {
		var _v0 = _Utils_Tuple2(
			$icidasset$elm_binary$Binary$width(a),
			$icidasset$elm_binary$Binary$width(b));
		var widthA = _v0.a;
		var widthB = _v0.b;
		return _Utils_eq(widthA, widthB) ? _Utils_Tuple2(a, b) : ((_Utils_cmp(widthA, widthB) > 0) ? _Utils_Tuple2(
			a,
			A2($icidasset$elm_binary$Binary$ensureSize, widthA, b)) : _Utils_Tuple2(
			A2($icidasset$elm_binary$Binary$ensureSize, widthB, a),
			b));
	});
var $elm$core$Basics$xor = _Basics_xor;
var $icidasset$elm_binary$Binary$xor = F2(
	function (a, b) {
		return A2(
			$icidasset$elm_binary$Binary$condense,
			$elm$core$Basics$xor,
			A2($icidasset$elm_binary$Binary$makeIsometric, a, b));
	});
var $author$project$Cryptography$Hmac$encrypt = F4(
	function (blockSize, hash, messageString, key) {
		var keySize = $icidasset$elm_binary$Binary$width(key);
		var keyWithBlockSize = (_Utils_cmp(keySize, blockSize) > 0) ? A2(
			$author$project$Cryptography$Hmac$padRight,
			blockSize,
			hash(key)) : ((_Utils_cmp(keySize, blockSize) < 0) ? A2($author$project$Cryptography$Hmac$padRight, blockSize, key) : key);
		var _v0 = A3(
			$elm$core$Tuple$mapBoth,
			$icidasset$elm_binary$Binary$xor(keyWithBlockSize),
			$icidasset$elm_binary$Binary$xor(keyWithBlockSize),
			$author$project$Cryptography$Hmac$padding((blockSize / 8) | 0));
		var binSeqOne = _v0.a;
		var binSeqTwo = _v0.b;
		return hash(
			A2(
				$icidasset$elm_binary$Binary$append,
				binSeqTwo,
				hash(
					A2(
						$icidasset$elm_binary$Binary$append,
						binSeqOne,
						A2($icidasset$elm_binary$Binary$fromString, 8, messageString)))));
	});
var $author$project$Cryptography$Hmac$encrypt64 = $author$project$Cryptography$Hmac$encrypt(64 * 8);
var $icidasset$elm_sha$SHA$Internal$SHA256$chunkSize = 512;
var $icidasset$elm_binary$Binary$and = F2(
	function (a, b) {
		return A2(
			$icidasset$elm_binary$Binary$condense,
			$elm$core$Basics$and,
			A2($icidasset$elm_binary$Binary$makeIsometric, a, b));
	});
var $icidasset$elm_binary$Binary$add_ = F2(
	function (_v0, _v1) {
		var x = _v0.a;
		var y = _v0.b;
		var bits = _v1.bits;
		var carryOver = _v1.carryOver;
		return (carryOver && (x && y)) ? {
			bits: A2($elm$core$List$cons, true, bits),
			carryOver: true
		} : ((x && y) ? {
			bits: A2($elm$core$List$cons, false, bits),
			carryOver: true
		} : ((carryOver && (x || y)) ? {
			bits: A2($elm$core$List$cons, false, bits),
			carryOver: true
		} : ((x || y) ? {
			bits: A2($elm$core$List$cons, true, bits),
			carryOver: false
		} : (carryOver ? {
			bits: A2($elm$core$List$cons, true, bits),
			carryOver: false
		} : {
			bits: A2($elm$core$List$cons, false, bits),
			carryOver: false
		}))));
	});
var $elm_community$list_extra$List$Extra$zip = $elm$core$List$map2($elm$core$Tuple$pair);
var $icidasset$elm_binary$Binary$add = F2(
	function (a, b) {
		return $icidasset$elm_binary$Binary$Bits(
			A2(
				$icidasset$elm_binary$Binary$add_,
				_Utils_Tuple2(false, false),
				A3(
					$elm$core$List$foldr,
					$icidasset$elm_binary$Binary$add_,
					{bits: _List_Nil, carryOver: false},
					function (_v0) {
						var c = _v0.a.a;
						var d = _v0.b.a;
						return A2($elm_community$list_extra$List$Extra$zip, c, d);
					}(
						A2($icidasset$elm_binary$Binary$makeIsometric, a, b)))).bits);
	});
var $icidasset$elm_sha$SHA$Internal$Common$combine = F3(
	function (sizeInBits, x, y) {
		var sum = A2($icidasset$elm_binary$Binary$add, x, y);
		var width = $icidasset$elm_binary$Binary$width(sum);
		return (_Utils_cmp(width, sizeInBits) > 0) ? $icidasset$elm_binary$Binary$fromBooleans(
			A2(
				$elm$core$List$drop,
				width - sizeInBits,
				$icidasset$elm_binary$Binary$toBooleans(sum))) : sum;
	});
var $icidasset$elm_sha$SHA$Internal$SHA256$combine = $icidasset$elm_sha$SHA$Internal$Common$combine(($icidasset$elm_sha$SHA$Internal$SHA256$chunkSize / 16) | 0);
var $icidasset$elm_binary$Binary$empty = $icidasset$elm_binary$Binary$Bits(_List_Nil);
var $elm$core$Array$bitMask = 4294967295 >>> (32 - $elm$core$Array$shiftStep);
var $elm$core$Elm$JsArray$unsafeGet = _JsArray_unsafeGet;
var $elm$core$Array$getHelp = F3(
	function (shift, index, tree) {
		getHelp:
		while (true) {
			var pos = $elm$core$Array$bitMask & (index >>> shift);
			var _v0 = A2($elm$core$Elm$JsArray$unsafeGet, pos, tree);
			if (_v0.$ === 'SubTree') {
				var subTree = _v0.a;
				var $temp$shift = shift - $elm$core$Array$shiftStep,
					$temp$index = index,
					$temp$tree = subTree;
				shift = $temp$shift;
				index = $temp$index;
				tree = $temp$tree;
				continue getHelp;
			} else {
				var values = _v0.a;
				return A2($elm$core$Elm$JsArray$unsafeGet, $elm$core$Array$bitMask & index, values);
			}
		}
	});
var $elm$core$Array$tailIndex = function (len) {
	return (len >>> 5) << 5;
};
var $elm$core$Array$get = F2(
	function (index, _v0) {
		var len = _v0.a;
		var startShift = _v0.b;
		var tree = _v0.c;
		var tail = _v0.d;
		return ((index < 0) || (_Utils_cmp(index, len) > -1)) ? $elm$core$Maybe$Nothing : ((_Utils_cmp(
			index,
			$elm$core$Array$tailIndex(len)) > -1) ? $elm$core$Maybe$Just(
			A2($elm$core$Elm$JsArray$unsafeGet, $elm$core$Array$bitMask & index, tail)) : $elm$core$Maybe$Just(
			A3($elm$core$Array$getHelp, startShift, index, tree)));
	});
var $icidasset$elm_binary$Binary$map = F2(
	function (fn, _v0) {
		var list = _v0.a;
		return $icidasset$elm_binary$Binary$Bits(
			fn(list));
	});
var $icidasset$elm_binary$Binary$not = $icidasset$elm_binary$Binary$map(
	$elm$core$List$map($elm$core$Basics$not));
var $icidasset$elm_binary$Binary$rotateRightBy = function (n) {
	return $icidasset$elm_binary$Binary$map(
		function (bits) {
			return function (_v0) {
				var a = _v0.a;
				var b = _v0.b;
				return _Utils_ap(b, a);
			}(
				A2(
					$elm_community$list_extra$List$Extra$splitAt,
					$elm$core$List$length(bits) - n,
					bits));
		});
};
var $elm$core$Array$fromListHelp = F3(
	function (list, nodeList, nodeListSize) {
		fromListHelp:
		while (true) {
			var _v0 = A2($elm$core$Elm$JsArray$initializeFromList, $elm$core$Array$branchFactor, list);
			var jsArray = _v0.a;
			var remainingItems = _v0.b;
			if (_Utils_cmp(
				$elm$core$Elm$JsArray$length(jsArray),
				$elm$core$Array$branchFactor) < 0) {
				return A2(
					$elm$core$Array$builderToArray,
					true,
					{nodeList: nodeList, nodeListSize: nodeListSize, tail: jsArray});
			} else {
				var $temp$list = remainingItems,
					$temp$nodeList = A2(
					$elm$core$List$cons,
					$elm$core$Array$Leaf(jsArray),
					nodeList),
					$temp$nodeListSize = nodeListSize + 1;
				list = $temp$list;
				nodeList = $temp$nodeList;
				nodeListSize = $temp$nodeListSize;
				continue fromListHelp;
			}
		}
	});
var $elm$core$Array$fromList = function (list) {
	if (!list.b) {
		return $elm$core$Array$empty;
	} else {
		return A3($elm$core$Array$fromListHelp, list, _List_Nil, 0);
	}
};
var $icidasset$elm_sha$SHA$Internal$SHA256$roundConstants = $elm$core$Array$fromList(
	_List_fromArray(
		[
			$icidasset$elm_binary$Binary$fromHex('428A2F98'),
			$icidasset$elm_binary$Binary$fromHex('71374491'),
			$icidasset$elm_binary$Binary$fromHex('B5C0FBCF'),
			$icidasset$elm_binary$Binary$fromHex('E9B5DBA5'),
			$icidasset$elm_binary$Binary$fromHex('3956C25B'),
			$icidasset$elm_binary$Binary$fromHex('59F111F1'),
			$icidasset$elm_binary$Binary$fromHex('923F82A4'),
			$icidasset$elm_binary$Binary$fromHex('AB1C5ED5'),
			$icidasset$elm_binary$Binary$fromHex('D807AA98'),
			$icidasset$elm_binary$Binary$fromHex('12835B01'),
			$icidasset$elm_binary$Binary$fromHex('243185BE'),
			$icidasset$elm_binary$Binary$fromHex('550C7DC3'),
			$icidasset$elm_binary$Binary$fromHex('72BE5D74'),
			$icidasset$elm_binary$Binary$fromHex('80DEB1FE'),
			$icidasset$elm_binary$Binary$fromHex('9BDC06A7'),
			$icidasset$elm_binary$Binary$fromHex('C19BF174'),
			$icidasset$elm_binary$Binary$fromHex('E49B69C1'),
			$icidasset$elm_binary$Binary$fromHex('EFBE4786'),
			$icidasset$elm_binary$Binary$fromHex('0FC19DC6'),
			$icidasset$elm_binary$Binary$fromHex('240CA1CC'),
			$icidasset$elm_binary$Binary$fromHex('2DE92C6F'),
			$icidasset$elm_binary$Binary$fromHex('4A7484AA'),
			$icidasset$elm_binary$Binary$fromHex('5CB0A9DC'),
			$icidasset$elm_binary$Binary$fromHex('76F988DA'),
			$icidasset$elm_binary$Binary$fromHex('983E5152'),
			$icidasset$elm_binary$Binary$fromHex('A831C66D'),
			$icidasset$elm_binary$Binary$fromHex('B00327C8'),
			$icidasset$elm_binary$Binary$fromHex('BF597FC7'),
			$icidasset$elm_binary$Binary$fromHex('C6E00BF3'),
			$icidasset$elm_binary$Binary$fromHex('D5A79147'),
			$icidasset$elm_binary$Binary$fromHex('06CA6351'),
			$icidasset$elm_binary$Binary$fromHex('14292967'),
			$icidasset$elm_binary$Binary$fromHex('27B70A85'),
			$icidasset$elm_binary$Binary$fromHex('2E1B2138'),
			$icidasset$elm_binary$Binary$fromHex('4D2C6DFC'),
			$icidasset$elm_binary$Binary$fromHex('53380D13'),
			$icidasset$elm_binary$Binary$fromHex('650A7354'),
			$icidasset$elm_binary$Binary$fromHex('766A0ABB'),
			$icidasset$elm_binary$Binary$fromHex('81C2C92E'),
			$icidasset$elm_binary$Binary$fromHex('92722C85'),
			$icidasset$elm_binary$Binary$fromHex('A2BFE8A1'),
			$icidasset$elm_binary$Binary$fromHex('A81A664B'),
			$icidasset$elm_binary$Binary$fromHex('C24B8B70'),
			$icidasset$elm_binary$Binary$fromHex('C76C51A3'),
			$icidasset$elm_binary$Binary$fromHex('D192E819'),
			$icidasset$elm_binary$Binary$fromHex('D6990624'),
			$icidasset$elm_binary$Binary$fromHex('F40E3585'),
			$icidasset$elm_binary$Binary$fromHex('106AA070'),
			$icidasset$elm_binary$Binary$fromHex('19A4C116'),
			$icidasset$elm_binary$Binary$fromHex('1E376C08'),
			$icidasset$elm_binary$Binary$fromHex('2748774C'),
			$icidasset$elm_binary$Binary$fromHex('34B0BCB5'),
			$icidasset$elm_binary$Binary$fromHex('391C0CB3'),
			$icidasset$elm_binary$Binary$fromHex('4ED8AA4A'),
			$icidasset$elm_binary$Binary$fromHex('5B9CCA4F'),
			$icidasset$elm_binary$Binary$fromHex('682E6FF3'),
			$icidasset$elm_binary$Binary$fromHex('748F82EE'),
			$icidasset$elm_binary$Binary$fromHex('78A5636F'),
			$icidasset$elm_binary$Binary$fromHex('84C87814'),
			$icidasset$elm_binary$Binary$fromHex('8CC70208'),
			$icidasset$elm_binary$Binary$fromHex('90BEFFFA'),
			$icidasset$elm_binary$Binary$fromHex('A4506CEB'),
			$icidasset$elm_binary$Binary$fromHex('BEF9A3F7'),
			$icidasset$elm_binary$Binary$fromHex('C67178F2')
		]));
var $icidasset$elm_sha$SHA$Internal$SHA256$compressor = F2(
	function (_v0, hashTable) {
		var index = _v0.index;
		var scheduleNumber = _v0.scheduleNumber;
		var y2 = A2(
			$icidasset$elm_binary$Binary$xor,
			A2($icidasset$elm_binary$Binary$and, hashTable.a, hashTable.b),
			A2(
				$icidasset$elm_binary$Binary$xor,
				A2($icidasset$elm_binary$Binary$and, hashTable.a, hashTable.c),
				A2($icidasset$elm_binary$Binary$and, hashTable.b, hashTable.c)));
		var y1 = A2(
			$icidasset$elm_binary$Binary$xor,
			A2($icidasset$elm_binary$Binary$rotateRightBy, 2, hashTable.a),
			A2(
				$icidasset$elm_binary$Binary$xor,
				A2($icidasset$elm_binary$Binary$rotateRightBy, 13, hashTable.a),
				A2($icidasset$elm_binary$Binary$rotateRightBy, 22, hashTable.a)));
		var y = A2($icidasset$elm_sha$SHA$Internal$SHA256$combine, y1, y2);
		var x2 = A2(
			$icidasset$elm_binary$Binary$xor,
			A2($icidasset$elm_binary$Binary$and, hashTable.e, hashTable.f),
			A2(
				$icidasset$elm_binary$Binary$and,
				$icidasset$elm_binary$Binary$not(hashTable.e),
				hashTable.g));
		var x1 = A2(
			$icidasset$elm_binary$Binary$xor,
			A2($icidasset$elm_binary$Binary$rotateRightBy, 6, hashTable.e),
			A2(
				$icidasset$elm_binary$Binary$xor,
				A2($icidasset$elm_binary$Binary$rotateRightBy, 11, hashTable.e),
				A2($icidasset$elm_binary$Binary$rotateRightBy, 25, hashTable.e)));
		var x = A3(
			$elm$core$List$foldl,
			$icidasset$elm_sha$SHA$Internal$SHA256$combine,
			$icidasset$elm_binary$Binary$empty,
			_List_fromArray(
				[
					hashTable.h,
					x1,
					x2,
					A2(
					$elm$core$Maybe$withDefault,
					$icidasset$elm_binary$Binary$empty,
					A2($elm$core$Array$get, index, $icidasset$elm_sha$SHA$Internal$SHA256$roundConstants)),
					scheduleNumber
				]));
		return {
			a: A2($icidasset$elm_sha$SHA$Internal$SHA256$combine, x, y),
			b: hashTable.a,
			c: hashTable.b,
			d: hashTable.c,
			e: A2($icidasset$elm_sha$SHA$Internal$SHA256$combine, hashTable.d, x),
			f: hashTable.e,
			g: hashTable.f,
			h: hashTable.g
		};
	});
var $icidasset$elm_binary$Binary$shiftRightZfBy = F2(
	function (n, _v0) {
		var bits = _v0.a;
		return $icidasset$elm_binary$Binary$Bits(
			A2(
				$elm$core$List$append,
				A2($elm$core$List$repeat, n, false),
				A2(
					$elm$core$List$take,
					$elm$core$List$length(bits) - n,
					bits)));
	});
var $icidasset$elm_sha$SHA$Internal$SHA256$extender = function (_v0) {
	var i2 = _v0.i2;
	var i7 = _v0.i7;
	var i15 = _v0.i15;
	var i16 = _v0.i16;
	var b = A2(
		$icidasset$elm_binary$Binary$xor,
		A2($icidasset$elm_binary$Binary$rotateRightBy, 17, i2),
		A2(
			$icidasset$elm_binary$Binary$xor,
			A2($icidasset$elm_binary$Binary$rotateRightBy, 19, i2),
			A2($icidasset$elm_binary$Binary$shiftRightZfBy, 10, i2)));
	var a = A2(
		$icidasset$elm_binary$Binary$xor,
		A2($icidasset$elm_binary$Binary$rotateRightBy, 7, i15),
		A2(
			$icidasset$elm_binary$Binary$xor,
			A2($icidasset$elm_binary$Binary$rotateRightBy, 18, i15),
			A2($icidasset$elm_binary$Binary$shiftRightZfBy, 3, i15)));
	return A3(
		$elm$core$List$foldl,
		$icidasset$elm_sha$SHA$Internal$SHA256$combine,
		$icidasset$elm_binary$Binary$empty,
		_List_fromArray(
			[i16, a, i7, b]));
};
var $icidasset$elm_sha$SHA$Internal$SHA256$initialHashTable = {
	a: $icidasset$elm_binary$Binary$fromHex('6A09E667'),
	b: $icidasset$elm_binary$Binary$fromHex('BB67AE85'),
	c: $icidasset$elm_binary$Binary$fromHex('3C6EF372'),
	d: $icidasset$elm_binary$Binary$fromHex('A54FF53A'),
	e: $icidasset$elm_binary$Binary$fromHex('510E527F'),
	f: $icidasset$elm_binary$Binary$fromHex('9B05688C'),
	g: $icidasset$elm_binary$Binary$fromHex('1F83D9AB'),
	h: $icidasset$elm_binary$Binary$fromHex('5BE0CD19')
};
var $icidasset$elm_sha$SHA$Internal$SHA256$computationSetup = {chunkSize: $icidasset$elm_sha$SHA$Internal$SHA256$chunkSize, compressor: $icidasset$elm_sha$SHA$Internal$SHA256$compressor, extender: $icidasset$elm_sha$SHA$Internal$SHA256$extender, initialHashTable: $icidasset$elm_sha$SHA$Internal$SHA256$initialHashTable, roundConstants: $icidasset$elm_sha$SHA$Internal$SHA256$roundConstants};
var $icidasset$elm_sha$SHA$Internal$HashTable$combineHashTables = F3(
	function (sizeInBits, x, y) {
		return {
			a: A3($icidasset$elm_sha$SHA$Internal$Common$combine, sizeInBits, x.a, y.a),
			b: A3($icidasset$elm_sha$SHA$Internal$Common$combine, sizeInBits, x.b, y.b),
			c: A3($icidasset$elm_sha$SHA$Internal$Common$combine, sizeInBits, x.c, y.c),
			d: A3($icidasset$elm_sha$SHA$Internal$Common$combine, sizeInBits, x.d, y.d),
			e: A3($icidasset$elm_sha$SHA$Internal$Common$combine, sizeInBits, x.e, y.e),
			f: A3($icidasset$elm_sha$SHA$Internal$Common$combine, sizeInBits, x.f, y.f),
			g: A3($icidasset$elm_sha$SHA$Internal$Common$combine, sizeInBits, x.g, y.g),
			h: A3($icidasset$elm_sha$SHA$Internal$Common$combine, sizeInBits, x.h, y.h)
		};
	});
var $elm$core$Array$toIndexedList = function (array) {
	var len = array.a;
	var helper = F2(
		function (entry, _v0) {
			var index = _v0.a;
			var list = _v0.b;
			return _Utils_Tuple2(
				index - 1,
				A2(
					$elm$core$List$cons,
					_Utils_Tuple2(index, entry),
					list));
		});
	return A3(
		$elm$core$Array$foldr,
		helper,
		_Utils_Tuple2(len - 1, _List_Nil),
		array).b;
};
var $icidasset$elm_sha$SHA$Internal$useCompressor = F2(
	function (compressor, _v0) {
		var index = _v0.a;
		var scheduleNumber = _v0.b;
		return compressor(
			{index: index, scheduleNumber: scheduleNumber});
	});
var $icidasset$elm_sha$SHA$Internal$compress = F3(
	function (setup, hashTable, schedule) {
		return A3(
			$icidasset$elm_sha$SHA$Internal$HashTable$combineHashTables,
			(setup.chunkSize / 16) | 0,
			hashTable,
			A3(
				$elm$core$List$foldl,
				$icidasset$elm_sha$SHA$Internal$useCompressor(setup.compressor),
				hashTable,
				$elm$core$Array$toIndexedList(schedule)));
	});
var $elm$core$Elm$JsArray$appendN = _JsArray_appendN;
var $elm$core$Elm$JsArray$slice = _JsArray_slice;
var $elm$core$Array$appendHelpBuilder = F2(
	function (tail, builder) {
		var tailLen = $elm$core$Elm$JsArray$length(tail);
		var notAppended = ($elm$core$Array$branchFactor - $elm$core$Elm$JsArray$length(builder.tail)) - tailLen;
		var appended = A3($elm$core$Elm$JsArray$appendN, $elm$core$Array$branchFactor, builder.tail, tail);
		return (notAppended < 0) ? {
			nodeList: A2(
				$elm$core$List$cons,
				$elm$core$Array$Leaf(appended),
				builder.nodeList),
			nodeListSize: builder.nodeListSize + 1,
			tail: A3($elm$core$Elm$JsArray$slice, notAppended, tailLen, tail)
		} : ((!notAppended) ? {
			nodeList: A2(
				$elm$core$List$cons,
				$elm$core$Array$Leaf(appended),
				builder.nodeList),
			nodeListSize: builder.nodeListSize + 1,
			tail: $elm$core$Elm$JsArray$empty
		} : {nodeList: builder.nodeList, nodeListSize: builder.nodeListSize, tail: appended});
	});
var $elm$core$Elm$JsArray$push = _JsArray_push;
var $elm$core$Elm$JsArray$singleton = _JsArray_singleton;
var $elm$core$Elm$JsArray$unsafeSet = _JsArray_unsafeSet;
var $elm$core$Array$insertTailInTree = F4(
	function (shift, index, tail, tree) {
		var pos = $elm$core$Array$bitMask & (index >>> shift);
		if (_Utils_cmp(
			pos,
			$elm$core$Elm$JsArray$length(tree)) > -1) {
			if (shift === 5) {
				return A2(
					$elm$core$Elm$JsArray$push,
					$elm$core$Array$Leaf(tail),
					tree);
			} else {
				var newSub = $elm$core$Array$SubTree(
					A4($elm$core$Array$insertTailInTree, shift - $elm$core$Array$shiftStep, index, tail, $elm$core$Elm$JsArray$empty));
				return A2($elm$core$Elm$JsArray$push, newSub, tree);
			}
		} else {
			var value = A2($elm$core$Elm$JsArray$unsafeGet, pos, tree);
			if (value.$ === 'SubTree') {
				var subTree = value.a;
				var newSub = $elm$core$Array$SubTree(
					A4($elm$core$Array$insertTailInTree, shift - $elm$core$Array$shiftStep, index, tail, subTree));
				return A3($elm$core$Elm$JsArray$unsafeSet, pos, newSub, tree);
			} else {
				var newSub = $elm$core$Array$SubTree(
					A4(
						$elm$core$Array$insertTailInTree,
						shift - $elm$core$Array$shiftStep,
						index,
						tail,
						$elm$core$Elm$JsArray$singleton(value)));
				return A3($elm$core$Elm$JsArray$unsafeSet, pos, newSub, tree);
			}
		}
	});
var $elm$core$Array$unsafeReplaceTail = F2(
	function (newTail, _v0) {
		var len = _v0.a;
		var startShift = _v0.b;
		var tree = _v0.c;
		var tail = _v0.d;
		var originalTailLen = $elm$core$Elm$JsArray$length(tail);
		var newTailLen = $elm$core$Elm$JsArray$length(newTail);
		var newArrayLen = len + (newTailLen - originalTailLen);
		if (_Utils_eq(newTailLen, $elm$core$Array$branchFactor)) {
			var overflow = _Utils_cmp(newArrayLen >>> $elm$core$Array$shiftStep, 1 << startShift) > 0;
			if (overflow) {
				var newShift = startShift + $elm$core$Array$shiftStep;
				var newTree = A4(
					$elm$core$Array$insertTailInTree,
					newShift,
					len,
					newTail,
					$elm$core$Elm$JsArray$singleton(
						$elm$core$Array$SubTree(tree)));
				return A4($elm$core$Array$Array_elm_builtin, newArrayLen, newShift, newTree, $elm$core$Elm$JsArray$empty);
			} else {
				return A4(
					$elm$core$Array$Array_elm_builtin,
					newArrayLen,
					startShift,
					A4($elm$core$Array$insertTailInTree, startShift, len, newTail, tree),
					$elm$core$Elm$JsArray$empty);
			}
		} else {
			return A4($elm$core$Array$Array_elm_builtin, newArrayLen, startShift, tree, newTail);
		}
	});
var $elm$core$Array$appendHelpTree = F2(
	function (toAppend, array) {
		var len = array.a;
		var tree = array.c;
		var tail = array.d;
		var itemsToAppend = $elm$core$Elm$JsArray$length(toAppend);
		var notAppended = ($elm$core$Array$branchFactor - $elm$core$Elm$JsArray$length(tail)) - itemsToAppend;
		var appended = A3($elm$core$Elm$JsArray$appendN, $elm$core$Array$branchFactor, tail, toAppend);
		var newArray = A2($elm$core$Array$unsafeReplaceTail, appended, array);
		if (notAppended < 0) {
			var nextTail = A3($elm$core$Elm$JsArray$slice, notAppended, itemsToAppend, toAppend);
			return A2($elm$core$Array$unsafeReplaceTail, nextTail, newArray);
		} else {
			return newArray;
		}
	});
var $elm$core$Elm$JsArray$foldl = _JsArray_foldl;
var $elm$core$Array$builderFromArray = function (_v0) {
	var len = _v0.a;
	var tree = _v0.c;
	var tail = _v0.d;
	var helper = F2(
		function (node, acc) {
			if (node.$ === 'SubTree') {
				var subTree = node.a;
				return A3($elm$core$Elm$JsArray$foldl, helper, acc, subTree);
			} else {
				return A2($elm$core$List$cons, node, acc);
			}
		});
	return {
		nodeList: A3($elm$core$Elm$JsArray$foldl, helper, _List_Nil, tree),
		nodeListSize: (len / $elm$core$Array$branchFactor) | 0,
		tail: tail
	};
};
var $elm$core$Array$append = F2(
	function (a, _v0) {
		var aTail = a.d;
		var bLen = _v0.a;
		var bTree = _v0.c;
		var bTail = _v0.d;
		if (_Utils_cmp(bLen, $elm$core$Array$branchFactor * 4) < 1) {
			var foldHelper = F2(
				function (node, array) {
					if (node.$ === 'SubTree') {
						var tree = node.a;
						return A3($elm$core$Elm$JsArray$foldl, foldHelper, array, tree);
					} else {
						var leaf = node.a;
						return A2($elm$core$Array$appendHelpTree, leaf, array);
					}
				});
			return A2(
				$elm$core$Array$appendHelpTree,
				bTail,
				A3($elm$core$Elm$JsArray$foldl, foldHelper, a, bTree));
		} else {
			var foldHelper = F2(
				function (node, builder) {
					if (node.$ === 'SubTree') {
						var tree = node.a;
						return A3($elm$core$Elm$JsArray$foldl, foldHelper, builder, tree);
					} else {
						var leaf = node.a;
						return A2($elm$core$Array$appendHelpBuilder, leaf, builder);
					}
				});
			return A2(
				$elm$core$Array$builderToArray,
				true,
				A2(
					$elm$core$Array$appendHelpBuilder,
					bTail,
					A3(
						$elm$core$Elm$JsArray$foldl,
						foldHelper,
						$elm$core$Array$builderFromArray(a),
						bTree)));
		}
	});
var $elm$core$Maybe$map4 = F5(
	function (func, ma, mb, mc, md) {
		if (ma.$ === 'Nothing') {
			return $elm$core$Maybe$Nothing;
		} else {
			var a = ma.a;
			if (mb.$ === 'Nothing') {
				return $elm$core$Maybe$Nothing;
			} else {
				var b = mb.a;
				if (mc.$ === 'Nothing') {
					return $elm$core$Maybe$Nothing;
				} else {
					var c = mc.a;
					if (md.$ === 'Nothing') {
						return $elm$core$Maybe$Nothing;
					} else {
						var d = md.a;
						return $elm$core$Maybe$Just(
							A4(func, a, b, c, d));
					}
				}
			}
		}
	});
var $elm$core$Array$setHelp = F4(
	function (shift, index, value, tree) {
		var pos = $elm$core$Array$bitMask & (index >>> shift);
		var _v0 = A2($elm$core$Elm$JsArray$unsafeGet, pos, tree);
		if (_v0.$ === 'SubTree') {
			var subTree = _v0.a;
			var newSub = A4($elm$core$Array$setHelp, shift - $elm$core$Array$shiftStep, index, value, subTree);
			return A3(
				$elm$core$Elm$JsArray$unsafeSet,
				pos,
				$elm$core$Array$SubTree(newSub),
				tree);
		} else {
			var values = _v0.a;
			var newLeaf = A3($elm$core$Elm$JsArray$unsafeSet, $elm$core$Array$bitMask & index, value, values);
			return A3(
				$elm$core$Elm$JsArray$unsafeSet,
				pos,
				$elm$core$Array$Leaf(newLeaf),
				tree);
		}
	});
var $elm$core$Array$set = F3(
	function (index, value, array) {
		var len = array.a;
		var startShift = array.b;
		var tree = array.c;
		var tail = array.d;
		return ((index < 0) || (_Utils_cmp(index, len) > -1)) ? array : ((_Utils_cmp(
			index,
			$elm$core$Array$tailIndex(len)) > -1) ? A4(
			$elm$core$Array$Array_elm_builtin,
			len,
			startShift,
			tree,
			A3($elm$core$Elm$JsArray$unsafeSet, $elm$core$Array$bitMask & index, value, tail)) : A4(
			$elm$core$Array$Array_elm_builtin,
			len,
			startShift,
			A4($elm$core$Array$setHelp, startShift, index, value, tree),
			tail));
	});
var $icidasset$elm_sha$SHA$Internal$extend = F3(
	function (setup, index, schedule) {
		return A2(
			$elm$core$Maybe$withDefault,
			schedule,
			A2(
				$elm$core$Maybe$map,
				function (bits) {
					return A3($elm$core$Array$set, index, bits, schedule);
				},
				A5(
					$elm$core$Maybe$map4,
					F4(
						function (i2, i7, i15, i16) {
							return setup.extender(
								{i15: i15, i16: i16, i2: i2, i7: i7});
						}),
					A2($elm$core$Array$get, index - 2, schedule),
					A2($elm$core$Array$get, index - 7, schedule),
					A2($elm$core$Array$get, index - 15, schedule),
					A2($elm$core$Array$get, index - 16, schedule))));
	});
var $icidasset$elm_sha$SHA$Internal$extendInitialSchedule = F3(
	function (setup, chunkComputer, initialSchedule) {
		var lengthySchedule = A2($elm$core$Array$append, initialSchedule, chunkComputer.scheduleExtArray);
		return A3(
			$elm$core$List$foldl,
			$icidasset$elm_sha$SHA$Internal$extend(setup),
			lengthySchedule,
			chunkComputer.scheduleExtRange);
	});
var $elm$core$Array$sliceLeft = F2(
	function (from, array) {
		var len = array.a;
		var tree = array.c;
		var tail = array.d;
		if (!from) {
			return array;
		} else {
			if (_Utils_cmp(
				from,
				$elm$core$Array$tailIndex(len)) > -1) {
				return A4(
					$elm$core$Array$Array_elm_builtin,
					len - from,
					$elm$core$Array$shiftStep,
					$elm$core$Elm$JsArray$empty,
					A3(
						$elm$core$Elm$JsArray$slice,
						from - $elm$core$Array$tailIndex(len),
						$elm$core$Elm$JsArray$length(tail),
						tail));
			} else {
				var skipNodes = (from / $elm$core$Array$branchFactor) | 0;
				var helper = F2(
					function (node, acc) {
						if (node.$ === 'SubTree') {
							var subTree = node.a;
							return A3($elm$core$Elm$JsArray$foldr, helper, acc, subTree);
						} else {
							var leaf = node.a;
							return A2($elm$core$List$cons, leaf, acc);
						}
					});
				var leafNodes = A3(
					$elm$core$Elm$JsArray$foldr,
					helper,
					_List_fromArray(
						[tail]),
					tree);
				var nodesToInsert = A2($elm$core$List$drop, skipNodes, leafNodes);
				if (!nodesToInsert.b) {
					return $elm$core$Array$empty;
				} else {
					var head = nodesToInsert.a;
					var rest = nodesToInsert.b;
					var firstSlice = from - (skipNodes * $elm$core$Array$branchFactor);
					var initialBuilder = {
						nodeList: _List_Nil,
						nodeListSize: 0,
						tail: A3(
							$elm$core$Elm$JsArray$slice,
							firstSlice,
							$elm$core$Elm$JsArray$length(head),
							head)
					};
					return A2(
						$elm$core$Array$builderToArray,
						true,
						A3($elm$core$List$foldl, $elm$core$Array$appendHelpBuilder, initialBuilder, rest));
				}
			}
		}
	});
var $elm$core$Array$fetchNewTail = F4(
	function (shift, end, treeEnd, tree) {
		fetchNewTail:
		while (true) {
			var pos = $elm$core$Array$bitMask & (treeEnd >>> shift);
			var _v0 = A2($elm$core$Elm$JsArray$unsafeGet, pos, tree);
			if (_v0.$ === 'SubTree') {
				var sub = _v0.a;
				var $temp$shift = shift - $elm$core$Array$shiftStep,
					$temp$end = end,
					$temp$treeEnd = treeEnd,
					$temp$tree = sub;
				shift = $temp$shift;
				end = $temp$end;
				treeEnd = $temp$treeEnd;
				tree = $temp$tree;
				continue fetchNewTail;
			} else {
				var values = _v0.a;
				return A3($elm$core$Elm$JsArray$slice, 0, $elm$core$Array$bitMask & end, values);
			}
		}
	});
var $elm$core$Array$hoistTree = F3(
	function (oldShift, newShift, tree) {
		hoistTree:
		while (true) {
			if ((_Utils_cmp(oldShift, newShift) < 1) || (!$elm$core$Elm$JsArray$length(tree))) {
				return tree;
			} else {
				var _v0 = A2($elm$core$Elm$JsArray$unsafeGet, 0, tree);
				if (_v0.$ === 'SubTree') {
					var sub = _v0.a;
					var $temp$oldShift = oldShift - $elm$core$Array$shiftStep,
						$temp$newShift = newShift,
						$temp$tree = sub;
					oldShift = $temp$oldShift;
					newShift = $temp$newShift;
					tree = $temp$tree;
					continue hoistTree;
				} else {
					return tree;
				}
			}
		}
	});
var $elm$core$Array$sliceTree = F3(
	function (shift, endIdx, tree) {
		var lastPos = $elm$core$Array$bitMask & (endIdx >>> shift);
		var _v0 = A2($elm$core$Elm$JsArray$unsafeGet, lastPos, tree);
		if (_v0.$ === 'SubTree') {
			var sub = _v0.a;
			var newSub = A3($elm$core$Array$sliceTree, shift - $elm$core$Array$shiftStep, endIdx, sub);
			return (!$elm$core$Elm$JsArray$length(newSub)) ? A3($elm$core$Elm$JsArray$slice, 0, lastPos, tree) : A3(
				$elm$core$Elm$JsArray$unsafeSet,
				lastPos,
				$elm$core$Array$SubTree(newSub),
				A3($elm$core$Elm$JsArray$slice, 0, lastPos + 1, tree));
		} else {
			return A3($elm$core$Elm$JsArray$slice, 0, lastPos, tree);
		}
	});
var $elm$core$Array$sliceRight = F2(
	function (end, array) {
		var len = array.a;
		var startShift = array.b;
		var tree = array.c;
		var tail = array.d;
		if (_Utils_eq(end, len)) {
			return array;
		} else {
			if (_Utils_cmp(
				end,
				$elm$core$Array$tailIndex(len)) > -1) {
				return A4(
					$elm$core$Array$Array_elm_builtin,
					end,
					startShift,
					tree,
					A3($elm$core$Elm$JsArray$slice, 0, $elm$core$Array$bitMask & end, tail));
			} else {
				var endIdx = $elm$core$Array$tailIndex(end);
				var depth = $elm$core$Basics$floor(
					A2(
						$elm$core$Basics$logBase,
						$elm$core$Array$branchFactor,
						A2($elm$core$Basics$max, 1, endIdx - 1)));
				var newShift = A2($elm$core$Basics$max, 5, depth * $elm$core$Array$shiftStep);
				return A4(
					$elm$core$Array$Array_elm_builtin,
					end,
					newShift,
					A3(
						$elm$core$Array$hoistTree,
						startShift,
						newShift,
						A3($elm$core$Array$sliceTree, startShift, endIdx, tree)),
					A4($elm$core$Array$fetchNewTail, startShift, end, endIdx, tree));
			}
		}
	});
var $elm$core$Array$translateIndex = F2(
	function (index, _v0) {
		var len = _v0.a;
		var posIndex = (index < 0) ? (len + index) : index;
		return (posIndex < 0) ? 0 : ((_Utils_cmp(posIndex, len) > 0) ? len : posIndex);
	});
var $elm$core$Array$slice = F3(
	function (from, to, array) {
		var correctTo = A2($elm$core$Array$translateIndex, to, array);
		var correctFrom = A2($elm$core$Array$translateIndex, from, array);
		return (_Utils_cmp(correctFrom, correctTo) > 0) ? $elm$core$Array$empty : A2(
			$elm$core$Array$sliceLeft,
			correctFrom,
			A2($elm$core$Array$sliceRight, correctTo, array));
	});
var $icidasset$elm_sha$SHA$Internal$computeChunk = F4(
	function (setup, chunkComputer, pieces, hashTable) {
		computeChunk:
		while (true) {
			var newHashTable = A3(
				$icidasset$elm_sha$SHA$Internal$compress,
				setup,
				hashTable,
				A3(
					$icidasset$elm_sha$SHA$Internal$extendInitialSchedule,
					setup,
					chunkComputer,
					A3(
						$elm$core$Array$slice,
						A2($elm$core$Basics$max, 0, (chunkComputer.currentChunk - 1) * 16),
						chunkComputer.currentChunk * 16,
						pieces)));
			if (_Utils_cmp(chunkComputer.currentChunk, chunkComputer.totalChunks) < 0) {
				var $temp$setup = setup,
					$temp$chunkComputer = _Utils_update(
					chunkComputer,
					{currentChunk: chunkComputer.currentChunk + 1}),
					$temp$pieces = pieces,
					$temp$hashTable = newHashTable;
				setup = $temp$setup;
				chunkComputer = $temp$chunkComputer;
				pieces = $temp$pieces;
				hashTable = $temp$hashTable;
				continue computeChunk;
			} else {
				return newHashTable;
			}
		}
	});
var $elm$core$List$isEmpty = function (xs) {
	if (!xs.b) {
		return true;
	} else {
		return false;
	}
};
var $elm_community$list_extra$List$Extra$greedyGroupsOfWithStep = F3(
	function (size, step, list) {
		if ((size <= 0) || (step <= 0)) {
			return _List_Nil;
		} else {
			var go = F2(
				function (xs, acc) {
					go:
					while (true) {
						if ($elm$core$List$isEmpty(xs)) {
							return $elm$core$List$reverse(acc);
						} else {
							var $temp$xs = A2($elm$core$List$drop, step, xs),
								$temp$acc = A2(
								$elm$core$List$cons,
								A2($elm$core$List$take, size, xs),
								acc);
							xs = $temp$xs;
							acc = $temp$acc;
							continue go;
						}
					}
				});
			return A2(go, list, _List_Nil);
		}
	});
var $elm_community$list_extra$List$Extra$greedyGroupsOf = F2(
	function (size, xs) {
		return A3($elm_community$list_extra$List$Extra$greedyGroupsOfWithStep, size, size, xs);
	});
var $elm$core$Array$length = function (_v0) {
	var len = _v0.a;
	return len;
};
var $elm$core$Elm$JsArray$map = _JsArray_map;
var $elm$core$Array$map = F2(
	function (func, _v0) {
		var len = _v0.a;
		var startShift = _v0.b;
		var tree = _v0.c;
		var tail = _v0.d;
		var helper = function (node) {
			if (node.$ === 'SubTree') {
				var subTree = node.a;
				return $elm$core$Array$SubTree(
					A2($elm$core$Elm$JsArray$map, helper, subTree));
			} else {
				var values = node.a;
				return $elm$core$Array$Leaf(
					A2($elm$core$Elm$JsArray$map, func, values));
			}
		};
		return A4(
			$elm$core$Array$Array_elm_builtin,
			len,
			startShift,
			A2($elm$core$Elm$JsArray$map, helper, tree),
			A2($elm$core$Elm$JsArray$map, func, tail));
	});
var $elm$core$Array$repeat = F2(
	function (n, e) {
		return A2(
			$elm$core$Array$initialize,
			n,
			function (_v0) {
				return e;
			});
	});
var $icidasset$elm_sha$SHA$Internal$compute = F2(
	function (setup, bits) {
		var scheduleSize = $elm$core$Array$length(setup.roundConstants) - 1;
		var chunkComputer = {
			currentChunk: 1,
			scheduleExtArray: A2($elm$core$Array$repeat, scheduleSize - 15, $icidasset$elm_binary$Binary$empty),
			scheduleExtRange: A2($elm$core$List$range, 16, scheduleSize),
			totalChunks: $elm$core$Basics$ceiling(
				$icidasset$elm_binary$Binary$width(bits) / setup.chunkSize)
		};
		return A4(
			$icidasset$elm_sha$SHA$Internal$computeChunk,
			setup,
			chunkComputer,
			A2(
				$elm$core$Array$map,
				$icidasset$elm_binary$Binary$fromBooleans,
				$elm$core$Array$fromList(
					A2(
						$elm_community$list_extra$List$Extra$greedyGroupsOf,
						(setup.chunkSize / 16) | 0,
						$icidasset$elm_binary$Binary$toBooleans(bits)))),
			setup.initialHashTable);
	});
var $icidasset$elm_sha$SHA$Internal$HashTable$partialHashTableToBits = F2(
	function (accessors, hashTable) {
		return $icidasset$elm_binary$Binary$concat(
			A2(
				$elm$core$List$map,
				function (accessor) {
					return accessor(hashTable);
				},
				accessors));
	});
var $icidasset$elm_sha$SHA$Internal$HashTable$hashTableToBits = $icidasset$elm_sha$SHA$Internal$HashTable$partialHashTableToBits(
	_List_fromArray(
		[
			function ($) {
			return $.a;
		},
			function ($) {
			return $.b;
		},
			function ($) {
			return $.c;
		},
			function ($) {
			return $.d;
		},
			function ($) {
			return $.e;
		},
			function ($) {
			return $.f;
		},
			function ($) {
			return $.g;
		},
			function ($) {
			return $.h;
		}
		]));
var $icidasset$elm_sha$SHA$Internal$preprocess = F2(
	function (_v0, message) {
		var blockLength = _v0.blockLength;
		var l = $icidasset$elm_binary$Binary$width(message);
		var k = blockLength - A2($elm$core$Basics$modBy, blockLength, (l + 1) + ((blockLength / 8) | 0));
		return $icidasset$elm_binary$Binary$concat(
			_List_fromArray(
				[
					message,
					$icidasset$elm_binary$Binary$fromBooleans(
					_List_fromArray(
						[true])),
					$icidasset$elm_binary$Binary$fromBooleans(
					A2($elm$core$List$repeat, k, false)),
					A2(
					$icidasset$elm_binary$Binary$ensureSize,
					(blockLength / 8) | 0,
					$icidasset$elm_binary$Binary$fromDecimal(l))
				]));
	});
var $icidasset$elm_sha$SHA$sha256 = function (message) {
	return $icidasset$elm_sha$SHA$Internal$HashTable$hashTableToBits(
		A2(
			$icidasset$elm_sha$SHA$Internal$compute,
			$icidasset$elm_sha$SHA$Internal$SHA256$computationSetup,
			A2(
				$icidasset$elm_sha$SHA$Internal$preprocess,
				{blockLength: 512},
				message)));
};
var $author$project$Sources$Services$AmazonS3$Presign$hmacSha256 = $author$project$Cryptography$Hmac$encrypt64($icidasset$elm_sha$SHA$sha256);
var $ryannhg$date_format$DateFormat$HourMilitaryFixed = {$: 'HourMilitaryFixed'};
var $ryannhg$date_format$DateFormat$hourMilitaryFixed = $ryannhg$date_format$DateFormat$HourMilitaryFixed;
var $author$project$Sources$Processing$httpMethod = function (method) {
	if (method.$ === 'Get') {
		return 'GET';
	} else {
		return 'HEAD';
	}
};
var $ryannhg$date_format$DateFormat$MinuteFixed = {$: 'MinuteFixed'};
var $ryannhg$date_format$DateFormat$minuteFixed = $ryannhg$date_format$DateFormat$MinuteFixed;
var $ryannhg$date_format$DateFormat$MonthFixed = {$: 'MonthFixed'};
var $ryannhg$date_format$DateFormat$monthFixed = $ryannhg$date_format$DateFormat$MonthFixed;
var $ryannhg$date_format$DateFormat$SecondFixed = {$: 'SecondFixed'};
var $ryannhg$date_format$DateFormat$secondFixed = $ryannhg$date_format$DateFormat$SecondFixed;
var $elm$core$List$sortBy = _List_sortBy;
var $ryannhg$date_format$DateFormat$Text = function (a) {
	return {$: 'Text', a: a};
};
var $ryannhg$date_format$DateFormat$text = $ryannhg$date_format$DateFormat$Text;
var $icidasset$elm_binary$Binary$binaryToHexChar = function (binary) {
	_v0$16:
	while (true) {
		if (binary.b) {
			if (!binary.a) {
				if (binary.b.b) {
					if (!binary.b.a) {
						if (binary.b.b.b) {
							if (!binary.b.b.a) {
								if (binary.b.b.b.b) {
									if (!binary.b.b.b.a) {
										if (!binary.b.b.b.b.b) {
											var _v1 = binary.b;
											var _v2 = _v1.b;
											var _v3 = _v2.b;
											return $elm$core$Maybe$Just(
												_Utils_chr('0'));
										} else {
											break _v0$16;
										}
									} else {
										if (!binary.b.b.b.b.b) {
											var _v4 = binary.b;
											var _v5 = _v4.b;
											var _v6 = _v5.b;
											return $elm$core$Maybe$Just(
												_Utils_chr('1'));
										} else {
											break _v0$16;
										}
									}
								} else {
									break _v0$16;
								}
							} else {
								if (binary.b.b.b.b) {
									if (!binary.b.b.b.a) {
										if (!binary.b.b.b.b.b) {
											var _v7 = binary.b;
											var _v8 = _v7.b;
											var _v9 = _v8.b;
											return $elm$core$Maybe$Just(
												_Utils_chr('2'));
										} else {
											break _v0$16;
										}
									} else {
										if (!binary.b.b.b.b.b) {
											var _v10 = binary.b;
											var _v11 = _v10.b;
											var _v12 = _v11.b;
											return $elm$core$Maybe$Just(
												_Utils_chr('3'));
										} else {
											break _v0$16;
										}
									}
								} else {
									break _v0$16;
								}
							}
						} else {
							break _v0$16;
						}
					} else {
						if (binary.b.b.b) {
							if (!binary.b.b.a) {
								if (binary.b.b.b.b) {
									if (!binary.b.b.b.a) {
										if (!binary.b.b.b.b.b) {
											var _v13 = binary.b;
											var _v14 = _v13.b;
											var _v15 = _v14.b;
											return $elm$core$Maybe$Just(
												_Utils_chr('4'));
										} else {
											break _v0$16;
										}
									} else {
										if (!binary.b.b.b.b.b) {
											var _v16 = binary.b;
											var _v17 = _v16.b;
											var _v18 = _v17.b;
											return $elm$core$Maybe$Just(
												_Utils_chr('5'));
										} else {
											break _v0$16;
										}
									}
								} else {
									break _v0$16;
								}
							} else {
								if (binary.b.b.b.b) {
									if (!binary.b.b.b.a) {
										if (!binary.b.b.b.b.b) {
											var _v19 = binary.b;
											var _v20 = _v19.b;
											var _v21 = _v20.b;
											return $elm$core$Maybe$Just(
												_Utils_chr('6'));
										} else {
											break _v0$16;
										}
									} else {
										if (!binary.b.b.b.b.b) {
											var _v22 = binary.b;
											var _v23 = _v22.b;
											var _v24 = _v23.b;
											return $elm$core$Maybe$Just(
												_Utils_chr('7'));
										} else {
											break _v0$16;
										}
									}
								} else {
									break _v0$16;
								}
							}
						} else {
							break _v0$16;
						}
					}
				} else {
					break _v0$16;
				}
			} else {
				if (binary.b.b) {
					if (!binary.b.a) {
						if (binary.b.b.b) {
							if (!binary.b.b.a) {
								if (binary.b.b.b.b) {
									if (!binary.b.b.b.a) {
										if (!binary.b.b.b.b.b) {
											var _v25 = binary.b;
											var _v26 = _v25.b;
											var _v27 = _v26.b;
											return $elm$core$Maybe$Just(
												_Utils_chr('8'));
										} else {
											break _v0$16;
										}
									} else {
										if (!binary.b.b.b.b.b) {
											var _v28 = binary.b;
											var _v29 = _v28.b;
											var _v30 = _v29.b;
											return $elm$core$Maybe$Just(
												_Utils_chr('9'));
										} else {
											break _v0$16;
										}
									}
								} else {
									break _v0$16;
								}
							} else {
								if (binary.b.b.b.b) {
									if (!binary.b.b.b.a) {
										if (!binary.b.b.b.b.b) {
											var _v31 = binary.b;
											var _v32 = _v31.b;
											var _v33 = _v32.b;
											return $elm$core$Maybe$Just(
												_Utils_chr('A'));
										} else {
											break _v0$16;
										}
									} else {
										if (!binary.b.b.b.b.b) {
											var _v34 = binary.b;
											var _v35 = _v34.b;
											var _v36 = _v35.b;
											return $elm$core$Maybe$Just(
												_Utils_chr('B'));
										} else {
											break _v0$16;
										}
									}
								} else {
									break _v0$16;
								}
							}
						} else {
							break _v0$16;
						}
					} else {
						if (binary.b.b.b) {
							if (!binary.b.b.a) {
								if (binary.b.b.b.b) {
									if (!binary.b.b.b.a) {
										if (!binary.b.b.b.b.b) {
											var _v37 = binary.b;
											var _v38 = _v37.b;
											var _v39 = _v38.b;
											return $elm$core$Maybe$Just(
												_Utils_chr('C'));
										} else {
											break _v0$16;
										}
									} else {
										if (!binary.b.b.b.b.b) {
											var _v40 = binary.b;
											var _v41 = _v40.b;
											var _v42 = _v41.b;
											return $elm$core$Maybe$Just(
												_Utils_chr('D'));
										} else {
											break _v0$16;
										}
									}
								} else {
									break _v0$16;
								}
							} else {
								if (binary.b.b.b.b) {
									if (!binary.b.b.b.a) {
										if (!binary.b.b.b.b.b) {
											var _v43 = binary.b;
											var _v44 = _v43.b;
											var _v45 = _v44.b;
											return $elm$core$Maybe$Just(
												_Utils_chr('E'));
										} else {
											break _v0$16;
										}
									} else {
										if (!binary.b.b.b.b.b) {
											var _v46 = binary.b;
											var _v47 = _v46.b;
											var _v48 = _v47.b;
											return $elm$core$Maybe$Just(
												_Utils_chr('F'));
										} else {
											break _v0$16;
										}
									}
								} else {
									break _v0$16;
								}
							}
						} else {
							break _v0$16;
						}
					}
				} else {
					break _v0$16;
				}
			}
		} else {
			break _v0$16;
		}
	}
	return $elm$core$Maybe$Nothing;
};
var $icidasset$elm_binary$Binary$toHex = function (_v0) {
	var bits = _v0.a;
	var missingLeadingZeros = 4 - A2(
		$elm$core$Basics$modBy,
		4,
		$elm$core$List$length(bits));
	var bitsWithLeadingZeros = ((!missingLeadingZeros) || (missingLeadingZeros === 4)) ? bits : _Utils_ap(
		A2($elm$core$List$repeat, missingLeadingZeros, false),
		bits);
	return $elm$core$String$fromList(
		A2(
			$elm$core$List$map,
			A2(
				$elm$core$Basics$composeR,
				$icidasset$elm_binary$Binary$binaryToHexChar,
				$elm$core$Maybe$withDefault(
					_Utils_chr('0'))),
			A2($elm_community$list_extra$List$Extra$greedyGroupsOf, 4, bitsWithLeadingZeros)));
};
var $ryannhg$date_format$DateFormat$YearNumber = {$: 'YearNumber'};
var $ryannhg$date_format$DateFormat$yearNumber = $ryannhg$date_format$DateFormat$YearNumber;
var $author$project$Sources$Services$AmazonS3$Presign$presignedUrl = F6(
	function (method, lifeExpectancyInSeconds, extraParams, currentTime, srcData, pathToFile) {
		var timestamp = A3(
			$ryannhg$date_format$DateFormat$format,
			_List_fromArray(
				[
					$ryannhg$date_format$DateFormat$yearNumber,
					$ryannhg$date_format$DateFormat$monthFixed,
					$ryannhg$date_format$DateFormat$dayOfMonthFixed,
					$ryannhg$date_format$DateFormat$text('T'),
					$ryannhg$date_format$DateFormat$hourMilitaryFixed,
					$ryannhg$date_format$DateFormat$minuteFixed,
					$ryannhg$date_format$DateFormat$secondFixed,
					$ryannhg$date_format$DateFormat$text('Z')
				]),
			$elm$time$Time$utc,
			currentTime);
		var date = A3(
			$ryannhg$date_format$DateFormat$format,
			_List_fromArray(
				[$ryannhg$date_format$DateFormat$yearNumber, $ryannhg$date_format$DateFormat$monthFixed, $ryannhg$date_format$DateFormat$dayOfMonthFixed]),
			$elm$time$Time$utc,
			currentTime);
		var aws = srcData;
		var bucketName = A2($author$project$Dict$Ext$fetchUnknown, 'bucketName', aws);
		var customHost = function () {
			var _v2 = A3($author$project$Dict$Ext$fetch, 'host', '', aws);
			if (_v2 === '') {
				return $elm$core$Maybe$Nothing;
			} else {
				var x = _v2;
				return $elm$core$Maybe$Just(x);
			}
		}();
		var filePathPrefix = $elm_community$maybe_extra$Maybe$Extra$isJust(customHost) ? (bucketName + '/') : '';
		var filePath = A2(
			$elm$core$String$append,
			'/' + filePathPrefix,
			A2(
				$elm$core$String$join,
				'/',
				A2(
					$elm$core$List$map,
					A2($elm$core$Basics$composeR, $elm$url$Url$percentEncode, $author$project$Sources$Services$AmazonS3$Presign$encodeAdditionalCharacters),
					A2(
						$elm$core$String$split,
						'/',
						A2($author$project$String$Ext$chopStart, '/', pathToFile)))));
		var protocol = A2(
			$elm$core$String$contains,
			'http://',
			A2($elm$core$Maybe$withDefault, '', customHost)) ? 'http://' : 'https://';
		var region = A2($author$project$Dict$Ext$fetchUnknown, 'region', aws);
		var credential = A2(
			$elm$core$String$join,
			'/',
			_List_fromArray(
				[
					A2($author$project$Dict$Ext$fetchUnknown, 'accessKey', aws),
					date,
					region,
					's3',
					'aws4_request'
				]));
		var queryString = $author$project$Sources$Services$AmazonS3$Presign$encodeAdditionalCharacters(
			A2(
				$elm$core$String$dropLeft,
				1,
				$author$project$Common$queryString(
					A2(
						$elm$core$List$sortBy,
						$elm$core$Tuple$first,
						A2(
							$elm$core$List$append,
							extraParams,
							_List_fromArray(
								[
									_Utils_Tuple2('X-Amz-Algorithm', 'AWS4-HMAC-SHA256'),
									_Utils_Tuple2('X-Amz-Credential', credential),
									_Utils_Tuple2('X-Amz-Date', timestamp),
									_Utils_Tuple2(
									'X-Amz-Expires',
									$elm$core$String$fromInt(lifeExpectancyInSeconds)),
									_Utils_Tuple2('X-Amz-SignedHeaders', 'host')
								]))))));
		var host = function () {
			if (customHost.$ === 'Just') {
				var h = customHost.a;
				return A2(
					$author$project$String$Ext$chopEnd,
					'/',
					A2(
						$author$project$String$Ext$chopStart,
						'https://',
						A2($author$project$String$Ext$chopStart, 'http://', h)));
			} else {
				var _v1 = $elm$core$String$trim(region);
				if (_v1 === '') {
					return bucketName + '.s3.amazonaws.com';
				} else {
					var r = _v1;
					return bucketName + ('.s3.' + (r + '.amazonaws.com'));
				}
			}
		}();
		var request = A2(
			$elm$core$String$join,
			'\n',
			_List_fromArray(
				[
					$author$project$Sources$Processing$httpMethod(method),
					filePath,
					queryString,
					'host:' + host,
					'',
					'host',
					'UNSIGNED-PAYLOAD'
				]));
		var stringToSign = A2(
			$elm$core$String$join,
			'\n',
			_List_fromArray(
				[
					'AWS4-HMAC-SHA256',
					timestamp,
					A2(
					$elm$core$String$join,
					'/',
					_List_fromArray(
						[date, region, 's3', 'aws4_request'])),
					$elm$core$String$toLower(
					$icidasset$elm_binary$Binary$toHex(
						$icidasset$elm_sha$SHA$sha256(
							$icidasset$elm_binary$Binary$fromStringAsUtf8(request))))
				]));
		var signature = $elm$core$String$toLower(
			$icidasset$elm_binary$Binary$toHex(
				A2(
					$author$project$Sources$Services$AmazonS3$Presign$hmacSha256,
					stringToSign,
					A2(
						$author$project$Sources$Services$AmazonS3$Presign$hmacSha256,
						'aws4_request',
						A2(
							$author$project$Sources$Services$AmazonS3$Presign$hmacSha256,
							's3',
							A2(
								$author$project$Sources$Services$AmazonS3$Presign$hmacSha256,
								region,
								A2(
									$author$project$Sources$Services$AmazonS3$Presign$hmacSha256,
									date,
									$icidasset$elm_binary$Binary$fromStringAsUtf8(
										'AWS4' + A2($author$project$Dict$Ext$fetchUnknown, 'secretKey', aws)))))))));
		return $elm$core$String$concat(
			_List_fromArray(
				[protocol, host, filePath, '?', queryString, '&X-Amz-Signature=', signature]));
	});
var $author$project$Sources$Services$AmazonS3$makeTrackUrl = F5(
	function (currentTime, _v0, srcData, method, pathToFile) {
		return A6($author$project$Sources$Services$AmazonS3$Presign$presignedUrl, method, 172800, _List_Nil, currentTime, srcData, pathToFile);
	});
var $author$project$Sources$Services$Azure$Authorization$Blob = {$: 'Blob'};
var $author$project$Sources$Services$Azure$Authorization$Read = {$: 'Read'};
var $icidasset$elm_binary$Binary$chunksOf = F2(
	function (n, _v0) {
		var bits = _v0.a;
		return A2(
			$elm$core$List$map,
			$icidasset$elm_binary$Binary$Bits,
			A2($elm_community$list_extra$List$Extra$greedyGroupsOf, n, bits));
	});
var $elm_community$list_extra$List$Extra$takeWhile = function (predicate) {
	var takeWhileMemo = F2(
		function (memo, list) {
			takeWhileMemo:
			while (true) {
				if (!list.b) {
					return $elm$core$List$reverse(memo);
				} else {
					var x = list.a;
					var xs = list.b;
					if (predicate(x)) {
						var $temp$memo = A2($elm$core$List$cons, x, memo),
							$temp$list = xs;
						memo = $temp$memo;
						list = $temp$list;
						continue takeWhileMemo;
					} else {
						return $elm$core$List$reverse(memo);
					}
				}
			}
		});
	return takeWhileMemo(_List_Nil);
};
var $newlandsvalley$elm_binary_base64$BinaryBase64$dcd = function (cs) {
	return A2(
		$elm$core$List$map,
		function (h) {
			return ((_Utils_cmp(
				h,
				_Utils_chr('Z')) < 1) && (_Utils_cmp(
				h,
				_Utils_chr('A')) > -1)) ? ($elm$core$Char$toCode(h) - $elm$core$Char$toCode(
				_Utils_chr('A'))) : (((_Utils_cmp(
				h,
				_Utils_chr('0')) > -1) && (_Utils_cmp(
				h,
				_Utils_chr('9')) < 1)) ? (($elm$core$Char$toCode(h) - $elm$core$Char$toCode(
				_Utils_chr('0'))) + 52) : (((_Utils_cmp(
				h,
				_Utils_chr('a')) > -1) && (_Utils_cmp(
				h,
				_Utils_chr('z')) < 1)) ? (($elm$core$Char$toCode(h) - $elm$core$Char$toCode(
				_Utils_chr('a'))) + 26) : (_Utils_eq(
				h,
				_Utils_chr('+')) ? 62 : (_Utils_eq(
				h,
				_Utils_chr('/')) ? 63 : 0))));
		},
		A2(
			$elm_community$list_extra$List$Extra$takeWhile,
			function (a) {
				return !_Utils_eq(
					a,
					_Utils_chr('='));
			},
			cs));
};
var $newlandsvalley$elm_binary_base64$BinaryBase64$int4_char3 = function (is) {
	var groupsOfFour = function (values) {
		var grouper = F2(
			function (elem, acc) {
				if (!acc.b) {
					return _List_fromArray(
						[
							_List_fromArray(
							[elem])
						]);
				} else {
					var x = acc.a;
					var xs = acc.b;
					return ($elm$core$List$length(x) === 4) ? A2(
						$elm$core$List$cons,
						_List_fromArray(
							[elem]),
						acc) : A2(
						$elm$core$List$cons,
						_Utils_ap(
							x,
							_List_fromArray(
								[elem])),
						xs);
				}
			});
		return $elm$core$List$reverse(
			A3($elm$core$List$foldl, grouper, _List_Nil, values));
	};
	return $elm$core$List$concat(
		A2(
			$elm$core$List$map,
			function (subgroup) {
				if (subgroup.b) {
					if (subgroup.b.b) {
						if (subgroup.b.b.b) {
							if (subgroup.b.b.b.b) {
								var a = subgroup.a;
								var _v1 = subgroup.b;
								var b = _v1.a;
								var _v2 = _v1.b;
								var c = _v2.a;
								var _v3 = _v2.b;
								var d = _v3.a;
								var t = _v3.b;
								var n = ((a << 18) | (b << 12)) | ((c << 6) | d);
								return A2(
									$elm$core$List$cons,
									$elm$core$Char$fromCode((n >> 16) & 255),
									A2(
										$elm$core$List$cons,
										$elm$core$Char$fromCode((n >> 8) & 255),
										A2(
											$elm$core$List$cons,
											$elm$core$Char$fromCode(n & 255),
											_List_Nil)));
							} else {
								var a = subgroup.a;
								var _v4 = subgroup.b;
								var b = _v4.a;
								var _v5 = _v4.b;
								var c = _v5.a;
								var n = ((a << 18) | (b << 12)) | (c << 6);
								return _List_fromArray(
									[
										$elm$core$Char$fromCode((n >> 16) & 255),
										$elm$core$Char$fromCode((n >> 8) & 255)
									]);
							}
						} else {
							var a = subgroup.a;
							var _v6 = subgroup.b;
							var b = _v6.a;
							var n = (a << 18) | (b << 12);
							return _List_fromArray(
								[
									$elm$core$Char$fromCode((n >> 16) & 255)
								]);
						}
					} else {
						return _List_Nil;
					}
				} else {
					return _List_Nil;
				}
			},
			groupsOfFour(is)));
};
var $newlandsvalley$elm_binary_base64$BinaryBase64$decodeString = A2(
	$elm$core$Basics$composeR,
	$elm$core$String$toList,
	A2(
		$elm$core$Basics$composeR,
		$newlandsvalley$elm_binary_base64$BinaryBase64$dcd,
		A2(
			$elm$core$Basics$composeR,
			$newlandsvalley$elm_binary_base64$BinaryBase64$int4_char3,
			$elm$core$List$map($elm$core$Char$toCode))));
var $newlandsvalley$elm_binary_base64$BinaryBase64$encodeArray = $elm$core$Array$fromList(
	_List_fromArray(
		[
			_Utils_chr('A'),
			_Utils_chr('B'),
			_Utils_chr('C'),
			_Utils_chr('D'),
			_Utils_chr('E'),
			_Utils_chr('F'),
			_Utils_chr('G'),
			_Utils_chr('H'),
			_Utils_chr('I'),
			_Utils_chr('J'),
			_Utils_chr('K'),
			_Utils_chr('L'),
			_Utils_chr('M'),
			_Utils_chr('N'),
			_Utils_chr('O'),
			_Utils_chr('P'),
			_Utils_chr('Q'),
			_Utils_chr('R'),
			_Utils_chr('S'),
			_Utils_chr('T'),
			_Utils_chr('U'),
			_Utils_chr('V'),
			_Utils_chr('W'),
			_Utils_chr('X'),
			_Utils_chr('Y'),
			_Utils_chr('Z'),
			_Utils_chr('a'),
			_Utils_chr('b'),
			_Utils_chr('c'),
			_Utils_chr('d'),
			_Utils_chr('e'),
			_Utils_chr('f'),
			_Utils_chr('g'),
			_Utils_chr('h'),
			_Utils_chr('i'),
			_Utils_chr('j'),
			_Utils_chr('k'),
			_Utils_chr('l'),
			_Utils_chr('m'),
			_Utils_chr('n'),
			_Utils_chr('o'),
			_Utils_chr('p'),
			_Utils_chr('q'),
			_Utils_chr('r'),
			_Utils_chr('s'),
			_Utils_chr('t'),
			_Utils_chr('u'),
			_Utils_chr('v'),
			_Utils_chr('w'),
			_Utils_chr('x'),
			_Utils_chr('y'),
			_Utils_chr('z'),
			_Utils_chr('0'),
			_Utils_chr('1'),
			_Utils_chr('2'),
			_Utils_chr('3'),
			_Utils_chr('4'),
			_Utils_chr('5'),
			_Utils_chr('6'),
			_Utils_chr('7'),
			_Utils_chr('8'),
			_Utils_chr('9'),
			_Utils_chr('+'),
			_Utils_chr('/')
		]));
var $newlandsvalley$elm_binary_base64$BinaryBase64$isBase64Char = function (c) {
	return A2(
		$elm$core$List$member,
		c,
		$elm$core$Array$toList($newlandsvalley$elm_binary_base64$BinaryBase64$encodeArray)) || _Utils_eq(
		c,
		_Utils_chr('='));
};
var $newlandsvalley$elm_binary_base64$BinaryBase64$isBase64 = $elm$core$String$all($newlandsvalley$elm_binary_base64$BinaryBase64$isBase64Char);
var $newlandsvalley$elm_binary_base64$BinaryBase64$decode = function (s) {
	return $newlandsvalley$elm_binary_base64$BinaryBase64$isBase64(s) ? $elm$core$Result$Ok(
		$newlandsvalley$elm_binary_base64$BinaryBase64$decodeString(s)) : $elm$core$Result$Err('invalid Base64 string');
};
var $newlandsvalley$elm_binary_base64$BinaryBase64$char3_int4_fold = F2(
	function (cs, acc) {
		char3_int4_fold:
		while (true) {
			if (cs.b) {
				if (cs.b.b) {
					if (cs.b.b.b) {
						var a = cs.a;
						var _v1 = cs.b;
						var b = _v1.a;
						var _v2 = _v1.b;
						var c = _v2.a;
						var t = _v2.b;
						var n = $elm$core$Char$toCode(c) | (($elm$core$Char$toCode(a) << 16) | ($elm$core$Char$toCode(b) << 8));
						var $temp$cs = t,
							$temp$acc = _Utils_ap(
							acc,
							_List_fromArray(
								[(n >> 18) & 63, (n >> 12) & 63, (n >> 6) & 63, n & 63]));
						cs = $temp$cs;
						acc = $temp$acc;
						continue char3_int4_fold;
					} else {
						var a = cs.a;
						var _v3 = cs.b;
						var b = _v3.a;
						var n = ($elm$core$Char$toCode(a) << 16) | ($elm$core$Char$toCode(b) << 8);
						return _Utils_ap(
							acc,
							_List_fromArray(
								[(n >> 18) & 63, (n >> 12) & 63, (n >> 6) & 63]));
					}
				} else {
					var a = cs.a;
					var n = $elm$core$Char$toCode(a) << 16;
					return _Utils_ap(
						acc,
						_List_fromArray(
							[(n >> 18) & 63, (n >> 12) & 63]));
				}
			} else {
				return acc;
			}
		}
	});
var $newlandsvalley$elm_binary_base64$BinaryBase64$char3_int4 = function (cs) {
	return A2($newlandsvalley$elm_binary_base64$BinaryBase64$char3_int4_fold, cs, _List_Nil);
};
var $newlandsvalley$elm_binary_base64$BinaryBase64$enc1 = function (i) {
	return A2(
		$elm$core$Maybe$withDefault,
		_Utils_chr('?'),
		A2($elm$core$Array$get, i, $newlandsvalley$elm_binary_base64$BinaryBase64$encodeArray));
};
var $newlandsvalley$elm_binary_base64$BinaryBase64$quadruplets_fold = F2(
	function (cs, acc) {
		quadruplets_fold:
		while (true) {
			if (cs.b) {
				if (cs.b.b) {
					if (cs.b.b.b) {
						if (cs.b.b.b.b) {
							var a = cs.a;
							var _v1 = cs.b;
							var b = _v1.a;
							var _v2 = _v1.b;
							var c = _v2.a;
							var _v3 = _v2.b;
							var d = _v3.a;
							var t = _v3.b;
							var $temp$cs = t,
								$temp$acc = _Utils_ap(
								acc,
								_List_fromArray(
									[a, b, c, d]));
							cs = $temp$cs;
							acc = $temp$acc;
							continue quadruplets_fold;
						} else {
							var a = cs.a;
							var _v4 = cs.b;
							var b = _v4.a;
							var _v5 = _v4.b;
							var c = _v5.a;
							return _Utils_ap(
								acc,
								_List_fromArray(
									[
										a,
										b,
										c,
										_Utils_chr('=')
									]));
						}
					} else {
						var a = cs.a;
						var _v6 = cs.b;
						var b = _v6.a;
						return _Utils_ap(
							acc,
							_List_fromArray(
								[
									a,
									b,
									_Utils_chr('='),
									_Utils_chr('=')
								]));
					}
				} else {
					return _List_Nil;
				}
			} else {
				return acc;
			}
		}
	});
var $newlandsvalley$elm_binary_base64$BinaryBase64$quadruplets = function (cs) {
	return A2($newlandsvalley$elm_binary_base64$BinaryBase64$quadruplets_fold, cs, _List_Nil);
};
var $newlandsvalley$elm_binary_base64$BinaryBase64$enc = A2(
	$elm$core$Basics$composeR,
	$elm$core$List$map($newlandsvalley$elm_binary_base64$BinaryBase64$enc1),
	$newlandsvalley$elm_binary_base64$BinaryBase64$quadruplets);
var $newlandsvalley$elm_binary_base64$BinaryBase64$encode = A2(
	$elm$core$Basics$composeR,
	$elm$core$List$map($elm$core$Char$fromCode),
	A2(
		$elm$core$Basics$composeR,
		$newlandsvalley$elm_binary_base64$BinaryBase64$char3_int4,
		A2($elm$core$Basics$composeR, $newlandsvalley$elm_binary_base64$BinaryBase64$enc, $elm$core$String$fromList)));
var $elm$core$Basics$pow = _Basics_pow;
var $icidasset$elm_binary$Binary$toDecimal = function (_v0) {
	var bits = _v0.a;
	return A3(
		$elm$core$List$foldl,
		F2(
			function (bit, _v1) {
				var x = _v1.a;
				var exponent = _v1.b;
				return _Utils_Tuple2(
					(A2($elm$core$Basics$pow, 2, exponent) * A3($icidasset$elm_binary$Binary$ifThenElse, bit, 1, 0)) + x,
					exponent - 1);
			}),
		_Utils_Tuple2(
			0,
			$elm$core$List$length(bits) - 1),
		bits).a;
};
var $author$project$Sources$Services$Azure$Authorization$makeSignature = function (_v0) {
	var accountKey = _v0.accountKey;
	var accountName = _v0.accountName;
	var expiryTime = _v0.expiryTime;
	var permissions = _v0.permissions;
	var protocol = _v0.protocol;
	var resources = _v0.resources;
	var services = _v0.services;
	var startTime = _v0.startTime;
	var version = _v0.version;
	var message = A2(
		$elm$core$String$join,
		'\n',
		_List_fromArray(
			[accountName, permissions, services, resources, startTime, expiryTime, '', protocol, version + '\n']));
	return $newlandsvalley$elm_binary_base64$BinaryBase64$encode(
		A2(
			$elm$core$List$map,
			$icidasset$elm_binary$Binary$toDecimal,
			A2(
				$icidasset$elm_binary$Binary$chunksOf,
				8,
				A3(
					$author$project$Cryptography$Hmac$encrypt64,
					$icidasset$elm_sha$SHA$sha256,
					message,
					$icidasset$elm_binary$Binary$concat(
						A2(
							$elm$core$List$map,
							A2(
								$elm$core$Basics$composeR,
								$icidasset$elm_binary$Binary$fromDecimal,
								$icidasset$elm_binary$Binary$ensureSize(8)),
							A2(
								$elm$core$Result$withDefault,
								_List_Nil,
								$newlandsvalley$elm_binary_base64$BinaryBase64$decode(accountKey))))))));
};
var $author$project$Sources$Services$Azure$Authorization$presignedUrl = F8(
	function (storageMethod, computation, _v0, _v1, currentTime, srcData, pathToFile, params) {
		var resourceType = function () {
			if (storageMethod.$ === 'Blob') {
				return 'blob';
			} else {
				return 'file';
			}
		}();
		var resType = function () {
			if (storageMethod.$ === 'Blob') {
				return 'container';
			} else {
				return 'directory';
			}
		}();
		var permissions = function () {
			if (computation.$ === 'List') {
				return 'l';
			} else {
				return 'r';
			}
		}();
		var expiryTime = A3(
			$ryannhg$date_format$DateFormat$format,
			_List_fromArray(
				[
					$ryannhg$date_format$DateFormat$yearNumber,
					$ryannhg$date_format$DateFormat$text('-'),
					$ryannhg$date_format$DateFormat$monthFixed,
					$ryannhg$date_format$DateFormat$text('-'),
					$ryannhg$date_format$DateFormat$dayOfMonthFixed,
					$ryannhg$date_format$DateFormat$text('T'),
					$ryannhg$date_format$DateFormat$hourMilitaryFixed,
					$ryannhg$date_format$DateFormat$text(':'),
					$ryannhg$date_format$DateFormat$minuteFixed,
					$ryannhg$date_format$DateFormat$text('Z')
				]),
			$elm$time$Time$utc,
			$elm$time$Time$millisToPosix(
				3600000 + $elm$time$Time$posixToMillis(currentTime)));
		var azure = srcData;
		var container = A2($author$project$Dict$Ext$fetchUnknown, 'container', azure);
		var accountName = A2($author$project$Dict$Ext$fetchUnknown, 'accountName', azure);
		var accountKey = A2($author$project$Dict$Ext$fetchUnknown, 'accountKey', azure);
		var signatureStuff = {accountKey: accountKey, accountName: accountName, expiryTime: expiryTime, permissions: permissions, protocol: 'https', resources: 'co', services: 'bf', startTime: '', version: '2017-04-17'};
		return $elm$core$String$concat(
			_List_fromArray(
				[
					'https://',
					$elm$url$Url$percentEncode(accountName),
					'.',
					$elm$url$Url$percentEncode(resourceType),
					'.core.windows.net/',
					$elm$url$Url$percentEncode(container),
					'/',
					$elm$url$Url$percentEncode(
					A2($author$project$String$Ext$chopStart, '/', pathToFile)),
					function () {
					var _v2 = $author$project$Common$queryString(params);
					if (_v2 === '') {
						return '?';
					} else {
						var qs = _v2;
						return qs;
					}
				}(),
					function () {
					if (computation.$ === 'List') {
						return '&restype=' + (resType + '&comp=list');
					} else {
						return '';
					}
				}(),
					'&sv=',
					$elm$url$Url$percentEncode(signatureStuff.version),
					'&ss=',
					$elm$url$Url$percentEncode(signatureStuff.services),
					'&srt=',
					$elm$url$Url$percentEncode(signatureStuff.resources),
					'&sp=',
					$elm$url$Url$percentEncode(signatureStuff.permissions),
					'&se=',
					$elm$url$Url$percentEncode(signatureStuff.expiryTime),
					'&spr=',
					$elm$url$Url$percentEncode(signatureStuff.protocol),
					'&sig=',
					$elm$url$Url$percentEncode(
					$author$project$Sources$Services$Azure$Authorization$makeSignature(signatureStuff))
				]));
	});
var $author$project$Sources$Services$AzureBlob$makeTrackUrl = F5(
	function (currentTime, _v0, srcData, _v1, pathToFile) {
		return A8($author$project$Sources$Services$Azure$Authorization$presignedUrl, $author$project$Sources$Services$Azure$Authorization$Blob, $author$project$Sources$Services$Azure$Authorization$Read, $author$project$Sources$Processing$Get, 48, currentTime, srcData, pathToFile, _List_Nil);
	});
var $author$project$Sources$Services$Azure$Authorization$File = {$: 'File'};
var $author$project$Sources$Services$AzureFile$makeTrackUrl = F5(
	function (currentTime, _v0, srcData, _v1, pathToFile) {
		return A8($author$project$Sources$Services$Azure$Authorization$presignedUrl, $author$project$Sources$Services$Azure$Authorization$File, $author$project$Sources$Services$Azure$Authorization$Read, $author$project$Sources$Processing$Get, 48, currentTime, srcData, pathToFile, _List_Nil);
	});
var $author$project$Sources$Services$Ipfs$encodedPath = function (path) {
	return A2(
		$elm$core$String$join,
		'/',
		A2(
			$elm$core$List$map,
			$elm$url$Url$percentEncode,
			A2($elm$core$String$split, '/', path)));
};
var $author$project$Sources$Services$Ipfs$defaultGateway = 'https://ipfs.io';
var $author$project$Sources$Services$Ipfs$extractGateway = function (srcData) {
	return A2(
		$elm$core$Maybe$withDefault,
		$author$project$Sources$Services$Ipfs$defaultGateway,
		A2(
			$elm$core$Maybe$map,
			$author$project$String$Ext$chopEnd('/'),
			A2(
				$elm$core$Maybe$andThen,
				function (s) {
					if (s === '') {
						return $elm$core$Maybe$Nothing;
					} else {
						return $elm$core$Maybe$Just(s);
					}
				},
				A2(
					$elm$core$Maybe$map,
					$elm$core$String$trim,
					A2($elm$core$Dict$get, 'gateway', srcData)))));
};
var $author$project$Sources$Services$Ipfs$pathIsDnsLink = $elm$core$String$contains('.');
var $author$project$Sources$Services$Ipfs$rootHash = function (srcData) {
	return A2(
		$author$project$String$Ext$chopEnd,
		'/',
		A2(
			$elm$core$Maybe$withDefault,
			'',
			A2(
				$elm$core$Maybe$andThen,
				function (path) {
					return $author$project$Sources$Services$Ipfs$pathIsDnsLink(path) ? A2($elm$core$Dict$get, 'directoryHashFromDnsLink', srcData) : $elm$core$Maybe$Just(path);
				},
				A2($elm$core$Dict$get, 'directoryHash', srcData))));
};
var $author$project$Sources$Services$Btfs$makeTrackUrl = F5(
	function (_v0, _v1, srcData, _v2, path) {
		return $author$project$Sources$Services$Ipfs$extractGateway(srcData) + ('/btfs/' + ($author$project$Sources$Services$Ipfs$rootHash(srcData) + ('/' + $author$project$Sources$Services$Ipfs$encodedPath(path))));
	});
var $author$project$Sources$Services$Dropbox$makeTrackUrl = F5(
	function (_v0, _v1, srcData, _v2, pathToFile) {
		return 'dropbox://' + (A3($author$project$Dict$Ext$fetch, 'accessToken', '', srcData) + ('@' + pathToFile));
	});
var $author$project$String$Path$sep = '/';
var $author$project$String$Path$file = function (path) {
	return A2(
		$elm$core$Maybe$withDefault,
		path,
		$elm_community$list_extra$List$Extra$last(
			A2($elm$core$String$split, $author$project$String$Path$sep, path)));
};
var $author$project$Sources$Services$Google$makeTrackUrl = F5(
	function (currentTime, srcId, srcData, _v0, path) {
		var now = $elm$time$Time$posixToMillis(currentTime);
		var file = $author$project$String$Path$file(path);
		var fileId = A2(
			$elm$core$Maybe$withDefault,
			file,
			$elm$core$List$head(
				A2($elm$core$String$split, '?', file)));
		var expiresAt = A3(
			$author$project$Dict$Ext$fetch,
			'expiresAt',
			$elm$core$String$fromInt(now),
			srcData);
		return $elm$core$String$concat(
			_List_fromArray(
				[
					'google://',
					A3($author$project$Dict$Ext$fetch, 'accessToken', '', srcData),
					':',
					expiresAt,
					':',
					A3($author$project$Dict$Ext$fetch, 'refreshToken', '', srcData),
					':',
					A3($author$project$Dict$Ext$fetch, 'clientId', '', srcData),
					':',
					A3($author$project$Dict$Ext$fetch, 'clientSecret', '', srcData),
					':',
					srcId,
					'@',
					fileId
				]));
	});
var $author$project$Sources$Services$Ipfs$makeTrackUrl = F5(
	function (_v0, _v1, srcData, _v2, path) {
		return ((!A2($elm$core$String$contains, '/', path)) && (!A2($elm$core$String$contains, '.', path))) ? ($author$project$Sources$Services$Ipfs$extractGateway(srcData) + ('/ipfs/' + path)) : ($author$project$Sources$Services$Ipfs$extractGateway(srcData) + ('/ipfs/' + ($author$project$Sources$Services$Ipfs$rootHash(srcData) + ('/' + $author$project$Sources$Services$Ipfs$encodedPath(path)))));
	});
var $author$project$Sources$Services$WebDav$url = F3(
	function (_v0, srcData, path) {
		var addAuth = _v0.addAuth;
		var username = A3($author$project$Dict$Ext$fetch, 'username', '', srcData);
		var password = A3($author$project$Dict$Ext$fetch, 'password', '', srcData);
		var host = A2(
			$author$project$String$Ext$chopEnd,
			'/',
			A3($author$project$Dict$Ext$fetch, 'url', '', srcData));
		var encodedPath = A2(
			$elm$core$String$join,
			'/',
			A2(
				$elm$core$List$map,
				$elm$url$Url$percentEncode,
				A2(
					$elm$core$String$split,
					'/',
					A2($author$project$String$Ext$chopStart, '/', path))));
		var authPrefix = function () {
			var _v1 = _Utils_Tuple2(username, password);
			if ((_v1.a === '') && (_v1.b === '')) {
				return '';
			} else {
				var u = _v1.a;
				var p = _v1.b;
				return u + (':' + p);
			}
		}();
		var authBit = (addAuth && ($elm$core$String$length(authPrefix) > 0)) ? ('?service_worker_authentication=' + $elm$url$Url$percentEncode(
			$truqu$elm_base64$Base64$encode(authPrefix))) : '';
		return host + ('/' + (encodedPath + authBit));
	});
var $author$project$Sources$Services$WebDav$makeTrackUrl = F5(
	function (_v0, _v1, srcData, _v2, filePath) {
		return A3(
			$author$project$Sources$Services$WebDav$url,
			{addAuth: true},
			srcData,
			filePath);
	});
var $author$project$Sources$Services$makeTrackUrl = function (service) {
	switch (service.$) {
		case 'AmazonS3':
			return $author$project$Sources$Services$AmazonS3$makeTrackUrl;
		case 'AzureBlob':
			return $author$project$Sources$Services$AzureBlob$makeTrackUrl;
		case 'AzureFile':
			return $author$project$Sources$Services$AzureFile$makeTrackUrl;
		case 'Btfs':
			return $author$project$Sources$Services$Btfs$makeTrackUrl;
		case 'Dropbox':
			return $author$project$Sources$Services$Dropbox$makeTrackUrl;
		case 'Google':
			return $author$project$Sources$Services$Google$makeTrackUrl;
		case 'Ipfs':
			return $author$project$Sources$Services$Ipfs$makeTrackUrl;
		default:
			return $author$project$Sources$Services$WebDav$makeTrackUrl;
	}
};
var $author$project$Queue$makeTrackUrl_ = F3(
	function (timestamp, track, source) {
		return A6($author$project$Sources$Services$makeTrackUrl, source.service, timestamp, source.id, source.data, $author$project$Sources$Processing$Get, track.path);
	});
var $author$project$Queue$makeTrackUrl = F3(
	function (timestamp, sources, track) {
		return A2(
			$elm$core$Maybe$withDefault,
			'<missing-source>',
			A2(
				$elm$core$Maybe$map,
				A2($author$project$Queue$makeTrackUrl_, timestamp, track),
				A2(
					$elm_community$list_extra$List$Extra$find,
					A2(
						$elm$core$Basics$composeR,
						function ($) {
							return $.id;
						},
						$elm$core$Basics$eq(track.sourceId)),
					sources)));
	});
var $author$project$Queue$makeEngineItem = F5(
	function (timestamp, sources, cachedTrackIds, progressTable, track) {
		return {
			isCached: A2($elm$core$List$member, track.id, cachedTrackIds),
			progress: A2($elm$core$Dict$get, track.id, progressTable),
			sourceId: track.sourceId,
			trackId: track.id,
			trackPath: track.path,
			trackTags: track.tags,
			url: A3($author$project$Queue$makeTrackUrl, timestamp, sources, track)
		};
	});
var $elm$json$Json$Encode$float = _Json_wrap;
var $author$project$UI$Ports$preloadAudio = _Platform_outgoingPort(
	'preloadAudio',
	function ($) {
		return $elm$json$Json$Encode$object(
			_List_fromArray(
				[
					_Utils_Tuple2(
					'isCached',
					$elm$json$Json$Encode$bool($.isCached)),
					_Utils_Tuple2(
					'progress',
					function ($) {
						return A3($elm$core$Maybe$destruct, $elm$json$Json$Encode$null, $elm$json$Json$Encode$float, $);
					}($.progress)),
					_Utils_Tuple2(
					'sourceId',
					$elm$json$Json$Encode$string($.sourceId)),
					_Utils_Tuple2(
					'trackId',
					$elm$json$Json$Encode$string($.trackId)),
					_Utils_Tuple2(
					'trackPath',
					$elm$json$Json$Encode$string($.trackPath)),
					_Utils_Tuple2(
					'trackTags',
					function ($) {
						return $elm$json$Json$Encode$object(
							_List_fromArray(
								[
									_Utils_Tuple2(
									'album',
									$elm$json$Json$Encode$string($.album)),
									_Utils_Tuple2(
									'artist',
									$elm$json$Json$Encode$string($.artist)),
									_Utils_Tuple2(
									'disc',
									$elm$json$Json$Encode$int($.disc)),
									_Utils_Tuple2(
									'genre',
									function ($) {
										return A3($elm$core$Maybe$destruct, $elm$json$Json$Encode$null, $elm$json$Json$Encode$string, $);
									}($.genre)),
									_Utils_Tuple2(
									'nr',
									$elm$json$Json$Encode$int($.nr)),
									_Utils_Tuple2(
									'picture',
									function ($) {
										return A3($elm$core$Maybe$destruct, $elm$json$Json$Encode$null, $elm$json$Json$Encode$string, $);
									}($.picture)),
									_Utils_Tuple2(
									'title',
									$elm$json$Json$Encode$string($.title)),
									_Utils_Tuple2(
									'year',
									function ($) {
										return A3($elm$core$Maybe$destruct, $elm$json$Json$Encode$null, $elm$json$Json$Encode$int, $);
									}($.year))
								]));
					}($.trackTags)),
					_Utils_Tuple2(
					'url',
					$elm$json$Json$Encode$string($.url))
				]));
	});
var $author$project$UI$Queue$State$preloadNext = function (model) {
	var _v0 = $elm$core$List$head(model.playingNext);
	if (_v0.$ === 'Just') {
		var item = _v0.a;
		return A2(
			$Fresheyeball$elm_return$Return$return,
			model,
			$author$project$UI$Ports$preloadAudio(
				A5(
					$author$project$Queue$makeEngineItem,
					model.currentTime,
					model.sources,
					model.cachedTracks,
					model.rememberProgress ? model.progress : $elm$core$Dict$empty,
					item.identifiedTrack.b)));
	} else {
		return $Fresheyeball$elm_return$Return$singleton(model);
	}
};
var $elm$random$Random$step = F2(
	function (_v0, seed) {
		var generator = _v0.a;
		return generator(seed);
	});
var $author$project$UI$Queue$Fill$generateIndexes = F4(
	function (generator, howMany, squirrel, seed) {
		generateIndexes:
		while (true) {
			var _v0 = A2($elm$random$Random$step, generator, seed);
			var index = _v0.a;
			var newSeed = _v0.b;
			if (A2($elm$core$List$member, index, squirrel)) {
				var $temp$generator = generator,
					$temp$howMany = howMany,
					$temp$squirrel = squirrel,
					$temp$seed = newSeed;
				generator = $temp$generator;
				howMany = $temp$howMany;
				squirrel = $temp$squirrel;
				seed = $temp$seed;
				continue generateIndexes;
			} else {
				if ((howMany - 1) > 0) {
					var $temp$generator = generator,
						$temp$howMany = howMany - 1,
						$temp$squirrel = A2($elm$core$List$cons, index, squirrel),
						$temp$seed = newSeed;
					generator = $temp$generator;
					howMany = $temp$howMany;
					squirrel = $temp$squirrel;
					seed = $temp$seed;
					continue generateIndexes;
				} else {
					return A2($elm$core$List$cons, index, squirrel);
				}
			}
		}
	});
var $elm$random$Random$Generator = function (a) {
	return {$: 'Generator', a: a};
};
var $elm$random$Random$peel = function (_v0) {
	var state = _v0.a;
	var word = (state ^ (state >>> ((state >>> 28) + 4))) * 277803737;
	return ((word >>> 22) ^ word) >>> 0;
};
var $elm$random$Random$int = F2(
	function (a, b) {
		return $elm$random$Random$Generator(
			function (seed0) {
				var _v0 = (_Utils_cmp(a, b) < 0) ? _Utils_Tuple2(a, b) : _Utils_Tuple2(b, a);
				var lo = _v0.a;
				var hi = _v0.b;
				var range = (hi - lo) + 1;
				if (!((range - 1) & range)) {
					return _Utils_Tuple2(
						(((range - 1) & $elm$random$Random$peel(seed0)) >>> 0) + lo,
						$elm$random$Random$next(seed0));
				} else {
					var threshhold = (((-range) >>> 0) % range) >>> 0;
					var accountForBias = function (seed) {
						accountForBias:
						while (true) {
							var x = $elm$random$Random$peel(seed);
							var seedN = $elm$random$Random$next(seed);
							if (_Utils_cmp(x, threshhold) < 0) {
								var $temp$seed = seedN;
								seed = $temp$seed;
								continue accountForBias;
							} else {
								return _Utils_Tuple2((x % range) + lo, seedN);
							}
						}
					};
					return accountForBias(seed0);
				}
			});
	});
var $elm$core$List$singleton = function (value) {
	return _List_fromArray(
		[value]);
};
var $elm_community$list_extra$List$Extra$uniqueHelp = F4(
	function (f, existing, remaining, accumulator) {
		uniqueHelp:
		while (true) {
			if (!remaining.b) {
				return $elm$core$List$reverse(accumulator);
			} else {
				var first = remaining.a;
				var rest = remaining.b;
				var computedFirst = f(first);
				if (A2($elm$core$List$member, computedFirst, existing)) {
					var $temp$f = f,
						$temp$existing = existing,
						$temp$remaining = rest,
						$temp$accumulator = accumulator;
					f = $temp$f;
					existing = $temp$existing;
					remaining = $temp$remaining;
					accumulator = $temp$accumulator;
					continue uniqueHelp;
				} else {
					var $temp$f = f,
						$temp$existing = A2($elm$core$List$cons, computedFirst, existing),
						$temp$remaining = rest,
						$temp$accumulator = A2($elm$core$List$cons, first, accumulator);
					f = $temp$f;
					existing = $temp$existing;
					remaining = $temp$remaining;
					accumulator = $temp$accumulator;
					continue uniqueHelp;
				}
			}
		}
	});
var $elm_community$list_extra$List$Extra$unique = function (list) {
	return A4($elm_community$list_extra$List$Extra$uniqueHelp, $elm$core$Basics$identity, _List_Nil, list, _List_Nil);
};
var $author$project$UI$Queue$Fill$shuffled = F3(
	function (timestamp, unfilteredTracks, s) {
		var state = ($elm$core$List$isEmpty(s.future) && (!$elm$core$List$isEmpty(s.past))) ? _Utils_update(
			s,
			{past: _List_Nil}) : s;
		var toAmount = A2(
			$elm$core$Basics$max,
			$author$project$UI$Queue$Fill$queueLength - $elm$core$List$length(state.future),
			0);
		var idsToIgnore = $elm_community$list_extra$List$Extra$unique(
			$elm$core$List$concat(
				A2(
					$elm$core$List$map,
					$elm$core$List$map($author$project$UI$Queue$Fill$itemTrackId),
					_List_fromArray(
						[
							state.ignored,
							state.past,
							state.future,
							A3($elm_community$maybe_extra$Maybe$Extra$unwrap, _List_Nil, $elm$core$List$singleton, state.activeItem)
						]))));
		var tracks = $elm$core$Array$fromList(
			A2(
				$author$project$UI$Queue$Fill$purifier,
				unfilteredTracks,
				_Utils_Tuple2(_List_Nil, idsToIgnore)).a);
		var amountOfTracks = $elm$core$Array$length(tracks);
		var generator = A2($elm$random$Random$int, 0, amountOfTracks - 1);
		var howMany = A2($elm$core$Basics$min, toAmount, amountOfTracks);
		return (howMany > 0) ? A2(
			$elm$core$List$append,
			state.future,
			A3(
				$elm$core$List$foldl,
				F2(
					function (idx, acc) {
						var _v0 = A2($elm$core$Array$get, idx, tracks);
						if (_v0.$ === 'Just') {
							var track = _v0.a;
							return A2(
								$elm$core$List$cons,
								A2($author$project$Queue$makeItem, false, track),
								acc);
						} else {
							return acc;
						}
					}),
				_List_Nil,
				A4(
					$author$project$UI$Queue$Fill$generateIndexes,
					generator,
					howMany,
					_List_Nil,
					$elm$random$Random$initialSeed(
						$elm$time$Time$posixToMillis(timestamp))))) : state.future;
	});
var $author$project$UI$Queue$State$fill = function (model) {
	var _v0 = _Utils_Tuple2(
		function () {
			var _v1 = _Utils_Tuple2(model.selectedCover, model.coverSelectionReducesPool);
			if ((_v1.a.$ === 'Just') && _v1.b) {
				var cover = _v1.a.a;
				return A3(
					$elm$core$List$foldl,
					$author$project$UI$Queue$State$coverTracksHarvester,
					_Utils_Tuple2(_List_Nil, cover.trackIds),
					model.tracks.harvested).a;
			} else {
				return model.tracks.harvested;
			}
		}(),
		model.currentTime);
	var availableTracks = _v0.a;
	var timestamp = _v0.b;
	var nonMissingTracks = A2(
		$elm$core$List$filter,
		A2(
			$elm$core$Basics$composeR,
			$elm$core$Tuple$second,
			A2(
				$elm$core$Basics$composeR,
				function ($) {
					return $.id;
				},
				$elm$core$Basics$neq($author$project$Tracks$missingId))),
		availableTracks);
	return $author$project$UI$Queue$State$preloadNext(
		function (m) {
			if (m.shuffle && (_Utils_cmp(
				$elm$core$List$length(model.playingNext),
				$author$project$UI$Queue$Fill$queueLength) > -1)) {
				return m;
			} else {
				var fillState = {activeItem: m.nowPlaying, future: m.playingNext, ignored: m.dontPlay, past: m.playedPreviously};
				return m.shuffle ? _Utils_update(
					m,
					{
						playingNext: A3($author$project$UI$Queue$Fill$shuffled, timestamp, nonMissingTracks, fillState)
					}) : _Utils_update(
					m,
					{
						playingNext: A3($author$project$UI$Queue$Fill$ordered, timestamp, nonMissingTracks, fillState)
					});
			}
		}(
			function (m) {
				return _Utils_eq(
					$elm$core$List$length(model.dontPlay),
					$elm$core$List$length(nonMissingTracks)) ? _Utils_update(
					m,
					{dontPlay: _List_Nil}) : m;
			}(model)));
};
var $author$project$UI$Queue$State$reset = function (model) {
	return $author$project$UI$Queue$State$fill(
		function (f) {
			return _Utils_update(
				model,
				{dontPlay: _List_Nil, playingNext: f});
		}(
			A2(
				$elm$core$List$filter,
				A2(
					$elm$core$Basics$composeR,
					function ($) {
						return $.manualEntry;
					},
					$elm$core$Basics$eq(true)),
				model.playingNext)));
};
var $author$project$UI$Tracks$State$whenHarvestChanges = A2(
	$elm$core$Basics$composeR,
	$Fresheyeball$elm_return$Return$andThen($author$project$UI$Tracks$State$harvestCovers),
	$Fresheyeball$elm_return$Return$andThen($author$project$UI$Queue$State$reset));
var $author$project$UI$Tracks$State$whenArrangementChanges = A2(
	$elm$core$Basics$composeR,
	$Fresheyeball$elm_return$Return$andThen($author$project$UI$Tracks$State$generateCovers),
	$author$project$UI$Tracks$State$whenHarvestChanges);
var $author$project$UI$Tracks$State$resolveParcel = F2(
	function (_v4, model) {
		var deps = _v4.a;
		var newCollection = _v4.b;
		var scrollObj = $elm$json$Json$Encode$object(
			_List_fromArray(
				[
					_Utils_Tuple2(
					'scrollTop',
					$elm$json$Json$Encode$int(0))
				]));
		var scrollEvent = $elm$json$Json$Encode$object(
			_List_fromArray(
				[
					_Utils_Tuple2('target', scrollObj)
				]));
		var newScrollContext = $author$project$UI$Tracks$State$scrollContext(model);
		var scrollContextChanged = !_Utils_eq(newScrollContext, model.tracks.scrollContext);
		var collectionChanged = A2($author$project$Tracks$Collection$tracksChanged, model.tracks.untouched, newCollection.untouched);
		var arrangementChanged = collectionChanged ? true : A2($author$project$Tracks$Collection$identifiedTracksChanged, model.tracks.arranged, newCollection.arranged);
		var harvestChanged = arrangementChanged ? true : A2($author$project$Tracks$Collection$identifiedTracksChanged, model.tracks.harvested, newCollection.harvested);
		var modelWithNewCollection = ((_Utils_eq(model.scene, $author$project$Tracks$List) && scrollContextChanged) ? function (m) {
			return _Utils_update(
				m,
				{
					infiniteList: A2($FabienHenon$elm_infinite_list_view$InfiniteList$updateScroll, scrollEvent, m.infiniteList)
				});
		} : $elm$core$Basics$identity)(
			_Utils_update(
				model,
				{
					selectedTrackIndexes: (collectionChanged || harvestChanged) ? _List_Nil : model.selectedTrackIndexes,
					tracks: _Utils_update(
						newCollection,
						{scrollContext: newScrollContext})
				}));
		return (collectionChanged ? $author$project$UI$Tracks$State$cyclic$whenCollectionChanges() : (arrangementChanged ? $author$project$UI$Tracks$State$whenArrangementChanges : (harvestChanged ? $author$project$UI$Tracks$State$whenHarvestChanges : $elm$core$Basics$identity)))(
			_Utils_Tuple2(
				modelWithNewCollection,
				function () {
					if (scrollContextChanged) {
						var _v5 = model.scene;
						if (_v5.$ === 'Covers') {
							return $author$project$UI$Tracks$Scene$Covers$scrollToTop;
						} else {
							return $author$project$UI$Tracks$Scene$List$scrollToTop;
						}
					} else {
						return $elm$core$Platform$Cmd$none;
					}
				}()));
	});
var $author$project$UI$Tracks$State$reviseCollection = F2(
	function (collector, model) {
		return A2(
			$author$project$UI$Tracks$State$resolveParcel,
			collector(
				$author$project$UI$Tracks$State$makeParcel(model)),
			model);
	});
var $author$project$UI$Tracks$State$search = function (model) {
	var _v0 = _Utils_Tuple2(model.searchTerm, model.searchResults);
	if (_v0.a.$ === 'Just') {
		var term = _v0.a.a;
		return A2(
			$Fresheyeball$elm_return$Return$return,
			model,
			A2(
				$author$project$UI$Ports$giveBrain,
				$author$project$Alien$SearchTracks,
				$elm$json$Json$Encode$string(
					$elm$core$String$trim(term))));
	} else {
		if (_v0.b.$ === 'Just') {
			var _v1 = _v0.a;
			return A2(
				$author$project$UI$Tracks$State$reviseCollection,
				$author$project$Tracks$Collection$harvest,
				_Utils_update(
					model,
					{searchResults: $elm$core$Maybe$Nothing}));
		} else {
			var _v2 = _v0.a;
			var _v3 = _v0.b;
			return $Fresheyeball$elm_return$Return$singleton(model);
		}
	}
};
function $author$project$UI$Tracks$State$cyclic$whenCollectionChanges() {
	return A2(
		$elm$core$Basics$composeR,
		$Fresheyeball$elm_return$Return$andThen($author$project$UI$Tracks$State$search),
		A2(
			$elm$core$Basics$composeR,
			$Fresheyeball$elm_return$Return$andThen($author$project$UI$Common$State$generateDirectoryPlaylists),
			$author$project$UI$Tracks$State$whenArrangementChanges));
}
try {
	var $author$project$UI$Tracks$State$whenCollectionChanges = $author$project$UI$Tracks$State$cyclic$whenCollectionChanges();
	$author$project$UI$Tracks$State$cyclic$whenCollectionChanges = function () {
		return $author$project$UI$Tracks$State$whenCollectionChanges;
	};
} catch ($) {
	throw 'Some top-level definitions from `UI.Tracks.State` are causing infinite recursion:\n\n  ┌─────┐\n  │    resolveParcel\n  │     ↓\n  │    reviseCollection\n  │     ↓\n  │    whenCollectionChanges\n  │     ↓\n  │    search\n  └─────┘\n\nThese errors are very tricky, so read https://elm-lang.org/0.19.1/bad-recursion to learn how to fix it!';}
var $author$project$Tracks$Encoding$encodeGrouping = function (v) {
	switch (v.$) {
		case 'AddedOn':
			return $elm$json$Json$Encode$string('ADDED_ON');
		case 'Directory':
			return $elm$json$Json$Encode$string('DIRECTORY');
		case 'FirstAlphaCharacter':
			return $elm$json$Json$Encode$string('FIRST_ALPHA_CHARACTER');
		default:
			return $elm$json$Json$Encode$string('TRACK_YEAR');
	}
};
var $author$project$Tracks$Encoding$encodeScene = function (scene) {
	if (scene.$ === 'Covers') {
		return $elm$json$Json$Encode$string('COVERS');
	} else {
		return $elm$json$Json$Encode$string('LIST');
	}
};
var $author$project$Equalizer$encodeSettings = function (settings) {
	return $elm$json$Json$Encode$object(
		_List_fromArray(
			[
				_Utils_Tuple2(
				'low',
				$elm$json$Json$Encode$float(settings.low)),
				_Utils_Tuple2(
				'mid',
				$elm$json$Json$Encode$float(settings.mid)),
				_Utils_Tuple2(
				'high',
				$elm$json$Json$Encode$float(settings.high)),
				_Utils_Tuple2(
				'volume',
				$elm$json$Json$Encode$float(settings.volume))
			]));
};
var $author$project$Tracks$Encoding$encodeSortBy = function (v) {
	switch (v.$) {
		case 'Artist':
			return $elm$json$Json$Encode$string('ARTIST');
		case 'Album':
			return $elm$json$Json$Encode$string('ALBUM');
		case 'PlaylistIndex':
			return $elm$json$Json$Encode$string('PLAYLIST_INDEX');
		default:
			return $elm$json$Json$Encode$string('TITLE');
	}
};
var $author$project$Tracks$Encoding$encodeSortDirection = function (v) {
	if (v.$ === 'Asc') {
		return $elm$json$Json$Encode$string('ASC');
	} else {
		return $elm$json$Json$Encode$string('DESC');
	}
};
var $elm$json$Json$Encode$list = F2(
	function (func, entries) {
		return _Json_wrap(
			A3(
				$elm$core$List$foldl,
				_Json_addEntry(func),
				_Json_emptyArray(_Utils_Tuple0),
				entries));
	});
var $author$project$User$Layer$encodeEnclosedData = function (_v0) {
	var cachedTracks = _v0.cachedTracks;
	var equalizerSettings = _v0.equalizerSettings;
	var grouping = _v0.grouping;
	var onlyShowCachedTracks = _v0.onlyShowCachedTracks;
	var onlyShowFavourites = _v0.onlyShowFavourites;
	var repeat = _v0.repeat;
	var scene = _v0.scene;
	var searchTerm = _v0.searchTerm;
	var selectedPlaylist = _v0.selectedPlaylist;
	var shuffle = _v0.shuffle;
	var sortBy = _v0.sortBy;
	var sortDirection = _v0.sortDirection;
	return $elm$json$Json$Encode$object(
		_List_fromArray(
			[
				_Utils_Tuple2(
				'cachedTracks',
				A2($elm$json$Json$Encode$list, $elm$json$Json$Encode$string, cachedTracks)),
				_Utils_Tuple2(
				'equalizerSettings',
				$author$project$Equalizer$encodeSettings(equalizerSettings)),
				_Utils_Tuple2(
				'grouping',
				A3($elm_community$maybe_extra$Maybe$Extra$unwrap, $elm$json$Json$Encode$null, $author$project$Tracks$Encoding$encodeGrouping, grouping)),
				_Utils_Tuple2(
				'onlyShowCachedTracks',
				$elm$json$Json$Encode$bool(onlyShowCachedTracks)),
				_Utils_Tuple2(
				'onlyShowFavourites',
				$elm$json$Json$Encode$bool(onlyShowFavourites)),
				_Utils_Tuple2(
				'repeat',
				$elm$json$Json$Encode$bool(repeat)),
				_Utils_Tuple2(
				'scene',
				$author$project$Tracks$Encoding$encodeScene(scene)),
				_Utils_Tuple2(
				'searchTerm',
				A3($elm_community$maybe_extra$Maybe$Extra$unwrap, $elm$json$Json$Encode$null, $elm$json$Json$Encode$string, searchTerm)),
				_Utils_Tuple2(
				'selectedPlaylist',
				A3($elm_community$maybe_extra$Maybe$Extra$unwrap, $elm$json$Json$Encode$null, $elm$json$Json$Encode$string, selectedPlaylist)),
				_Utils_Tuple2(
				'shuffle',
				$elm$json$Json$Encode$bool(shuffle)),
				_Utils_Tuple2(
				'sortBy',
				$author$project$Tracks$Encoding$encodeSortBy(sortBy)),
				_Utils_Tuple2(
				'sortDirection',
				$author$project$Tracks$Encoding$encodeSortDirection(sortDirection))
			]));
};
var $author$project$UI$User$State$Export$saveEnclosedUserData = function (model) {
	return A2(
		$Fresheyeball$elm_return$Return$return,
		model,
		$author$project$UI$Ports$toBrain(
			A2(
				$author$project$Alien$broadcast,
				$author$project$Alien$SaveEnclosedUserData,
				$author$project$User$Layer$encodeEnclosedData(
					{
						cachedTracks: model.cachedTracks,
						equalizerSettings: model.eqSettings,
						grouping: model.grouping,
						onlyShowCachedTracks: model.cachedTracksOnly,
						onlyShowFavourites: model.favouritesOnly,
						repeat: model.repeat,
						scene: model.scene,
						searchTerm: model.searchTerm,
						selectedPlaylist: A2(
							$elm$core$Maybe$map,
							function ($) {
								return $.name;
							},
							model.selectedPlaylist),
						shuffle: model.shuffle,
						sortBy: model.sortBy,
						sortDirection: model.sortDirection
					}))));
};
var $author$project$UI$Playlists$State$select = F2(
	function (playlist, model) {
		return A2(
			$Fresheyeball$elm_return$Return$andThen,
			$author$project$UI$User$State$Export$saveEnclosedUserData,
			A2(
				$author$project$UI$Tracks$State$reviseCollection,
				$author$project$Tracks$Collection$arrange,
				_Utils_update(
					model,
					{
						page: $author$project$UI$Page$Index,
						selectedPlaylist: $elm$core$Maybe$Just(playlist)
					})));
	});
var $author$project$UI$Playlists$State$activate = F2(
	function (playlist, model) {
		return A2(
			$Fresheyeball$elm_return$Return$andThen,
			$author$project$UI$Common$State$changeUrlUsingPage($author$project$UI$Page$Index),
			A2($author$project$UI$Playlists$State$select, playlist, model));
	});
var $author$project$Playlists$Encoding$encodePlaylistTrack = function (playlistTrack) {
	return $elm$json$Json$Encode$object(
		_List_fromArray(
			[
				_Utils_Tuple2(
				'album',
				$elm$json$Json$Encode$string(playlistTrack.album)),
				_Utils_Tuple2(
				'artist',
				$elm$json$Json$Encode$string(playlistTrack.artist)),
				_Utils_Tuple2(
				'title',
				$elm$json$Json$Encode$string(playlistTrack.title))
			]));
};
var $author$project$Playlists$Encoding$encode = function (playlist) {
	return $elm$json$Json$Encode$object(
		_List_fromArray(
			[
				_Utils_Tuple2(
				'autoGenerated',
				$elm$json$Json$Encode$bool(playlist.autoGenerated)),
				_Utils_Tuple2(
				'name',
				$elm$json$Json$Encode$string(playlist.name)),
				_Utils_Tuple2(
				'public',
				$elm$json$Json$Encode$bool(playlist._public)),
				_Utils_Tuple2(
				'tracks',
				A2($elm$json$Json$Encode$list, $author$project$Playlists$Encoding$encodePlaylistTrack, playlist.tracks))
			]));
};
var $author$project$UI$User$State$Export$savePlaylists = function (model) {
	return A2(
		$Fresheyeball$elm_return$Return$return,
		model,
		$author$project$UI$Ports$toBrain(
			A2(
				$author$project$Alien$broadcast,
				$author$project$Alien$SavePlaylists,
				A2(
					$elm$json$Json$Encode$list,
					$author$project$Playlists$Encoding$encode,
					A2(
						$elm_community$list_extra$List$Extra$filterNot,
						function ($) {
							return $.autoGenerated;
						},
						model.playlists)))));
};
var $Fresheyeball$elm_return$Return$map = F2(
	function (f, _v0) {
		var model = _v0.a;
		var cmd = _v0.b;
		return _Utils_Tuple2(
			f(model),
			cmd);
	});
var $author$project$UI$Types$DismissNotification = function (a) {
	return {$: 'DismissNotification', a: a};
};
var $author$project$Notifications$id = function (_v0) {
	var i = _v0.b;
	return i;
};
var $author$project$Notifications$options = function (_v0) {
	var o = _v0.c;
	return o;
};
var $elm$core$Process$sleep = _Process_sleep;
var $author$project$UI$Notifications$show = F2(
	function (notification, collection) {
		var existingNotificationIds = A2($elm$core$List$map, $author$project$Notifications$id, collection);
		return A2(
			$elm$core$List$member,
			$author$project$Notifications$id(notification),
			existingNotificationIds) ? _Utils_Tuple2(collection, $elm$core$Platform$Cmd$none) : _Utils_Tuple2(
			A2($elm$core$List$cons, notification, collection),
			$author$project$Notifications$options(notification).sticky ? $elm$core$Platform$Cmd$none : A2(
				$elm$core$Task$perform,
				function (_v0) {
					return $author$project$UI$Types$DismissNotification(
						{
							id: $author$project$Notifications$id(notification)
						});
				},
				$elm$core$Process$sleep(7500)));
	});
var $author$project$UI$Common$State$showNotification = F2(
	function (notification, model) {
		return A2(
			$Fresheyeball$elm_return$Return$map,
			function (n) {
				return _Utils_update(
					model,
					{notifications: n});
			},
			A2($author$project$UI$Notifications$show, notification, model.notifications));
	});
var $author$project$UI$Common$State$showNotificationWithModel = F2(
	function (model, notification) {
		return A2($author$project$UI$Common$State$showNotification, notification, model);
	});
var $author$project$Notifications$Success = {$: 'Success'};
var $author$project$Notifications$success = function (content) {
	return A4(
		$author$project$Notifications$Notification,
		$author$project$Notifications$Success,
		A2($robinheghan$murmur3$Murmur3$hashString, 0, content),
		{sticky: false, wasDismissed: false},
		$author$project$Notifications$render(content));
};
var $elm_community$list_extra$List$Extra$updateAt = F3(
	function (index, fn, list) {
		if (index < 0) {
			return list;
		} else {
			var tail = A2($elm$core$List$drop, index, list);
			if (tail.b) {
				var x = tail.a;
				var xs = tail.b;
				return _Utils_ap(
					A2($elm$core$List$take, index, list),
					A2(
						$elm$core$List$cons,
						fn(x),
						xs));
			} else {
				return list;
			}
		}
	});
var $author$project$UI$Playlists$State$addTracksToPlaylist = F2(
	function (_v0, model) {
		var playlistName = _v0.playlistName;
		var tracks = _v0.tracks;
		var properPlaylistName = $elm$core$String$trim(playlistName);
		var playlistIndex = A2(
			$elm_community$list_extra$List$Extra$findIndex,
			function (p) {
				return (!p.autoGenerated) && _Utils_eq(p.name, properPlaylistName);
			},
			model.playlists);
		var newCollection = function () {
			if (playlistIndex.$ === 'Just') {
				var idx = playlistIndex.a;
				return A3(
					$elm_community$list_extra$List$Extra$updateAt,
					idx,
					function (p) {
						return _Utils_update(
							p,
							{
								tracks: _Utils_ap(p.tracks, tracks)
							});
					},
					model.playlists);
			} else {
				return A2(
					$elm$core$List$cons,
					{autoGenerated: false, name: properPlaylistName, _public: false, tracks: tracks},
					model.playlists);
			}
		}();
		var newModel = _Utils_update(
			model,
			{
				lastModifiedPlaylist: $elm$core$Maybe$Just(properPlaylistName),
				playlists: newCollection
			});
		return A2(
			$Fresheyeball$elm_return$Return$andThen,
			$author$project$UI$User$State$Export$savePlaylists,
			A2(
				$author$project$UI$Common$State$showNotificationWithModel,
				newModel,
				$author$project$Notifications$success(
					function (s) {
						return s + (' to the __' + (properPlaylistName + '__ playlist'));
					}(
						function () {
							if (tracks.b && (!tracks.b.b)) {
								var t = tracks.a;
								return 'Added __' + (t.title + '__');
							} else {
								var l = tracks;
								return 'Added __' + ($elm$core$String$fromInt(
									$elm$core$List$length(l)) + ' tracks__');
							}
						}()))));
	});
var $author$project$Equalizer$Volume = {$: 'Volume'};
var $author$project$UI$Ports$adjustEqualizerSetting = _Platform_outgoingPort(
	'adjustEqualizerSetting',
	function ($) {
		return $elm$json$Json$Encode$object(
			_List_fromArray(
				[
					_Utils_Tuple2(
					'knob',
					$elm$json$Json$Encode$string($.knob)),
					_Utils_Tuple2(
					'value',
					$elm$json$Json$Encode$float($.value))
				]));
	});
var $author$project$UI$Equalizer$State$adjustKnobUsingPort = F2(
	function (knobType, value) {
		return $author$project$UI$Ports$adjustEqualizerSetting(
			{
				knob: function () {
					switch (knobType.$) {
						case 'Low':
							return 'LOW';
						case 'Mid':
							return 'MID';
						case 'High':
							return 'HIGH';
						default:
							return 'VOLUME';
					}
				}(),
				value: value
			});
	});
var $author$project$UI$Equalizer$State$adjustVolume = F2(
	function (volume, model) {
		var settings = model.eqSettings;
		return A2(
			$Fresheyeball$elm_return$Return$return,
			_Utils_update(
				model,
				{
					eqSettings: _Utils_update(
						settings,
						{volume: volume})
				}),
			A2($author$project$UI$Equalizer$State$adjustKnobUsingPort, $author$project$Equalizer$Volume, volume));
	});
var $elm$browser$Browser$Dom$focus = _Browser_call('focus');
var $author$project$UI$Alfred$State$assign = F2(
	function (instance, model) {
		return A2(
			$Fresheyeball$elm_return$Return$return,
			_Utils_update(
				model,
				{
					alfred: $elm$core$Maybe$Just(instance),
					pressedKeys: _List_Nil
				}),
			A2(
				$elm$core$Task$attempt,
				function (_v1) {
					return $author$project$UI$Types$Bypass;
				},
				A2(
					$elm$core$Task$andThen,
					function (_v0) {
						return $elm$browser$Browser$Dom$focus('diffuse__alfred');
					},
					$elm$core$Process$sleep(250))));
	});
var $author$project$Alfred$QueryOrMutation = {$: 'QueryOrMutation'};
var $author$project$Alfred$create = function (_v0) {
	var action = _v0.action;
	var index = _v0.index;
	var message = _v0.message;
	var operation = _v0.operation;
	return {
		action: action,
		focus: 0,
		index: index,
		indexFlattened: A2(
			$elm$core$List$concatMap,
			function ($) {
				return $.items;
			},
			index),
		message: message,
		operation: operation,
		results: index,
		searchTerm: $elm$core$Maybe$Nothing
	};
};
var $author$project$UI$Types$AddTracksToPlaylist = function (a) {
	return {$: 'AddTracksToPlaylist', a: a};
};
var $author$project$Alfred$stringValue = function (val) {
	if (val.$ === 'Command') {
		return $elm$core$Maybe$Nothing;
	} else {
		var string = val.a;
		return $elm$core$Maybe$Just(string);
	}
};
var $author$project$Tracks$playlistTrackFromTrack = function (track) {
	return {album: track.tags.album, artist: track.tags.artist, title: track.tags.title};
};
var $author$project$Tracks$toPlaylistTracks = $elm$core$List$map(
	A2($elm$core$Basics$composeR, $elm$core$Tuple$second, $author$project$Tracks$playlistTrackFromTrack));
var $author$project$UI$Playlists$Alfred$createAction = F2(
	function (tracks, ctx) {
		var playlistTracks = $author$project$Tracks$toPlaylistTracks(tracks);
		var _v0 = ctx.result;
		if (_v0.$ === 'Just') {
			var result = _v0.a;
			var _v1 = $author$project$Alfred$stringValue(result.value);
			if (_v1.$ === 'Just') {
				var playlistName = _v1.a;
				return _List_fromArray(
					[
						$author$project$UI$Types$AddTracksToPlaylist(
						{playlistName: playlistName, tracks: playlistTracks})
					]);
			} else {
				return _List_Nil;
			}
		} else {
			var _v2 = ctx.searchTerm;
			if (_v2.$ === 'Just') {
				var searchTerm = _v2.a;
				return _List_fromArray(
					[
						$author$project$UI$Types$AddTracksToPlaylist(
						{playlistName: searchTerm, tracks: playlistTracks})
					]);
			} else {
				return _List_Nil;
			}
		}
	});
var $author$project$Alfred$StringValue = function (a) {
	return {$: 'StringValue', a: a};
};
var $elm_community$dict_extra$Dict$Extra$groupBy = F2(
	function (keyfn, list) {
		return A3(
			$elm$core$List$foldr,
			F2(
				function (x, acc) {
					return A3(
						$elm$core$Dict$update,
						keyfn(x),
						A2(
							$elm$core$Basics$composeR,
							$elm$core$Maybe$map(
								$elm$core$List$cons(x)),
							A2(
								$elm$core$Basics$composeR,
								$elm$core$Maybe$withDefault(
									_List_fromArray(
										[x])),
								$elm$core$Maybe$Just)),
						acc);
				}),
			$elm$core$Dict$empty,
			list);
	});
var $elm$svg$Svg$Attributes$d = _VirtualDom_attribute('d');
var $elm$svg$Svg$Attributes$fill = _VirtualDom_attribute('fill');
var $elm$svg$Svg$trustedNode = _VirtualDom_nodeNS('http://www.w3.org/2000/svg');
var $elm$svg$Svg$g = $elm$svg$Svg$trustedNode('g');
var $elm$svg$Svg$Attributes$height = _VirtualDom_attribute('height');
var $elm$svg$Svg$svg = $elm$svg$Svg$trustedNode('svg');
var $elm$core$String$fromFloat = _String_fromNumber;
var $avh4$elm_color$Color$toCssString = function (_v0) {
	var r = _v0.a;
	var g = _v0.b;
	var b = _v0.c;
	var a = _v0.d;
	var roundTo = function (x) {
		return $elm$core$Basics$round(x * 1000) / 1000;
	};
	var pct = function (x) {
		return $elm$core$Basics$round(x * 10000) / 100;
	};
	return $elm$core$String$concat(
		_List_fromArray(
			[
				'rgba(',
				$elm$core$String$fromFloat(
				pct(r)),
				'%,',
				$elm$core$String$fromFloat(
				pct(g)),
				'%,',
				$elm$core$String$fromFloat(
				pct(b)),
				'%,',
				$elm$core$String$fromFloat(
				roundTo(a)),
				')'
			]));
};
var $elm$svg$Svg$Attributes$width = _VirtualDom_attribute('width');
var $icidasset$elm_material_icons$Material$Icons$Internal$icon = F4(
	function (attributes, nodes, size, coloring) {
		var sizeAsString = $elm$core$String$fromInt(size);
		return A2(
			$elm$svg$Svg$svg,
			_Utils_ap(
				attributes,
				_List_fromArray(
					[
						$elm$svg$Svg$Attributes$height(sizeAsString),
						$elm$svg$Svg$Attributes$width(sizeAsString)
					])),
			_List_fromArray(
				[
					A2(
					$elm$svg$Svg$g,
					_List_fromArray(
						[
							function () {
							if (coloring.$ === 'Color') {
								var color = coloring.a;
								return $elm$svg$Svg$Attributes$fill(
									$avh4$elm_color$Color$toCssString(color));
							} else {
								return $elm$svg$Svg$Attributes$fill('currentColor');
							}
						}()
						]),
					nodes)
				]));
	});
var $elm$svg$Svg$path = $elm$svg$Svg$trustedNode('path');
var $icidasset$elm_material_icons$Material$Icons$Internal$p = $elm$svg$Svg$path;
var $elm$svg$Svg$Attributes$viewBox = _VirtualDom_attribute('viewBox');
var $icidasset$elm_material_icons$Material$Icons$Internal$v = $elm$svg$Svg$Attributes$viewBox;
var $icidasset$elm_material_icons$Material$Icons$Round$queue_music = A2(
	$icidasset$elm_material_icons$Material$Icons$Internal$icon,
	_List_fromArray(
		[
			$icidasset$elm_material_icons$Material$Icons$Internal$v('0 0 24 24')
		]),
	_List_fromArray(
		[
			A2(
			$icidasset$elm_material_icons$Material$Icons$Internal$p,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$d('M14 6H4c-.55 0-1 .45-1 1s.45 1 1 1h10c.55 0 1-.45 1-1s-.45-1-1-1zm0 4H4c-.55 0-1 .45-1 1s.45 1 1 1h10c.55 0 1-.45 1-1s-.45-1-1-1zM4 16h6c.55 0 1-.45 1-1s-.45-1-1-1H4c-.55 0-1 .45-1 1s.45 1 1 1zM19 6c-1.1 0-2 .9-2 2v6.18c-.31-.11-.65-.18-1-.18-1.84 0-3.28 1.64-2.95 3.54.21 1.21 1.2 2.2 2.41 2.41 1.9.33 3.54-1.11 3.54-2.95V8h2c.55 0 1-.45 1-1s-.45-1-1-1h-2z')
				]),
			_List_Nil)
		]));
var $author$project$UI$Playlists$Alfred$makeIndex = function (playlists) {
	return A2(
		$elm$core$List$map,
		function (_v1) {
			var k = _v1.a;
			var v = _v1.b;
			return {
				items: v,
				name: $elm$core$Maybe$Just(k)
			};
		},
		A2(
			$elm$core$List$map,
			function (_v0) {
				var k = _v0.a;
				var v = _v0.b;
				return _Utils_Tuple2(
					k,
					A2(
						$elm$core$List$sortBy,
						A2(
							$elm$core$Basics$composeR,
							function ($) {
								return $.title;
							},
							$elm$core$String$toLower),
						A2(
							$elm$core$List$map,
							function (playlist) {
								return {
									icon: $elm$core$Maybe$Just(
										$icidasset$elm_material_icons$Material$Icons$Round$queue_music(16)),
									title: playlist.name,
									value: $author$project$Alfred$StringValue(playlist.name)
								};
							},
							v)));
			},
			$elm$core$List$reverse(
				$elm$core$Dict$toList(
					A2(
						$elm_community$dict_extra$Dict$Extra$groupBy,
						function (p) {
							return A3($author$project$Conditional$ifThenElse, p.autoGenerated, 'AutoGenerated Directory Playlists', 'Your Playlists');
						},
						playlists)))));
};
var $author$project$UI$Playlists$Alfred$create = F2(
	function (tracks, playlists) {
		var index = $author$project$UI$Playlists$Alfred$makeIndex(playlists);
		return $author$project$Alfred$create(
			{
				action: $author$project$UI$Playlists$Alfred$createAction(tracks),
				index: index,
				message: ($elm$core$List$length(tracks) === 1) ? 'Choose or create a playlist to add this track to.' : 'Choose or create a playlist to add these tracks to.',
				operation: $author$project$Alfred$QueryOrMutation
			});
	});
var $author$project$UI$Playlists$State$assistWithAddingTracksToPlaylist = F2(
	function (tracks, model) {
		return function (a) {
			return A2($author$project$UI$Alfred$State$assign, a, model);
		}(
			A2(
				$author$project$UI$Playlists$Alfred$create,
				tracks,
				A2(
					$elm_community$list_extra$List$Extra$filterNot,
					function ($) {
						return $.autoGenerated;
					},
					model.playlists)));
	});
var $author$project$Alfred$Query = {$: 'Query'};
var $author$project$UI$Types$SelectPlaylist = function (a) {
	return {$: 'SelectPlaylist', a: a};
};
var $author$project$UI$Playlists$Alfred$selectAction = F2(
	function (playlists, _v0) {
		var result = _v0.result;
		var _v1 = A2(
			$elm$core$Maybe$andThen,
			function (r) {
				return A2(
					$elm_community$list_extra$List$Extra$find,
					A2(
						$elm$core$Basics$composeR,
						function ($) {
							return $.name;
						},
						A2(
							$elm$core$Basics$composeR,
							$elm$core$Maybe$Just,
							$elm$core$Basics$eq(
								$author$project$Alfred$stringValue(r.value)))),
					playlists);
			},
			result);
		if (_v1.$ === 'Just') {
			var playlist = _v1.a;
			return _List_fromArray(
				[
					$author$project$UI$Types$SelectPlaylist(playlist)
				]);
		} else {
			return _List_Nil;
		}
	});
var $author$project$UI$Playlists$Alfred$select = function (playlists) {
	var index = $author$project$UI$Playlists$Alfred$makeIndex(playlists);
	return $author$project$Alfred$create(
		{
			action: $author$project$UI$Playlists$Alfred$selectAction(playlists),
			index: index,
			message: 'Select a playlist to play tracks from.',
			operation: $author$project$Alfred$Query
		});
};
var $author$project$UI$Playlists$State$assistWithSelectingPlaylist = function (model) {
	return function (a) {
		return A2($author$project$UI$Alfred$State$assign, a, model);
	}(
		$author$project$UI$Playlists$Alfred$select(model.playlists));
};
var $author$project$UI$Interface$State$blur = function (model) {
	return $Fresheyeball$elm_return$Return$singleton(
		_Utils_update(
			model,
			{focusedOnInput: false, pressedKeys: _List_Nil}));
};
var $author$project$Settings$encode = function (settings) {
	return $elm$json$Json$Encode$object(
		_List_fromArray(
			[
				_Utils_Tuple2(
				'backgroundImage',
				A3($elm_community$maybe_extra$Maybe$Extra$unwrap, $elm$json$Json$Encode$null, $elm$json$Json$Encode$string, settings.backgroundImage)),
				_Utils_Tuple2(
				'coverSelectionReducesPool',
				$elm$json$Json$Encode$bool(settings.coverSelectionReducesPool)),
				_Utils_Tuple2(
				'hideDuplicates',
				$elm$json$Json$Encode$bool(settings.hideDuplicates)),
				_Utils_Tuple2(
				'lastFm',
				A3($elm_community$maybe_extra$Maybe$Extra$unwrap, $elm$json$Json$Encode$null, $elm$json$Json$Encode$string, settings.lastFm)),
				_Utils_Tuple2(
				'processAutomatically',
				$elm$json$Json$Encode$bool(settings.processAutomatically)),
				_Utils_Tuple2(
				'rememberProgress',
				$elm$json$Json$Encode$bool(settings.rememberProgress))
			]));
};
var $author$project$UI$User$State$Export$gatherSettings = function (_v0) {
	var chosenBackdrop = _v0.chosenBackdrop;
	var coverSelectionReducesPool = _v0.coverSelectionReducesPool;
	var hideDuplicates = _v0.hideDuplicates;
	var lastFm = _v0.lastFm;
	var processAutomatically = _v0.processAutomatically;
	var rememberProgress = _v0.rememberProgress;
	return {backgroundImage: chosenBackdrop, coverSelectionReducesPool: coverSelectionReducesPool, hideDuplicates: hideDuplicates, lastFm: lastFm.sessionKey, processAutomatically: processAutomatically, rememberProgress: rememberProgress};
};
var $author$project$UI$User$State$Export$saveSettings = function (model) {
	return A2(
		$Fresheyeball$elm_return$Return$return,
		model,
		$author$project$UI$Ports$toBrain(
			A2(
				$author$project$Alien$broadcast,
				$author$project$Alien$SaveSettings,
				$author$project$Settings$encode(
					$author$project$UI$User$State$Export$gatherSettings(model)))));
};
var $author$project$UI$Backdrop$chooseBackdrop = F2(
	function (backdrop, model) {
		return $author$project$UI$User$State$Export$saveSettings(
			_Utils_update(
				model,
				{
					chosenBackdrop: $elm$core$Maybe$Just(backdrop)
				}));
	});
var $author$project$String$Ext$addSuffix = F2(
	function (a, b) {
		return A2($elm$core$String$append, b, a);
	});
var $author$project$LastFm$apiKey = '4f0fe85b67baef8bb7d008a8754a95e5';
var $elm$browser$Browser$Navigation$load = _Browser_load;
var $author$project$UI$Services$State$connectLastFm = function (model) {
	return A2(
		$Fresheyeball$elm_return$Return$return,
		model,
		$elm$browser$Browser$Navigation$load(
			A2(
				$elm$core$String$append,
				A2($elm$core$String$append, 'http://www.last.fm/api/auth/?api_key=', $author$project$LastFm$apiKey),
				A2(
					$elm$core$String$append,
					'&cb=',
					$elm$url$Url$percentEncode(
						A2(
							$author$project$String$Ext$addSuffix,
							'?action=authenticate/lastfm',
							$author$project$Common$urlOrigin(model.url)))))));
};
var $author$project$Return$Ext$task = function (msg) {
	return A2(
		$elm$core$Task$perform,
		$elm$core$Basics$identity,
		$elm$core$Task$succeed(msg));
};
var $author$project$UI$Interface$State$contextMenuConfirmation = F3(
	function (conf, msg, model) {
		return A2(
			$Fresheyeball$elm_return$Return$return,
			_Utils_update(
				model,
				{
					confirmation: $elm$core$Maybe$Just(conf)
				}),
			$author$project$Return$Ext$task(msg));
	});
var $author$project$UI$Ports$copyToClipboard = _Platform_outgoingPort('copyToClipboard', $elm$json$Json$Encode$string);
var $author$project$UI$Interface$State$copyToClipboard = function (string) {
	return $author$project$Return$Ext$communicate(
		$author$project$UI$Ports$copyToClipboard(string));
};
var $author$project$UI$Playlists$State$redirectToPlaylistIndexPage = $author$project$UI$Common$State$changeUrlUsingPage(
	$author$project$UI$Page$Playlists($author$project$UI$Playlists$Page$Index));
var $author$project$UI$Playlists$State$create = function (model) {
	var _v0 = model.newPlaylistContext;
	if (_v0.$ === 'Just') {
		var playlistName = _v0.a;
		var playlist = {autoGenerated: false, name: playlistName, _public: false, tracks: _List_Nil};
		var alreadyExists = A2(
			$elm$core$List$any,
			A2(
				$elm$core$Basics$composeR,
				function ($) {
					return $.name;
				},
				$elm$core$Basics$eq(playlistName)),
			A2(
				$elm_community$list_extra$List$Extra$filterNot,
				function ($) {
					return $.autoGenerated;
				},
				model.playlists));
		return alreadyExists ? A2(
			$author$project$UI$Common$State$showNotificationWithModel,
			model,
			$author$project$Notifications$error('There\'s already a playlist with this name')) : A2(
			$Fresheyeball$elm_return$Return$andThen,
			$author$project$UI$Playlists$State$redirectToPlaylistIndexPage,
			$author$project$UI$User$State$Export$savePlaylists(
				_Utils_update(
					model,
					{
						lastModifiedPlaylist: $elm$core$Maybe$Just(playlist.name),
						newPlaylistContext: $elm$core$Maybe$Nothing,
						playlists: A2($elm$core$List$cons, playlist, model.playlists)
					})));
	} else {
		return $Fresheyeball$elm_return$Return$singleton(model);
	}
};
var $author$project$UI$Playlists$State$deselect = function (model) {
	return A2(
		$Fresheyeball$elm_return$Return$andThen,
		$author$project$UI$User$State$Export$saveEnclosedUserData,
		A2(
			$author$project$UI$Tracks$State$reviseCollection,
			$author$project$Tracks$Collection$arrange,
			_Utils_update(
				model,
				{selectedPlaylist: $elm$core$Maybe$Nothing})));
};
var $author$project$UI$Playlists$State$deactivate = $author$project$UI$Playlists$State$deselect;
var $author$project$UI$Playlists$State$delete = F2(
	function (_v0, model) {
		var playlistName = _v0.playlistName;
		var selectedPlaylist = A2(
			$elm$core$Maybe$map,
			function (p) {
				return _Utils_Tuple2(p.autoGenerated, p.name);
			},
			model.selectedPlaylist);
		var _v1 = _Utils_eq(
			selectedPlaylist,
			$elm$core$Maybe$Just(
				_Utils_Tuple2(false, playlistName))) ? _Utils_Tuple2(true, $elm$core$Maybe$Nothing) : _Utils_Tuple2(false, model.selectedPlaylist);
		var selectedPlaylistChanged = _v1.a;
		var newSelectedPlaylist = _v1.b;
		return A2(
			$Fresheyeball$elm_return$Return$andThen,
			$author$project$UI$User$State$Export$savePlaylists,
			(selectedPlaylistChanged ? $author$project$UI$Tracks$State$reviseCollection($author$project$Tracks$Collection$arrange) : $Fresheyeball$elm_return$Return$singleton)(
				function (col) {
					return _Utils_update(
						model,
						{playlists: col, selectedPlaylist: newSelectedPlaylist});
				}(
					A2(
						$elm$core$List$filter,
						function (p) {
							return p.autoGenerated ? true : (!_Utils_eq(p.name, playlistName));
						},
						model.playlists))));
	});
var $author$project$LastFm$disconnect = function (model) {
	return _Utils_update(
		model,
		{sessionKey: $elm$core$Maybe$Nothing});
};
var $author$project$UI$Services$State$disconnectLastFm = function (model) {
	return $author$project$UI$User$State$Export$saveSettings(
		_Utils_update(
			model,
			{
				lastFm: $author$project$LastFm$disconnect(model.lastFm)
			}));
};
var $author$project$UI$Types$RemoveNotification = function (a) {
	return {$: 'RemoveNotification', a: a};
};
var $author$project$Notifications$dismiss = function (_v0) {
	var k = _v0.a;
	var i = _v0.b;
	var o = _v0.c;
	var c = _v0.d;
	return A4(
		$author$project$Notifications$Notification,
		k,
		i,
		_Utils_update(
			o,
			{wasDismissed: true}),
		c);
};
var $author$project$UI$Notifications$dismiss = F2(
	function (collection, _v0) {
		var id = _v0.id;
		return _Utils_Tuple2(
			A2(
				$elm$core$List$map,
				function (notification) {
					return _Utils_eq(
						$author$project$Notifications$id(notification),
						id) ? $author$project$Notifications$dismiss(notification) : notification;
				},
				collection),
			A2(
				$elm$core$Task$perform,
				function (_v1) {
					return $author$project$UI$Types$RemoveNotification(
						{id: id});
				},
				$elm$core$Process$sleep(500)));
	});
var $author$project$UI$Common$State$dismissNotification = F2(
	function (options, model) {
		return A2(
			$Fresheyeball$elm_return$Return$map,
			function (n) {
				return _Utils_update(
					model,
					{notifications: n});
			},
			A2($author$project$UI$Notifications$dismiss, model.notifications, options));
	});
var $author$project$Notifications$Casual = {$: 'Casual'};
var $author$project$Notifications$casual = function (content) {
	return A4(
		$author$project$Notifications$Notification,
		$author$project$Notifications$Casual,
		A2($robinheghan$murmur3$Murmur3$hashString, 0, content),
		{sticky: false, wasDismissed: false},
		$author$project$Notifications$render(content));
};
var $author$project$UI$DnD$hasDropped = function (model) {
	if (model.$ === 'Dropped') {
		return true;
	} else {
		return false;
	}
};
var $author$project$UI$DnD$modelSubject = function (model) {
	switch (model.$) {
		case 'NotDragging':
			return $elm$core$Maybe$Nothing;
		case 'Dragging':
			var subject = model.a.subject;
			return $elm$core$Maybe$Just(subject);
		case 'DraggingOver':
			var subject = model.a.subject;
			return $elm$core$Maybe$Just(subject);
		default:
			var subject = model.a.subject;
			return $elm$core$Maybe$Just(subject);
	}
};
var $author$project$UI$DnD$modelTarget = function (model) {
	switch (model.$) {
		case 'NotDragging':
			return $elm$core$Maybe$Nothing;
		case 'Dragging':
			return $elm$core$Maybe$Nothing;
		case 'DraggingOver':
			var target = model.a.target;
			return $elm$core$Maybe$Just(target);
		default:
			var target = model.a.target;
			return $elm$core$Maybe$Just(target);
	}
};
var $elm_community$list_extra$List$Extra$getAt = F2(
	function (idx, xs) {
		return (idx < 0) ? $elm$core$Maybe$Nothing : $elm$core$List$head(
			A2($elm$core$List$drop, idx, xs));
	});
var $author$project$UI$Queue$State$moveItem = F2(
	function (_v0, collection) {
		var from = _v0.from;
		var to = _v0.to;
		var shuffle = _v0.shuffle;
		var subjectItem = A2(
			$elm$core$Maybe$map,
			function (s) {
				return _Utils_update(
					s,
					{manualEntry: true});
			},
			A2($elm_community$list_extra$List$Extra$getAt, from, collection));
		var fixedTarget = (_Utils_cmp(to, from) > 0) ? (to - 1) : to;
		return (shuffle ? $elm$core$Basics$identity : $elm$core$List$filter(
			A2(
				$elm$core$Basics$composeR,
				function ($) {
					return $.manualEntry;
				},
				$elm$core$Basics$eq(true))))(
			A3(
				$elm_community$list_extra$List$Extra$indexedFoldr,
				F3(
					function (idx, existingItem, acc) {
						if (_Utils_eq(idx, fixedTarget)) {
							if (subjectItem.$ === 'Just') {
								var itemToInsert = subjectItem.a;
								return A2(
									$elm$core$List$append,
									_List_fromArray(
										[itemToInsert, existingItem]),
									acc);
							} else {
								return A2($elm$core$List$cons, existingItem, acc);
							}
						} else {
							if (_Utils_cmp(idx, fixedTarget) < 0) {
								return A2(
									$elm$core$List$cons,
									_Utils_update(
										existingItem,
										{manualEntry: true}),
									acc);
							} else {
								return A2($elm$core$List$cons, existingItem, acc);
							}
						}
					}),
				_List_Nil,
				A2($elm_community$list_extra$List$Extra$removeAt, from, collection)));
	});
var $author$project$List$Ext$move = F2(
	function (_v0, list) {
		var from = _v0.from;
		var to = _v0.to;
		var amount = _v0.amount;
		return _Utils_ap(
			_List_Nil,
			_Utils_ap(
				A2(
					$elm$core$List$take,
					A2($elm$core$Basics$min, from, to),
					list),
				_Utils_ap(
					A2(
						$elm$core$List$drop,
						from + amount,
						A2($elm$core$List$take, to, list)),
					_Utils_ap(
						A2(
							$elm$core$List$take,
							amount,
							A2($elm$core$List$drop, from, list)),
						_Utils_ap(
							A2(
								$elm$core$List$drop,
								to,
								A2($elm$core$List$take, from, list)),
							A2(
								$elm$core$List$drop,
								A2($elm$core$Basics$max, from + amount, to),
								list))))));
	});
var $author$project$UI$Playlists$State$moveTrackInSelected = F2(
	function (_v0, model) {
		var to = _v0.to;
		var _v1 = model.selectedPlaylist;
		if (_v1.$ === 'Just') {
			var playlist = _v1.a;
			var moveParams = {
				amount: $elm$core$List$length(model.selectedTrackIndexes),
				from: A2(
					$elm$core$Maybe$withDefault,
					0,
					$elm$core$List$head(model.selectedTrackIndexes)),
				to: to
			};
			var updatedPlaylist = _Utils_update(
				playlist,
				{
					tracks: A2($author$project$List$Ext$move, moveParams, playlist.tracks)
				});
			var updatedPlaylistCollection = A2(
				$elm$core$List$map,
				function (p) {
					return A3(
						$author$project$Conditional$ifThenElse,
						(!p.autoGenerated) && _Utils_eq(p.name, updatedPlaylist.name),
						updatedPlaylist,
						p);
				},
				model.playlists);
			return A2(
				$Fresheyeball$elm_return$Return$andThen,
				$author$project$UI$User$State$Export$savePlaylists,
				A2(
					$author$project$UI$Tracks$State$reviseCollection,
					$author$project$Tracks$Collection$arrange,
					_Utils_update(
						model,
						{
							playlists: updatedPlaylistCollection,
							selectedPlaylist: $elm$core$Maybe$Just(updatedPlaylist)
						})));
		} else {
			return $Fresheyeball$elm_return$Return$singleton(model);
		}
	});
var $author$project$UI$DnD$Dragging = function (a) {
	return {$: 'Dragging', a: a};
};
var $author$project$UI$DnD$DraggingOver = function (a) {
	return {$: 'DraggingOver', a: a};
};
var $author$project$UI$DnD$Dropped = function (a) {
	return {$: 'Dropped', a: a};
};
var $author$project$UI$DnD$update = F2(
	function (msg, model) {
		return _Utils_Tuple2(
			function () {
				switch (msg.$) {
					case 'Start':
						var context = msg.a;
						return $author$project$UI$DnD$Dragging(
							{subject: context});
					case 'Enter':
						var context = msg.a;
						switch (model.$) {
							case 'NotDragging':
								return $author$project$UI$DnD$NotDragging;
							case 'Dragging':
								var subject = model.a.subject;
								return $author$project$UI$DnD$DraggingOver(
									{subject: subject, target: context});
							case 'DraggingOver':
								var subject = model.a.subject;
								return $author$project$UI$DnD$DraggingOver(
									{subject: subject, target: context});
							default:
								return $author$project$UI$DnD$NotDragging;
						}
					case 'Leave':
						var context = msg.a;
						switch (model.$) {
							case 'NotDragging':
								return $author$project$UI$DnD$NotDragging;
							case 'Dragging':
								var env = model.a;
								return $author$project$UI$DnD$Dragging(env);
							case 'DraggingOver':
								var subject = model.a.subject;
								var target = model.a.target;
								return _Utils_eq(context, target) ? $author$project$UI$DnD$Dragging(
									{subject: subject}) : model;
							default:
								return $author$project$UI$DnD$NotDragging;
						}
					default:
						if (model.$ === 'DraggingOver') {
							var subject = model.a.subject;
							var target = model.a.target;
							return (!_Utils_eq(subject, target)) ? $author$project$UI$DnD$Dropped(
								{subject: subject, target: target}) : $author$project$UI$DnD$NotDragging;
						} else {
							return $author$project$UI$DnD$NotDragging;
						}
				}
			}(),
			function () {
				if (msg.$ === 'Start') {
					return {initiated: true};
				} else {
					return {initiated: false};
				}
			}());
	});
var $author$project$UI$Interface$State$dnd = F2(
	function (dragMsg, model) {
		var _v0 = A2($author$project$UI$DnD$update, dragMsg, model.dnd);
		var d = _v0.a;
		var initiated = _v0.b.initiated;
		var m = initiated ? _Utils_update(
			model,
			{dnd: d, isDragging: true}) : _Utils_update(
			model,
			{dnd: d});
		if ($author$project$UI$DnD$hasDropped(d)) {
			var _v1 = m.page;
			switch (_v1.$) {
				case 'Queue':
					var _v2 = _Utils_Tuple2(
						A2(
							$elm$core$Maybe$withDefault,
							0,
							$author$project$UI$DnD$modelSubject(d)),
						A2(
							$elm$core$Maybe$withDefault,
							0,
							$author$project$UI$DnD$modelTarget(d)));
					var from = _v2.a;
					var to = _v2.b;
					var newFuture = A2(
						$author$project$UI$Queue$State$moveItem,
						{from: from, shuffle: m.shuffle, to: to},
						m.playingNext);
					return $author$project$UI$Queue$State$fill(
						_Utils_update(
							m,
							{playingNext: newFuture}));
				case 'Index':
					var trackCanBeMoved = (!m.favouritesOnly) && $elm_community$maybe_extra$Maybe$Extra$isNothing(m.searchTerm);
					var _v3 = m.scene;
					if (_v3.$ === 'Covers') {
						return $Fresheyeball$elm_return$Return$singleton(m);
					} else {
						return trackCanBeMoved ? A2(
							$author$project$UI$Playlists$State$moveTrackInSelected,
							{
								to: A2(
									$elm$core$Maybe$withDefault,
									0,
									$author$project$UI$DnD$modelTarget(d))
							},
							m) : A2(
							$author$project$UI$Common$State$showNotificationWithModel,
							m,
							$author$project$Notifications$casual('Can\'t move tracks in a playlist whilst using favourites-only mode, or while searching.'));
					}
				default:
					return $Fresheyeball$elm_return$Return$singleton(m);
			}
		} else {
			return $Fresheyeball$elm_return$Return$singleton(m);
		}
	});
var $author$project$User$Layer$Favourites = {$: 'Favourites'};
var $author$project$User$Layer$Playlists = {$: 'Playlists'};
var $author$project$User$Layer$Progress = {$: 'Progress'};
var $author$project$User$Layer$Settings = {$: 'Settings'};
var $author$project$User$Layer$Sources = {$: 'Sources'};
var $author$project$User$Layer$Tracks = {$: 'Tracks'};
var $author$project$User$Layer$allHypaethralBits = _List_fromArray(
	[$author$project$User$Layer$Favourites, $author$project$User$Layer$Playlists, $author$project$User$Layer$Progress, $author$project$User$Layer$Settings, $author$project$User$Layer$Sources, $author$project$User$Layer$Tracks]);
var $elm$json$Json$Encode$dict = F3(
	function (toKey, toValue, dictionary) {
		return _Json_wrap(
			A3(
				$elm$core$Dict$foldl,
				F3(
					function (key, value, obj) {
						return A3(
							_Json_addField,
							toKey(key),
							toValue(value),
							obj);
					}),
				_Json_emptyObject(_Utils_Tuple0),
				dictionary));
	});
var $author$project$Sources$Encoding$encodeData = function (data) {
	return $elm$json$Json$Encode$object(
		A2(
			$elm$core$List$map,
			$elm$core$Tuple$mapSecond($elm$json$Json$Encode$string),
			$elm$core$Dict$toList(data)));
};
var $author$project$Sources$Services$typeToKey = function (service) {
	switch (service.$) {
		case 'AmazonS3':
			return 'AmazonS3';
		case 'AzureBlob':
			return 'AzureBlob';
		case 'AzureFile':
			return 'AzureFile';
		case 'Btfs':
			return 'Btfs';
		case 'Dropbox':
			return 'Dropbox';
		case 'Google':
			return 'Google';
		case 'Ipfs':
			return 'Ipfs';
		default:
			return 'WebDav';
	}
};
var $author$project$Sources$Encoding$encode = function (source) {
	return $elm$json$Json$Encode$object(
		_List_fromArray(
			[
				_Utils_Tuple2(
				'id',
				$elm$json$Json$Encode$string(source.id)),
				_Utils_Tuple2(
				'data',
				$author$project$Sources$Encoding$encodeData(source.data)),
				_Utils_Tuple2(
				'directoryPlaylists',
				$elm$json$Json$Encode$bool(source.directoryPlaylists)),
				_Utils_Tuple2(
				'enabled',
				$elm$json$Json$Encode$bool(source.enabled)),
				_Utils_Tuple2(
				'service',
				$elm$json$Json$Encode$string(
					$author$project$Sources$Services$typeToKey(source.service)))
			]));
};
var $author$project$Time$Ext$encode = function (time) {
	return $elm$json$Json$Encode$int(
		$elm$time$Time$posixToMillis(time));
};
var $author$project$Tracks$Encoding$encodeFavourite = function (fav) {
	return $elm$json$Json$Encode$object(
		_List_fromArray(
			[
				_Utils_Tuple2(
				'artist',
				$elm$json$Json$Encode$string(fav.artist)),
				_Utils_Tuple2(
				'title',
				$elm$json$Json$Encode$string(fav.title))
			]));
};
var $author$project$Tracks$Encoding$encodeMaybe = F2(
	function (maybe, encoder) {
		return A2(
			$elm$core$Maybe$withDefault,
			$elm$json$Json$Encode$null,
			A2($elm$core$Maybe$map, encoder, maybe));
	});
var $author$project$Tracks$Encoding$encodeTags = function (tags) {
	return $elm$json$Json$Encode$object(
		_List_fromArray(
			[
				_Utils_Tuple2(
				'disc',
				$elm$json$Json$Encode$int(tags.disc)),
				_Utils_Tuple2(
				'nr',
				$elm$json$Json$Encode$int(tags.nr)),
				_Utils_Tuple2(
				'album',
				$elm$json$Json$Encode$string(tags.album)),
				_Utils_Tuple2(
				'artist',
				$elm$json$Json$Encode$string(tags.artist)),
				_Utils_Tuple2(
				'title',
				$elm$json$Json$Encode$string(tags.title)),
				_Utils_Tuple2(
				'genre',
				A2($author$project$Tracks$Encoding$encodeMaybe, tags.genre, $elm$json$Json$Encode$string)),
				_Utils_Tuple2(
				'picture',
				A2($author$project$Tracks$Encoding$encodeMaybe, tags.picture, $elm$json$Json$Encode$string)),
				_Utils_Tuple2(
				'year',
				A2($author$project$Tracks$Encoding$encodeMaybe, tags.year, $elm$json$Json$Encode$int))
			]));
};
var $author$project$Tracks$Encoding$encodeTrack = function (track) {
	return $elm$json$Json$Encode$object(
		_List_fromArray(
			[
				_Utils_Tuple2(
				'id',
				$elm$json$Json$Encode$string(track.id)),
				_Utils_Tuple2(
				'insertedAt',
				$author$project$Time$Ext$encode(track.insertedAt)),
				_Utils_Tuple2(
				'path',
				$elm$json$Json$Encode$string(track.path)),
				_Utils_Tuple2(
				'sourceId',
				$elm$json$Json$Encode$string(track.sourceId)),
				_Utils_Tuple2(
				'tags',
				$author$project$Tracks$Encoding$encodeTags(track.tags))
			]));
};
var $author$project$User$Layer$encodeHypaethralBit = F2(
	function (bit, _v0) {
		var favourites = _v0.favourites;
		var playlists = _v0.playlists;
		var progress = _v0.progress;
		var settings = _v0.settings;
		var sources = _v0.sources;
		var tracks = _v0.tracks;
		var modifiedAt = _v0.modifiedAt;
		if (bit.$ === 'ModifiedAt') {
			return A3($elm_community$maybe_extra$Maybe$Extra$unwrap, $elm$json$Json$Encode$null, $author$project$Time$Ext$encode, modifiedAt);
		} else {
			return $elm$json$Json$Encode$object(
				_List_fromArray(
					[
						_Utils_Tuple2(
						'data',
						function () {
							switch (bit.$) {
								case 'Favourites':
									return A2($elm$json$Json$Encode$list, $author$project$Tracks$Encoding$encodeFavourite, favourites);
								case 'ModifiedAt':
									return A3($elm_community$maybe_extra$Maybe$Extra$unwrap, $elm$json$Json$Encode$null, $author$project$Time$Ext$encode, modifiedAt);
								case 'Playlists':
									return A2($elm$json$Json$Encode$list, $author$project$Playlists$Encoding$encode, playlists);
								case 'Progress':
									return A3($elm$json$Json$Encode$dict, $elm$core$Basics$identity, $elm$json$Json$Encode$float, progress);
								case 'Settings':
									return A3($elm_community$maybe_extra$Maybe$Extra$unwrap, $elm$json$Json$Encode$null, $author$project$Settings$encode, settings);
								case 'Sources':
									return A2($elm$json$Json$Encode$list, $author$project$Sources$Encoding$encode, sources);
								default:
									return A2($elm$json$Json$Encode$list, $author$project$Tracks$Encoding$encodeTrack, tracks);
							}
						}()),
						_Utils_Tuple2(
						'modifiedAt',
						A3($elm_community$maybe_extra$Maybe$Extra$unwrap, $elm$json$Json$Encode$null, $author$project$Time$Ext$encode, modifiedAt))
					]));
		}
	});
var $author$project$User$Layer$encodedHypaethralDataList = function (data) {
	return A2(
		$elm$core$List$map,
		function (bit) {
			return _Utils_Tuple2(
				bit,
				A2($author$project$User$Layer$encodeHypaethralBit, bit, data));
		},
		$author$project$User$Layer$allHypaethralBits);
};
var $author$project$User$Layer$hypaethralBitKey = function (bit) {
	switch (bit.$) {
		case 'Favourites':
			return 'favourites';
		case 'ModifiedAt':
			return 'modified';
		case 'Playlists':
			return 'playlists';
		case 'Progress':
			return 'progress';
		case 'Settings':
			return 'settings';
		case 'Sources':
			return 'sources';
		default:
			return 'tracks';
	}
};
var $author$project$User$Layer$encodeHypaethralData = function (data) {
	return $elm$json$Json$Encode$object(
		A2(
			$elm$core$List$map,
			$elm$core$Tuple$mapFirst($author$project$User$Layer$hypaethralBitKey),
			$author$project$User$Layer$encodedHypaethralDataList(data)));
};
var $elm$file$File$Download$string = F3(
	function (name, mime, content) {
		return A2(
			$elm$core$Task$perform,
			$elm$core$Basics$never,
			A3(_File_download, name, mime, content));
	});
var $author$project$UI$User$State$Export$export = function (model) {
	return A2(
		$Fresheyeball$elm_return$Return$return,
		model,
		A3(
			$elm$file$File$Download$string,
			'diffuse.json',
			'application/json',
			A2(
				$elm$json$Json$Encode$encode,
				2,
				$author$project$User$Layer$encodeHypaethralData(
					{
						favourites: model.favourites,
						modifiedAt: $elm$core$Maybe$Just(model.currentTime),
						playlists: A2(
							$elm_community$list_extra$List$Extra$filterNot,
							function ($) {
								return $.autoGenerated;
							},
							model.playlists),
						progress: model.progress,
						settings: $elm$core$Maybe$Just(
							$author$project$UI$User$State$Export$gatherSettings(model)),
						sources: model.sources,
						tracks: model.tracks.untouched
					}))));
};
var $avh4$elm_color$Color$RgbaSpace = F4(
	function (a, b, c, d) {
		return {$: 'RgbaSpace', a: a, b: b, c: c, d: d};
	});
var $avh4$elm_color$Color$scaleFrom255 = function (c) {
	return c / 255;
};
var $avh4$elm_color$Color$rgb255 = F3(
	function (r, g, b) {
		return A4(
			$avh4$elm_color$Color$RgbaSpace,
			$avh4$elm_color$Color$scaleFrom255(r),
			$avh4$elm_color$Color$scaleFrom255(g),
			$avh4$elm_color$Color$scaleFrom255(b),
			1.0);
	});
var $author$project$UI$Backdrop$extractedBackdropColor = F2(
	function (_v0, model) {
		var r = _v0.r;
		var g = _v0.g;
		var b = _v0.b;
		return $Fresheyeball$elm_return$Return$singleton(
			_Utils_update(
				model,
				{
					extractedBackdropColor: $elm$core$Maybe$Just(
						A3($avh4$elm_color$Color$rgb255, r, g, b))
				}));
	});
var $author$project$UI$Interface$State$focusedOnInput = function (model) {
	return $Fresheyeball$elm_return$Return$singleton(
		_Utils_update(
			model,
			{focusedOnInput: true}));
};
var $author$project$UI$Alfred$State$determineResults = F2(
	function (searchTerm, alfred) {
		var lowerSearchTerm = $elm$core$String$trim(
			$elm$core$String$toLower(searchTerm));
		return ($elm$core$String$length(lowerSearchTerm) > 0) ? _Utils_update(
			alfred,
			{
				focus: 0,
				results: A2(
					$elm$core$List$map,
					function (group) {
						return function (items) {
							return _Utils_update(
								group,
								{items: items});
						}(
							A2(
								$elm$core$List$filter,
								A2(
									$elm$core$Basics$composeR,
									function ($) {
										return $.title;
									},
									A2(
										$elm$core$Basics$composeR,
										$elm$core$String$toLower,
										$elm$core$String$contains(lowerSearchTerm))),
								group.items));
					},
					alfred.index),
				searchTerm: $elm$core$Maybe$Just(searchTerm)
			}) : _Utils_update(
			alfred,
			{focus: 0, results: alfred.index, searchTerm: $elm$core$Maybe$Nothing});
	});
var $author$project$UI$Alfred$State$gotInput = F2(
	function (searchTerm, model) {
		return function (a) {
			return $Fresheyeball$elm_return$Return$singleton(
				_Utils_update(
					model,
					{alfred: a}));
		}(
			A2(
				$elm$core$Maybe$map,
				$author$project$UI$Alfred$State$determineResults(searchTerm),
				model.alfred));
	});
var $author$project$LastFm$failedToAuthenticate = function (model) {
	return _Utils_update(
		model,
		{authenticating: false});
};
var $author$project$LastFm$gotSessionKey = F2(
	function (sessionKey, model) {
		return _Utils_update(
			model,
			{
				sessionKey: $elm$core$Maybe$Just(sessionKey)
			});
	});
var $author$project$UI$Services$State$gotLastFmSession = F2(
	function (result, model) {
		if (result.$ === 'Err') {
			return A2(
				$author$project$UI$Common$State$showNotification,
				$author$project$Notifications$stickyError('Could not connect with Last.fm'),
				_Utils_update(
					model,
					{
						lastFm: $author$project$LastFm$failedToAuthenticate(model.lastFm)
					}));
		} else {
			var sessionKey = result.a;
			return A2(
				$Fresheyeball$elm_return$Return$andThen,
				$author$project$UI$User$State$Export$saveSettings,
				A2(
					$author$project$UI$Common$State$showNotification,
					$author$project$Notifications$success('Connected successfully with Last.fm'),
					_Utils_update(
						model,
						{
							lastFm: A2($author$project$LastFm$gotSessionKey, sessionKey, model.lastFm)
						})));
		}
	});
var $author$project$UI$Interface$State$hideOverlay = function (model) {
	return $elm_community$maybe_extra$Maybe$Extra$isJust(model.contextMenu) ? $Fresheyeball$elm_return$Return$singleton(
		_Utils_update(
			model,
			{contextMenu: $elm$core$Maybe$Nothing})) : ($elm_community$maybe_extra$Maybe$Extra$isJust(model.confirmation) ? $Fresheyeball$elm_return$Return$singleton(
		_Utils_update(
			model,
			{confirmation: $elm$core$Maybe$Nothing})) : ($elm_community$maybe_extra$Maybe$Extra$isJust(model.alfred) ? $Fresheyeball$elm_return$Return$singleton(
		_Utils_update(
			model,
			{alfred: $elm$core$Maybe$Nothing})) : $Fresheyeball$elm_return$Return$singleton(model)));
};
var $author$project$UI$Types$ImportJson = function (a) {
	return {$: 'ImportJson', a: a};
};
var $elm$file$File$toString = _File_toString;
var $author$project$UI$User$State$Import$importFile = F2(
	function (file, model) {
		return A2(
			$Fresheyeball$elm_return$Return$return,
			_Utils_update(
				model,
				{isLoading: true}),
			A2(
				$elm$core$Task$perform,
				$author$project$UI$Types$ImportJson,
				A2(
					$elm$core$Task$andThen,
					function (_v0) {
						return $elm$file$File$toString(file);
					},
					$elm$core$Process$sleep(250))));
	});
var $author$project$UI$Tracks$State$harvest = $author$project$UI$Tracks$State$reviseCollection($author$project$Tracks$Collection$harvest);
var $author$project$UI$Tracks$State$clearCache = function (model) {
	return A2(
		$Fresheyeball$elm_return$Return$andThen,
		$author$project$UI$Common$State$showNotification(
			$author$project$Notifications$casual('Tracks cache was cleared')),
		A2(
			$Fresheyeball$elm_return$Return$andThen,
			$author$project$UI$User$State$Export$saveEnclosedUserData,
			A2(
				$Fresheyeball$elm_return$Return$andThen,
				$author$project$UI$Tracks$State$harvest,
				A2(
					$Fresheyeball$elm_return$Return$return,
					_Utils_update(
						model,
						{cachedTracks: _List_Nil}),
					$author$project$UI$Ports$toBrain(
						A2(
							$author$project$Alien$broadcast,
							$author$project$Alien$RemoveTracksFromCache,
							A2($elm$json$Json$Encode$list, $elm$json$Json$Encode$string, model.cachedTracks)))))));
};
var $author$project$UI$Common$State$forceTracksRerender = function (model) {
	var containerId = function () {
		var _v0 = model.scene;
		if (_v0.$ === 'Covers') {
			return $author$project$UI$Tracks$Scene$Covers$containerId;
		} else {
			return $author$project$UI$Tracks$Scene$List$containerId;
		}
	}();
	return A2(
		$Fresheyeball$elm_return$Return$return,
		model,
		A2(
			$elm$core$Task$attempt,
			$elm$core$Basics$always($author$project$UI$Types$Bypass),
			A3($elm$browser$Browser$Dom$setViewportOf, containerId, 0, 1)));
};
var $author$project$User$Layer$ModifiedAt = {$: 'ModifiedAt'};
var $author$project$Playlists$Playlist = F4(
	function (autoGenerated, name, _public, tracks) {
		return {autoGenerated: autoGenerated, name: name, _public: _public, tracks: tracks};
	});
var $elm$json$Json$Decode$list = _Json_decodeList;
var $elm$json$Json$Decode$map4 = _Json_map4;
var $author$project$Json$Decode$Ext$optionalField = F3(
	function (field, decoder, defaultValue) {
		return A2(
			$elm$json$Json$Decode$map,
			$elm$core$Maybe$withDefault(defaultValue),
			$elm$json$Json$Decode$maybe(
				A2($elm$json$Json$Decode$field, field, decoder)));
	});
var $author$project$Playlists$PlaylistTrack = F3(
	function (album, artist, title) {
		return {album: album, artist: artist, title: title};
	});
var $author$project$Playlists$Encoding$playlistTrackDecoder = A4(
	$elm$json$Json$Decode$map3,
	$author$project$Playlists$PlaylistTrack,
	A2($elm$json$Json$Decode$field, 'album', $elm$json$Json$Decode$string),
	A2($elm$json$Json$Decode$field, 'artist', $elm$json$Json$Decode$string),
	A2($elm$json$Json$Decode$field, 'title', $elm$json$Json$Decode$string));
var $author$project$Playlists$Encoding$decoder = A5(
	$elm$json$Json$Decode$map4,
	$author$project$Playlists$Playlist,
	A2($elm$json$Json$Decode$field, 'autoGenerated', $elm$json$Json$Decode$bool),
	A2($elm$json$Json$Decode$field, 'name', $elm$json$Json$Decode$string),
	A3($author$project$Json$Decode$Ext$optionalField, 'public', $elm$json$Json$Decode$bool, false),
	A2(
		$elm$json$Json$Decode$field,
		'tracks',
		$elm$json$Json$Decode$list($author$project$Playlists$Encoding$playlistTrackDecoder)));
var $author$project$Settings$Settings = F6(
	function (backgroundImage, coverSelectionReducesPool, hideDuplicates, lastFm, processAutomatically, rememberProgress) {
		return {backgroundImage: backgroundImage, coverSelectionReducesPool: coverSelectionReducesPool, hideDuplicates: hideDuplicates, lastFm: lastFm, processAutomatically: processAutomatically, rememberProgress: rememberProgress};
	});
var $NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$custom = $elm$json$Json$Decode$map2($elm$core$Basics$apR);
var $NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$optionalDecoder = F3(
	function (path, valDecoder, fallback) {
		var nullOr = function (decoder) {
			return $elm$json$Json$Decode$oneOf(
				_List_fromArray(
					[
						decoder,
						$elm$json$Json$Decode$null(fallback)
					]));
		};
		var handleResult = function (input) {
			var _v0 = A2(
				$elm$json$Json$Decode$decodeValue,
				A2($elm$json$Json$Decode$at, path, $elm$json$Json$Decode$value),
				input);
			if (_v0.$ === 'Ok') {
				var rawValue = _v0.a;
				var _v1 = A2(
					$elm$json$Json$Decode$decodeValue,
					nullOr(valDecoder),
					rawValue);
				if (_v1.$ === 'Ok') {
					var finalResult = _v1.a;
					return $elm$json$Json$Decode$succeed(finalResult);
				} else {
					return A2(
						$elm$json$Json$Decode$at,
						path,
						nullOr(valDecoder));
				}
			} else {
				return $elm$json$Json$Decode$succeed(fallback);
			}
		};
		return A2($elm$json$Json$Decode$andThen, handleResult, $elm$json$Json$Decode$value);
	});
var $NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$optional = F4(
	function (key, valDecoder, fallback, decoder) {
		return A2(
			$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$custom,
			A3(
				$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$optionalDecoder,
				_List_fromArray(
					[key]),
				valDecoder,
				fallback),
			decoder);
	});
var $author$project$Settings$decoder = A4(
	$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$optional,
	'rememberProgress',
	$elm$json$Json$Decode$bool,
	true,
	A4(
		$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$optional,
		'processAutomatically',
		$elm$json$Json$Decode$bool,
		true,
		A4(
			$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$optional,
			'lastFm',
			$elm$json$Json$Decode$maybe($elm$json$Json$Decode$string),
			$elm$core$Maybe$Nothing,
			A4(
				$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$optional,
				'hideDuplicates',
				$elm$json$Json$Decode$bool,
				false,
				A4(
					$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$optional,
					'coverSelectionReducesPool',
					$elm$json$Json$Decode$bool,
					true,
					A4(
						$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$optional,
						'backgroundImage',
						$elm$json$Json$Decode$maybe($elm$json$Json$Decode$string),
						$elm$core$Maybe$Nothing,
						$elm$json$Json$Decode$succeed($author$project$Settings$Settings)))))));
var $author$project$Sources$Source = F5(
	function (id, data, directoryPlaylists, enabled, service) {
		return {data: data, directoryPlaylists: directoryPlaylists, enabled: enabled, id: id, service: service};
	});
var $elm$json$Json$Decode$map5 = _Json_map5;
var $author$project$Sources$AmazonS3 = {$: 'AmazonS3'};
var $author$project$Sources$AzureBlob = {$: 'AzureBlob'};
var $author$project$Sources$AzureFile = {$: 'AzureFile'};
var $author$project$Sources$Btfs = {$: 'Btfs'};
var $author$project$Sources$Ipfs = {$: 'Ipfs'};
var $author$project$Sources$WebDav = {$: 'WebDav'};
var $author$project$Sources$Services$keyToType = function (str) {
	switch (str) {
		case 'AmazonS3':
			return $elm$core$Maybe$Just($author$project$Sources$AmazonS3);
		case 'AzureBlob':
			return $elm$core$Maybe$Just($author$project$Sources$AzureBlob);
		case 'AzureFile':
			return $elm$core$Maybe$Just($author$project$Sources$AzureFile);
		case 'Btfs':
			return $elm$core$Maybe$Just($author$project$Sources$Btfs);
		case 'Dropbox':
			return $elm$core$Maybe$Just($author$project$Sources$Dropbox);
		case 'Google':
			return $elm$core$Maybe$Just($author$project$Sources$Google);
		case 'Ipfs':
			return $elm$core$Maybe$Just($author$project$Sources$Ipfs);
		case 'WebDav':
			return $elm$core$Maybe$Just($author$project$Sources$WebDav);
		default:
			return $elm$core$Maybe$Nothing;
	}
};
var $author$project$Sources$Encoding$serviceDecoder = A2(
	$elm$json$Json$Decode$andThen,
	function (key) {
		var _v0 = $author$project$Sources$Services$keyToType(key);
		if (_v0.$ === 'Just') {
			var service = _v0.a;
			return $elm$json$Json$Decode$succeed(service);
		} else {
			return $elm$json$Json$Decode$fail('Unrecognizable source service');
		}
	},
	$elm$json$Json$Decode$string);
var $author$project$Sources$Encoding$decoder = A6(
	$elm$json$Json$Decode$map5,
	$author$project$Sources$Source,
	A2($elm$json$Json$Decode$field, 'id', $elm$json$Json$Decode$string),
	A2(
		$elm$json$Json$Decode$field,
		'data',
		$elm$json$Json$Decode$dict($elm$json$Json$Decode$string)),
	A2(
		$elm$json$Json$Decode$map,
		$elm$core$Maybe$withDefault(true),
		$elm$json$Json$Decode$maybe(
			A2($elm$json$Json$Decode$field, 'directoryPlaylists', $elm$json$Json$Decode$bool))),
	A2(
		$elm$json$Json$Decode$map,
		$elm$core$Maybe$withDefault(true),
		$elm$json$Json$Decode$maybe(
			A2($elm$json$Json$Decode$field, 'enabled', $elm$json$Json$Decode$bool))),
	A2($elm$json$Json$Decode$field, 'service', $author$project$Sources$Encoding$serviceDecoder));
var $author$project$Tracks$Favourite = F2(
	function (artist, title) {
		return {artist: artist, title: title};
	});
var $author$project$Tracks$Encoding$favouriteDecoder = A3(
	$elm$json$Json$Decode$map2,
	$author$project$Tracks$Favourite,
	A2($elm$json$Json$Decode$field, 'artist', $elm$json$Json$Decode$string),
	A2($elm$json$Json$Decode$field, 'title', $elm$json$Json$Decode$string));
var $elm_community$maybe_extra$Maybe$Extra$cons = F2(
	function (item, list) {
		if (item.$ === 'Just') {
			var v = item.a;
			return A2($elm$core$List$cons, v, list);
		} else {
			return list;
		}
	});
var $elm_community$maybe_extra$Maybe$Extra$values = A2($elm$core$List$foldr, $elm_community$maybe_extra$Maybe$Extra$cons, _List_Nil);
var $author$project$Json$Decode$Ext$listIgnore = function (decoder) {
	return A2(
		$elm$json$Json$Decode$map,
		$elm_community$maybe_extra$Maybe$Extra$values,
		$elm$json$Json$Decode$list(
			$elm$json$Json$Decode$maybe(decoder)));
};
var $author$project$Time$Ext$decoder = A2($elm$json$Json$Decode$map, $elm$time$Time$millisToPosix, $elm$json$Json$Decode$int);
var $author$project$User$Layer$modifiedAtDecoder = function (decoder) {
	return A3(
		$elm$json$Json$Decode$map2,
		F2(
			function (d, m) {
				return {data: d, modifiedAt: m};
			}),
		A2($elm$json$Json$Decode$field, 'data', decoder),
		$elm$json$Json$Decode$maybe(
			A2($elm$json$Json$Decode$field, 'modifiedAt', $author$project$Time$Ext$decoder)));
};
var $author$project$User$Layer$noModifiedAt = $elm$json$Json$Decode$map(
	function (data) {
		return {data: data, modifiedAt: $elm$core$Maybe$Nothing};
	});
var $elm$core$List$sort = function (xs) {
	return A2($elm$core$List$sortBy, $elm$core$Basics$identity, xs);
};
var $author$project$Tracks$Track = F5(
	function (id, insertedAt, path, sourceId, tags) {
		return {id: id, insertedAt: insertedAt, path: path, sourceId: sourceId, tags: tags};
	});
var $NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required = F3(
	function (key, valDecoder, decoder) {
		return A2(
			$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$custom,
			A2($elm$json$Json$Decode$field, key, valDecoder),
			decoder);
	});
var $author$project$Tracks$Tags = F8(
	function (disc, nr, album, artist, title, genre, picture, year) {
		return {album: album, artist: artist, disc: disc, genre: genre, nr: nr, picture: picture, title: title, year: year};
	});
var $elm$json$Json$Decode$map8 = _Json_map8;
var $author$project$Tracks$Encoding$tagsDecoder = A9(
	$elm$json$Json$Decode$map8,
	$author$project$Tracks$Tags,
	A2($elm$json$Json$Decode$field, 'disc', $elm$json$Json$Decode$int),
	A2($elm$json$Json$Decode$field, 'nr', $elm$json$Json$Decode$int),
	A2($elm$json$Json$Decode$field, 'album', $elm$json$Json$Decode$string),
	A2($elm$json$Json$Decode$field, 'artist', $elm$json$Json$Decode$string),
	A2($elm$json$Json$Decode$field, 'title', $elm$json$Json$Decode$string),
	$elm$json$Json$Decode$maybe(
		A2($elm$json$Json$Decode$field, 'genre', $elm$json$Json$Decode$string)),
	$elm$json$Json$Decode$maybe(
		A2($elm$json$Json$Decode$field, 'picture', $elm$json$Json$Decode$string)),
	$elm$json$Json$Decode$maybe(
		A2($elm$json$Json$Decode$field, 'year', $elm$json$Json$Decode$int)));
var $author$project$Tracks$Encoding$trackDecoder = A3(
	$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,
	'tags',
	$author$project$Tracks$Encoding$tagsDecoder,
	A3(
		$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,
		'sourceId',
		$elm$json$Json$Decode$string,
		A3(
			$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,
			'path',
			$elm$json$Json$Decode$string,
			A4(
				$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$optional,
				'insertedAt',
				$author$project$Time$Ext$decoder,
				$author$project$Time$Ext$default,
				A3(
					$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,
					'id',
					$elm$json$Json$Decode$string,
					$elm$json$Json$Decode$succeed($author$project$Tracks$Track))))));
var $author$project$User$Layer$hypaethralDataDecoder = function () {
	var optionalWithPossiblyData = F4(
		function (key, dec, def, a) {
			return A4(
				$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$optional,
				$author$project$User$Layer$hypaethralBitKey(key),
				$elm$json$Json$Decode$oneOf(
					_List_fromArray(
						[
							$author$project$User$Layer$modifiedAtDecoder(dec),
							$author$project$User$Layer$noModifiedAt(dec)
						])),
				{data: def, modifiedAt: $elm$core$Maybe$Nothing},
				a);
		});
	return A4(
		$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$optional,
		$author$project$User$Layer$hypaethralBitKey($author$project$User$Layer$ModifiedAt),
		$elm$json$Json$Decode$maybe($elm$json$Json$Decode$int),
		$elm$core$Maybe$Nothing,
		A4(
			optionalWithPossiblyData,
			$author$project$User$Layer$Tracks,
			$author$project$Json$Decode$Ext$listIgnore($author$project$Tracks$Encoding$trackDecoder),
			_List_Nil,
			A4(
				optionalWithPossiblyData,
				$author$project$User$Layer$Sources,
				$author$project$Json$Decode$Ext$listIgnore($author$project$Sources$Encoding$decoder),
				_List_Nil,
				A4(
					optionalWithPossiblyData,
					$author$project$User$Layer$Settings,
					$elm$json$Json$Decode$maybe($author$project$Settings$decoder),
					$elm$core$Maybe$Nothing,
					A4(
						optionalWithPossiblyData,
						$author$project$User$Layer$Progress,
						$elm$json$Json$Decode$dict($elm$json$Json$Decode$float),
						$elm$core$Dict$empty,
						A4(
							optionalWithPossiblyData,
							$author$project$User$Layer$Playlists,
							$author$project$Json$Decode$Ext$listIgnore($author$project$Playlists$Encoding$decoder),
							_List_Nil,
							A4(
								optionalWithPossiblyData,
								$author$project$User$Layer$Favourites,
								$author$project$Json$Decode$Ext$listIgnore($author$project$Tracks$Encoding$favouriteDecoder),
								_List_Nil,
								$elm$json$Json$Decode$succeed(
									F7(
										function (fav, pla, pro, set, sor, tra, mod) {
											return {
												favourites: fav.data,
												modifiedAt: function () {
													if (mod.$ === 'Just') {
														var m = mod.a;
														return $elm$core$Maybe$Just(
															$elm$time$Time$millisToPosix(m));
													} else {
														return A2(
															$elm$core$Maybe$map,
															$elm$time$Time$millisToPosix,
															$elm_community$list_extra$List$Extra$last(
																$elm$core$List$sort(
																	A2(
																		$elm$core$List$filterMap,
																		$elm$core$Maybe$map($elm$time$Time$posixToMillis),
																		_List_fromArray(
																			[fav.modifiedAt, pla.modifiedAt, pro.modifiedAt, set.modifiedAt, sor.modifiedAt, tra.modifiedAt])))));
													}
												}(),
												playlists: pla.data,
												progress: pro.data,
												settings: set.data,
												sources: sor.data,
												tracks: tra.data
											};
										})))))))));
}();
var $author$project$User$Layer$decodeHypaethralData = $elm$json$Json$Decode$decodeValue($author$project$User$Layer$hypaethralDataDecoder);
var $author$project$UI$Backdrop$default = '21.jpg';
var $author$project$UI$Common$State$toggleLoadingScreen = F2(
	function (_switch, model) {
		if (_switch.$ === 'On') {
			return $Fresheyeball$elm_return$Return$singleton(
				_Utils_update(
					model,
					{isLoading: true}));
		} else {
			return $Fresheyeball$elm_return$Return$singleton(
				_Utils_update(
					model,
					{isLoading: false}));
		}
	});
var $author$project$UI$Tracks$State$afterInitialLoad = function (model) {
	return A2($author$project$UI$Common$State$toggleLoadingScreen, $author$project$Common$Off, model);
};
var $author$project$Tracks$Collection$Internal$Identify$isFavourite = function (track) {
	return $elm$core$Basics$eq(
		_Utils_ap(
			$elm$core$String$toLower(track.tags.artist),
			$elm$core$String$toLower(track.tags.title)));
};
var $author$project$Tracks$pathParts = function (_v0) {
	var path = _v0.path;
	var s = A2($elm$core$String$split, '/', path);
	var l = $elm$core$List$length(s);
	var _v1 = A2(
		$elm$core$List$drop,
		A2($elm$core$Basics$max, 0, l - 2),
		s);
	_v1$2:
	while (true) {
		if (_v1.b) {
			if (_v1.b.b) {
				if (!_v1.b.b.b) {
					var p = _v1.a;
					var _v2 = _v1.b;
					var f = _v2.a;
					return {filename: f, parentDirectory: p};
				} else {
					break _v1$2;
				}
			} else {
				var f = _v1.a;
				return {filename: f, parentDirectory: ''};
			}
		} else {
			break _v1$2;
		}
	}
	return {filename: '', parentDirectory: ''};
};
var $author$project$Tracks$Collection$Internal$Identify$partTwo = F3(
	function (favourites, track, _v0) {
		var acc = _v0.a;
		var remainingFavourites = _v0.b;
		var isFavourite_ = $author$project$Tracks$Collection$Internal$Identify$isFavourite(track);
		var isFav = A2($elm$core$List$any, isFavourite_, favourites);
		var _v1 = $author$project$Tracks$pathParts(track);
		var filename = _v1.filename;
		var parentDirectory = _v1.parentDirectory;
		var identifiedTrack = _Utils_Tuple2(
			{filename: filename, group: $elm$core$Maybe$Nothing, indexInList: 0, indexInPlaylist: $elm$core$Maybe$Nothing, isFavourite: isFav, isMissing: false, parentDirectory: parentDirectory},
			track);
		return isFav ? _Utils_Tuple2(
			A2($elm$core$List$cons, identifiedTrack, acc),
			A2(
				$elm$core$Maybe$withDefault,
				remainingFavourites,
				A2(
					$elm$core$Maybe$map,
					function (idx) {
						return A2($elm_community$list_extra$List$Extra$removeAt, idx, remainingFavourites);
					},
					A2($elm_community$list_extra$List$Extra$findIndex, isFavourite_, remainingFavourites)))) : _Utils_Tuple2(
			A2($elm$core$List$cons, identifiedTrack, acc),
			remainingFavourites);
	});
var $author$project$Tracks$Collection$Internal$Identify$identifyTrack = F3(
	function (enabledSourceIds, favourites, track) {
		return A2($elm$core$List$member, track.sourceId, enabledSourceIds) ? A2($author$project$Tracks$Collection$Internal$Identify$partTwo, favourites, track) : $elm$core$Basics$identity;
	});
var $author$project$Tracks$missingAlbumPlaceholder = '⌁';
var $author$project$Tracks$Collection$Internal$Identify$makeMissingFavouriteTrack = function (fav) {
	var tags = {album: $author$project$Tracks$missingAlbumPlaceholder, artist: fav.artist, disc: 1, genre: $elm$core$Maybe$Nothing, nr: 0, picture: $elm$core$Maybe$Nothing, title: fav.title, year: $elm$core$Maybe$Nothing};
	return _Utils_Tuple2(
		{filename: '', group: $elm$core$Maybe$Nothing, indexInList: 0, indexInPlaylist: $elm$core$Maybe$Nothing, isFavourite: true, isMissing: true, parentDirectory: ''},
		{id: $author$project$Tracks$missingId, insertedAt: $author$project$Time$Ext$default, path: $author$project$Tracks$missingId, sourceId: $author$project$Tracks$missingId, tags: tags});
};
var $author$project$Tracks$Favourites$simplified = function (fav) {
	return _Utils_ap(
		$elm$core$String$toLower(fav.artist),
		$elm$core$String$toLower(fav.title));
};
var $author$project$Tracks$Collection$Internal$Identify$identify = function (_v0) {
	var deps = _v0.a;
	var collection = _v0.b;
	var _v1 = A3(
		$elm$core$List$foldr,
		F2(
			function (fav, _v2) {
				var dict = _v2.a;
				var acc = _v2.b;
				var simpl = $author$project$Tracks$Favourites$simplified(fav);
				return _Utils_Tuple2(
					A3($elm$core$Dict$insert, simpl, fav, dict),
					A2($elm$core$List$cons, simpl, acc));
			}),
		_Utils_Tuple2($elm$core$Dict$empty, _List_Nil),
		deps.favourites);
	var favouritesDictionary = _v1.a;
	var simplifiedFavourites = _v1.b;
	var _v3 = A3(
		$elm$core$List$foldl,
		A2($author$project$Tracks$Collection$Internal$Identify$identifyTrack, deps.enabledSourceIds, simplifiedFavourites),
		_Utils_Tuple2(_List_Nil, simplifiedFavourites),
		collection.untouched);
	var identifiedUnsorted = _v3.a;
	var missingFavouritesSimplified = _v3.b;
	var missingFavourites = A3(
		$elm$core$List$foldr,
		F2(
			function (simpl, acc) {
				var _v4 = A2($elm$core$Dict$get, simpl, favouritesDictionary);
				if (_v4.$ === 'Just') {
					var fav = _v4.a;
					return A2($elm$core$List$cons, fav, acc);
				} else {
					return acc;
				}
			}),
		_List_Nil,
		missingFavouritesSimplified);
	return function (x) {
		return _Utils_Tuple2(deps, x);
	}(
		function (x) {
			return _Utils_update(
				collection,
				{identified: x});
		}(
			A2(
				$elm$core$List$append,
				A2($elm$core$List$map, $author$project$Tracks$Collection$Internal$Identify$makeMissingFavouriteTrack, missingFavourites),
				identifiedUnsorted)));
};
var $author$project$Tracks$Collection$Internal$identify = $author$project$Tracks$Collection$Internal$Identify$identify;
var $author$project$Tracks$Collection$identify = A2(
	$elm$core$Basics$composeR,
	$author$project$Tracks$Collection$Internal$identify,
	A2($elm$core$Basics$composeR, $author$project$Tracks$Collection$Internal$arrange, $author$project$Tracks$Collection$Internal$harvest));
var $author$project$UI$Tracks$State$importHypaethral = F3(
	function (data, selectedPlaylist, model) {
		return function () {
			var _v0 = model.searchTerm;
			if (_v0.$ === 'Just') {
				return $elm$core$Basics$identity;
			} else {
				return $Fresheyeball$elm_return$Return$andThen($author$project$UI$Tracks$State$afterInitialLoad);
			}
		}()(
			A2(
				$Fresheyeball$elm_return$Return$andThen,
				$author$project$UI$Tracks$State$search,
				A2(
					$author$project$UI$Tracks$State$reviseCollection,
					$author$project$Tracks$Collection$identify,
					_Utils_update(
						model,
						{
							favourites: data.favourites,
							selectedPlaylist: selectedPlaylist,
							tracks: _Utils_update(
								$author$project$Tracks$emptyCollection,
								{untouched: data.tracks})
						}))));
	});
var $author$project$UI$User$State$Import$importHypaethral = F2(
	function (value, model) {
		var _v0 = $author$project$User$Layer$decodeHypaethralData(value);
		if (_v0.$ === 'Ok') {
			var data = _v0.a;
			var newPlaylistsCollection = A2(
				$elm$core$List$append,
				data.playlists,
				A2($author$project$UI$Playlists$Directory$generate, data.sources, data.tracks));
			var selectedPlaylist = A2(
				$elm$core$Maybe$andThen,
				function (n) {
					return A2(
						$elm_community$list_extra$List$Extra$find,
						A2(
							$elm$core$Basics$composeR,
							function ($) {
								return $.name;
							},
							$elm$core$Basics$eq(n)),
						newPlaylistsCollection);
				},
				model.playlistToActivate);
			var lastFmModel = model.lastFm;
			var chosenBackdrop = $elm$core$Maybe$Just(
				A2(
					$elm$core$Maybe$withDefault,
					$author$project$UI$Backdrop$default,
					A2(
						$elm$core$Maybe$andThen,
						function ($) {
							return $.backgroundImage;
						},
						data.settings)));
			return A3(
				$author$project$UI$Tracks$State$importHypaethral,
				data,
				selectedPlaylist,
				_Utils_update(
					model,
					{
						chosenBackdrop: chosenBackdrop,
						coverSelectionReducesPool: A3(
							$elm_community$maybe_extra$Maybe$Extra$unwrap,
							true,
							function ($) {
								return $.coverSelectionReducesPool;
							},
							data.settings),
						hideDuplicates: A3(
							$elm_community$maybe_extra$Maybe$Extra$unwrap,
							false,
							function ($) {
								return $.hideDuplicates;
							},
							data.settings),
						lastFm: _Utils_update(
							lastFmModel,
							{
								sessionKey: A2(
									$elm$core$Maybe$andThen,
									function ($) {
										return $.lastFm;
									},
									data.settings)
							}),
						playlistToActivate: $elm$core$Maybe$Nothing,
						playlists: newPlaylistsCollection,
						processAutomatically: A3(
							$elm_community$maybe_extra$Maybe$Extra$unwrap,
							true,
							function ($) {
								return $.processAutomatically;
							},
							data.settings),
						progress: data.progress,
						rememberProgress: A3(
							$elm_community$maybe_extra$Maybe$Extra$unwrap,
							true,
							function ($) {
								return $.rememberProgress;
							},
							data.settings),
						sources: data.sources
					}));
		} else {
			var err = _v0.a;
			return A2(
				$author$project$UI$Common$State$showNotificationWithModel,
				model,
				$author$project$Notifications$error(
					$elm$json$Json$Decode$errorToString(err)));
		}
	});
var $author$project$User$Layer$hypaethralBit = $Herteby$enum$Enum$create(
	A2(
		$elm$core$List$map,
		function (bit) {
			return _Utils_Tuple2(
				$author$project$User$Layer$hypaethralBitKey(bit),
				bit);
		},
		$author$project$User$Layer$allHypaethralBits));
var $author$project$UI$User$State$Export$saveFavourites = function (model) {
	return A2(
		$Fresheyeball$elm_return$Return$return,
		model,
		$author$project$UI$Ports$toBrain(
			A2(
				$author$project$Alien$broadcast,
				$author$project$Alien$SaveFavourites,
				A2($elm$json$Json$Encode$list, $author$project$Tracks$Encoding$encodeFavourite, model.favourites))));
};
var $author$project$UI$User$State$Export$saveModifiedAt = $Fresheyeball$elm_return$Return$singleton;
var $author$project$UI$User$State$Export$saveProgress = function (model) {
	return A2(
		$Fresheyeball$elm_return$Return$return,
		model,
		$author$project$UI$Ports$toBrain(
			A2(
				$author$project$Alien$broadcast,
				$author$project$Alien$SaveProgress,
				A3($elm$json$Json$Encode$dict, $elm$core$Basics$identity, $elm$json$Json$Encode$float, model.progress))));
};
var $author$project$UI$User$State$Export$saveSources = function (model) {
	return A2(
		$Fresheyeball$elm_return$Return$return,
		model,
		$author$project$UI$Ports$toBrain(
			A2(
				$author$project$Alien$broadcast,
				$author$project$Alien$SaveSources,
				A2($elm$json$Json$Encode$list, $author$project$Sources$Encoding$encode, model.sources))));
};
var $author$project$UI$User$State$Export$saveTracks = function (model) {
	return A2(
		$Fresheyeball$elm_return$Return$return,
		model,
		$author$project$UI$Ports$toBrain(
			A2(
				$author$project$Alien$broadcast,
				$author$project$Alien$SaveTracks,
				A2($elm$json$Json$Encode$list, $author$project$Tracks$Encoding$encodeTrack, model.tracks.untouched))));
};
var $author$project$UI$User$State$Import$saveAllHypaethralData = function (_return) {
	return A3(
		$elm$core$List$foldl,
		function (_v0) {
			var bit = _v0.b;
			switch (bit.$) {
				case 'Favourites':
					return $Fresheyeball$elm_return$Return$andThen($author$project$UI$User$State$Export$saveFavourites);
				case 'ModifiedAt':
					return $Fresheyeball$elm_return$Return$andThen($author$project$UI$User$State$Export$saveModifiedAt);
				case 'Playlists':
					return $Fresheyeball$elm_return$Return$andThen($author$project$UI$User$State$Export$savePlaylists);
				case 'Progress':
					return $Fresheyeball$elm_return$Return$andThen($author$project$UI$User$State$Export$saveProgress);
				case 'Settings':
					return $Fresheyeball$elm_return$Return$andThen($author$project$UI$User$State$Export$saveSettings);
				case 'Sources':
					return $Fresheyeball$elm_return$Return$andThen($author$project$UI$User$State$Export$saveSources);
				default:
					return $Fresheyeball$elm_return$Return$andThen($author$project$UI$User$State$Export$saveTracks);
			}
		},
		_return,
		$author$project$User$Layer$hypaethralBit.list);
};
var $author$project$UI$User$State$Import$importJson = F2(
	function (json, model) {
		return $author$project$UI$User$State$Import$saveAllHypaethralData(
			A2(
				$Fresheyeball$elm_return$Return$andThen,
				$author$project$UI$Common$State$changeUrlUsingPage($author$project$UI$Page$Index),
				A2(
					$Fresheyeball$elm_return$Return$andThen,
					$author$project$UI$Common$State$forceTracksRerender,
					A2(
						$Fresheyeball$elm_return$Return$andThen,
						$author$project$UI$Tracks$State$clearCache,
						A2(
							$Fresheyeball$elm_return$Return$andThen,
							$author$project$UI$Common$State$showNotification(
								$author$project$Notifications$success('Imported data successfully!')),
							function (j) {
								return A2($author$project$UI$User$State$Import$importHypaethral, j, model);
							}(
								A2(
									$elm$core$Result$withDefault,
									$elm$json$Json$Encode$null,
									A2($elm$json$Json$Decode$decodeString, $elm$json$Json$Decode$value, json))))))));
	});
var $author$project$UI$Types$GotLastFmSession = function (a) {
	return {$: 'GotLastFmSession', a: a};
};
var $author$project$Notifications$kind = function (_v0) {
	var k = _v0.a;
	return k;
};
var $author$project$Notifications$stickyCasual = function (content) {
	return A4(
		$author$project$Notifications$Notification,
		$author$project$Notifications$Casual,
		A2($robinheghan$murmur3$Murmur3$hashString, 0, content),
		{sticky: true, wasDismissed: false},
		$author$project$Notifications$render(content));
};
var $author$project$UI$Sources$State$processSpecific = F2(
	function (toProcess, model) {
		var processingContext = A2(
			$elm$core$List$map,
			function (_v0) {
				var id = _v0.id;
				return _Utils_Tuple2(id, 0);
			},
			A2(
				$elm$core$List$sortBy,
				A2(
					$elm$core$Basics$composeR,
					function ($) {
						return $.data;
					},
					A2($author$project$Dict$Ext$fetch, 'name', '')),
				toProcess));
		var notification = $author$project$Notifications$stickyCasual('Processing sources ...');
		var notificationId = $author$project$Notifications$id(notification);
		var newNotifications = A2(
			$elm$core$List$filter,
			function (n) {
				return !_Utils_eq(
					$author$project$Notifications$kind(n),
					$author$project$Notifications$Error);
			},
			model.notifications);
		var newModel = _Utils_update(
			model,
			{
				notifications: newNotifications,
				processingContext: processingContext,
				processingError: $elm$core$Maybe$Nothing,
				processingNotificationId: $elm$core$Maybe$Just(notificationId)
			});
		return A2(
			$Fresheyeball$elm_return$Return$andThen,
			$author$project$UI$Common$State$showNotification(notification),
			A2(
				$Fresheyeball$elm_return$Return$return,
				newModel,
				$author$project$UI$Ports$toBrain(
					A2(
						$author$project$Alien$broadcast,
						$author$project$Alien$ProcessSources,
						$elm$json$Json$Encode$object(
							_List_fromArray(
								[
									_Utils_Tuple2(
									'origin',
									$elm$json$Json$Encode$string(
										$author$project$Common$urlOrigin(model.url))),
									_Utils_Tuple2(
									'sources',
									A2($elm$json$Json$Encode$list, $author$project$Sources$Encoding$encode, toProcess))
								]))))));
	});
var $author$project$Sources$setProperId = F3(
	function (n, time, source) {
		return _Utils_update(
			source,
			{
				id: _Utils_ap(
					$elm$core$String$fromInt(
						$elm$time$Time$posixToMillis(time)),
					$elm$core$String$fromInt(n))
			});
	});
var $author$project$UI$Sources$State$addToCollection = F2(
	function (unsuitableSource, model) {
		var source = A3(
			$author$project$Sources$setProperId,
			$elm$core$List$length(model.sources) + 1,
			model.currentTime,
			unsuitableSource);
		return A2(
			$Fresheyeball$elm_return$Return$andThen,
			$author$project$UI$Sources$State$processSpecific(
				_List_fromArray(
					[source])),
			$author$project$UI$User$State$Export$saveSources(
				_Utils_update(
					model,
					{
						sources: _Utils_ap(
							model.sources,
							_List_fromArray(
								[source]))
					})));
	});
var $author$project$Sources$serviceDictionary = $elm$core$Dict$fromList(
	_List_fromArray(
		[
			_Utils_Tuple2('amazons3', $author$project$Sources$AmazonS3),
			_Utils_Tuple2('amazon_s3', $author$project$Sources$AmazonS3),
			_Utils_Tuple2('azureblob', $author$project$Sources$AzureBlob),
			_Utils_Tuple2('azure_blob', $author$project$Sources$AzureBlob),
			_Utils_Tuple2('azurefile', $author$project$Sources$AzureFile),
			_Utils_Tuple2('azure_file', $author$project$Sources$AzureFile),
			_Utils_Tuple2('btfs', $author$project$Sources$Btfs),
			_Utils_Tuple2('dropbox', $author$project$Sources$Dropbox),
			_Utils_Tuple2('google', $author$project$Sources$Google),
			_Utils_Tuple2('ipfs', $author$project$Sources$Ipfs),
			_Utils_Tuple2('webdav', $author$project$Sources$WebDav),
			_Utils_Tuple2('web_dav', $author$project$Sources$WebDav)
		]));
var $author$project$Sources$serviceDecoder = A2(
	$elm$json$Json$Decode$andThen,
	function (string) {
		return A2(
			$elm$core$Maybe$withDefault,
			$elm$json$Json$Decode$fail('Invalid source kind'),
			A2(
				$elm$core$Maybe$map,
				$elm$json$Json$Decode$succeed,
				A2($elm$core$Dict$get, string, $author$project$Sources$serviceDictionary)));
	},
	$elm$json$Json$Decode$string);
var $author$project$UI$Sources$Query$sourceParser = A2(
	$elm$json$Json$Decode$andThen,
	function (_v0) {
		var service = _v0.service;
		var data = _v0.data;
		return A2($elm$core$Dict$member, 'name', data) ? $elm$json$Json$Decode$succeed(
			{data: data, directoryPlaylists: true, enabled: true, id: 'FILL_IN_LATER', service: service}) : $elm$json$Json$Decode$fail('Missing `name` in `data` dictionary');
	},
	A3(
		$elm$json$Json$Decode$map2,
		F2(
			function (s, d) {
				return {data: d, service: s};
			}),
		A2($elm$json$Json$Decode$field, 'kind', $author$project$Sources$serviceDecoder),
		A2(
			$elm$json$Json$Decode$field,
			'data',
			$elm$json$Json$Decode$dict($elm$json$Json$Decode$string))));
var $author$project$UI$Sources$Query$fromUrl = function (json) {
	return $elm$core$Result$toMaybe(
		A2($elm$json$Json$Decode$decodeString, $author$project$UI$Sources$Query$sourceParser, json));
};
var $author$project$UI$Sources$Query$urlParser = function (individualParser) {
	return $elm$url$Url$Parser$query(
		A2($elm$url$Url$Parser$Query$custom, 'source', individualParser));
};
var $author$project$UI$Sources$Query$sourcesFromUrl = function (url) {
	return A2(
		$elm$core$Maybe$withDefault,
		_List_Nil,
		A2(
			$elm$url$Url$Parser$parse,
			$author$project$UI$Sources$Query$urlParser(
				$elm$core$List$filterMap($author$project$UI$Sources$Query$fromUrl)),
			url));
};
var $author$project$UI$Sources$State$addSourcesFromUrl = function (model) {
	var _v0 = $author$project$UI$Sources$Query$sourcesFromUrl(model.url);
	if (!_v0.b) {
		return $Fresheyeball$elm_return$Return$singleton(model);
	} else {
		var sources = _v0;
		return A2(
			$Fresheyeball$elm_return$Return$command,
			A2(
				$elm$browser$Browser$Navigation$replaceUrl,
				model.navKey,
				_Utils_ap(
					model.url.path,
					$author$project$UI$Page$toString(model.page))),
			A3(
				$elm$core$List$foldl,
				function (s) {
					return $Fresheyeball$elm_return$Return$andThen(
						$author$project$UI$Sources$State$addToCollection(s));
				},
				$Fresheyeball$elm_return$Return$singleton(model),
				sources));
	}
};
var $author$project$LastFm$apiUrl = 'https://ws.audioscrobbler.com/2.0';
var $author$project$List$Ext$addTo = F2(
	function (list, item) {
		return A2($elm$core$List$cons, item, list);
	});
var $truqu$elm_md5$MD5$emptyWords = A2($elm$core$Array$repeat, 16, 0);
var $truqu$elm_md5$MD5$addUnsigned = F2(
	function (x, y) {
		return 4294967295 & (x + y);
	});
var $truqu$elm_md5$MD5$rotateLeft = F2(
	function (bits, input) {
		return (input << bits) | (input >>> (32 - bits));
	});
var $truqu$elm_md5$MD5$cmn = F8(
	function (fun, a, b, c, d, x, s, ac) {
		return A2(
			$truqu$elm_md5$MD5$addUnsigned,
			b,
			A2(
				$truqu$elm_md5$MD5$rotateLeft,
				s,
				A2(
					$truqu$elm_md5$MD5$addUnsigned,
					a,
					A2(
						$truqu$elm_md5$MD5$addUnsigned,
						ac,
						A2(
							$truqu$elm_md5$MD5$addUnsigned,
							A3(fun, b, c, d),
							x)))));
	});
var $truqu$elm_md5$MD5$f = F3(
	function (x, y, z) {
		return z ^ (x & (y ^ z));
	});
var $truqu$elm_md5$MD5$ff = F7(
	function (a, b, c, d, x, s, ac) {
		return A8($truqu$elm_md5$MD5$cmn, $truqu$elm_md5$MD5$f, a, b, c, d, x, s, ac);
	});
var $truqu$elm_md5$MD5$g = F3(
	function (x, y, z) {
		return y ^ (z & (x ^ y));
	});
var $truqu$elm_md5$MD5$gg = F7(
	function (a, b, c, d, x, s, ac) {
		return A8($truqu$elm_md5$MD5$cmn, $truqu$elm_md5$MD5$g, a, b, c, d, x, s, ac);
	});
var $truqu$elm_md5$MD5$h = F3(
	function (x, y, z) {
		return z ^ (x ^ y);
	});
var $truqu$elm_md5$MD5$hh = F7(
	function (a, b, c, d, x, s, ac) {
		return A8($truqu$elm_md5$MD5$cmn, $truqu$elm_md5$MD5$h, a, b, c, d, x, s, ac);
	});
var $elm$core$Bitwise$complement = _Bitwise_complement;
var $truqu$elm_md5$MD5$i = F3(
	function (x, y, z) {
		return y ^ (x | (~z));
	});
var $truqu$elm_md5$MD5$ii = F7(
	function (a, b, c, d, x, s, ac) {
		return A8($truqu$elm_md5$MD5$cmn, $truqu$elm_md5$MD5$i, a, b, c, d, x, s, ac);
	});
var $truqu$elm_md5$MD5$hex_ = F2(
	function (xs, acc) {
		var a = acc.a;
		var b = acc.b;
		var c = acc.c;
		var d = acc.d;
		if ((((((((((((((((xs.b && xs.b.b) && xs.b.b.b) && xs.b.b.b.b) && xs.b.b.b.b.b) && xs.b.b.b.b.b.b) && xs.b.b.b.b.b.b.b) && xs.b.b.b.b.b.b.b.b) && xs.b.b.b.b.b.b.b.b.b) && xs.b.b.b.b.b.b.b.b.b.b) && xs.b.b.b.b.b.b.b.b.b.b.b) && xs.b.b.b.b.b.b.b.b.b.b.b.b) && xs.b.b.b.b.b.b.b.b.b.b.b.b.b) && xs.b.b.b.b.b.b.b.b.b.b.b.b.b.b) && xs.b.b.b.b.b.b.b.b.b.b.b.b.b.b.b) && xs.b.b.b.b.b.b.b.b.b.b.b.b.b.b.b.b) && (!xs.b.b.b.b.b.b.b.b.b.b.b.b.b.b.b.b.b)) {
			var x0 = xs.a;
			var _v1 = xs.b;
			var x1 = _v1.a;
			var _v2 = _v1.b;
			var x2 = _v2.a;
			var _v3 = _v2.b;
			var x3 = _v3.a;
			var _v4 = _v3.b;
			var x4 = _v4.a;
			var _v5 = _v4.b;
			var x5 = _v5.a;
			var _v6 = _v5.b;
			var x6 = _v6.a;
			var _v7 = _v6.b;
			var x7 = _v7.a;
			var _v8 = _v7.b;
			var x8 = _v8.a;
			var _v9 = _v8.b;
			var x9 = _v9.a;
			var _v10 = _v9.b;
			var x10 = _v10.a;
			var _v11 = _v10.b;
			var x11 = _v11.a;
			var _v12 = _v11.b;
			var x12 = _v12.a;
			var _v13 = _v12.b;
			var x13 = _v13.a;
			var _v14 = _v13.b;
			var x14 = _v14.a;
			var _v15 = _v14.b;
			var x15 = _v15.a;
			var s44 = 21;
			var s43 = 15;
			var s42 = 10;
			var s41 = 6;
			var s34 = 23;
			var s33 = 16;
			var s32 = 11;
			var s31 = 4;
			var s24 = 20;
			var s23 = 14;
			var s22 = 9;
			var s21 = 5;
			var s14 = 22;
			var s13 = 17;
			var s12 = 12;
			var s11 = 7;
			var d00 = d;
			var c00 = c;
			var b00 = b;
			var a00 = a;
			var a01 = A7($truqu$elm_md5$MD5$ff, a00, b00, c00, d00, x0, s11, 3614090360);
			var d01 = A7($truqu$elm_md5$MD5$ff, d00, a01, b00, c00, x1, s12, 3905402710);
			var c01 = A7($truqu$elm_md5$MD5$ff, c00, d01, a01, b00, x2, s13, 606105819);
			var b01 = A7($truqu$elm_md5$MD5$ff, b00, c01, d01, a01, x3, s14, 3250441966);
			var a02 = A7($truqu$elm_md5$MD5$ff, a01, b01, c01, d01, x4, s11, 4118548399);
			var d02 = A7($truqu$elm_md5$MD5$ff, d01, a02, b01, c01, x5, s12, 1200080426);
			var c02 = A7($truqu$elm_md5$MD5$ff, c01, d02, a02, b01, x6, s13, 2821735955);
			var b02 = A7($truqu$elm_md5$MD5$ff, b01, c02, d02, a02, x7, s14, 4249261313);
			var a03 = A7($truqu$elm_md5$MD5$ff, a02, b02, c02, d02, x8, s11, 1770035416);
			var d03 = A7($truqu$elm_md5$MD5$ff, d02, a03, b02, c02, x9, s12, 2336552879);
			var c03 = A7($truqu$elm_md5$MD5$ff, c02, d03, a03, b02, x10, s13, 4294925233);
			var b03 = A7($truqu$elm_md5$MD5$ff, b02, c03, d03, a03, x11, s14, 2304563134);
			var a04 = A7($truqu$elm_md5$MD5$ff, a03, b03, c03, d03, x12, s11, 1804603682);
			var d04 = A7($truqu$elm_md5$MD5$ff, d03, a04, b03, c03, x13, s12, 4254626195);
			var c04 = A7($truqu$elm_md5$MD5$ff, c03, d04, a04, b03, x14, s13, 2792965006);
			var b04 = A7($truqu$elm_md5$MD5$ff, b03, c04, d04, a04, x15, s14, 1236535329);
			var a05 = A7($truqu$elm_md5$MD5$gg, a04, b04, c04, d04, x1, s21, 4129170786);
			var d05 = A7($truqu$elm_md5$MD5$gg, d04, a05, b04, c04, x6, s22, 3225465664);
			var c05 = A7($truqu$elm_md5$MD5$gg, c04, d05, a05, b04, x11, s23, 643717713);
			var b05 = A7($truqu$elm_md5$MD5$gg, b04, c05, d05, a05, x0, s24, 3921069994);
			var a06 = A7($truqu$elm_md5$MD5$gg, a05, b05, c05, d05, x5, s21, 3593408605);
			var d06 = A7($truqu$elm_md5$MD5$gg, d05, a06, b05, c05, x10, s22, 38016083);
			var c06 = A7($truqu$elm_md5$MD5$gg, c05, d06, a06, b05, x15, s23, 3634488961);
			var b06 = A7($truqu$elm_md5$MD5$gg, b05, c06, d06, a06, x4, s24, 3889429448);
			var a07 = A7($truqu$elm_md5$MD5$gg, a06, b06, c06, d06, x9, s21, 568446438);
			var d07 = A7($truqu$elm_md5$MD5$gg, d06, a07, b06, c06, x14, s22, 3275163606);
			var c07 = A7($truqu$elm_md5$MD5$gg, c06, d07, a07, b06, x3, s23, 4107603335);
			var b07 = A7($truqu$elm_md5$MD5$gg, b06, c07, d07, a07, x8, s24, 1163531501);
			var a08 = A7($truqu$elm_md5$MD5$gg, a07, b07, c07, d07, x13, s21, 2850285829);
			var d08 = A7($truqu$elm_md5$MD5$gg, d07, a08, b07, c07, x2, s22, 4243563512);
			var c08 = A7($truqu$elm_md5$MD5$gg, c07, d08, a08, b07, x7, s23, 1735328473);
			var b08 = A7($truqu$elm_md5$MD5$gg, b07, c08, d08, a08, x12, s24, 2368359562);
			var a09 = A7($truqu$elm_md5$MD5$hh, a08, b08, c08, d08, x5, s31, 4294588738);
			var d09 = A7($truqu$elm_md5$MD5$hh, d08, a09, b08, c08, x8, s32, 2272392833);
			var c09 = A7($truqu$elm_md5$MD5$hh, c08, d09, a09, b08, x11, s33, 1839030562);
			var b09 = A7($truqu$elm_md5$MD5$hh, b08, c09, d09, a09, x14, s34, 4259657740);
			var a10 = A7($truqu$elm_md5$MD5$hh, a09, b09, c09, d09, x1, s31, 2763975236);
			var d10 = A7($truqu$elm_md5$MD5$hh, d09, a10, b09, c09, x4, s32, 1272893353);
			var c10 = A7($truqu$elm_md5$MD5$hh, c09, d10, a10, b09, x7, s33, 4139469664);
			var b10 = A7($truqu$elm_md5$MD5$hh, b09, c10, d10, a10, x10, s34, 3200236656);
			var a11 = A7($truqu$elm_md5$MD5$hh, a10, b10, c10, d10, x13, s31, 681279174);
			var d11 = A7($truqu$elm_md5$MD5$hh, d10, a11, b10, c10, x0, s32, 3936430074);
			var c11 = A7($truqu$elm_md5$MD5$hh, c10, d11, a11, b10, x3, s33, 3572445317);
			var b11 = A7($truqu$elm_md5$MD5$hh, b10, c11, d11, a11, x6, s34, 76029189);
			var a12 = A7($truqu$elm_md5$MD5$hh, a11, b11, c11, d11, x9, s31, 3654602809);
			var d12 = A7($truqu$elm_md5$MD5$hh, d11, a12, b11, c11, x12, s32, 3873151461);
			var c12 = A7($truqu$elm_md5$MD5$hh, c11, d12, a12, b11, x15, s33, 530742520);
			var b12 = A7($truqu$elm_md5$MD5$hh, b11, c12, d12, a12, x2, s34, 3299628645);
			var a13 = A7($truqu$elm_md5$MD5$ii, a12, b12, c12, d12, x0, s41, 4096336452);
			var d13 = A7($truqu$elm_md5$MD5$ii, d12, a13, b12, c12, x7, s42, 1126891415);
			var c13 = A7($truqu$elm_md5$MD5$ii, c12, d13, a13, b12, x14, s43, 2878612391);
			var b13 = A7($truqu$elm_md5$MD5$ii, b12, c13, d13, a13, x5, s44, 4237533241);
			var a14 = A7($truqu$elm_md5$MD5$ii, a13, b13, c13, d13, x12, s41, 1700485571);
			var d14 = A7($truqu$elm_md5$MD5$ii, d13, a14, b13, c13, x3, s42, 2399980690);
			var c14 = A7($truqu$elm_md5$MD5$ii, c13, d14, a14, b13, x10, s43, 4293915773);
			var b14 = A7($truqu$elm_md5$MD5$ii, b13, c14, d14, a14, x1, s44, 2240044497);
			var a15 = A7($truqu$elm_md5$MD5$ii, a14, b14, c14, d14, x8, s41, 1873313359);
			var d15 = A7($truqu$elm_md5$MD5$ii, d14, a15, b14, c14, x15, s42, 4264355552);
			var c15 = A7($truqu$elm_md5$MD5$ii, c14, d15, a15, b14, x6, s43, 2734768916);
			var b15 = A7($truqu$elm_md5$MD5$ii, b14, c15, d15, a15, x13, s44, 1309151649);
			var a16 = A7($truqu$elm_md5$MD5$ii, a15, b15, c15, d15, x4, s41, 4149444226);
			var d16 = A7($truqu$elm_md5$MD5$ii, d15, a16, b15, c15, x11, s42, 3174756917);
			var c16 = A7($truqu$elm_md5$MD5$ii, c15, d16, a16, b15, x2, s43, 718787259);
			var b16 = A7($truqu$elm_md5$MD5$ii, b15, c16, d16, a16, x9, s44, 3951481745);
			var b17 = A2($truqu$elm_md5$MD5$addUnsigned, b00, b16);
			var c17 = A2($truqu$elm_md5$MD5$addUnsigned, c00, c16);
			var d17 = A2($truqu$elm_md5$MD5$addUnsigned, d00, d16);
			var a17 = A2($truqu$elm_md5$MD5$addUnsigned, a00, a16);
			return {a: a17, b: b17, c: c17, d: d17};
		} else {
			return acc;
		}
	});
var $truqu$elm_md5$MD5$iget = F2(
	function (index, array) {
		return A2(
			$elm$core$Maybe$withDefault,
			0,
			A2($elm$core$Array$get, index, array));
	});
var $truqu$elm_md5$MD5$consume = F2(
	function (_char, _v0) {
		var hashState = _v0.a;
		var _v1 = _v0.b;
		var byteCount = _v1.a;
		var words = _v1.b;
		var totalByteCount = _v0.c;
		var wordCount = (byteCount / 4) | 0;
		var oldWord = A2($truqu$elm_md5$MD5$iget, wordCount, words);
		var bytePosition = 8 * (byteCount % 4);
		var code = _char << bytePosition;
		var newWord = oldWord | code;
		var newWords = A3($elm$core$Array$set, wordCount, newWord, words);
		return (byteCount === 63) ? _Utils_Tuple3(
			A2(
				$truqu$elm_md5$MD5$hex_,
				$elm$core$Array$toList(newWords),
				hashState),
			_Utils_Tuple2(0, $truqu$elm_md5$MD5$emptyWords),
			totalByteCount + 1) : _Utils_Tuple3(
			hashState,
			_Utils_Tuple2(byteCount + 1, newWords),
			totalByteCount + 1);
	});
var $truqu$elm_md5$MD5$finishUp = function (_v0) {
	var hashState = _v0.a;
	var _v1 = _v0.b;
	var byteCount = _v1.a;
	var words = _v1.b;
	var totalByteCount = _v0.c;
	var wordCount = (byteCount / 4) | 0;
	var oldWord = A2($truqu$elm_md5$MD5$iget, wordCount, words);
	var bytePosition = 8 * (byteCount % 4);
	var code = 128 << bytePosition;
	var newWord = oldWord | code;
	var newWords = A3($elm$core$Array$set, wordCount, newWord, words);
	return (wordCount < 14) ? function (x) {
		return A2($truqu$elm_md5$MD5$hex_, x, hashState);
	}(
		$elm$core$Array$toList(
			A3(
				$elm$core$Array$set,
				15,
				totalByteCount >>> 29,
				A3($elm$core$Array$set, 14, totalByteCount << 3, newWords)))) : function (x) {
		return A2(
			$truqu$elm_md5$MD5$hex_,
			x,
			A2(
				$truqu$elm_md5$MD5$hex_,
				$elm$core$Array$toList(newWords),
				hashState));
	}(
		$elm$core$Array$toList(
			A3(
				$elm$core$Array$set,
				15,
				totalByteCount >>> 29,
				A3($elm$core$Array$set, 14, totalByteCount << 3, $truqu$elm_md5$MD5$emptyWords))));
};
var $zwilias$elm_utf_tools$String$UTF8$utf32ToUtf8 = F3(
	function (add, _char, acc) {
		return (_char < 128) ? A2(add, _char, acc) : ((_char < 2048) ? A2(
			add,
			128 | (63 & _char),
			A2(add, 192 | (_char >>> 6), acc)) : ((_char < 65536) ? A2(
			add,
			128 | (63 & _char),
			A2(
				add,
				128 | (63 & (_char >>> 6)),
				A2(add, 224 | (_char >>> 12), acc))) : A2(
			add,
			128 | (63 & _char),
			A2(
				add,
				128 | (63 & (_char >>> 6)),
				A2(
					add,
					128 | (63 & (_char >>> 12)),
					A2(add, 240 | (_char >>> 18), acc))))));
	});
var $zwilias$elm_utf_tools$String$UTF8$foldl = F3(
	function (op, initialAcc, input) {
		return A3(
			$elm$core$String$foldl,
			F2(
				function (_char, acc) {
					return A3(
						$zwilias$elm_utf_tools$String$UTF8$utf32ToUtf8,
						op,
						$elm$core$Char$toCode(_char),
						acc);
				}),
			initialAcc,
			input);
	});
var $truqu$elm_md5$MD5$State = F4(
	function (a, b, c, d) {
		return {a: a, b: b, c: c, d: d};
	});
var $truqu$elm_md5$MD5$initialHashState = A4($truqu$elm_md5$MD5$State, 1732584193, 4023233417, 2562383102, 271733878);
var $truqu$elm_md5$MD5$hash = function (input) {
	return $truqu$elm_md5$MD5$finishUp(
		A3(
			$zwilias$elm_utf_tools$String$UTF8$foldl,
			$truqu$elm_md5$MD5$consume,
			_Utils_Tuple3(
				$truqu$elm_md5$MD5$initialHashState,
				_Utils_Tuple2(0, $truqu$elm_md5$MD5$emptyWords),
				0),
			input));
};
var $truqu$elm_md5$MD5$bytes = function (string) {
	var _v0 = $truqu$elm_md5$MD5$hash(string);
	var a = _v0.a;
	var b = _v0.b;
	var c = _v0.c;
	var d = _v0.d;
	return _List_fromArray(
		[a & 255, (a >>> 8) & 255, (a >>> 16) & 255, (a >>> 24) & 255, b & 255, (b >>> 8) & 255, (b >>> 16) & 255, (b >>> 24) & 255, c & 255, (c >>> 8) & 255, (c >>> 16) & 255, (c >>> 24) & 255, d & 255, (d >>> 8) & 255, (d >>> 16) & 255, (d >>> 24) & 255]);
};
var $elm$core$String$padLeft = F3(
	function (n, _char, string) {
		return _Utils_ap(
			A2(
				$elm$core$String$repeat,
				n - $elm$core$String$length(string),
				$elm$core$String$fromChar(_char)),
			string);
	});
var $truqu$elm_md5$MD5$toHex = function (_byte) {
	switch (_byte) {
		case 0:
			return '0';
		case 1:
			return '1';
		case 2:
			return '2';
		case 3:
			return '3';
		case 4:
			return '4';
		case 5:
			return '5';
		case 6:
			return '6';
		case 7:
			return '7';
		case 8:
			return '8';
		case 9:
			return '9';
		case 10:
			return 'a';
		case 11:
			return 'b';
		case 12:
			return 'c';
		case 13:
			return 'd';
		case 14:
			return 'e';
		case 15:
			return 'f';
		default:
			return _Utils_ap(
				$truqu$elm_md5$MD5$toHex((_byte / 16) | 0),
				$truqu$elm_md5$MD5$toHex(_byte % 16));
	}
};
var $truqu$elm_md5$MD5$hex = function (s) {
	return A3(
		$elm$core$List$foldl,
		F2(
			function (b, acc) {
				return _Utils_ap(
					acc,
					A3(
						$elm$core$String$padLeft,
						2,
						_Utils_chr('0'),
						$truqu$elm_md5$MD5$toHex(b)));
			}),
		'',
		$truqu$elm_md5$MD5$bytes(s));
};
var $author$project$LastFm$notSoSecret = '0cec3ca0f58e04a5082f1131aba1e0d3';
var $author$project$LastFm$authenticatedParams = function (params) {
	var extendedParams = A2(
		$elm$core$List$cons,
		_Utils_Tuple2('api_key', $author$project$LastFm$apiKey),
		params);
	return A2(
		$elm$core$List$sortBy,
		$elm$core$Tuple$first,
		A2(
			$elm$core$List$cons,
			_Utils_Tuple2('format', 'json'),
			A2(
				$author$project$List$Ext$addTo,
				extendedParams,
				A2(
					$elm$core$Tuple$pair,
					'api_sig',
					$truqu$elm_md5$MD5$hex(
						A2(
							$author$project$String$Ext$addSuffix,
							$author$project$LastFm$notSoSecret,
							$elm$core$String$concat(
								A2(
									$elm$core$List$map,
									$author$project$Tuple$Ext$uncurry($elm$core$String$append),
									A2($elm$core$List$sortBy, $elm$core$Tuple$first, extendedParams)))))))));
};
var $author$project$LastFm$authenticatedUrl = function (params) {
	return A2(
		$elm$core$String$append,
		$author$project$LastFm$apiUrl,
		$author$project$Common$queryString(
			$author$project$LastFm$authenticatedParams(params)));
};
var $elm$http$Http$get = function (r) {
	return $elm$http$Http$request(
		{body: $elm$http$Http$emptyBody, expect: r.expect, headers: _List_Nil, method: 'GET', timeout: $elm$core$Maybe$Nothing, tracker: $elm$core$Maybe$Nothing, url: r.url});
};
var $author$project$LastFm$authenticationCommand = F2(
	function (msg, url) {
		var _v0 = A2($author$project$Url$Ext$extractQueryParam, 'token', url);
		if (_v0.$ === 'Just') {
			var token = _v0.a;
			return $elm$http$Http$get(
				{
					expect: A2(
						$elm$http$Http$expectJson,
						msg,
						A2(
							$elm$json$Json$Decode$at,
							_List_fromArray(
								['session', 'key']),
							$elm$json$Json$Decode$string)),
					url: $author$project$LastFm$authenticatedUrl(
						_List_fromArray(
							[
								_Utils_Tuple2('method', 'auth.getSession'),
								_Utils_Tuple2('token', token)
							]))
				});
		} else {
			return $elm$core$Platform$Cmd$none;
		}
	});
var $author$project$Notifications$stickySuccess = function (content) {
	return A4(
		$author$project$Notifications$Notification,
		$author$project$Notifications$Success,
		A2($robinheghan$murmur3$Murmur3$hashString, 0, content),
		{sticky: true, wasDismissed: false},
		$author$project$Notifications$render(content));
};
var $author$project$UI$User$State$Import$loadHypaethralUserData = F2(
	function (json, model) {
		return A2(
			$Fresheyeball$elm_return$Return$andThen,
			$author$project$UI$Sources$State$addSourcesFromUrl,
			A2(
				$Fresheyeball$elm_return$Return$andThen,
				function (m) {
					return m.isUpgrading ? A2(
						$author$project$UI$Common$State$showNotificationWithModel,
						m,
						$author$project$Notifications$stickySuccess('\n                    Thank you for using Diffuse V1!\n                    If you want to import your old data,\n                    please go to the [import page](#/settings/data).\n                    ')) : $Fresheyeball$elm_return$Return$singleton(m);
				},
				A2(
					$Fresheyeball$elm_return$Return$andThen,
					function (m) {
						var _v0 = $author$project$Url$Ext$action(m.url);
						if ((((_v0.b && (_v0.a === 'authenticate')) && _v0.b.b) && (_v0.b.a === 'lastfm')) && (!_v0.b.b.b)) {
							var _v1 = _v0.b;
							return A2(
								$author$project$Return$Ext$communicate,
								A2($author$project$LastFm$authenticationCommand, $author$project$UI$Types$GotLastFmSession, m.url),
								function (n) {
									return _Utils_update(
										m,
										{lastFm: n});
								}(
									{authenticating: true, sessionKey: $elm$core$Maybe$Nothing}));
						} else {
							return $Fresheyeball$elm_return$Return$singleton(m);
						}
					},
					A2($author$project$UI$User$State$Import$importHypaethral, json, model))));
	});
var $author$project$UI$Demo$favourites = _List_fromArray(
	[
		{artist: 'James Blake', title: 'Essential Mix (09-17-2011)'}
	]);
var $author$project$UI$Demo$sources = function () {
	var secret = A2(
		$elm$core$Result$withDefault,
		'',
		$truqu$elm_base64$Base64$decode('Z0hPQkdHRzU1aXc0a0RDbjdjWlRJYTVTUDRZWnpERkRzQnFCYWI4Mg=='));
	var key = A2(
		$elm$core$Result$withDefault,
		'',
		$truqu$elm_base64$Base64$decode('QUtJQTZPUTNFVk1BWFZDRFFINkI='));
	return _List_fromArray(
		[
			{
			data: $elm$core$Dict$fromList(
				_List_fromArray(
					[
						_Utils_Tuple2('accessKey', key),
						_Utils_Tuple2('bucketName', 'ongaku-ryoho-demo'),
						_Utils_Tuple2('directoryPath', '/'),
						_Utils_Tuple2('name', 'Demo'),
						_Utils_Tuple2('region', 'us-east-1'),
						_Utils_Tuple2('secretKey', secret)
					])),
			directoryPlaylists: true,
			enabled: true,
			id: '15076402187342',
			service: $author$project$Sources$AmazonS3
		}
		]);
}();
var $author$project$UI$Demo$tracks = function (insertedAt) {
	return _List_fromArray(
		[
			{
			id: 'MTUwNzY0MDIxODczNDIvL0ZyZWUgbXVzaWMvKFNXTDAxMyktb3JpSmFudXMtV0VCLTIwMTQtRlJFRS8wMS1ib25pdGEubXAz',
			insertedAt: insertedAt,
			path: 'Free music/(SWL013)-oriJanus-WEB-2014-FREE/01-bonita.mp3',
			sourceId: '15076402187342',
			tags: {
				album: 'Soulection White Label: 013',
				artist: 'oriJanus',
				disc: 1,
				genre: $elm$core$Maybe$Just('Soulection'),
				nr: 1,
				picture: $elm$core$Maybe$Nothing,
				title: 'Bonita',
				year: $elm$core$Maybe$Nothing
			}
		},
			{
			id: 'MTUwNzY0MDIxODczNDIvL0ZyZWUgbXVzaWMvKFNXTDAxMyktb3JpSmFudXMtV0VCLTIwMTQtRlJFRS8wMi02Lm1wMw',
			insertedAt: insertedAt,
			path: 'Free music/(SWL013)-oriJanus-WEB-2014-FREE/02-6.mp3',
			sourceId: '15076402187342',
			tags: {
				album: 'Soulection White Label: 013',
				artist: 'oriJanus',
				disc: 1,
				genre: $elm$core$Maybe$Just('Soulection'),
				nr: 2,
				picture: $elm$core$Maybe$Nothing,
				title: '6',
				year: $elm$core$Maybe$Nothing
			}
		},
			{
			id: 'MTUwNzY0MDIxODczNDIvL0ZyZWUgbXVzaWMvKFNXTDAxMyktb3JpSmFudXMtV0VCLTIwMTQtRlJFRS8wMy1ob3RfcmVtaXhfZnQuX3Rlay5sdW5fJl96aWtvbW8ubXAz',
			insertedAt: insertedAt,
			path: 'Free music/(SWL013)-oriJanus-WEB-2014-FREE/03-hot_remix_ft._tek.lun_&_zikomo.mp3',
			sourceId: '15076402187342',
			tags: {
				album: 'Soulection White Label: 013',
				artist: 'oriJanus',
				disc: 1,
				genre: $elm$core$Maybe$Just('Soulection'),
				nr: 3,
				picture: $elm$core$Maybe$Nothing,
				title: 'Hot Remix ft. Tek.Lun & Zikomo',
				year: $elm$core$Maybe$Nothing
			}
		},
			{
			id: 'MTUwNzY0MDIxODczNDIvL0ZyZWUgbXVzaWMvQ29tX1RydWlzZS1DaGVtaWNhbF9MZWdzLTIwMTItRlJFRS8wMS1jb21fdHJ1aXNlLWNoZW1pY2FsX2xlZ3MubXAz',
			insertedAt: insertedAt,
			path: 'Free music/Com_Truise-Chemical_Legs-2012-FREE/01-com_truise-chemical_legs.mp3',
			sourceId: '15076402187342',
			tags: {
				album: 'Adult Swim Singles Project 2012',
				artist: 'Com Truise',
				disc: 1,
				genre: $elm$core$Maybe$Nothing,
				nr: 9,
				picture: $elm$core$Maybe$Nothing,
				title: 'Chemical Legs',
				year: $elm$core$Maybe$Just(2012)
			}
		},
			{
			id: 'MTUwNzY0MDIxODczNDIvL0ZyZWUgbXVzaWMvTWFudWVsZV9BdHplbmlfLV8wNF8tX0xpdHRsZV9TdGFyLm1wMw',
			insertedAt: insertedAt,
			path: 'Free music/Manuele_Atzeni_-_04_-_Little_Star.mp3',
			sourceId: '15076402187342',
			tags: {
				album: 'The Miyazaki Tour EP',
				artist: 'Manuele Atzeni',
				disc: 1,
				genre: $elm$core$Maybe$Just('Funk'),
				nr: 4,
				picture: $elm$core$Maybe$Nothing,
				title: 'Little Star',
				year: $elm$core$Maybe$Nothing
			}
		},
			{
			id: 'MTUwNzY0MDIxODczNDIvL0ZyZWUgbXVzaWMvUGF0cmlja19MZWVfLV8wMl8tX1F1aXR0aW5fVGltZS5tcDM',
			insertedAt: insertedAt,
			path: 'Free music/Patrick_Lee_-_02_-_Quittin_Time.mp3',
			sourceId: '15076402187342',
			tags: {
				album: 'The Last Thing',
				artist: 'Patrick Lee',
				disc: 1,
				genre: $elm$core$Maybe$Just('Electronic'),
				nr: 2,
				picture: $elm$core$Maybe$Nothing,
				title: 'Quittin\' Time',
				year: $elm$core$Maybe$Nothing
			}
		},
			{
			id: 'MTUwNzY0MDIxODczNDIvL1JhZGlvL2phbWVzX2JsYWtlLWVzc2VudGlhbF9taXgtc2F0LTA5LTE3LTIwMTEubXAz',
			insertedAt: insertedAt,
			path: 'Radio/james_blake-essential_mix-sat-09-17-2011.mp3',
			sourceId: '15076402187342',
			tags: {
				album: 'Essential Mix-SAT-09-17',
				artist: 'James Blake',
				disc: 1,
				genre: $elm$core$Maybe$Just('Electronic'),
				nr: 1,
				picture: $elm$core$Maybe$Nothing,
				title: 'Essential Mix (09-17-2011)',
				year: $elm$core$Maybe$Nothing
			}
		}
		]);
};
var $author$project$UI$Demo$tape = function (currentTime) {
	return $elm$json$Json$Encode$object(
		_List_fromArray(
			[
				_Utils_Tuple2(
				'favourites',
				A2($elm$json$Json$Encode$list, $author$project$Tracks$Encoding$encodeFavourite, $author$project$UI$Demo$favourites)),
				_Utils_Tuple2(
				'sources',
				A2($elm$json$Json$Encode$list, $author$project$Sources$Encoding$encode, $author$project$UI$Demo$sources)),
				_Utils_Tuple2(
				'tracks',
				A2(
					$elm$json$Json$Encode$list,
					$author$project$Tracks$Encoding$encodeTrack,
					$author$project$UI$Demo$tracks(currentTime)))
			]));
};
var $author$project$UI$User$State$Import$insertDemo = function (model) {
	return $author$project$UI$User$State$Import$saveAllHypaethralData(
		A2(
			$author$project$UI$User$State$Import$loadHypaethralUserData,
			$author$project$UI$Demo$tape(model.currentTime),
			model));
};
var $author$project$Common$WaitingForActivation = {$: 'WaitingForActivation'};
var $author$project$UI$Other$State$installedServiceWorker = function (model) {
	var _v0 = model.serviceWorkerStatus;
	if (_v0.$ === 'InstallingNew') {
		return $Fresheyeball$elm_return$Return$singleton(
			_Utils_update(
				model,
				{serviceWorkerStatus: $author$project$Common$WaitingForActivation}));
	} else {
		return $Fresheyeball$elm_return$Return$singleton(
			_Utils_update(
				model,
				{serviceWorkerStatus: $author$project$Common$Activated}));
	}
};
var $author$project$Common$InstallingNew = {$: 'InstallingNew'};
var $author$project$UI$Other$State$installingServiceWorker = function (model) {
	return $Fresheyeball$elm_return$Return$singleton(
		_Utils_update(
			model,
			{serviceWorkerStatus: $author$project$Common$InstallingNew}));
};
var $author$project$UI$Ports$pause = _Platform_outgoingPort(
	'pause',
	function ($) {
		return $elm$json$Json$Encode$null;
	});
var $author$project$UI$Ports$play = _Platform_outgoingPort(
	'play',
	function ($) {
		return $elm$json$Json$Encode$null;
	});
var $author$project$UI$Ports$activeQueueItemChanged = _Platform_outgoingPort(
	'activeQueueItemChanged',
	function ($) {
		return A3(
			$elm$core$Maybe$destruct,
			$elm$json$Json$Encode$null,
			function ($) {
				return $elm$json$Json$Encode$object(
					_List_fromArray(
						[
							_Utils_Tuple2(
							'isCached',
							$elm$json$Json$Encode$bool($.isCached)),
							_Utils_Tuple2(
							'progress',
							function ($) {
								return A3($elm$core$Maybe$destruct, $elm$json$Json$Encode$null, $elm$json$Json$Encode$float, $);
							}($.progress)),
							_Utils_Tuple2(
							'sourceId',
							$elm$json$Json$Encode$string($.sourceId)),
							_Utils_Tuple2(
							'trackId',
							$elm$json$Json$Encode$string($.trackId)),
							_Utils_Tuple2(
							'trackPath',
							$elm$json$Json$Encode$string($.trackPath)),
							_Utils_Tuple2(
							'trackTags',
							function ($) {
								return $elm$json$Json$Encode$object(
									_List_fromArray(
										[
											_Utils_Tuple2(
											'album',
											$elm$json$Json$Encode$string($.album)),
											_Utils_Tuple2(
											'artist',
											$elm$json$Json$Encode$string($.artist)),
											_Utils_Tuple2(
											'disc',
											$elm$json$Json$Encode$int($.disc)),
											_Utils_Tuple2(
											'genre',
											function ($) {
												return A3($elm$core$Maybe$destruct, $elm$json$Json$Encode$null, $elm$json$Json$Encode$string, $);
											}($.genre)),
											_Utils_Tuple2(
											'nr',
											$elm$json$Json$Encode$int($.nr)),
											_Utils_Tuple2(
											'picture',
											function ($) {
												return A3($elm$core$Maybe$destruct, $elm$json$Json$Encode$null, $elm$json$Json$Encode$string, $);
											}($.picture)),
											_Utils_Tuple2(
											'title',
											$elm$json$Json$Encode$string($.title)),
											_Utils_Tuple2(
											'year',
											function ($) {
												return A3($elm$core$Maybe$destruct, $elm$json$Json$Encode$null, $elm$json$Json$Encode$int, $);
											}($.year))
										]));
							}($.trackTags)),
							_Utils_Tuple2(
							'url',
							$elm$json$Json$Encode$string($.url))
						]));
			},
			$);
	});
var $author$project$UI$Queue$State$changeActiveItem = F2(
	function (maybeItem, model) {
		return A2(
			$Fresheyeball$elm_return$Return$andThen,
			$author$project$UI$Queue$State$fill,
			A2(
				$Fresheyeball$elm_return$Return$return,
				_Utils_update(
					model,
					{nowPlaying: maybeItem}),
				$author$project$UI$Ports$activeQueueItemChanged(
					A2(
						$elm$core$Maybe$map,
						A4(
							$author$project$Queue$makeEngineItem,
							model.currentTime,
							model.sources,
							model.cachedTracks,
							model.rememberProgress ? model.progress : $elm$core$Dict$empty),
						A2(
							$elm$core$Maybe$map,
							A2(
								$elm$core$Basics$composeR,
								function ($) {
									return $.identifiedTrack;
								},
								$elm$core$Tuple$second),
							maybeItem)))));
	});
var $author$project$UI$Queue$State$shift = function (model) {
	return A2(
		$author$project$UI$Queue$State$changeActiveItem,
		$elm$core$List$head(model.playingNext),
		_Utils_update(
			model,
			{
				playedPreviously: A2(
					$elm$core$Maybe$withDefault,
					model.playedPreviously,
					A2(
						$elm$core$Maybe$map,
						$elm$core$List$append(model.playedPreviously),
						A2($elm$core$Maybe$map, $elm$core$List$singleton, model.nowPlaying))),
				playingNext: A2($elm$core$List$drop, 1, model.playingNext)
			}));
};
var $author$project$UI$Audio$State$playPause = function (model) {
	return $elm_community$maybe_extra$Maybe$Extra$isNothing(model.nowPlaying) ? $author$project$UI$Queue$State$shift(model) : (model.audioIsPlaying ? A2(
		$author$project$Return$Ext$communicate,
		$author$project$UI$Ports$pause(_Utils_Tuple0),
		model) : A2(
		$author$project$Return$Ext$communicate,
		$author$project$UI$Ports$play(_Utils_Tuple0),
		model));
};
var $author$project$UI$Queue$State$rewind = function (model) {
	return A2(
		$author$project$UI$Queue$State$changeActiveItem,
		$elm_community$list_extra$List$Extra$last(model.playedPreviously),
		_Utils_update(
			model,
			{
				playedPreviously: A2(
					$elm$core$Maybe$withDefault,
					_List_Nil,
					$elm_community$list_extra$List$Extra$init(model.playedPreviously)),
				playingNext: A2(
					$elm$core$Maybe$withDefault,
					model.playingNext,
					A2(
						$elm$core$Maybe$map,
						function (item) {
							return A2($elm$core$List$cons, item, model.playingNext);
						},
						model.nowPlaying))
			}));
};
var $author$project$Alfred$getAt = F2(
	function (index, alfred) {
		return A2(
			$elm_community$list_extra$List$Extra$getAt,
			index,
			A2(
				$elm$core$List$concatMap,
				function ($) {
					return $.items;
				},
				alfred.results));
	});
var $author$project$UI$Alfred$State$runAction = F2(
	function (index, model) {
		var _v0 = model.alfred;
		if (_v0.$ === 'Just') {
			var instance = _v0.a;
			return A2(
				$Fresheyeball$elm_return$Return$return,
				_Utils_update(
					model,
					{alfred: $elm$core$Maybe$Nothing}),
				$elm$core$Platform$Cmd$batch(
					A2(
						$elm$core$List$map,
						$author$project$Return$Ext$task,
						instance.action(
							{
								result: A2($author$project$Alfred$getAt, index, instance),
								searchTerm: instance.searchTerm
							}))));
		} else {
			return $Fresheyeball$elm_return$Return$singleton(
				_Utils_update(
					model,
					{alfred: $elm$core$Maybe$Nothing}));
		}
	});
var $author$project$UI$Alfred$State$runSelectedAction = function (model) {
	var _v0 = model.alfred;
	if (_v0.$ === 'Just') {
		var instance = _v0.a;
		return A2($author$project$UI$Alfred$State$runAction, instance.focus, model);
	} else {
		return $Fresheyeball$elm_return$Return$singleton(model);
	}
};
var $ohanhi$keyboard$Keyboard$Shift = {$: 'Shift'};
var $author$project$UI$Tracks$Scene$Covers$coverRows = F3(
	function (maybeNowPlaying, columns, covers) {
		return function (foldResult) {
			return {
				nowPlayingRowIndex: foldResult.nowPlayingRowIdx,
				rows: _Utils_ap(
					foldResult.collection,
					_List_fromArray(
						[foldResult.current]))
			};
		}(
			A3(
				$elm$core$List$foldl,
				F2(
					function (cover, _v0) {
						var collection = _v0.collection;
						var current = _v0.current;
						var nowPlayingRowIdx = _v0.nowPlayingRowIdx;
						var trackGroup = _v0.trackGroup;
						var trackGroupCurr = A2(
							$elm$core$Maybe$map,
							function ($) {
								return $.name;
							},
							cover.identifiedTrackCover.a.group);
						var npr = function (addition) {
							var _v1 = _Utils_Tuple2(maybeNowPlaying, nowPlayingRowIdx);
							if ((_v1.a.$ === 'Just') && (_v1.b.$ === 'Nothing')) {
								var _v2 = _v1.a.a;
								var t = _v2.b;
								var _v3 = _v1.b;
								return A2($elm$core$List$member, t.id, cover.trackIds) ? $elm$core$Maybe$Just(
									$elm$core$List$length(collection) + A3($author$project$Conditional$ifThenElse, addition, 1, 0)) : $elm$core$Maybe$Nothing;
							} else {
								return nowPlayingRowIdx;
							}
						};
						return ((_Utils_cmp(
							$elm$core$List$length(current),
							columns) < 0) && ($elm_community$maybe_extra$Maybe$Extra$isNothing(trackGroup) || _Utils_eq(trackGroupCurr, trackGroup))) ? {
							collection: collection,
							current: _Utils_ap(
								current,
								_List_fromArray(
									[cover])),
							nowPlayingRowIdx: npr(false),
							trackGroup: trackGroupCurr
						} : {
							collection: _Utils_ap(
								collection,
								_List_fromArray(
									[current])),
							current: _List_fromArray(
								[cover]),
							nowPlayingRowIdx: npr(true),
							trackGroup: trackGroupCurr
						};
					}),
				{collection: _List_Nil, current: _List_Nil, nowPlayingRowIdx: $elm$core$Maybe$Nothing, trackGroup: $elm$core$Maybe$Nothing},
				covers));
	});
var $author$project$UI$Tracks$Scene$Covers$determineContainerWidth = function (viewportWidth) {
	return A2(
		$elm$core$Basics$min,
		768,
		$elm$core$Basics$round(viewportWidth) - 32);
};
var $author$project$UI$Tracks$Scene$Covers$determineColumns = function (viewportWidth) {
	var containerWidth = $author$project$UI$Tracks$Scene$Covers$determineContainerWidth(viewportWidth);
	return (containerWidth < 260) ? 1 : ((containerWidth < 480) ? 2 : ((containerWidth <= 590) ? 3 : 4));
};
var $author$project$Tracks$shouldRenderGroup = function (identifiers) {
	return A2(
		$elm$core$Maybe$withDefault,
		false,
		A2(
			$elm$core$Maybe$map,
			A2(
				$elm$core$Basics$composeR,
				function ($) {
					return $.firstInGroup;
				},
				$elm$core$Basics$eq(true)),
			identifiers.group));
};
var $author$project$UI$Tracks$Scene$Covers$dynamicRowHeight = F3(
	function (_v0, _v1, coverRow) {
		var columns = _v0.columns;
		var containerWidth = _v0.containerWidth;
		var rowHeight = (((containerWidth - 16) / columns) | 0) + (46 + 16);
		var shouldRenderGroup = A2(
			$elm$core$Maybe$withDefault,
			false,
			A2(
				$elm$core$Maybe$map,
				A2($elm$core$Basics$composeR, $elm$core$Tuple$first, $author$project$Tracks$shouldRenderGroup),
				A2(
					$elm$core$Maybe$andThen,
					A2(
						$elm$core$Basics$composeR,
						function ($) {
							return $.tracks;
						},
						$elm$core$List$head),
					$elm$core$List$head(coverRow))));
		return shouldRenderGroup ? (42 + rowHeight) : rowHeight;
	});
var $author$project$UI$Tracks$Scene$Covers$scrollToNowPlaying = F3(
	function (viewportWidth, covers, nowPlaying) {
		var containerWidth = $author$project$UI$Tracks$Scene$Covers$determineContainerWidth(viewportWidth);
		var columns = $author$project$UI$Tracks$Scene$Covers$determineColumns(viewportWidth);
		var rowHeightArgs = {columns: columns, containerWidth: containerWidth};
		var _v0 = A3(
			$author$project$UI$Tracks$Scene$Covers$coverRows,
			$elm$core$Maybe$Just(nowPlaying),
			columns,
			covers);
		var rows = _v0.rows;
		var nowPlayingRowIndex = _v0.nowPlayingRowIndex;
		if (nowPlayingRowIndex.$ === 'Just') {
			var idx = nowPlayingRowIndex.a;
			return A2(
				$elm$core$Task$attempt,
				$elm$core$Basics$always($author$project$UI$Types$Bypass),
				A3(
					$elm$browser$Browser$Dom$setViewportOf,
					$author$project$UI$Tracks$Scene$Covers$containerId,
					0,
					11 + A3(
						$elm$core$List$foldl,
						function (a) {
							return $elm$core$Basics$add(
								A3($author$project$UI$Tracks$Scene$Covers$dynamicRowHeight, rowHeightArgs, 0, a));
						},
						0,
						A2($elm$core$List$take, idx, rows))));
		} else {
			return $elm$core$Platform$Cmd$none;
		}
	});
var $author$project$UI$Tracks$Scene$List$rowHeight = 35;
var $author$project$UI$Tracks$Scene$List$dynamicRowHeight = F2(
	function (_v0, _v1) {
		var i = _v1.a;
		var t = _v1.b;
		return $author$project$Tracks$shouldRenderGroup(i) ? (((16 + 18) + 12) + $author$project$UI$Tracks$Scene$List$rowHeight) : $author$project$UI$Tracks$Scene$List$rowHeight;
	});
var $author$project$UI$Tracks$Scene$List$scrollToNowPlaying = F2(
	function (harvest, _v0) {
		var identifiers = _v0.a;
		return A2(
			$elm$core$Task$attempt,
			$elm$core$Basics$always($author$project$UI$Types$Bypass),
			A3(
				$elm$browser$Browser$Dom$setViewportOf,
				$author$project$UI$Tracks$Scene$List$containerId,
				0,
				function (n) {
					return ((22 - ($author$project$UI$Tracks$Scene$List$rowHeight / 2)) + 2) + n;
				}(
					A3(
						$elm$core$List$foldl,
						function (a) {
							return $elm$core$Basics$add(
								A2($author$project$UI$Tracks$Scene$List$dynamicRowHeight, 0, a));
						},
						0,
						A2($elm$core$List$take, identifiers.indexInList, harvest)))));
	});
var $author$project$UI$Tracks$State$scrollToNowPlaying = function (model) {
	return A2(
		$elm$core$Maybe$withDefault,
		$Fresheyeball$elm_return$Return$singleton(model),
		A2(
			$elm$core$Maybe$map,
			$Fresheyeball$elm_return$Return$andThen(
				$author$project$UI$Common$State$changeUrlUsingPage($author$project$UI$Page$Index)),
			A2(
				$elm$core$Maybe$map,
				function (_v0) {
					var identifiers = _v0.a;
					var track = _v0.b;
					var _v1 = model.scene;
					if (_v1.$ === 'Covers') {
						return A2($elm$core$List$member, $ohanhi$keyboard$Keyboard$Shift, model.pressedKeys) ? A2(
							$Fresheyeball$elm_return$Return$return,
							_Utils_update(
								model,
								{selectedCover: $elm$core$Maybe$Nothing}),
							A3(
								$author$project$UI$Tracks$Scene$Covers$scrollToNowPlaying,
								model.viewport.width,
								model.covers.harvested,
								_Utils_Tuple2(identifiers, track))) : A2(
							$author$project$Return$Ext$communicate,
							$author$project$UI$Ports$loadAlbumCovers(
								{coverView: true, list: true}),
							A3(
								$elm_community$maybe_extra$Maybe$Extra$unwrap,
								model,
								function (cover) {
									return _Utils_update(
										model,
										{
											selectedCover: $elm$core$Maybe$Just(cover)
										});
								},
								A2(
									$elm_community$list_extra$List$Extra$find,
									function (cover) {
										return A2($elm$core$List$member, track.id, cover.trackIds);
									},
									model.covers.harvested)));
					} else {
						return A2(
							$Fresheyeball$elm_return$Return$return,
							_Utils_update(
								model,
								{selectedCover: $elm$core$Maybe$Nothing}),
							A2(
								$author$project$UI$Tracks$Scene$List$scrollToNowPlaying,
								model.tracks.harvested,
								_Utils_Tuple2(identifiers, track)));
					}
				},
				A2(
					$elm$core$Maybe$andThen,
					function (id) {
						return A2(
							$elm_community$list_extra$List$Extra$find,
							A2(
								$elm$core$Basics$composeR,
								$elm$core$Tuple$second,
								A2(
									$elm$core$Basics$composeR,
									function ($) {
										return $.id;
									},
									$elm$core$Basics$eq(id))),
							model.tracks.harvested);
					},
					A2(
						$elm$core$Maybe$map,
						A2(
							$elm$core$Basics$composeR,
							function ($) {
								return $.identifiedTrack;
							},
							A2(
								$elm$core$Basics$composeR,
								$elm$core$Tuple$second,
								function ($) {
									return $.id;
								})),
						model.nowPlaying)))));
};
var $author$project$UI$Ports$seek = _Platform_outgoingPort('seek', $elm$json$Json$Encode$float);
var $author$project$UI$Audio$State$seek = function (percentage) {
	return $author$project$Return$Ext$communicate(
		$author$project$UI$Ports$seek(percentage));
};
var $author$project$Alfred$length = function (_v0) {
	var indexFlattened = _v0.indexFlattened;
	return $elm$core$List$length(indexFlattened);
};
var $elm$browser$Browser$Dom$getElement = _Browser_getElement;
var $elm$browser$Browser$Dom$getViewportOf = _Browser_getViewportOf;
var $elm$core$Task$map3 = F4(
	function (func, taskA, taskB, taskC) {
		return A2(
			$elm$core$Task$andThen,
			function (a) {
				return A2(
					$elm$core$Task$andThen,
					function (b) {
						return A2(
							$elm$core$Task$andThen,
							function (c) {
								return $elm$core$Task$succeed(
									A3(func, a, b, c));
							},
							taskC);
					},
					taskB);
			},
			taskA);
	});
var $author$project$UI$Alfred$State$scrollToFocus = function (model) {
	var task = A4(
		$elm$core$Task$map3,
		F3(
			function (innerE, outerE, outerV) {
				return ((outerV.viewport.y + innerE.element.y) - outerE.element.y) - 9;
			}),
		$elm$browser$Browser$Dom$getElement('alfred__results__focus'),
		$elm$browser$Browser$Dom$getElement('alfred__results'),
		$elm$browser$Browser$Dom$getViewportOf('alfred__results'));
	return A2(
		$Fresheyeball$elm_return$Return$return,
		model,
		A2(
			$elm$core$Task$attempt,
			function (_v0) {
				return $author$project$UI$Types$Bypass;
			},
			A2(
				$elm$core$Task$andThen,
				function (a) {
					return A3($elm$browser$Browser$Dom$setViewportOf, 'alfred__results', 0, a);
				},
				task)));
};
var $author$project$UI$Alfred$State$selectNext = function (model) {
	var _v0 = model.alfred;
	if (_v0.$ === 'Just') {
		var instance = _v0.a;
		var total = $author$project$Alfred$length(instance);
		return $author$project$UI$Alfred$State$scrollToFocus(
			function (i) {
				return _Utils_update(
					model,
					{
						alfred: $elm$core$Maybe$Just(i)
					});
			}(
				function (i) {
					return _Utils_update(
						i,
						{
							focus: A2($elm$core$Basics$min, i.focus + 1, total - 1)
						});
				}(instance)));
	} else {
		return $Fresheyeball$elm_return$Return$singleton(model);
	}
};
var $author$project$UI$Alfred$State$selectPrevious = function (model) {
	var _v0 = model.alfred;
	if (_v0.$ === 'Just') {
		var instance = _v0.a;
		return $author$project$UI$Alfred$State$scrollToFocus(
			function (i) {
				return _Utils_update(
					model,
					{
						alfred: $elm$core$Maybe$Just(i)
					});
			}(
				function (i) {
					return _Utils_update(
						i,
						{
							focus: A2($elm$core$Basics$max, i.focus - 1, 0)
						});
				}(instance)));
	} else {
		return $Fresheyeball$elm_return$Return$singleton(model);
	}
};
var $author$project$Alfred$command = function (val) {
	if (val.$ === 'Command') {
		var cmd = val.a;
		return $elm$core$Maybe$Just(cmd);
	} else {
		return $elm$core$Maybe$Nothing;
	}
};
var $author$project$UI$Commands$Alfred$action = function (_v0) {
	var result = _v0.result;
	var _v1 = A2(
		$elm$core$Maybe$andThen,
		A2(
			$elm$core$Basics$composeR,
			function ($) {
				return $.value;
			},
			$author$project$Alfred$command),
		result);
	if (_v1.$ === 'Just') {
		var msg = _v1.a;
		return _List_fromArray(
			[msg]);
	} else {
		return _List_Nil;
	}
};
var $author$project$UI$Tracks$Types$ClearCache = {$: 'ClearCache'};
var $author$project$Alfred$Command = function (a) {
	return {$: 'Command', a: a};
};
var $author$project$UI$Types$Export = {$: 'Export'};
var $author$project$UI$Types$RequestImport = {$: 'RequestImport'};
var $icidasset$elm_material_icons$Material$Icons$Internal$f = $elm$svg$Svg$Attributes$fill;
var $icidasset$elm_material_icons$Material$Icons$Round$offline_bolt = A2(
	$icidasset$elm_material_icons$Material$Icons$Internal$icon,
	_List_fromArray(
		[
			$icidasset$elm_material_icons$Material$Icons$Internal$v('0 0 24 24')
		]),
	_List_fromArray(
		[
			A2(
			$icidasset$elm_material_icons$Material$Icons$Internal$p,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$d('M0 0h24v24H0z'),
					$icidasset$elm_material_icons$Material$Icons$Internal$f('none')
				]),
			_List_Nil),
			A2(
			$icidasset$elm_material_icons$Material$Icons$Internal$p,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$d('M12 2.02c-5.51 0-9.98 4.47-9.98 9.98s4.47 9.98 9.98 9.98 9.98-4.47 9.98-9.98S17.51 2.02 12 2.02zm-.52 15.86v-4.14H8.82c-.37 0-.62-.4-.44-.73l3.68-7.17c.23-.47.94-.3.94.23v4.19h2.54c.37 0 .61.39.45.72l-3.56 7.12c-.24.48-.95.31-.95-.22z')
				]),
			_List_Nil)
		]));
var $icidasset$elm_material_icons$Material$Icons$Round$save = A2(
	$icidasset$elm_material_icons$Material$Icons$Internal$icon,
	_List_fromArray(
		[
			$icidasset$elm_material_icons$Material$Icons$Internal$v('0 0 24 24')
		]),
	_List_fromArray(
		[
			A2(
			$icidasset$elm_material_icons$Material$Icons$Internal$p,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$d('M0 0h24v24H0V0z'),
					$icidasset$elm_material_icons$Material$Icons$Internal$f('none')
				]),
			_List_Nil),
			A2(
			$icidasset$elm_material_icons$Material$Icons$Internal$p,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$d('M17.59 3.59c-.38-.38-.89-.59-1.42-.59H5c-1.11 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V7.83c0-.53-.21-1.04-.59-1.41l-2.82-2.83zM12 19c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm1-10H7c-1.1 0-2-.9-2-2s.9-2 2-2h6c1.1 0 2 .9 2 2s-.9 2-2 2z')
				]),
			_List_Nil)
		]));
var $author$project$UI$Commands$Alfred$dataCommands = function (model) {
	return _List_fromArray(
		[
			{
			icon: $elm$core$Maybe$Just(
				$icidasset$elm_material_icons$Material$Icons$Round$offline_bolt(16)),
			title: 'Clear tracks cache',
			value: $author$project$Alfred$Command(
				$author$project$UI$Types$TracksMsg($author$project$UI$Tracks$Types$ClearCache))
		},
			{
			icon: $elm$core$Maybe$Just(
				$icidasset$elm_material_icons$Material$Icons$Round$save(16)),
			title: 'Export data',
			value: $author$project$Alfred$Command($author$project$UI$Types$Export)
		},
			{
			icon: $elm$core$Maybe$Just(
				$icidasset$elm_material_icons$Material$Icons$Round$save(16)),
			title: 'Import data (⚠️ will override current data)',
			value: $author$project$Alfred$Command($author$project$UI$Types$RequestImport)
		}
		]);
};
var $author$project$UI$Types$OpenUrlOnNewPage = function (a) {
	return {$: 'OpenUrlOnNewPage', a: a};
};
var $icidasset$elm_material_icons$Material$Icons$Round$help = A2(
	$icidasset$elm_material_icons$Material$Icons$Internal$icon,
	_List_fromArray(
		[
			$icidasset$elm_material_icons$Material$Icons$Internal$v('0 0 24 24')
		]),
	_List_fromArray(
		[
			A2(
			$icidasset$elm_material_icons$Material$Icons$Internal$p,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$d('M0 0h24v24H0V0z'),
					$icidasset$elm_material_icons$Material$Icons$Internal$f('none')
				]),
			_List_Nil),
			A2(
			$icidasset$elm_material_icons$Material$Icons$Internal$p,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$d('M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 17h-2v-2h2v2zm2.07-7.75l-.9.92c-.5.51-.86.97-1.04 1.69-.08.32-.13.68-.13 1.14h-2v-.5c0-.46.08-.9.22-1.31.2-.58.53-1.1.95-1.52l1.24-1.26c.46-.44.68-1.1.55-1.8-.13-.72-.69-1.33-1.39-1.53-1.11-.31-2.14.32-2.47 1.27-.12.37-.43.65-.82.65h-.3C8.4 9 8 8.44 8.16 7.88c.43-1.47 1.68-2.59 3.23-2.83 1.52-.24 2.97.55 3.87 1.8 1.18 1.63.83 3.38-.19 4.4z')
				]),
			_List_Nil)
		]));
var $author$project$UI$Commands$Alfred$miscCommands = function (model) {
	return _List_fromArray(
		[
			{
			icon: $elm$core$Maybe$Just(
				$icidasset$elm_material_icons$Material$Icons$Round$help(16)),
			title: 'Open help',
			value: $author$project$Alfred$Command(
				$author$project$UI$Types$OpenUrlOnNewPage('./about/#UI'))
		}
		]);
};
var $author$project$UI$Types$AssistWithAddingTracksToPlaylist = function (a) {
	return {$: 'AssistWithAddingTracksToPlaylist', a: a};
};
var $author$project$UI$Tracks$Types$ScrollToNowPlaying = {$: 'ScrollToNowPlaying'};
var $author$project$UI$Tracks$Types$StoreInCache = function (a) {
	return {$: 'StoreInCache', a: a};
};
var $author$project$UI$Tracks$Types$ToggleFavourite = function (a) {
	return {$: 'ToggleFavourite', a: a};
};
var $icidasset$elm_material_icons$Material$Icons$Round$favorite = A2(
	$icidasset$elm_material_icons$Material$Icons$Internal$icon,
	_List_fromArray(
		[
			$icidasset$elm_material_icons$Material$Icons$Internal$v('0 0 24 24')
		]),
	_List_fromArray(
		[
			A2(
			$icidasset$elm_material_icons$Material$Icons$Internal$p,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$d('M0 0h24v24H0V0z'),
					$icidasset$elm_material_icons$Material$Icons$Internal$f('none')
				]),
			_List_Nil),
			A2(
			$icidasset$elm_material_icons$Material$Icons$Internal$p,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$d('M13.35 20.13c-.76.69-1.93.69-2.69-.01l-.11-.1C5.3 15.27 1.87 12.16 2 8.28c.06-1.7.93-3.33 2.34-4.29 2.64-1.8 5.9-.96 7.66 1.1 1.76-2.06 5.02-2.91 7.66-1.1 1.41.96 2.28 2.59 2.34 4.29.14 3.88-3.3 6.99-8.55 11.76l-.1.09z')
				]),
			_List_Nil)
		]));
var $icidasset$elm_material_icons$Material$Icons$Round$search = A2(
	$icidasset$elm_material_icons$Material$Icons$Internal$icon,
	_List_fromArray(
		[
			$icidasset$elm_material_icons$Material$Icons$Internal$v('0 0 24 24')
		]),
	_List_fromArray(
		[
			A2(
			$icidasset$elm_material_icons$Material$Icons$Internal$p,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$d('M0 0h24v24H0V0z'),
					$icidasset$elm_material_icons$Material$Icons$Internal$f('none')
				]),
			_List_Nil),
			A2(
			$icidasset$elm_material_icons$Material$Icons$Internal$p,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$d('M15.5 14h-.79l-.28-.27c1.2-1.4 1.82-3.31 1.48-5.34-.47-2.78-2.79-5-5.59-5.34-4.23-.52-7.79 3.04-7.27 7.27.34 2.8 2.56 5.12 5.34 5.59 2.03.34 3.94-.28 5.34-1.48l.27.28v.79l4.25 4.25c.41.41 1.08.41 1.49 0 .41-.41.41-1.08 0-1.49L15.5 14zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z')
				]),
			_List_Nil)
		]));
var $author$project$UI$Commands$Alfred$nowPlayingCommands = function (model) {
	var _v0 = model.nowPlaying;
	if (_v0.$ === 'Just') {
		var queueItem = _v0.a;
		var _v1 = queueItem.identifiedTrack;
		var queueItemIdentifiers = _v1.a;
		var identifiedTrack = A2(
			$elm$core$Maybe$withDefault,
			queueItem.identifiedTrack,
			A2($elm_community$list_extra$List$Extra$getAt, queueItemIdentifiers.indexInList, model.tracks.harvested));
		var _v2 = identifiedTrack;
		var identifiers = _v2.a;
		var track = _v2.b;
		return _List_fromArray(
			[
				{
				icon: $elm$core$Maybe$Just(
					$icidasset$elm_material_icons$Material$Icons$Round$search(16)),
				title: 'Show current track in list',
				value: $author$project$Alfred$Command(
					$author$project$UI$Types$TracksMsg($author$project$UI$Tracks$Types$ScrollToNowPlaying))
			},
				{
				icon: $elm$core$Maybe$Just(
					$icidasset$elm_material_icons$Material$Icons$Round$favorite(14)),
				title: A3($author$project$Conditional$ifThenElse, identifiers.isFavourite, 'Remove favourite', 'Mark as favourite'),
				value: $author$project$Alfred$Command(
					$author$project$UI$Types$TracksMsg(
						$author$project$UI$Tracks$Types$ToggleFavourite(identifiers.indexInList)))
			},
				{
				icon: $elm$core$Maybe$Just(
					$icidasset$elm_material_icons$Material$Icons$Round$queue_music(16)),
				title: 'Add current track to playlist',
				value: $author$project$Alfred$Command(
					$author$project$UI$Types$AssistWithAddingTracksToPlaylist(
						_List_fromArray(
							[identifiedTrack])))
			},
				{
				icon: $elm$core$Maybe$Just(
					$icidasset$elm_material_icons$Material$Icons$Round$offline_bolt(16)),
				title: 'Add current track to cache',
				value: $author$project$Alfred$Command(
					$author$project$UI$Types$TracksMsg(
						$author$project$UI$Tracks$Types$StoreInCache(
							_List_fromArray(
								[track]))))
			}
			]);
	} else {
		return _List_Nil;
	}
};
var $author$project$UI$Queue$Types$ToggleRepeat = {$: 'ToggleRepeat'};
var $author$project$UI$Queue$Types$ToggleShuffle = {$: 'ToggleShuffle'};
var $icidasset$elm_material_icons$Material$Icons$Round$fast_forward = A2(
	$icidasset$elm_material_icons$Material$Icons$Internal$icon,
	_List_fromArray(
		[
			$icidasset$elm_material_icons$Material$Icons$Internal$v('0 0 24 24')
		]),
	_List_fromArray(
		[
			A2(
			$icidasset$elm_material_icons$Material$Icons$Internal$p,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$d('M5.58 16.89l5.77-4.07c.56-.4.56-1.24 0-1.63L5.58 7.11C4.91 6.65 4 7.12 4 7.93v8.14c0 .81.91 1.28 1.58.82zM13 7.93v8.14c0 .81.91 1.28 1.58.82l5.77-4.07c.56-.4.56-1.24 0-1.63l-5.77-4.07c-.67-.47-1.58 0-1.58.81z')
				]),
			_List_Nil)
		]));
var $icidasset$elm_material_icons$Material$Icons$Round$fast_rewind = A2(
	$icidasset$elm_material_icons$Material$Icons$Internal$icon,
	_List_fromArray(
		[
			$icidasset$elm_material_icons$Material$Icons$Internal$v('0 0 24 24')
		]),
	_List_fromArray(
		[
			A2(
			$icidasset$elm_material_icons$Material$Icons$Internal$p,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$d('M11 16.07V7.93c0-.81-.91-1.28-1.58-.82l-5.77 4.07c-.56.4-.56 1.24 0 1.63l5.77 4.07c.67.47 1.58 0 1.58-.81zm1.66-3.25l5.77 4.07c.66.47 1.58-.01 1.58-.82V7.93c0-.81-.91-1.28-1.58-.82l-5.77 4.07c-.57.4-.57 1.24 0 1.64z')
				]),
			_List_Nil)
		]));
var $icidasset$elm_material_icons$Material$Icons$Round$pause = A2(
	$icidasset$elm_material_icons$Material$Icons$Internal$icon,
	_List_fromArray(
		[
			$icidasset$elm_material_icons$Material$Icons$Internal$v('0 0 24 24')
		]),
	_List_fromArray(
		[
			A2(
			$icidasset$elm_material_icons$Material$Icons$Internal$p,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$d('M8 19c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2s-2 .9-2 2v10c0 1.1.9 2 2 2zm6-12v10c0 1.1.9 2 2 2s2-.9 2-2V7c0-1.1-.9-2-2-2s-2 .9-2 2z')
				]),
			_List_Nil)
		]));
var $icidasset$elm_material_icons$Material$Icons$Round$play_arrow = A2(
	$icidasset$elm_material_icons$Material$Icons$Internal$icon,
	_List_fromArray(
		[
			$icidasset$elm_material_icons$Material$Icons$Internal$v('0 0 24 24')
		]),
	_List_fromArray(
		[
			A2(
			$icidasset$elm_material_icons$Material$Icons$Internal$p,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$d('M8 6.82v10.36c0 .79.87 1.27 1.54.84l8.14-5.18c.62-.39.62-1.29 0-1.69L9.54 5.98C8.87 5.55 8 6.03 8 6.82z')
				]),
			_List_Nil)
		]));
var $icidasset$elm_material_icons$Material$Icons$Round$repeat = A2(
	$icidasset$elm_material_icons$Material$Icons$Internal$icon,
	_List_fromArray(
		[
			$icidasset$elm_material_icons$Material$Icons$Internal$v('0 0 24 24')
		]),
	_List_fromArray(
		[
			A2(
			$icidasset$elm_material_icons$Material$Icons$Internal$p,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$d('M7 7h10v1.79c0 .45.54.67.85.35l2.79-2.79c.2-.2.2-.51 0-.71l-2.79-2.79c-.31-.31-.85-.09-.85.36V5H6c-.55 0-1 .45-1 1v4c0 .55.45 1 1 1s1-.45 1-1V7zm10 10H7v-1.79c0-.45-.54-.67-.85-.35l-2.79 2.79c-.2.2-.2.51 0 .71l2.79 2.79c.31.31.85.09.85-.36V19h11c.55 0 1-.45 1-1v-4c0-.55-.45-1-1-1s-1 .45-1 1v3z')
				]),
			_List_Nil)
		]));
var $icidasset$elm_material_icons$Material$Icons$Round$shuffle = A2(
	$icidasset$elm_material_icons$Material$Icons$Internal$icon,
	_List_fromArray(
		[
			$icidasset$elm_material_icons$Material$Icons$Internal$v('0 0 24 24')
		]),
	_List_fromArray(
		[
			A2(
			$icidasset$elm_material_icons$Material$Icons$Internal$p,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$d('M10.59 9.17L6.12 4.7c-.39-.39-1.02-.39-1.41 0-.39.39-.39 1.02 0 1.41l4.46 4.46 1.42-1.4zm4.76-4.32l1.19 1.19L4.7 17.88c-.39.39-.39 1.02 0 1.41.39.39 1.02.39 1.41 0L17.96 7.46l1.19 1.19c.31.31.85.09.85-.36V4.5c0-.28-.22-.5-.5-.5h-3.79c-.45 0-.67.54-.36.85zm-.52 8.56l-1.41 1.41 3.13 3.13-1.2 1.2c-.31.31-.09.85.36.85h3.79c.28 0 .5-.22.5-.5v-3.79c0-.45-.54-.67-.85-.35l-1.19 1.19-3.13-3.14z')
				]),
			_List_Nil)
		]));
var $author$project$UI$Commands$Alfred$toggle = F2(
	function (bool, suffix) {
		return A3($author$project$Conditional$ifThenElse, bool, 'Disable', 'Enable') + (' ' + suffix);
	});
var $author$project$UI$Commands$Alfred$playbackCommands = function (model) {
	return _List_fromArray(
		[
			model.audioIsPlaying ? {
			icon: $elm$core$Maybe$Just(
				$icidasset$elm_material_icons$Material$Icons$Round$pause(16)),
			title: 'Pause',
			value: $author$project$Alfred$Command($author$project$UI$Types$TogglePlay)
		} : {
			icon: $elm$core$Maybe$Just(
				$icidasset$elm_material_icons$Material$Icons$Round$play_arrow(16)),
			title: 'Play',
			value: $author$project$Alfred$Command($author$project$UI$Types$TogglePlay)
		},
			{
			icon: $elm$core$Maybe$Just(
				$icidasset$elm_material_icons$Material$Icons$Round$fast_rewind(18)),
			title: 'Previous track',
			value: $author$project$Alfred$Command(
				$author$project$UI$Types$QueueMsg($author$project$UI$Queue$Types$Rewind))
		},
			{
			icon: $elm$core$Maybe$Just(
				$icidasset$elm_material_icons$Material$Icons$Round$fast_forward(18)),
			title: 'Next track',
			value: $author$project$Alfred$Command(
				$author$project$UI$Types$QueueMsg($author$project$UI$Queue$Types$Shift))
		},
			{
			icon: $elm$core$Maybe$Just(
				$icidasset$elm_material_icons$Material$Icons$Round$repeat(16)),
			title: A2($author$project$UI$Commands$Alfred$toggle, model.repeat, 'repeat'),
			value: $author$project$Alfred$Command(
				$author$project$UI$Types$QueueMsg($author$project$UI$Queue$Types$ToggleRepeat))
		},
			{
			icon: $elm$core$Maybe$Just(
				$icidasset$elm_material_icons$Material$Icons$Round$shuffle(16)),
			title: A2($author$project$UI$Commands$Alfred$toggle, model.shuffle, 'shuffle'),
			value: $author$project$Alfred$Command(
				$author$project$UI$Types$QueueMsg($author$project$UI$Queue$Types$ToggleShuffle))
		}
		]);
};
var $author$project$UI$Tracks$Types$AddFavourites = function (a) {
	return {$: 'AddFavourites', a: a};
};
var $author$project$UI$Tracks$Types$RemoveFavourites = function (a) {
	return {$: 'RemoveFavourites', a: a};
};
var $author$project$UI$Commands$Alfred$selectionCommands = function (model) {
	var _v0 = A3(
		$elm$core$List$foldr,
		F2(
			function (_v1, _v2) {
				var i = _v1.a;
				var t = _v1.b;
				var acc = _v2.a;
				var selected = _v2.b;
				var favouriteCounter = _v2.c;
				var _v3 = A2(
					$elm_community$list_extra$List$Extra$findIndex,
					$elm$core$Basics$eq(i.indexInList),
					selected);
				if (_v3.$ === 'Just') {
					var s = _v3.a;
					return _Utils_Tuple3(
						A2(
							$elm$core$List$cons,
							_Utils_Tuple2(i, t),
							acc),
						A2($elm_community$list_extra$List$Extra$removeAt, s, selected),
						A3($author$project$Conditional$ifThenElse, i.isFavourite, favouriteCounter + 1, favouriteCounter));
				} else {
					return _Utils_Tuple3(acc, selected, favouriteCounter);
				}
			}),
		_Utils_Tuple3(_List_Nil, model.selectedTrackIndexes, 0),
		model.tracks.harvested);
	var selection = _v0.a;
	var amountOfFavs = _v0.c;
	if (!selection.b) {
		return _List_Nil;
	} else {
		var tracks = selection;
		return $elm$core$List$concat(
			_List_fromArray(
				[
					_List_fromArray(
					[
						{
						icon: $elm$core$Maybe$Just(
							$icidasset$elm_material_icons$Material$Icons$Round$queue_music(16)),
						title: 'Add current selection to playlist',
						value: $author$project$Alfred$Command(
							$author$project$UI$Types$AssistWithAddingTracksToPlaylist(tracks))
					}
					]),
					(amountOfFavs > 0) ? _List_fromArray(
					[
						{
						icon: $elm$core$Maybe$Just(
							$icidasset$elm_material_icons$Material$Icons$Round$favorite(14)),
						title: 'Remove current selection from favourites',
						value: $author$project$Alfred$Command(
							$author$project$UI$Types$TracksMsg(
								$author$project$UI$Tracks$Types$RemoveFavourites(tracks)))
					}
					]) : _List_Nil,
					(_Utils_cmp(
					amountOfFavs,
					$elm$core$List$length(selection)) < 0) ? _List_fromArray(
					[
						{
						icon: $elm$core$Maybe$Just(
							$icidasset$elm_material_icons$Material$Icons$Round$favorite(14)),
						title: 'Add current selection to favourites',
						value: $author$project$Alfred$Command(
							$author$project$UI$Types$TracksMsg(
								$author$project$UI$Tracks$Types$AddFavourites(tracks)))
					}
					]) : _List_Nil
				]));
	}
};
var $author$project$UI$Types$ChangeUrlUsingPage = function (a) {
	return {$: 'ChangeUrlUsingPage', a: a};
};
var $author$project$UI$Sources$Types$Process = {$: 'Process'};
var $icidasset$elm_material_icons$Material$Icons$Round$add = A2(
	$icidasset$elm_material_icons$Material$Icons$Internal$icon,
	_List_fromArray(
		[
			$icidasset$elm_material_icons$Material$Icons$Internal$v('0 0 24 24')
		]),
	_List_fromArray(
		[
			A2(
			$icidasset$elm_material_icons$Material$Icons$Internal$p,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$d('M0 0h24v24H0V0z'),
					$icidasset$elm_material_icons$Material$Icons$Internal$f('none')
				]),
			_List_Nil),
			A2(
			$icidasset$elm_material_icons$Material$Icons$Internal$p,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$d('M18 13h-5v5c0 .55-.45 1-1 1s-1-.45-1-1v-5H6c-.55 0-1-.45-1-1s.45-1 1-1h5V6c0-.55.45-1 1-1s1 .45 1 1v5h5c.55 0 1 .45 1 1s-.45 1-1 1z')
				]),
			_List_Nil)
		]));
var $icidasset$elm_material_icons$Material$Icons$Round$sync = A2(
	$icidasset$elm_material_icons$Material$Icons$Internal$icon,
	_List_fromArray(
		[
			$icidasset$elm_material_icons$Material$Icons$Internal$v('0 0 24 24')
		]),
	_List_fromArray(
		[
			A2(
			$icidasset$elm_material_icons$Material$Icons$Internal$p,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$d('M.01 0h24v24h-24V0z'),
					$icidasset$elm_material_icons$Material$Icons$Internal$f('none')
				]),
			_List_Nil),
			A2(
			$icidasset$elm_material_icons$Material$Icons$Internal$p,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$d('M12 4V2.21c0-.45-.54-.67-.85-.35l-2.8 2.79c-.2.2-.2.51 0 .71l2.79 2.79c.32.31.86.09.86-.36V6c3.31 0 6 2.69 6 6 0 .79-.15 1.56-.44 2.25-.15.36-.04.77.23 1.04.51.51 1.37.33 1.64-.34.37-.91.57-1.91.57-2.95 0-4.42-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6 0-.79.15-1.56.44-2.25.15-.36.04-.77-.23-1.04-.51-.51-1.37-.33-1.64.34C4.2 9.96 4 10.96 4 12c0 4.42 3.58 8 8 8v1.79c0 .45.54.67.85.35l2.79-2.79c.2-.2.2-.51 0-.71l-2.79-2.79c-.31-.31-.85-.09-.85.36V18z')
				]),
			_List_Nil)
		]));
var $author$project$UI$Commands$Alfred$sourcesCommands = function (model) {
	return _List_fromArray(
		[
			{
			icon: $elm$core$Maybe$Just(
				$icidasset$elm_material_icons$Material$Icons$Round$sync(16)),
			title: 'Process sources',
			value: $author$project$Alfred$Command(
				$author$project$UI$Types$SourcesMsg($author$project$UI$Sources$Types$Process))
		},
			{
			icon: $elm$core$Maybe$Just(
				$icidasset$elm_material_icons$Material$Icons$Round$add(16)),
			title: 'Add new source',
			value: $author$project$Alfred$Command(
				$author$project$UI$Types$ChangeUrlUsingPage(
					$author$project$UI$Page$Sources($author$project$UI$Sources$Page$New)))
		}
		]);
};
var $author$project$Tracks$AddedOn = {$: 'AddedOn'};
var $author$project$Tracks$Artist = {$: 'Artist'};
var $author$project$UI$Tracks$Types$ChangeScene = function (a) {
	return {$: 'ChangeScene', a: a};
};
var $author$project$Tracks$Directory = {$: 'Directory'};
var $author$project$UI$Tracks$Types$DisableGrouping = {$: 'DisableGrouping'};
var $author$project$Tracks$FirstAlphaCharacter = {$: 'FirstAlphaCharacter'};
var $author$project$UI$Tracks$Types$GroupBy = function (a) {
	return {$: 'GroupBy', a: a};
};
var $author$project$UI$Tracks$Types$SortBy = function (a) {
	return {$: 'SortBy', a: a};
};
var $author$project$Tracks$Title = {$: 'Title'};
var $author$project$UI$Tracks$Types$ToggleCachedOnly = {$: 'ToggleCachedOnly'};
var $author$project$UI$Tracks$Types$ToggleFavouritesOnly = {$: 'ToggleFavouritesOnly'};
var $author$project$Tracks$TrackYear = {$: 'TrackYear'};
var $icidasset$elm_material_icons$Material$Icons$Round$burst_mode = A2(
	$icidasset$elm_material_icons$Material$Icons$Internal$icon,
	_List_fromArray(
		[
			$icidasset$elm_material_icons$Material$Icons$Internal$v('0 0 24 24')
		]),
	_List_fromArray(
		[
			A2(
			$icidasset$elm_material_icons$Material$Icons$Internal$p,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$d('M0 0h24v24H0z'),
					$icidasset$elm_material_icons$Material$Icons$Internal$f('none')
				]),
			_List_Nil),
			A2(
			$icidasset$elm_material_icons$Material$Icons$Internal$p,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$d('M2 5c.55 0 1 .45 1 1v12c0 .55-.45 1-1 1s-1-.45-1-1V6c0-.55.45-1 1-1zm4 0c.55 0 1 .45 1 1v12c0 .55-.45 1-1 1s-1-.45-1-1V6c0-.55.45-1 1-1zm16 0H10c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h12c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1zM11.64 16.19l1.47-1.86c.2-.25.57-.25.78-.01l1.4 1.68 2.1-2.71c.2-.26.59-.26.79 0l2.21 2.9c.25.33.02.8-.4.8h-7.96c-.41.01-.65-.47-.39-.8z')
				]),
			_List_Nil)
		]));
var $icidasset$elm_material_icons$Material$Icons$Round$filter_list = A2(
	$icidasset$elm_material_icons$Material$Icons$Internal$icon,
	_List_fromArray(
		[
			$icidasset$elm_material_icons$Material$Icons$Internal$v('0 0 24 24')
		]),
	_List_fromArray(
		[
			A2(
			$icidasset$elm_material_icons$Material$Icons$Internal$p,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$d('M0 0h24v24H0V0z'),
					$icidasset$elm_material_icons$Material$Icons$Internal$f('none')
				]),
			_List_Nil),
			A2(
			$icidasset$elm_material_icons$Material$Icons$Internal$p,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$d('M11 18h2c.55 0 1-.45 1-1s-.45-1-1-1h-2c-.55 0-1 .45-1 1s.45 1 1 1zM3 7c0 .55.45 1 1 1h16c.55 0 1-.45 1-1s-.45-1-1-1H4c-.55 0-1 .45-1 1zm4 6h10c.55 0 1-.45 1-1s-.45-1-1-1H7c-.55 0-1 .45-1 1s.45 1 1 1z')
				]),
			_List_Nil)
		]));
var $icidasset$elm_material_icons$Material$Icons$Round$library_music = A2(
	$icidasset$elm_material_icons$Material$Icons$Internal$icon,
	_List_fromArray(
		[
			$icidasset$elm_material_icons$Material$Icons$Internal$v('0 0 24 24')
		]),
	_List_fromArray(
		[
			A2(
			$icidasset$elm_material_icons$Material$Icons$Internal$p,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$d('M20 2H8c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-3 5h-2v5.37c0 1.27-.9 2.44-2.16 2.6-1.69.23-3.11-1.25-2.8-2.95.2-1.1 1.18-1.95 2.3-2.02.63-.04 1.2.16 1.66.51V6c0-.55.45-1 1-1h2c.55 0 1 .45 1 1s-.45 1-1 1zM3 6c-.55 0-1 .45-1 1v13c0 1.1.9 2 2 2h13c.55 0 1-.45 1-1s-.45-1-1-1H5c-.55 0-1-.45-1-1V7c0-.55-.45-1-1-1z')
				]),
			_List_Nil)
		]));
var $icidasset$elm_material_icons$Material$Icons$Round$notes = A2(
	$icidasset$elm_material_icons$Material$Icons$Internal$icon,
	_List_fromArray(
		[
			$icidasset$elm_material_icons$Material$Icons$Internal$v('0 0 24 24')
		]),
	_List_fromArray(
		[
			A2(
			$icidasset$elm_material_icons$Material$Icons$Internal$p,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$d('M0 0h24v24H0V0z'),
					$icidasset$elm_material_icons$Material$Icons$Internal$f('none')
				]),
			_List_Nil),
			A2(
			$icidasset$elm_material_icons$Material$Icons$Internal$p,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$d('M20 11H4c-.55 0-1 .45-1 1s.45 1 1 1h16c.55 0 1-.45 1-1s-.45-1-1-1zM4 18h10c.55 0 1-.45 1-1s-.45-1-1-1H4c-.55 0-1 .45-1 1s.45 1 1 1zM20 6H4c-.55 0-1 .45-1 1v.01c0 .55.45 1 1 1h16c.55 0 1-.45 1-1V7c0-.55-.45-1-1-1z')
				]),
			_List_Nil)
		]));
var $elm_community$list_extra$List$Extra$reverseAppend = F2(
	function (list1, list2) {
		return A3($elm$core$List$foldl, $elm$core$List$cons, list2, list1);
	});
var $elm_community$list_extra$List$Extra$removeHelp = F4(
	function (list, x, xs, previousElements) {
		removeHelp:
		while (true) {
			if (!xs.b) {
				return list;
			} else {
				var y = xs.a;
				var ys = xs.b;
				if (_Utils_eq(x, y)) {
					return A2($elm_community$list_extra$List$Extra$reverseAppend, previousElements, ys);
				} else {
					var $temp$list = list,
						$temp$x = x,
						$temp$xs = ys,
						$temp$previousElements = A2($elm$core$List$cons, y, previousElements);
					list = $temp$list;
					x = $temp$x;
					xs = $temp$xs;
					previousElements = $temp$previousElements;
					continue removeHelp;
				}
			}
		}
	});
var $elm_community$list_extra$List$Extra$remove = F2(
	function (x, xs) {
		return A4($elm_community$list_extra$List$Extra$removeHelp, xs, x, xs, _List_Nil);
	});
var $icidasset$elm_material_icons$Material$Icons$Round$sort = A2(
	$icidasset$elm_material_icons$Material$Icons$Internal$icon,
	_List_fromArray(
		[
			$icidasset$elm_material_icons$Material$Icons$Internal$v('0 0 24 24')
		]),
	_List_fromArray(
		[
			A2(
			$icidasset$elm_material_icons$Material$Icons$Internal$p,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$d('M0 0h24v24H0V0z'),
					$icidasset$elm_material_icons$Material$Icons$Internal$f('none')
				]),
			_List_Nil),
			A2(
			$icidasset$elm_material_icons$Material$Icons$Internal$p,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$d('M4 18h4c.55 0 1-.45 1-1s-.45-1-1-1H4c-.55 0-1 .45-1 1s.45 1 1 1zM3 7c0 .55.45 1 1 1h16c.55 0 1-.45 1-1s-.45-1-1-1H4c-.55 0-1 .45-1 1zm1 6h10c.55 0 1-.45 1-1s-.45-1-1-1H4c-.55 0-1 .45-1 1s.45 1 1 1z')
				]),
			_List_Nil)
		]));
var $author$project$UI$Commands$Alfred$viewCommands = function (model) {
	var sortCommands = A2(
		$elm$core$List$map,
		function (sortBy) {
			return {
				icon: $elm$core$Maybe$Just(
					$icidasset$elm_material_icons$Material$Icons$Round$sort(16)),
				title: function () {
					switch (sortBy.$) {
						case 'Artist':
							return 'Sort tracks by artist';
						case 'Album':
							return 'Sort tracks by album';
						case 'PlaylistIndex':
							return 'Sort tracks by playlist index';
						default:
							return 'Sort tracks by title';
					}
				}(),
				value: $author$project$Alfred$Command(
					$author$project$UI$Types$TracksMsg(
						$author$project$UI$Tracks$Types$SortBy(sortBy)))
			};
		},
		A2(
			$elm_community$list_extra$List$Extra$remove,
			model.sortBy,
			function () {
				var _v4 = A2(
					$elm$core$Maybe$map,
					function ($) {
						return $.autoGenerated;
					},
					model.selectedPlaylist);
				if ((_v4.$ === 'Just') && (!_v4.a)) {
					return _List_Nil;
				} else {
					var _v5 = model.scene;
					if (_v5.$ === 'Covers') {
						return _List_fromArray(
							[$author$project$Tracks$Album, $author$project$Tracks$Artist]);
					} else {
						return _List_fromArray(
							[$author$project$Tracks$Album, $author$project$Tracks$Artist, $author$project$Tracks$Title]);
					}
				}
			}()));
	var groupCommands = function (list) {
		var _v3 = model.grouping;
		if (_v3.$ === 'Just') {
			return A2(
				$elm$core$List$cons,
				{
					icon: $elm$core$Maybe$Just(
						$icidasset$elm_material_icons$Material$Icons$Round$library_music(16)),
					title: 'Disable grouping',
					value: $author$project$Alfred$Command(
						$author$project$UI$Types$TracksMsg($author$project$UI$Tracks$Types$DisableGrouping))
				},
				list);
		} else {
			return list;
		}
	}(
		A2(
			$elm$core$List$map,
			function (group) {
				return {
					icon: $elm$core$Maybe$Just(
						$icidasset$elm_material_icons$Material$Icons$Round$library_music(16)),
					title: function () {
						switch (group.$) {
							case 'AddedOn':
								return 'Group by processing date';
							case 'Directory':
								return 'Group by directory';
							case 'FirstAlphaCharacter':
								return 'Group by first letter';
							default:
								return 'Group by track year';
						}
					}(),
					value: $author$project$Alfred$Command(
						$author$project$UI$Types$TracksMsg(
							$author$project$UI$Tracks$Types$GroupBy(group)))
				};
			},
			function () {
				var _v1 = model.grouping;
				if (_v1.$ === 'Just') {
					var group = _v1.a;
					return $elm_community$list_extra$List$Extra$remove(group);
				} else {
					return $elm$core$Basics$identity;
				}
			}()(
				_List_fromArray(
					[$author$project$Tracks$AddedOn, $author$project$Tracks$Directory, $author$project$Tracks$FirstAlphaCharacter, $author$project$Tracks$TrackYear]))));
	return _Utils_ap(
		_List_fromArray(
			[
				{
				icon: $elm$core$Maybe$Just(
					$icidasset$elm_material_icons$Material$Icons$Round$favorite(14)),
				title: A2($author$project$UI$Commands$Alfred$toggle, model.favouritesOnly, 'favourites-only mode'),
				value: $author$project$Alfred$Command(
					$author$project$UI$Types$TracksMsg($author$project$UI$Tracks$Types$ToggleFavouritesOnly))
			},
				function () {
				var _v0 = model.scene;
				if (_v0.$ === 'Covers') {
					return {
						icon: $elm$core$Maybe$Just(
							$icidasset$elm_material_icons$Material$Icons$Round$notes(16)),
						title: 'Switch to list view',
						value: $author$project$Alfred$Command(
							$author$project$UI$Types$TracksMsg(
								$author$project$UI$Tracks$Types$ChangeScene($author$project$Tracks$List)))
					};
				} else {
					return {
						icon: $elm$core$Maybe$Just(
							$icidasset$elm_material_icons$Material$Icons$Round$burst_mode(18)),
						title: 'Switch to cover view',
						value: $author$project$Alfred$Command(
							$author$project$UI$Types$TracksMsg(
								$author$project$UI$Tracks$Types$ChangeScene($author$project$Tracks$Covers)))
					};
				}
			}(),
				{
				icon: $elm$core$Maybe$Just(
					$icidasset$elm_material_icons$Material$Icons$Round$filter_list(16)),
				title: A3($author$project$Conditional$ifThenElse, model.cachedTracksOnly, 'Disable cached-tracks-only mode', 'Only show cached tracks'),
				value: $author$project$Alfred$Command(
					$author$project$UI$Types$TracksMsg($author$project$UI$Tracks$Types$ToggleCachedOnly))
			},
				{
				icon: $elm$core$Maybe$Just(
					$icidasset$elm_material_icons$Material$Icons$Round$sort(16)),
				title: 'Change sort direction',
				value: $author$project$Alfred$Command(
					$author$project$UI$Types$TracksMsg(
						$author$project$UI$Tracks$Types$SortBy(model.sortBy)))
			}
			]),
		_Utils_ap(sortCommands, groupCommands));
};
var $author$project$UI$Commands$Alfred$commands = function (model) {
	return _List_fromArray(
		[
			{
			items: $author$project$UI$Commands$Alfred$nowPlayingCommands(model),
			name: $elm$core$Maybe$Just('Currently playing')
		},
			{
			items: $author$project$UI$Commands$Alfred$selectionCommands(model),
			name: $elm$core$Maybe$Just('Track selection')
		},
			{
			items: $author$project$UI$Commands$Alfred$viewCommands(model),
			name: $elm$core$Maybe$Just('View')
		},
			{
			items: $author$project$UI$Commands$Alfred$playbackCommands(model),
			name: $elm$core$Maybe$Just('Playback')
		},
			{
			items: $author$project$UI$Commands$Alfred$sourcesCommands(model),
			name: $elm$core$Maybe$Just('Sources')
		},
			{
			items: $author$project$UI$Commands$Alfred$dataCommands(model),
			name: $elm$core$Maybe$Just('Data')
		},
			{
			items: $author$project$UI$Commands$Alfred$miscCommands(model),
			name: $elm$core$Maybe$Just('Misc')
		}
		]);
};
var $author$project$UI$Commands$Alfred$palette = function (model) {
	return $author$project$Alfred$create(
		{
			action: $author$project$UI$Commands$Alfred$action,
			index: $author$project$UI$Commands$Alfred$commands(model),
			message: 'Run a command.',
			operation: $author$project$Alfred$Query
		});
};
var $author$project$UI$Commands$State$showPalette = function (model) {
	return A2(
		$author$project$UI$Alfred$State$assign,
		$author$project$UI$Commands$Alfred$palette(model),
		model);
};
var $Fresheyeball$elm_return$Return$effect_ = F2(
	function (f, _v0) {
		var model = _v0.a;
		var cmd = _v0.b;
		return _Utils_Tuple2(
			model,
			$elm$core$Platform$Cmd$batch(
				_List_fromArray(
					[
						cmd,
						f(model)
					])));
	});
var $author$project$UI$Ports$setRepeat = _Platform_outgoingPort('setRepeat', $elm$json$Json$Encode$bool);
var $author$project$UI$Queue$State$toggleRepeat = function (model) {
	return A2(
		$Fresheyeball$elm_return$Return$effect_,
		A2(
			$elm$core$Basics$composeR,
			function ($) {
				return $.repeat;
			},
			$author$project$UI$Ports$setRepeat),
		$author$project$UI$User$State$Export$saveEnclosedUserData(
			_Utils_update(
				model,
				{repeat: !model.repeat})));
};
var $author$project$UI$Queue$State$toggleShuffle = function (model) {
	return A2(
		$Fresheyeball$elm_return$Return$andThen,
		$author$project$UI$User$State$Export$saveEnclosedUserData,
		$author$project$UI$Queue$State$reset(
			_Utils_update(
				model,
				{shuffle: !model.shuffle})));
};
var $ohanhi$keyboard$Keyboard$Backspace = {$: 'Backspace'};
var $ohanhi$keyboard$Keyboard$Clear = {$: 'Clear'};
var $ohanhi$keyboard$Keyboard$Copy = {$: 'Copy'};
var $ohanhi$keyboard$Keyboard$CrSel = {$: 'CrSel'};
var $ohanhi$keyboard$Keyboard$Cut = {$: 'Cut'};
var $ohanhi$keyboard$Keyboard$Delete = {$: 'Delete'};
var $ohanhi$keyboard$Keyboard$EraseEof = {$: 'EraseEof'};
var $ohanhi$keyboard$Keyboard$ExSel = {$: 'ExSel'};
var $ohanhi$keyboard$Keyboard$Insert = {$: 'Insert'};
var $ohanhi$keyboard$Keyboard$Paste = {$: 'Paste'};
var $ohanhi$keyboard$Keyboard$Redo = {$: 'Redo'};
var $ohanhi$keyboard$Keyboard$Undo = {$: 'Undo'};
var $ohanhi$keyboard$Keyboard$editingKey = function (_v0) {
	var value = _v0.a;
	switch (value) {
		case 'Backspace':
			return $elm$core$Maybe$Just($ohanhi$keyboard$Keyboard$Backspace);
		case 'Clear':
			return $elm$core$Maybe$Just($ohanhi$keyboard$Keyboard$Clear);
		case 'Copy':
			return $elm$core$Maybe$Just($ohanhi$keyboard$Keyboard$Copy);
		case 'CrSel':
			return $elm$core$Maybe$Just($ohanhi$keyboard$Keyboard$CrSel);
		case 'Cut':
			return $elm$core$Maybe$Just($ohanhi$keyboard$Keyboard$Cut);
		case 'Delete':
			return $elm$core$Maybe$Just($ohanhi$keyboard$Keyboard$Delete);
		case 'EraseEof':
			return $elm$core$Maybe$Just($ohanhi$keyboard$Keyboard$EraseEof);
		case 'ExSel':
			return $elm$core$Maybe$Just($ohanhi$keyboard$Keyboard$ExSel);
		case 'Insert':
			return $elm$core$Maybe$Just($ohanhi$keyboard$Keyboard$Insert);
		case 'Paste':
			return $elm$core$Maybe$Just($ohanhi$keyboard$Keyboard$Paste);
		case 'Redo':
			return $elm$core$Maybe$Just($ohanhi$keyboard$Keyboard$Redo);
		case 'Undo':
			return $elm$core$Maybe$Just($ohanhi$keyboard$Keyboard$Undo);
		default:
			return $elm$core$Maybe$Nothing;
	}
};
var $ohanhi$keyboard$Keyboard$F1 = {$: 'F1'};
var $ohanhi$keyboard$Keyboard$F10 = {$: 'F10'};
var $ohanhi$keyboard$Keyboard$F11 = {$: 'F11'};
var $ohanhi$keyboard$Keyboard$F12 = {$: 'F12'};
var $ohanhi$keyboard$Keyboard$F13 = {$: 'F13'};
var $ohanhi$keyboard$Keyboard$F14 = {$: 'F14'};
var $ohanhi$keyboard$Keyboard$F15 = {$: 'F15'};
var $ohanhi$keyboard$Keyboard$F16 = {$: 'F16'};
var $ohanhi$keyboard$Keyboard$F17 = {$: 'F17'};
var $ohanhi$keyboard$Keyboard$F18 = {$: 'F18'};
var $ohanhi$keyboard$Keyboard$F19 = {$: 'F19'};
var $ohanhi$keyboard$Keyboard$F2 = {$: 'F2'};
var $ohanhi$keyboard$Keyboard$F20 = {$: 'F20'};
var $ohanhi$keyboard$Keyboard$F3 = {$: 'F3'};
var $ohanhi$keyboard$Keyboard$F4 = {$: 'F4'};
var $ohanhi$keyboard$Keyboard$F5 = {$: 'F5'};
var $ohanhi$keyboard$Keyboard$F6 = {$: 'F6'};
var $ohanhi$keyboard$Keyboard$F7 = {$: 'F7'};
var $ohanhi$keyboard$Keyboard$F8 = {$: 'F8'};
var $ohanhi$keyboard$Keyboard$F9 = {$: 'F9'};
var $ohanhi$keyboard$Keyboard$functionKey = function (_v0) {
	var value = _v0.a;
	switch (value) {
		case 'F1':
			return $elm$core$Maybe$Just($ohanhi$keyboard$Keyboard$F1);
		case 'F2':
			return $elm$core$Maybe$Just($ohanhi$keyboard$Keyboard$F2);
		case 'F3':
			return $elm$core$Maybe$Just($ohanhi$keyboard$Keyboard$F3);
		case 'F4':
			return $elm$core$Maybe$Just($ohanhi$keyboard$Keyboard$F4);
		case 'F5':
			return $elm$core$Maybe$Just($ohanhi$keyboard$Keyboard$F5);
		case 'F6':
			return $elm$core$Maybe$Just($ohanhi$keyboard$Keyboard$F6);
		case 'F7':
			return $elm$core$Maybe$Just($ohanhi$keyboard$Keyboard$F7);
		case 'F8':
			return $elm$core$Maybe$Just($ohanhi$keyboard$Keyboard$F8);
		case 'F9':
			return $elm$core$Maybe$Just($ohanhi$keyboard$Keyboard$F9);
		case 'F10':
			return $elm$core$Maybe$Just($ohanhi$keyboard$Keyboard$F10);
		case 'F11':
			return $elm$core$Maybe$Just($ohanhi$keyboard$Keyboard$F11);
		case 'F12':
			return $elm$core$Maybe$Just($ohanhi$keyboard$Keyboard$F12);
		case 'F13':
			return $elm$core$Maybe$Just($ohanhi$keyboard$Keyboard$F13);
		case 'F14':
			return $elm$core$Maybe$Just($ohanhi$keyboard$Keyboard$F14);
		case 'F15':
			return $elm$core$Maybe$Just($ohanhi$keyboard$Keyboard$F15);
		case 'F16':
			return $elm$core$Maybe$Just($ohanhi$keyboard$Keyboard$F16);
		case 'F17':
			return $elm$core$Maybe$Just($ohanhi$keyboard$Keyboard$F17);
		case 'F18':
			return $elm$core$Maybe$Just($ohanhi$keyboard$Keyboard$F18);
		case 'F19':
			return $elm$core$Maybe$Just($ohanhi$keyboard$Keyboard$F19);
		case 'F20':
			return $elm$core$Maybe$Just($ohanhi$keyboard$Keyboard$F20);
		default:
			return $elm$core$Maybe$Nothing;
	}
};
var $ohanhi$keyboard$Keyboard$ChannelDown = {$: 'ChannelDown'};
var $ohanhi$keyboard$Keyboard$ChannelUp = {$: 'ChannelUp'};
var $ohanhi$keyboard$Keyboard$MediaFastForward = {$: 'MediaFastForward'};
var $ohanhi$keyboard$Keyboard$MediaPause = {$: 'MediaPause'};
var $ohanhi$keyboard$Keyboard$MediaPlay = {$: 'MediaPlay'};
var $ohanhi$keyboard$Keyboard$MediaPlayPause = {$: 'MediaPlayPause'};
var $ohanhi$keyboard$Keyboard$MediaRecord = {$: 'MediaRecord'};
var $ohanhi$keyboard$Keyboard$MediaRewind = {$: 'MediaRewind'};
var $ohanhi$keyboard$Keyboard$MediaStop = {$: 'MediaStop'};
var $ohanhi$keyboard$Keyboard$MediaTrackNext = {$: 'MediaTrackNext'};
var $ohanhi$keyboard$Keyboard$MediaTrackPrevious = {$: 'MediaTrackPrevious'};
var $ohanhi$keyboard$Keyboard$mediaKey = function (_v0) {
	var value = _v0.a;
	switch (value) {
		case 'ChannelDown':
			return $elm$core$Maybe$Just($ohanhi$keyboard$Keyboard$ChannelDown);
		case 'ChannelUp':
			return $elm$core$Maybe$Just($ohanhi$keyboard$Keyboard$ChannelUp);
		case 'MediaFastForward':
			return $elm$core$Maybe$Just($ohanhi$keyboard$Keyboard$MediaFastForward);
		case 'MediaPause':
			return $elm$core$Maybe$Just($ohanhi$keyboard$Keyboard$MediaPause);
		case 'MediaPlay':
			return $elm$core$Maybe$Just($ohanhi$keyboard$Keyboard$MediaPlay);
		case 'MediaPlayPause':
			return $elm$core$Maybe$Just($ohanhi$keyboard$Keyboard$MediaPlayPause);
		case 'MediaRecord':
			return $elm$core$Maybe$Just($ohanhi$keyboard$Keyboard$MediaRecord);
		case 'MediaRewind':
			return $elm$core$Maybe$Just($ohanhi$keyboard$Keyboard$MediaRewind);
		case 'MediaStop':
			return $elm$core$Maybe$Just($ohanhi$keyboard$Keyboard$MediaStop);
		case 'MediaTrackNext':
			return $elm$core$Maybe$Just($ohanhi$keyboard$Keyboard$MediaTrackNext);
		case 'MediaTrackPrevious':
			return $elm$core$Maybe$Just($ohanhi$keyboard$Keyboard$MediaTrackPrevious);
		default:
			return $elm$core$Maybe$Nothing;
	}
};
var $ohanhi$keyboard$Keyboard$Alt = {$: 'Alt'};
var $ohanhi$keyboard$Keyboard$AltGraph = {$: 'AltGraph'};
var $ohanhi$keyboard$Keyboard$CapsLock = {$: 'CapsLock'};
var $ohanhi$keyboard$Keyboard$Control = {$: 'Control'};
var $ohanhi$keyboard$Keyboard$Fn = {$: 'Fn'};
var $ohanhi$keyboard$Keyboard$FnLock = {$: 'FnLock'};
var $ohanhi$keyboard$Keyboard$Hyper = {$: 'Hyper'};
var $ohanhi$keyboard$Keyboard$Meta = {$: 'Meta'};
var $ohanhi$keyboard$Keyboard$NumLock = {$: 'NumLock'};
var $ohanhi$keyboard$Keyboard$ScrollLock = {$: 'ScrollLock'};
var $ohanhi$keyboard$Keyboard$Super = {$: 'Super'};
var $ohanhi$keyboard$Keyboard$Symbol = {$: 'Symbol'};
var $ohanhi$keyboard$Keyboard$SymbolLock = {$: 'SymbolLock'};
var $ohanhi$keyboard$Keyboard$modifierKey = function (_v0) {
	var value = _v0.a;
	switch (value) {
		case 'Alt':
			return $elm$core$Maybe$Just($ohanhi$keyboard$Keyboard$Alt);
		case 'AltGraph':
			return $elm$core$Maybe$Just($ohanhi$keyboard$Keyboard$AltGraph);
		case 'CapsLock':
			return $elm$core$Maybe$Just($ohanhi$keyboard$Keyboard$CapsLock);
		case 'Control':
			return $elm$core$Maybe$Just($ohanhi$keyboard$Keyboard$Control);
		case 'Fn':
			return $elm$core$Maybe$Just($ohanhi$keyboard$Keyboard$Fn);
		case 'FnLock':
			return $elm$core$Maybe$Just($ohanhi$keyboard$Keyboard$FnLock);
		case 'Hyper':
			return $elm$core$Maybe$Just($ohanhi$keyboard$Keyboard$Hyper);
		case 'Meta':
			return $elm$core$Maybe$Just($ohanhi$keyboard$Keyboard$Meta);
		case 'NumLock':
			return $elm$core$Maybe$Just($ohanhi$keyboard$Keyboard$NumLock);
		case 'ScrollLock':
			return $elm$core$Maybe$Just($ohanhi$keyboard$Keyboard$ScrollLock);
		case 'Shift':
			return $elm$core$Maybe$Just($ohanhi$keyboard$Keyboard$Shift);
		case 'Super':
			return $elm$core$Maybe$Just($ohanhi$keyboard$Keyboard$Super);
		case 'OS':
			return $elm$core$Maybe$Just($ohanhi$keyboard$Keyboard$Super);
		case 'Symbol':
			return $elm$core$Maybe$Just($ohanhi$keyboard$Keyboard$Symbol);
		case 'SymbolLock':
			return $elm$core$Maybe$Just($ohanhi$keyboard$Keyboard$SymbolLock);
		default:
			return $elm$core$Maybe$Nothing;
	}
};
var $ohanhi$keyboard$Keyboard$ArrowDown = {$: 'ArrowDown'};
var $ohanhi$keyboard$Keyboard$ArrowLeft = {$: 'ArrowLeft'};
var $ohanhi$keyboard$Keyboard$ArrowRight = {$: 'ArrowRight'};
var $ohanhi$keyboard$Keyboard$ArrowUp = {$: 'ArrowUp'};
var $ohanhi$keyboard$Keyboard$End = {$: 'End'};
var $ohanhi$keyboard$Keyboard$Home = {$: 'Home'};
var $ohanhi$keyboard$Keyboard$PageDown = {$: 'PageDown'};
var $ohanhi$keyboard$Keyboard$PageUp = {$: 'PageUp'};
var $ohanhi$keyboard$Keyboard$navigationKey = function (_v0) {
	var value = _v0.a;
	switch (value) {
		case 'ArrowDown':
			return $elm$core$Maybe$Just($ohanhi$keyboard$Keyboard$ArrowDown);
		case 'ArrowLeft':
			return $elm$core$Maybe$Just($ohanhi$keyboard$Keyboard$ArrowLeft);
		case 'ArrowRight':
			return $elm$core$Maybe$Just($ohanhi$keyboard$Keyboard$ArrowRight);
		case 'ArrowUp':
			return $elm$core$Maybe$Just($ohanhi$keyboard$Keyboard$ArrowUp);
		case 'Down':
			return $elm$core$Maybe$Just($ohanhi$keyboard$Keyboard$ArrowDown);
		case 'Left':
			return $elm$core$Maybe$Just($ohanhi$keyboard$Keyboard$ArrowLeft);
		case 'Right':
			return $elm$core$Maybe$Just($ohanhi$keyboard$Keyboard$ArrowRight);
		case 'Up':
			return $elm$core$Maybe$Just($ohanhi$keyboard$Keyboard$ArrowUp);
		case 'End':
			return $elm$core$Maybe$Just($ohanhi$keyboard$Keyboard$End);
		case 'Home':
			return $elm$core$Maybe$Just($ohanhi$keyboard$Keyboard$Home);
		case 'PageDown':
			return $elm$core$Maybe$Just($ohanhi$keyboard$Keyboard$PageDown);
		case 'PageUp':
			return $elm$core$Maybe$Just($ohanhi$keyboard$Keyboard$PageUp);
		default:
			return $elm$core$Maybe$Nothing;
	}
};
var $ohanhi$keyboard$Keyboard$oneOf = F2(
	function (fns, key) {
		oneOf:
		while (true) {
			if (!fns.b) {
				return $elm$core$Maybe$Nothing;
			} else {
				var fn = fns.a;
				var rest = fns.b;
				var _v1 = fn(key);
				if (_v1.$ === 'Just') {
					var a = _v1.a;
					return $elm$core$Maybe$Just(a);
				} else {
					var $temp$fns = rest,
						$temp$key = key;
					fns = $temp$fns;
					key = $temp$key;
					continue oneOf;
				}
			}
		}
	});
var $ohanhi$keyboard$Keyboard$AppSwitch = {$: 'AppSwitch'};
var $ohanhi$keyboard$Keyboard$Call = {$: 'Call'};
var $ohanhi$keyboard$Keyboard$Camera = {$: 'Camera'};
var $ohanhi$keyboard$Keyboard$CameraFocus = {$: 'CameraFocus'};
var $ohanhi$keyboard$Keyboard$EndCall = {$: 'EndCall'};
var $ohanhi$keyboard$Keyboard$GoBack = {$: 'GoBack'};
var $ohanhi$keyboard$Keyboard$GoHome = {$: 'GoHome'};
var $ohanhi$keyboard$Keyboard$HeadsetHook = {$: 'HeadsetHook'};
var $ohanhi$keyboard$Keyboard$LastNumberRedial = {$: 'LastNumberRedial'};
var $ohanhi$keyboard$Keyboard$MannerMode = {$: 'MannerMode'};
var $ohanhi$keyboard$Keyboard$Notification = {$: 'Notification'};
var $ohanhi$keyboard$Keyboard$VoiceDial = {$: 'VoiceDial'};
var $ohanhi$keyboard$Keyboard$phoneKey = function (_v0) {
	var value = _v0.a;
	switch (value) {
		case 'AppSwitch':
			return $elm$core$Maybe$Just($ohanhi$keyboard$Keyboard$AppSwitch);
		case 'Call':
			return $elm$core$Maybe$Just($ohanhi$keyboard$Keyboard$Call);
		case 'Camera':
			return $elm$core$Maybe$Just($ohanhi$keyboard$Keyboard$Camera);
		case 'CameraFocus':
			return $elm$core$Maybe$Just($ohanhi$keyboard$Keyboard$CameraFocus);
		case 'EndCall':
			return $elm$core$Maybe$Just($ohanhi$keyboard$Keyboard$EndCall);
		case 'GoBack':
			return $elm$core$Maybe$Just($ohanhi$keyboard$Keyboard$GoBack);
		case 'GoHome':
			return $elm$core$Maybe$Just($ohanhi$keyboard$Keyboard$GoHome);
		case 'HeadsetHook':
			return $elm$core$Maybe$Just($ohanhi$keyboard$Keyboard$HeadsetHook);
		case 'LastNumberRedial':
			return $elm$core$Maybe$Just($ohanhi$keyboard$Keyboard$LastNumberRedial);
		case 'Notification':
			return $elm$core$Maybe$Just($ohanhi$keyboard$Keyboard$Notification);
		case 'MannerMode':
			return $elm$core$Maybe$Just($ohanhi$keyboard$Keyboard$MannerMode);
		case 'VoiceDial':
			return $elm$core$Maybe$Just($ohanhi$keyboard$Keyboard$VoiceDial);
		default:
			return $elm$core$Maybe$Nothing;
	}
};
var $ohanhi$keyboard$Keyboard$Again = {$: 'Again'};
var $ohanhi$keyboard$Keyboard$Attn = {$: 'Attn'};
var $ohanhi$keyboard$Keyboard$Cancel = {$: 'Cancel'};
var $ohanhi$keyboard$Keyboard$ContextMenu = {$: 'ContextMenu'};
var $ohanhi$keyboard$Keyboard$Escape = {$: 'Escape'};
var $ohanhi$keyboard$Keyboard$Execute = {$: 'Execute'};
var $ohanhi$keyboard$Keyboard$Find = {$: 'Find'};
var $ohanhi$keyboard$Keyboard$Finish = {$: 'Finish'};
var $ohanhi$keyboard$Keyboard$Help = {$: 'Help'};
var $ohanhi$keyboard$Keyboard$Pause = {$: 'Pause'};
var $ohanhi$keyboard$Keyboard$Play = {$: 'Play'};
var $ohanhi$keyboard$Keyboard$Props = {$: 'Props'};
var $ohanhi$keyboard$Keyboard$Select = {$: 'Select'};
var $ohanhi$keyboard$Keyboard$ZoomIn = {$: 'ZoomIn'};
var $ohanhi$keyboard$Keyboard$ZoomOut = {$: 'ZoomOut'};
var $ohanhi$keyboard$Keyboard$uiKey = function (_v0) {
	var value = _v0.a;
	switch (value) {
		case 'Again':
			return $elm$core$Maybe$Just($ohanhi$keyboard$Keyboard$Again);
		case 'Attn':
			return $elm$core$Maybe$Just($ohanhi$keyboard$Keyboard$Attn);
		case 'Cancel':
			return $elm$core$Maybe$Just($ohanhi$keyboard$Keyboard$Cancel);
		case 'ContextMenu':
			return $elm$core$Maybe$Just($ohanhi$keyboard$Keyboard$ContextMenu);
		case 'Escape':
			return $elm$core$Maybe$Just($ohanhi$keyboard$Keyboard$Escape);
		case 'Execute':
			return $elm$core$Maybe$Just($ohanhi$keyboard$Keyboard$Execute);
		case 'Find':
			return $elm$core$Maybe$Just($ohanhi$keyboard$Keyboard$Find);
		case 'Finish':
			return $elm$core$Maybe$Just($ohanhi$keyboard$Keyboard$Finish);
		case 'Help':
			return $elm$core$Maybe$Just($ohanhi$keyboard$Keyboard$Help);
		case 'Pause':
			return $elm$core$Maybe$Just($ohanhi$keyboard$Keyboard$Pause);
		case 'Play':
			return $elm$core$Maybe$Just($ohanhi$keyboard$Keyboard$Play);
		case 'Props':
			return $elm$core$Maybe$Just($ohanhi$keyboard$Keyboard$Props);
		case 'Select':
			return $elm$core$Maybe$Just($ohanhi$keyboard$Keyboard$Select);
		case 'ZoomIn':
			return $elm$core$Maybe$Just($ohanhi$keyboard$Keyboard$ZoomIn);
		case 'ZoomOut':
			return $elm$core$Maybe$Just($ohanhi$keyboard$Keyboard$ZoomOut);
		default:
			return $elm$core$Maybe$Nothing;
	}
};
var $ohanhi$keyboard$Keyboard$Enter = {$: 'Enter'};
var $ohanhi$keyboard$Keyboard$Spacebar = {$: 'Spacebar'};
var $ohanhi$keyboard$Keyboard$Tab = {$: 'Tab'};
var $ohanhi$keyboard$Keyboard$whitespaceKey = function (_v0) {
	var value = _v0.a;
	switch (value) {
		case 'Enter':
			return $elm$core$Maybe$Just($ohanhi$keyboard$Keyboard$Enter);
		case 'Tab':
			return $elm$core$Maybe$Just($ohanhi$keyboard$Keyboard$Tab);
		case 'Spacebar':
			return $elm$core$Maybe$Just($ohanhi$keyboard$Keyboard$Spacebar);
		case ' ':
			return $elm$core$Maybe$Just($ohanhi$keyboard$Keyboard$Spacebar);
		default:
			return $elm$core$Maybe$Nothing;
	}
};
var $ohanhi$keyboard$Keyboard$anyKeyWith = function (charParser) {
	return $ohanhi$keyboard$Keyboard$oneOf(
		_List_fromArray(
			[$ohanhi$keyboard$Keyboard$whitespaceKey, charParser, $ohanhi$keyboard$Keyboard$modifierKey, $ohanhi$keyboard$Keyboard$navigationKey, $ohanhi$keyboard$Keyboard$editingKey, $ohanhi$keyboard$Keyboard$functionKey, $ohanhi$keyboard$Keyboard$uiKey, $ohanhi$keyboard$Keyboard$phoneKey, $ohanhi$keyboard$Keyboard$mediaKey]));
};
var $ohanhi$keyboard$Keyboard$Character = function (a) {
	return {$: 'Character', a: a};
};
var $ohanhi$keyboard$Keyboard$characterKeyUpper = function (_v0) {
	var value = _v0.a;
	return ($elm$core$String$length(value) === 1) ? $elm$core$Maybe$Just(
		$ohanhi$keyboard$Keyboard$Character(
			$elm$core$String$toUpper(value))) : $elm$core$Maybe$Nothing;
};
var $ohanhi$keyboard$Keyboard$anyKeyUpper = $ohanhi$keyboard$Keyboard$anyKeyWith($ohanhi$keyboard$Keyboard$characterKeyUpper);
var $ohanhi$keyboard$Keyboard$insert = F3(
	function (keyParser, rawKey, list) {
		var _v0 = keyParser(rawKey);
		if (_v0.$ === 'Just') {
			var key = _v0.a;
			return A2(
				$elm$core$List$cons,
				key,
				A2(
					$elm$core$List$filter,
					$elm$core$Basics$neq(key),
					list));
		} else {
			return list;
		}
	});
var $ohanhi$keyboard$Keyboard$remove = F3(
	function (keyParser, rawKey, list) {
		var _v0 = keyParser(rawKey);
		if (_v0.$ === 'Just') {
			var key = _v0.a;
			return A2(
				$elm$core$List$filter,
				$elm$core$Basics$neq(key),
				list);
		} else {
			return list;
		}
	});
var $ohanhi$keyboard$Keyboard$updateWithParser = F3(
	function (keyParser, msg, state) {
		if (msg.$ === 'Down') {
			var key = msg.a;
			return A3($ohanhi$keyboard$Keyboard$insert, keyParser, key, state);
		} else {
			var key = msg.a;
			return A3($ohanhi$keyboard$Keyboard$remove, keyParser, key, state);
		}
	});
var $ohanhi$keyboard$Keyboard$update = $ohanhi$keyboard$Keyboard$updateWithParser($ohanhi$keyboard$Keyboard$anyKeyUpper);
var $author$project$UI$Adjunct$keyboardInput = F2(
	function (msg, model) {
		return function (m) {
			var skip = $Fresheyeball$elm_return$Return$singleton(m);
			if (m.focusedOnInput && $elm_community$maybe_extra$Maybe$Extra$isNothing(model.alfred)) {
				var _v0 = m.pressedKeys;
				if ((_v0.b && (_v0.a.$ === 'Escape')) && (!_v0.b.b)) {
					var _v1 = _v0.a;
					return $author$project$UI$Interface$State$hideOverlay(m);
				} else {
					return skip;
				}
			} else {
				if ($elm_community$maybe_extra$Maybe$Extra$isJust(model.alfred)) {
					var _v2 = m.pressedKeys;
					_v2$4:
					while (true) {
						if (_v2.b && (!_v2.b.b)) {
							switch (_v2.a.$) {
								case 'ArrowDown':
									var _v3 = _v2.a;
									return $author$project$UI$Alfred$State$selectNext(m);
								case 'ArrowUp':
									var _v4 = _v2.a;
									return $author$project$UI$Alfred$State$selectPrevious(m);
								case 'Enter':
									var _v5 = _v2.a;
									return $author$project$UI$Alfred$State$runSelectedAction(m);
								case 'Escape':
									var _v6 = _v2.a;
									return $author$project$UI$Interface$State$hideOverlay(m);
								default:
									break _v2$4;
							}
						} else {
							break _v2$4;
						}
					}
					return skip;
				} else {
					var _v7 = m.pressedKeys;
					_v7$17:
					while (true) {
						if (_v7.b) {
							if (_v7.b.b) {
								if (_v7.a.$ === 'Character') {
									if (_v7.b.b.b) {
										if (((_v7.b.a.$ === 'Shift') && (_v7.b.b.a.$ === 'Control')) && (!_v7.b.b.b.b)) {
											switch (_v7.a.a) {
												case '{':
													var _v12 = _v7.b;
													var _v13 = _v12.a;
													var _v14 = _v12.b;
													var _v15 = _v14.a;
													return A2($author$project$UI$Audio$State$seek, (m.audioPosition - 10) / m.audioDuration, m);
												case '}':
													var _v16 = _v7.b;
													var _v17 = _v16.a;
													var _v18 = _v16.b;
													var _v19 = _v18.a;
													return A2($author$project$UI$Audio$State$seek, (m.audioPosition + 10) / m.audioDuration, m);
												default:
													break _v7$17;
											}
										} else {
											break _v7$17;
										}
									} else {
										switch (_v7.b.a.$) {
											case 'Meta':
												if (_v7.a.a === 'K') {
													var _v20 = _v7.b;
													var _v21 = _v20.a;
													return $author$project$UI$Commands$State$showPalette(m);
												} else {
													break _v7$17;
												}
											case 'Control':
												switch (_v7.a.a) {
													case '[':
														var _v8 = _v7.b;
														var _v9 = _v8.a;
														return $author$project$UI$Queue$State$rewind(m);
													case ']':
														var _v10 = _v7.b;
														var _v11 = _v10.a;
														return $author$project$UI$Queue$State$shift(m);
													case 'K':
														var _v22 = _v7.b;
														var _v23 = _v22.a;
														return $author$project$UI$Commands$State$showPalette(m);
													case 'L':
														var _v24 = _v7.b;
														var _v25 = _v24.a;
														return $author$project$UI$Playlists$State$assistWithSelectingPlaylist(m);
													case 'N':
														var _v26 = _v7.b;
														var _v27 = _v26.a;
														return $author$project$UI$Tracks$State$scrollToNowPlaying(m);
													case 'P':
														var _v28 = _v7.b;
														var _v29 = _v28.a;
														return $author$project$UI$Audio$State$playPause(m);
													case 'R':
														var _v30 = _v7.b;
														var _v31 = _v30.a;
														return $author$project$UI$Queue$State$toggleRepeat(m);
													case 'S':
														var _v32 = _v7.b;
														var _v33 = _v32.a;
														return $author$project$UI$Queue$State$toggleShuffle(m);
													case '1':
														var _v34 = _v7.b;
														var _v35 = _v34.a;
														return A2($author$project$UI$Common$State$changeUrlUsingPage, $author$project$UI$Page$Index, m);
													case '2':
														var _v36 = _v7.b;
														var _v37 = _v36.a;
														return A2(
															$author$project$UI$Common$State$changeUrlUsingPage,
															$author$project$UI$Page$Playlists($author$project$UI$Playlists$Page$Index),
															m);
													case '3':
														var _v38 = _v7.b;
														var _v39 = _v38.a;
														return A2(
															$author$project$UI$Common$State$changeUrlUsingPage,
															$author$project$UI$Page$Queue($author$project$UI$Queue$Page$Index),
															m);
													case '8':
														var _v40 = _v7.b;
														var _v41 = _v40.a;
														return A2(
															$author$project$UI$Common$State$changeUrlUsingPage,
															$author$project$UI$Page$Sources($author$project$UI$Sources$Page$Index),
															m);
													case '9':
														var _v42 = _v7.b;
														var _v43 = _v42.a;
														return A2(
															$author$project$UI$Common$State$changeUrlUsingPage,
															$author$project$UI$Page$Settings($author$project$UI$Settings$Page$Index),
															m);
													default:
														break _v7$17;
												}
											default:
												break _v7$17;
										}
									}
								} else {
									break _v7$17;
								}
							} else {
								if (_v7.a.$ === 'Escape') {
									var _v44 = _v7.a;
									if ($elm_community$maybe_extra$Maybe$Extra$isJust(m.contextMenu)) {
										return $Fresheyeball$elm_return$Return$singleton(
											_Utils_update(
												m,
												{contextMenu: $elm$core$Maybe$Nothing}));
									} else {
										if ($elm_community$maybe_extra$Maybe$Extra$isJust(m.confirmation)) {
											return $Fresheyeball$elm_return$Return$singleton(
												_Utils_update(
													m,
													{confirmation: $elm$core$Maybe$Nothing}));
										} else {
											if ($elm_community$maybe_extra$Maybe$Extra$isJust(m.alfred)) {
												return $Fresheyeball$elm_return$Return$singleton(
													_Utils_update(
														m,
														{alfred: $elm$core$Maybe$Nothing}));
											} else {
												if ($elm_community$maybe_extra$Maybe$Extra$isJust(m.selectedCover)) {
													return $Fresheyeball$elm_return$Return$singleton(
														_Utils_update(
															m,
															{selectedCover: $elm$core$Maybe$Nothing}));
												} else {
													var _v45 = m.page;
													switch (_v45.$) {
														case 'Playlists':
															if (_v45.a.$ === 'Index') {
																var _v46 = _v45.a;
																return $Fresheyeball$elm_return$Return$singleton(
																	_Utils_update(
																		m,
																		{page: $author$project$UI$Page$Index}));
															} else {
																return $Fresheyeball$elm_return$Return$singleton(
																	_Utils_update(
																		m,
																		{
																			page: $author$project$UI$Page$Playlists($author$project$UI$Playlists$Page$Index)
																		}));
															}
														case 'Queue':
															return $Fresheyeball$elm_return$Return$singleton(
																_Utils_update(
																	m,
																	{page: $author$project$UI$Page$Index}));
														default:
															return skip;
													}
												}
											}
										}
									}
								} else {
									break _v7$17;
								}
							}
						} else {
							break _v7$17;
						}
					}
					return skip;
				}
			}
		}(
			_Utils_update(
				model,
				{
					pressedKeys: A2($ohanhi$keyboard$Keyboard$update, msg, model.pressedKeys)
				}));
	});
var $elm$url$Url$addPort = F2(
	function (maybePort, starter) {
		if (maybePort.$ === 'Nothing') {
			return starter;
		} else {
			var port_ = maybePort.a;
			return starter + (':' + $elm$core$String$fromInt(port_));
		}
	});
var $elm$url$Url$addPrefixed = F3(
	function (prefix, maybeSegment, starter) {
		if (maybeSegment.$ === 'Nothing') {
			return starter;
		} else {
			var segment = maybeSegment.a;
			return _Utils_ap(
				starter,
				_Utils_ap(prefix, segment));
		}
	});
var $elm$url$Url$toString = function (url) {
	var http = function () {
		var _v0 = url.protocol;
		if (_v0.$ === 'Http') {
			return 'http://';
		} else {
			return 'https://';
		}
	}();
	return A3(
		$elm$url$Url$addPrefixed,
		'#',
		url.fragment,
		A3(
			$elm$url$Url$addPrefixed,
			'?',
			url.query,
			_Utils_ap(
				A2(
					$elm$url$Url$addPort,
					url.port_,
					_Utils_ap(http, url.host)),
				url.path)));
};
var $author$project$UI$Routing$State$linkClicked = F2(
	function (urlRequest, model) {
		if (urlRequest.$ === 'Internal') {
			var urlWithFragment = urlRequest.a;
			var url = _Utils_eq(
				urlWithFragment.fragment,
				$elm$core$Maybe$Just('/')) ? _Utils_update(
				urlWithFragment,
				{fragment: $elm$core$Maybe$Nothing}) : urlWithFragment;
			return (!_Utils_eq(url.path, model.url.path)) ? A2(
				$Fresheyeball$elm_return$Return$return,
				model,
				$elm$browser$Browser$Navigation$load(url.path)) : A2(
				$Fresheyeball$elm_return$Return$return,
				model,
				A2(
					$elm$browser$Browser$Navigation$pushUrl,
					model.navKey,
					$elm$url$Url$toString(url)));
		} else {
			var href = urlRequest.a;
			return A2(
				$Fresheyeball$elm_return$Return$return,
				model,
				$elm$browser$Browser$Navigation$load(href));
		}
	});
var $author$project$UI$Ports$pickAverageBackgroundColor = _Platform_outgoingPort('pickAverageBackgroundColor', $elm$json$Json$Encode$string);
var $author$project$UI$Backdrop$loadBackdrop = F2(
	function (backdrop, model) {
		return A2(
			$Fresheyeball$elm_return$Return$return,
			_Utils_update(
				model,
				{
					loadedBackdrops: _Utils_ap(
						model.loadedBackdrops,
						_List_fromArray(
							[backdrop]))
				}),
			$author$project$UI$Ports$pickAverageBackgroundColor(backdrop));
	});
var $author$project$UI$Equalizer$State$adjustAllKnobs = function (eqSettings) {
	return A2($author$project$UI$Equalizer$State$adjustKnobUsingPort, $author$project$Equalizer$Volume, eqSettings.volume);
};
var $author$project$User$Layer$EnclosedData = function (cachedTracks) {
	return function (equalizerSettings) {
		return function (grouping) {
			return function (onlyShowCachedTracks) {
				return function (onlyShowFavourites) {
					return function (repeat) {
						return function (scene) {
							return function (searchTerm) {
								return function (selectedPlaylist) {
									return function (shuffle) {
										return function (sortBy) {
											return function (sortDirection) {
												return {cachedTracks: cachedTracks, equalizerSettings: equalizerSettings, grouping: grouping, onlyShowCachedTracks: onlyShowCachedTracks, onlyShowFavourites: onlyShowFavourites, repeat: repeat, scene: scene, searchTerm: searchTerm, selectedPlaylist: selectedPlaylist, shuffle: shuffle, sortBy: sortBy, sortDirection: sortDirection};
											};
										};
									};
								};
							};
						};
					};
				};
			};
		};
	};
};
var $author$project$Tracks$Encoding$groupingDecoder = A2(
	$elm$json$Json$Decode$andThen,
	function (string) {
		switch (string) {
			case 'ADDED_ON':
				return $elm$json$Json$Decode$succeed($author$project$Tracks$AddedOn);
			case 'DIRECTORY':
				return $elm$json$Json$Decode$succeed($author$project$Tracks$Directory);
			case 'FIRST_ALPHA_CHARACTER':
				return $elm$json$Json$Decode$succeed($author$project$Tracks$FirstAlphaCharacter);
			case 'TRACK_YEAR':
				return $elm$json$Json$Decode$succeed($author$project$Tracks$TrackYear);
			default:
				return $elm$json$Json$Decode$fail('Invalid Grouping');
		}
	},
	$elm$json$Json$Decode$string);
var $author$project$Tracks$Encoding$sceneDecoder = A2(
	$elm$json$Json$Decode$andThen,
	function (string) {
		switch (string) {
			case 'COVERS':
				return $elm$json$Json$Decode$succeed($author$project$Tracks$Covers);
			case 'LIST':
				return $elm$json$Json$Decode$succeed($author$project$Tracks$List);
			default:
				return $elm$json$Json$Decode$fail('Invalid Scene');
		}
	},
	$elm$json$Json$Decode$string);
var $author$project$Equalizer$Settings = F4(
	function (low, mid, high, volume) {
		return {high: high, low: low, mid: mid, volume: volume};
	});
var $author$project$Equalizer$settingsDecoder = A5(
	$elm$json$Json$Decode$map4,
	$author$project$Equalizer$Settings,
	A2($elm$json$Json$Decode$field, 'low', $elm$json$Json$Decode$float),
	A2($elm$json$Json$Decode$field, 'mid', $elm$json$Json$Decode$float),
	A2($elm$json$Json$Decode$field, 'high', $elm$json$Json$Decode$float),
	A2($elm$json$Json$Decode$field, 'volume', $elm$json$Json$Decode$float));
var $author$project$Tracks$Encoding$sortByDecoder = A2(
	$elm$json$Json$Decode$andThen,
	function (string) {
		switch (string) {
			case 'ARTIST':
				return $elm$json$Json$Decode$succeed($author$project$Tracks$Artist);
			case 'ALBUM':
				return $elm$json$Json$Decode$succeed($author$project$Tracks$Album);
			case 'PLAYLIST_INDEX':
				return $elm$json$Json$Decode$succeed($author$project$Tracks$PlaylistIndex);
			case 'TITLE':
				return $elm$json$Json$Decode$succeed($author$project$Tracks$Title);
			default:
				return $elm$json$Json$Decode$fail('Invalid SortBy');
		}
	},
	$elm$json$Json$Decode$string);
var $author$project$Tracks$Encoding$sortDirectionDecoder = A2(
	$elm$json$Json$Decode$andThen,
	function (string) {
		switch (string) {
			case 'ASC':
				return $elm$json$Json$Decode$succeed($author$project$Tracks$Asc);
			case 'DESC':
				return $elm$json$Json$Decode$succeed($author$project$Tracks$Desc);
			default:
				return $elm$json$Json$Decode$fail('Invalid SortDirection');
		}
	},
	$elm$json$Json$Decode$string);
var $author$project$User$Layer$enclosedDataDecoder = A4(
	$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$optional,
	'sortDirection',
	$author$project$Tracks$Encoding$sortDirectionDecoder,
	$author$project$Tracks$Asc,
	A4(
		$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$optional,
		'sortBy',
		$author$project$Tracks$Encoding$sortByDecoder,
		$author$project$Tracks$Album,
		A4(
			$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$optional,
			'shuffle',
			$elm$json$Json$Decode$bool,
			false,
			A4(
				$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$optional,
				'selectedPlaylist',
				$elm$json$Json$Decode$maybe($elm$json$Json$Decode$string),
				$elm$core$Maybe$Nothing,
				A4(
					$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$optional,
					'searchTerm',
					$elm$json$Json$Decode$maybe($elm$json$Json$Decode$string),
					$elm$core$Maybe$Nothing,
					A4(
						$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$optional,
						'scene',
						$author$project$Tracks$Encoding$sceneDecoder,
						$author$project$Tracks$Covers,
						A4(
							$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$optional,
							'repeat',
							$elm$json$Json$Decode$bool,
							false,
							A4(
								$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$optional,
								'onlyShowFavourites',
								$elm$json$Json$Decode$bool,
								false,
								A4(
									$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$optional,
									'onlyShowCachedTracks',
									$elm$json$Json$Decode$bool,
									false,
									A4(
										$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$optional,
										'grouping',
										$elm$json$Json$Decode$maybe($author$project$Tracks$Encoding$groupingDecoder),
										$elm$core$Maybe$Nothing,
										A4(
											$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$optional,
											'equalizerSettings',
											$author$project$Equalizer$settingsDecoder,
											$author$project$Equalizer$defaultSettings,
											A4(
												$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$optional,
												'cachedTracks',
												$elm$json$Json$Decode$list($elm$json$Json$Decode$string),
												_List_Nil,
												$elm$json$Json$Decode$succeed($author$project$User$Layer$EnclosedData)))))))))))));
var $author$project$User$Layer$decodeEnclosedData = $elm$json$Json$Decode$decodeValue($author$project$User$Layer$enclosedDataDecoder);
var $author$project$UI$User$State$Import$importEnclosed = F2(
	function (value, model) {
		var equalizerSettings = model.eqSettings;
		var _v0 = $author$project$User$Layer$decodeEnclosedData(value);
		if (_v0.$ === 'Ok') {
			var data = _v0.a;
			var newEqualizerSettings = _Utils_update(
				equalizerSettings,
				{high: data.equalizerSettings.high, low: data.equalizerSettings.low, mid: data.equalizerSettings.mid, volume: data.equalizerSettings.volume});
			return _Utils_Tuple2(
				_Utils_update(
					model,
					{cachedTracks: data.cachedTracks, cachedTracksOnly: data.onlyShowCachedTracks, eqSettings: newEqualizerSettings, favouritesOnly: data.onlyShowFavourites, grouping: data.grouping, playlistToActivate: data.selectedPlaylist, repeat: data.repeat, scene: data.scene, searchTerm: data.searchTerm, shuffle: data.shuffle, sortBy: data.sortBy, sortDirection: data.sortDirection}),
				$elm$core$Platform$Cmd$batch(
					_List_fromArray(
						[
							$author$project$UI$Equalizer$State$adjustAllKnobs(newEqualizerSettings),
							$author$project$UI$Ports$setRepeat(data.repeat)
						])));
		} else {
			var err = _v0.a;
			return A2(
				$author$project$UI$Common$State$showNotificationWithModel,
				model,
				$author$project$Notifications$error(
					'Failed to decode enclosed data: ' + $elm$json$Json$Decode$errorToString(err)));
		}
	});
var $author$project$UI$User$State$Import$loadEnclosedUserData = $author$project$UI$User$State$Import$importEnclosed;
var $author$project$UI$Interface$State$lostWindowFocus = function (model) {
	return $Fresheyeball$elm_return$Return$singleton(
		_Utils_update(
			model,
			{focusedOnInput: false, pressedKeys: _List_Nil}));
};
var $elm$core$List$partition = F2(
	function (pred, list) {
		var step = F2(
			function (x, _v0) {
				var trues = _v0.a;
				var falses = _v0.b;
				return pred(x) ? _Utils_Tuple2(
					A2($elm$core$List$cons, x, trues),
					falses) : _Utils_Tuple2(
					trues,
					A2($elm$core$List$cons, x, falses));
			});
		return A3(
			$elm$core$List$foldr,
			step,
			_Utils_Tuple2(_List_Nil, _List_Nil),
			list);
	});
var $author$project$UI$Playlists$State$modify = function (model) {
	var _v0 = model.editPlaylistContext;
	if (_v0.$ === 'Just') {
		var oldName = _v0.a.oldName;
		var newName = _v0.a.newName;
		var properName = $elm$core$String$trim(newName);
		var validName = !$elm$core$String$isEmpty(properName);
		var _v1 = A2(
			$elm$core$List$partition,
			function ($) {
				return $.autoGenerated;
			},
			model.playlists);
		var autoGenerated = _v1.a;
		var notAutoGenerated = _v1.b;
		var alreadyExists = A2(
			$elm$core$List$any,
			A2(
				$elm$core$Basics$composeR,
				function ($) {
					return $.name;
				},
				$elm$core$Basics$eq(properName)),
			notAutoGenerated);
		var newCollection = A2(
			$elm$core$List$map,
			function (p) {
				return A3(
					$author$project$Conditional$ifThenElse,
					_Utils_eq(p.name, oldName),
					_Utils_update(
						p,
						{name: properName}),
					p);
			},
			notAutoGenerated);
		return alreadyExists ? A2(
			$author$project$UI$Common$State$showNotificationWithModel,
			_Utils_update(
				model,
				{editPlaylistContext: $elm$core$Maybe$Nothing}),
			$author$project$Notifications$error('There\'s already a playlist with this name')) : (validName ? A2(
			$Fresheyeball$elm_return$Return$andThen,
			$author$project$UI$Playlists$State$redirectToPlaylistIndexPage,
			$author$project$UI$User$State$Export$savePlaylists(
				_Utils_update(
					model,
					{
						editPlaylistContext: $elm$core$Maybe$Nothing,
						lastModifiedPlaylist: $elm$core$Maybe$Just(properName),
						playlists: _Utils_ap(newCollection, autoGenerated)
					}))) : $author$project$UI$Playlists$State$redirectToPlaylistIndexPage(model));
	} else {
		return $author$project$UI$Playlists$State$redirectToPlaylistIndexPage(model);
	}
};
var $author$project$UI$Interface$State$msgViaContextMenu = F2(
	function (msg, model) {
		return A2(
			$Fresheyeball$elm_return$Return$return,
			function () {
				if (msg.$ === 'ContextMenuConfirmation') {
					return model;
				} else {
					return _Utils_update(
						model,
						{confirmation: $elm$core$Maybe$Nothing, contextMenu: $elm$core$Maybe$Nothing});
				}
			}(),
			$author$project$Return$Ext$task(msg));
	});
var $author$project$UI$Audio$State$noteProgress = F2(
	function (_v0, model) {
		var trackId = _v0.trackId;
		var progress = _v0.progress;
		var updatedProgressTable = (!model.rememberProgress) ? model.progress : ((progress > 0.975) ? A2($elm$core$Dict$remove, trackId, model.progress) : A3($elm$core$Dict$insert, trackId, progress, model.progress));
		return model.rememberProgress ? $author$project$UI$User$State$Export$saveProgress(
			_Utils_update(
				model,
				{progress: updatedProgressTable})) : $Fresheyeball$elm_return$Return$singleton(model);
	});
var $author$project$UI$Ports$openUrlOnNewPage = _Platform_outgoingPort('openUrlOnNewPage', $elm$json$Json$Encode$string);
var $author$project$UI$Routing$State$openUrlOnNewPage = F2(
	function (url, model) {
		return A2(
			$Fresheyeball$elm_return$Return$return,
			model,
			$author$project$UI$Ports$openUrlOnNewPage(url));
	});
var $author$project$UI$Audio$State$pause = function (model) {
	return A2(
		$Fresheyeball$elm_return$Return$return,
		model,
		$author$project$UI$Ports$pause(_Utils_Tuple0));
};
var $author$project$UI$Audio$State$play = function (model) {
	return $elm_community$maybe_extra$Maybe$Extra$isNothing(model.nowPlaying) ? $author$project$UI$Queue$State$shift(model) : A2(
		$Fresheyeball$elm_return$Return$return,
		model,
		$author$project$UI$Ports$play(_Utils_Tuple0));
};
var $author$project$UI$Interface$State$preferredColorSchemaChanged = F2(
	function (_v0, model) {
		var dark = _v0.dark;
		return $Fresheyeball$elm_return$Return$singleton(
			_Utils_update(
				model,
				{darkMode: dark}));
	});
var $author$project$UI$Other$State$redirectToBrain = F2(
	function (event, model) {
		return A2(
			$Fresheyeball$elm_return$Return$return,
			model,
			$author$project$UI$Ports$toBrain(event));
	});
var $author$project$UI$Ports$reloadApp = _Platform_outgoingPort(
	'reloadApp',
	function ($) {
		return $elm$json$Json$Encode$null;
	});
var $author$project$UI$Other$State$reloadApp = function (model) {
	return A2(
		$Fresheyeball$elm_return$Return$return,
		model,
		$author$project$UI$Ports$reloadApp(_Utils_Tuple0));
};
var $author$project$UI$Interface$State$removeNotification = F2(
	function (_v0, model) {
		var id = _v0.id;
		return $Fresheyeball$elm_return$Return$singleton(
			function (n) {
				return _Utils_update(
					model,
					{notifications: n});
			}(
				A2(
					$elm$core$List$filter,
					A2(
						$elm$core$Basics$composeR,
						$author$project$Notifications$id,
						$elm$core$Basics$neq(id)),
					model.notifications)));
	});
var $author$project$UI$Interface$State$removeQueueSelection = function (model) {
	return $Fresheyeball$elm_return$Return$singleton(
		_Utils_update(
			model,
			{selectedQueueItem: $elm$core$Maybe$Nothing}));
};
var $author$project$UI$Interface$State$removeTrackSelection = function (model) {
	return $Fresheyeball$elm_return$Return$singleton(
		_Utils_update(
			model,
			{selectedTrackIndexes: _List_Nil}));
};
var $author$project$Tracks$removeFromPlaylist = F2(
	function (tracks, playlist) {
		return function (_v3) {
			var t = _v3.a;
			return _Utils_update(
				playlist,
				{tracks: t});
		}(
			A3(
				$elm_community$list_extra$List$Extra$indexedFoldr,
				F3(
					function (idx, t, _v0) {
						var acc = _v0.a;
						var remaining = _v0.b;
						var _v1 = A2(
							$elm$core$List$partition,
							$elm$core$Basics$eq(
								$elm$core$Maybe$Just(idx)),
							remaining);
						if (_v1.a.b) {
							var _v2 = _v1.a;
							var rem = _v1.b;
							return _Utils_Tuple2(acc, rem);
						} else {
							var rem = _v1.b;
							return _Utils_Tuple2(
								A2($elm$core$List$cons, t, acc),
								rem);
						}
					}),
				_Utils_Tuple2(
					_List_Nil,
					A2(
						$elm$core$List$map,
						A2(
							$elm$core$Basics$composeR,
							$elm$core$Tuple$first,
							function ($) {
								return $.indexInPlaylist;
							}),
						tracks)),
				playlist.tracks));
	});
var $author$project$UI$Playlists$State$removeTracks = F3(
	function (playlist, tracks, model) {
		var updatedPlaylist = A2($author$project$Tracks$removeFromPlaylist, tracks, playlist);
		return A2(
			$Fresheyeball$elm_return$Return$andThen,
			$author$project$UI$User$State$Export$savePlaylists,
			A2(
				$author$project$UI$Playlists$State$select,
				updatedPlaylist,
				function (c) {
					return _Utils_update(
						model,
						{playlists: c});
				}(
					A2(
						$elm$core$List$map,
						function (p) {
							return _Utils_eq(p.name, playlist.name) ? updatedPlaylist : p;
						},
						model.playlists))));
	});
var $author$project$UI$Types$ImportFile = function (a) {
	return {$: 'ImportFile', a: a};
};
var $elm$file$File$Select$file = F2(
	function (mimes, toMsg) {
		return A2(
			$elm$core$Task$perform,
			toMsg,
			_File_uploadOne(mimes));
	});
var $author$project$UI$User$State$Import$requestImport = function (model) {
	return A2(
		$Fresheyeball$elm_return$Return$return,
		model,
		A2(
			$elm$file$File$Select$file,
			_List_fromArray(
				['application/json']),
			$author$project$UI$Types$ImportFile));
};
var $Gizra$elm_debouncer$Debouncer$Internal$Check = function (a) {
	return {$: 'Check', a: a};
};
var $Gizra$elm_debouncer$Debouncer$Internal$InputProvidedAt = F2(
	function (a, b) {
		return {$: 'InputProvidedAt', a: a, b: b};
	});
var $Gizra$elm_debouncer$Debouncer$Internal$ManualEmitAt = function (a) {
	return {$: 'ManualEmitAt', a: a};
};
var $Gizra$elm_debouncer$Debouncer$Basic$MsgInternal = function (a) {
	return {$: 'MsgInternal', a: a};
};
var $Gizra$elm_debouncer$Debouncer$Internal$Unsettled = function (a) {
	return {$: 'Unsettled', a: a};
};
var $Gizra$elm_debouncer$Debouncer$Internal$cancel = function (_v0) {
	var config = _v0.a;
	var state = _v0.b;
	return A2($Gizra$elm_debouncer$Debouncer$Internal$Debouncer, config, $Gizra$elm_debouncer$Debouncer$Internal$Settled);
};
var $Gizra$elm_debouncer$Debouncer$Internal$update = F2(
	function (msg, debouncer) {
		var wrappedConfig = debouncer.a;
		var config = wrappedConfig.a;
		var state = debouncer.b;
		switch (msg.$) {
			case 'InputProvidedAt':
				var input = msg.a;
				var time = msg.b;
				var newState = function () {
					if (state.$ === 'Settled') {
						return $Gizra$elm_debouncer$Debouncer$Internal$Unsettled(
							{
								lastEmittedAt: $elm$core$Maybe$Nothing,
								lastInputProvidedAt: time,
								output: A2(config.accumulator, input, $elm$core$Maybe$Nothing),
								unsettledAt: time
							});
					} else {
						var unsettled = state.a;
						return $Gizra$elm_debouncer$Debouncer$Internal$Unsettled(
							_Utils_update(
								unsettled,
								{
									lastInputProvidedAt: time,
									output: A2(config.accumulator, input, unsettled.output)
								}));
					}
				}();
				var newDebouncer = A2($Gizra$elm_debouncer$Debouncer$Internal$Debouncer, wrappedConfig, newState);
				var checks = function () {
					if (state.$ === 'Settled') {
						return $elm_community$list_extra$List$Extra$unique(
							A2(
								$elm$core$List$filterMap,
								$elm$core$Basics$identity,
								_List_fromArray(
									[config.emitWhenUnsettled, config.emitWhileUnsettled, config.settleWhenQuietFor])));
					} else {
						return A2(
							$elm$core$List$filterMap,
							$elm$core$Basics$identity,
							_List_fromArray(
								[config.settleWhenQuietFor]));
					}
				}();
				var _v1 = A2(
					$elm$core$Tuple$mapFirst,
					A2($elm$core$Basics$composeL, $elm$core$Basics$not, $elm$core$List$isEmpty),
					A2(
						$elm$core$List$partition,
						function (interval) {
							return interval <= 0;
						},
						checks));
				var checkNow = _v1.a;
				var checkLater = _v1.b;
				var _v2 = checkNow ? A2(
					$Gizra$elm_debouncer$Debouncer$Internal$update,
					$Gizra$elm_debouncer$Debouncer$Internal$Check(time),
					newDebouncer) : _Utils_Tuple3(newDebouncer, _List_Nil, $elm$core$Maybe$Nothing);
				var checkedDebouncer = _v2.a;
				var checkedIntervals = _v2.b;
				var emit = _v2.c;
				return _Utils_Tuple3(
					checkedDebouncer,
					_Utils_ap(checkedIntervals, checkLater),
					emit);
			case 'ManualCancel':
				return _Utils_Tuple3(
					$Gizra$elm_debouncer$Debouncer$Internal$cancel(debouncer),
					_List_Nil,
					$elm$core$Maybe$Nothing);
			case 'ManualSettle':
				var emit = function () {
					if (state.$ === 'Settled') {
						return $elm$core$Maybe$Nothing;
					} else {
						var unsettled = state.a;
						return unsettled.output;
					}
				}();
				return _Utils_Tuple3(
					$Gizra$elm_debouncer$Debouncer$Internal$cancel(debouncer),
					_List_Nil,
					emit);
			case 'ManualEmitAt':
				var time = msg.a;
				if (state.$ === 'Settled') {
					return _Utils_Tuple3(debouncer, _List_Nil, $elm$core$Maybe$Nothing);
				} else {
					var unsettled = state.a;
					var _v7 = unsettled.output;
					if (_v7.$ === 'Just') {
						var newState = $Gizra$elm_debouncer$Debouncer$Internal$Unsettled(
							_Utils_update(
								unsettled,
								{
									lastEmittedAt: $elm$core$Maybe$Just(time),
									output: $elm$core$Maybe$Nothing
								}));
						var intervals = function () {
							var _v8 = config.emitWhenUnsettled;
							if (_v8.$ === 'Just') {
								var emit = _v8.a;
								return _List_fromArray(
									[emit]);
							} else {
								return _List_Nil;
							}
						}();
						return _Utils_Tuple3(
							A2($Gizra$elm_debouncer$Debouncer$Internal$Debouncer, wrappedConfig, newState),
							intervals,
							unsettled.output);
					} else {
						return _Utils_Tuple3(debouncer, _List_Nil, $elm$core$Maybe$Nothing);
					}
				}
			default:
				var time = msg.a;
				if (state.$ === 'Settled') {
					return _Utils_Tuple3(debouncer, _List_Nil, $elm$core$Maybe$Nothing);
				} else {
					var unsettled = state.a;
					var shouldSettle = A2(
						$elm$core$Maybe$withDefault,
						false,
						A2(
							$elm$core$Maybe$map,
							function (interval) {
								return _Utils_cmp(unsettled.lastInputProvidedAt + interval, time) < 1;
							},
							config.settleWhenQuietFor));
					var becauseEmitWhileUnsettled = function () {
						var _v13 = config.emitWhileUnsettled;
						if (_v13.$ === 'Just') {
							var interval = _v13.a;
							var _v14 = unsettled.lastEmittedAt;
							if (_v14.$ === 'Just') {
								var lastEmittedAt = _v14.a;
								return _Utils_cmp(lastEmittedAt + interval, time) < 1;
							} else {
								return _Utils_cmp(unsettled.unsettledAt + interval, time) < 1;
							}
						} else {
							return false;
						}
					}();
					var becauseEmitWhenUnsettled = function () {
						var _v11 = config.emitWhenUnsettled;
						if (_v11.$ === 'Just') {
							var interval = _v11.a;
							var _v12 = unsettled.lastEmittedAt;
							if (_v12.$ === 'Just') {
								return false;
							} else {
								return _Utils_cmp(unsettled.unsettledAt + interval, time) < 1;
							}
						} else {
							return false;
						}
					}();
					var shouldEmit = (!_Utils_eq(unsettled.output, $elm$core$Maybe$Nothing)) && (shouldSettle || (becauseEmitWhenUnsettled || becauseEmitWhileUnsettled));
					var emit = shouldEmit ? unsettled.output : $elm$core$Maybe$Nothing;
					var intervals = function () {
						if (shouldEmit && (!shouldSettle)) {
							var _v10 = config.emitWhileUnsettled;
							if (_v10.$ === 'Just') {
								var interval = _v10.a;
								return _List_fromArray(
									[interval]);
							} else {
								return _List_Nil;
							}
						} else {
							return _List_Nil;
						}
					}();
					var newState = shouldSettle ? $Gizra$elm_debouncer$Debouncer$Internal$Settled : (shouldEmit ? $Gizra$elm_debouncer$Debouncer$Internal$Unsettled(
						_Utils_update(
							unsettled,
							{
								lastEmittedAt: $elm$core$Maybe$Just(time),
								output: $elm$core$Maybe$Nothing
							})) : state);
					return _Utils_Tuple3(
						A2($Gizra$elm_debouncer$Debouncer$Internal$Debouncer, wrappedConfig, newState),
						intervals,
						emit);
				}
		}
	});
var $Gizra$elm_debouncer$Debouncer$Basic$update = F2(
	function (msg, debouncer) {
		switch (msg.$) {
			case 'ProvideInput':
				var input = msg.a;
				return _Utils_Tuple3(
					debouncer,
					A2(
						$elm$core$Task$perform,
						A2(
							$elm$core$Basics$composeL,
							A2(
								$elm$core$Basics$composeL,
								$Gizra$elm_debouncer$Debouncer$Basic$MsgInternal,
								$Gizra$elm_debouncer$Debouncer$Internal$InputProvidedAt(input)),
							$elm$time$Time$posixToMillis),
						$elm$time$Time$now),
					$elm$core$Maybe$Nothing);
			case 'EmitNow':
				return _Utils_Tuple3(
					debouncer,
					A2(
						$elm$core$Task$perform,
						A2(
							$elm$core$Basics$composeL,
							A2($elm$core$Basics$composeL, $Gizra$elm_debouncer$Debouncer$Basic$MsgInternal, $Gizra$elm_debouncer$Debouncer$Internal$ManualEmitAt),
							$elm$time$Time$posixToMillis),
						$elm$time$Time$now),
					$elm$core$Maybe$Nothing);
			default:
				var subMsg = msg.a;
				var _v1 = A2($Gizra$elm_debouncer$Debouncer$Internal$update, subMsg, debouncer);
				var updatedDebouncer = _v1.a;
				var intervals = _v1.b;
				var output = _v1.c;
				var cmds = $elm$core$Platform$Cmd$batch(
					A2(
						$elm$core$List$map,
						function (interval) {
							return A2(
								$elm$core$Task$perform,
								A2(
									$elm$core$Basics$composeL,
									A2($elm$core$Basics$composeL, $Gizra$elm_debouncer$Debouncer$Basic$MsgInternal, $Gizra$elm_debouncer$Debouncer$Internal$Check),
									$elm$time$Time$posixToMillis),
								A2(
									$elm$core$Task$andThen,
									$elm$core$Basics$always($elm$time$Time$now),
									$elm$core$Process$sleep(interval)));
						},
						intervals));
				return _Utils_Tuple3(updatedDebouncer, cmds, output);
		}
	});
var $author$project$UI$Common$State$debounce = F6(
	function (getter, setter, debouncerMsgContainer, update, debouncerMsg, model) {
		var _v0 = A2(
			$Gizra$elm_debouncer$Debouncer$Basic$update,
			debouncerMsg,
			getter(model));
		var subModel = _v0.a;
		var subCmd = _v0.b;
		var emittedMsg = _v0.c;
		var mappedCmd = A2($elm$core$Platform$Cmd$map, debouncerMsgContainer, subCmd);
		var updatedModel = A2(setter, subModel, model);
		if (emittedMsg.$ === 'Just') {
			var emitted = emittedMsg.a;
			return A2(
				$Fresheyeball$elm_return$Return$command,
				mappedCmd,
				A2(update, emitted, updatedModel));
		} else {
			return A2($Fresheyeball$elm_return$Return$return, updatedModel, mappedCmd);
		}
	});
var $author$project$UI$Interface$State$resizeDebounce = A3(
	$author$project$UI$Common$State$debounce,
	function ($) {
		return $.resizeDebouncer;
	},
	F2(
		function (d, m) {
			return _Utils_update(
				m,
				{resizeDebouncer: d});
		}),
	$author$project$UI$Types$ResizeDebounce);
var $author$project$UI$Interface$State$resizedWindow = F2(
	function (_v0, model) {
		var width = _v0.a;
		var height = _v0.b;
		return $Fresheyeball$elm_return$Return$singleton(
			_Utils_update(
				model,
				{
					contextMenu: $elm$core$Maybe$Nothing,
					viewport: {height: height, width: width}
				}));
	});
var $elm$http$Http$stringBody = _Http_pair;
var $author$project$LastFm$authenticatedBody = function (params) {
	return A2(
		$elm$http$Http$stringBody,
		'application/x-www-form-urlencoded',
		A2(
			$elm$core$String$dropLeft,
			1,
			$author$project$Common$queryString(
				$author$project$LastFm$authenticatedParams(params))));
};
var $elm$http$Http$expectBytesResponse = F2(
	function (toMsg, toResult) {
		return A3(
			_Http_expect,
			'arraybuffer',
			_Http_toDataView,
			A2($elm$core$Basics$composeR, toResult, toMsg));
	});
var $elm$http$Http$expectWhatever = function (toMsg) {
	return A2(
		$elm$http$Http$expectBytesResponse,
		toMsg,
		$elm$http$Http$resolve(
			function (_v0) {
				return $elm$core$Result$Ok(_Utils_Tuple0);
			}));
};
var $author$project$LastFm$scrobble = F2(
	function (model, _v0) {
		var duration = _v0.duration;
		var msg = _v0.msg;
		var timestamp = _v0.timestamp;
		var track = _v0.track;
		var _v1 = model.sessionKey;
		if (_v1.$ === 'Just') {
			var sessionKey = _v1.a;
			return $elm$http$Http$post(
				{
					body: $author$project$LastFm$authenticatedBody(
						_List_fromArray(
							[
								_Utils_Tuple2('album', track.tags.album),
								_Utils_Tuple2('artist', track.tags.artist),
								_Utils_Tuple2(
								'duration',
								$elm$core$String$fromInt(duration)),
								_Utils_Tuple2('track', track.tags.title),
								_Utils_Tuple2(
								'trackNumber',
								$elm$core$String$fromInt(track.tags.nr)),
								_Utils_Tuple2('method', 'track.scrobble'),
								_Utils_Tuple2('sk', sessionKey),
								_Utils_Tuple2(
								'timestamp',
								$elm$core$String$fromInt(timestamp))
							])),
					expect: $elm$http$Http$expectWhatever(
						$elm$core$Basics$always(msg)),
					url: $author$project$LastFm$apiUrl
				});
		} else {
			return $elm$core$Platform$Cmd$none;
		}
	});
var $author$project$UI$Services$State$scrobble = F2(
	function (_v0, model) {
		var duration = _v0.duration;
		var timestamp = _v0.timestamp;
		var trackId = _v0.trackId;
		var _v1 = A2(
			$elm$core$Maybe$map,
			function ($) {
				return $.identifiedTrack;
			},
			model.nowPlaying);
		if (_v1.$ === 'Just') {
			var _v2 = _v1.a;
			var track = _v2.b;
			return _Utils_eq(trackId, track.id) ? _Utils_Tuple2(
				model,
				A2(
					$author$project$LastFm$scrobble,
					model.lastFm,
					{duration: duration, msg: $author$project$UI$Types$Bypass, timestamp: timestamp, track: track})) : $Fresheyeball$elm_return$Return$singleton(model);
		} else {
			return $Fresheyeball$elm_return$Return$singleton(model);
		}
	});
var $author$project$UI$Types$SearchDebounce = function (a) {
	return {$: 'SearchDebounce', a: a};
};
var $author$project$UI$Interface$State$searchDebounce = A3(
	$author$project$UI$Common$State$debounce,
	function ($) {
		return $.searchDebouncer;
	},
	F2(
		function (d, m) {
			return _Utils_update(
				m,
				{searchDebouncer: d});
		}),
	$author$project$UI$Types$SearchDebounce);
var $author$project$UI$Playlists$State$setCreationContext = F2(
	function (playlistName, model) {
		return $Fresheyeball$elm_return$Return$singleton(
			_Utils_update(
				model,
				{
					newPlaylistContext: $elm$core$Maybe$Just(playlistName)
				}));
	});
var $author$project$UI$Other$State$setCurrentTime = F2(
	function (time, model) {
		return $Fresheyeball$elm_return$Return$singleton(
			_Utils_update(
				model,
				{currentTime: time}));
	});
var $author$project$UI$Other$State$setCurrentTimeZone = F2(
	function (zone, model) {
		return $Fresheyeball$elm_return$Return$singleton(
			_Utils_update(
				model,
				{currentTimeZone: zone}));
	});
var $author$project$LastFm$nowPlaying = F2(
	function (model, _v0) {
		var duration = _v0.duration;
		var msg = _v0.msg;
		var track = _v0.track;
		var _v1 = model.sessionKey;
		if (_v1.$ === 'Just') {
			var sessionKey = _v1.a;
			return $elm$http$Http$post(
				{
					body: $author$project$LastFm$authenticatedBody(
						_List_fromArray(
							[
								_Utils_Tuple2('album', track.tags.album),
								_Utils_Tuple2('artist', track.tags.artist),
								_Utils_Tuple2(
								'duration',
								$elm$core$String$fromInt(duration)),
								_Utils_Tuple2('track', track.tags.title),
								_Utils_Tuple2(
								'trackNumber',
								$elm$core$String$fromInt(track.tags.nr)),
								_Utils_Tuple2('method', 'track.updateNowPlaying'),
								_Utils_Tuple2('sk', sessionKey)
							])),
					expect: $elm$http$Http$expectWhatever(
						$elm$core$Basics$always(msg)),
					url: $author$project$LastFm$apiUrl
				});
		} else {
			return $elm$core$Platform$Cmd$none;
		}
	});
var $author$project$UI$Audio$State$setDuration = F2(
	function (duration, model) {
		var cmd = function () {
			var _v0 = A2(
				$elm$core$Maybe$map,
				function ($) {
					return $.identifiedTrack;
				},
				model.nowPlaying);
			if (_v0.$ === 'Just') {
				var _v1 = _v0.a;
				var track = _v1.b;
				return A2(
					$author$project$LastFm$nowPlaying,
					model.lastFm,
					{
						duration: $elm$core$Basics$round(duration),
						msg: $author$project$UI$Types$Bypass,
						track: track
					});
			} else {
				return $elm$core$Platform$Cmd$none;
			}
		}();
		return A2(
			$Fresheyeball$elm_return$Return$return,
			_Utils_update(
				model,
				{audioDuration: duration}),
			cmd);
	});
var $author$project$UI$Audio$State$setHasStalled = F2(
	function (hasStalled, model) {
		return $Fresheyeball$elm_return$Return$singleton(
			_Utils_update(
				model,
				{audioHasStalled: hasStalled}));
	});
var $author$project$UI$Audio$State$setIsLoading = F2(
	function (isLoading, model) {
		return $Fresheyeball$elm_return$Return$singleton(
			_Utils_update(
				model,
				{audioIsLoading: isLoading}));
	});
var $author$project$Alien$trigger = function (tag) {
	return {
		data: $elm$json$Json$Encode$null,
		error: $elm$core$Maybe$Nothing,
		tag: $author$project$Alien$tagToString(tag)
	};
};
var $author$project$UI$Other$State$syncHypaethralData = function (model) {
	return A2(
		$Fresheyeball$elm_return$Return$command,
		$author$project$UI$Ports$toBrain(
			$author$project$Alien$trigger($author$project$Alien$SyncHypaethralData)),
		A2(
			$author$project$UI$Common$State$showNotification,
			$author$project$Notifications$casual('Syncing'),
			model));
};
var $author$project$UI$Other$State$setIsOnline = F2(
	function (bool, model) {
		return bool ? $author$project$UI$Other$State$syncHypaethralData(
			_Utils_update(
				model,
				{isOnline: bool})) : $Fresheyeball$elm_return$Return$singleton(
			_Utils_update(
				model,
				{isOnline: bool}));
	});
var $author$project$UI$Audio$State$setIsPlaying = F2(
	function (isPlaying, model) {
		return $Fresheyeball$elm_return$Return$singleton(
			_Utils_update(
				model,
				{audioIsPlaying: isPlaying}));
	});
var $author$project$UI$Interface$State$setIsTouchDevice = F2(
	function (bool, model) {
		return $Fresheyeball$elm_return$Return$singleton(
			_Utils_update(
				model,
				{isTouchDevice: bool}));
	});
var $author$project$UI$Playlists$State$setModificationContext = F3(
	function (oldName, newName, model) {
		var context = {newName: newName, oldName: oldName};
		return $Fresheyeball$elm_return$Return$singleton(
			_Utils_update(
				model,
				{
					editPlaylistContext: $elm$core$Maybe$Just(context)
				}));
	});
var $author$project$UI$Audio$State$setPosition = F2(
	function (position, model) {
		return $Fresheyeball$elm_return$Return$singleton(
			_Utils_update(
				model,
				{audioPosition: position}));
	});
var $author$project$Coordinates$fromTuple = function (_v0) {
	var x = _v0.a;
	var y = _v0.b;
	return {x: x, y: y};
};
var $author$project$ContextMenu$ContextMenu = F2(
	function (a, b) {
		return {$: 'ContextMenu', a: a, b: b};
	});
var $mpizenberg$elm_pointer_events$Html$Events$Extra$Mouse$MainButton = {$: 'MainButton'};
var $author$project$UI$Types$ShowPlaylistListMenu = F2(
	function (a, b) {
		return {$: 'ShowPlaylistListMenu', a: a, b: b};
	});
var $author$project$UI$Queue$Types$AddTracks = function (a) {
	return {$: 'AddTracks', a: a};
};
var $author$project$ContextMenu$Item = function (a) {
	return {$: 'Item', a: a};
};
var $elm$svg$Svg$Attributes$enableBackground = _VirtualDom_attribute('enable-background');
var $icidasset$elm_material_icons$Material$Icons$Internal$b = $elm$svg$Svg$Attributes$enableBackground;
var $elm$svg$Svg$rect = $elm$svg$Svg$trustedNode('rect');
var $icidasset$elm_material_icons$Material$Icons$Round$update = A2(
	$icidasset$elm_material_icons$Material$Icons$Internal$icon,
	_List_fromArray(
		[
			$icidasset$elm_material_icons$Material$Icons$Internal$b('new 0 0 24 24'),
			$icidasset$elm_material_icons$Material$Icons$Internal$v('0 0 24 24')
		]),
	_List_fromArray(
		[
			A2(
			$elm$svg$Svg$g,
			_List_Nil,
			_List_fromArray(
				[
					A2(
					$elm$svg$Svg$rect,
					_List_fromArray(
						[
							$icidasset$elm_material_icons$Material$Icons$Internal$f('none')
						]),
					_List_Nil)
				])),
			A2(
			$elm$svg$Svg$g,
			_List_Nil,
			_List_fromArray(
				[
					A2(
					$elm$svg$Svg$g,
					_List_Nil,
					_List_fromArray(
						[
							A2(
							$icidasset$elm_material_icons$Material$Icons$Internal$p,
							_List_fromArray(
								[
									$elm$svg$Svg$Attributes$d('M11,8.75v3.68c0,0.35,0.19,0.68,0.49,0.86l3.12,1.85c0.36,0.21,0.82,0.09,1.03-0.26c0.21-0.36,0.1-0.82-0.26-1.03 l-2.87-1.71v-3.4C12.5,8.34,12.16,8,11.75,8S11,8.34,11,8.75z M21,9.5V4.21c0-0.45-0.54-0.67-0.85-0.35l-1.78,1.78 c-1.81-1.81-4.39-2.85-7.21-2.6c-4.19,0.38-7.64,3.75-8.1,7.94C2.46,16.4,6.69,21,12,21c4.59,0,8.38-3.44,8.93-7.88 c0.07-0.6-0.4-1.12-1-1.12c-0.5,0-0.92,0.37-0.98,0.86c-0.43,3.49-3.44,6.19-7.05,6.14c-3.71-0.05-6.84-3.18-6.9-6.9 C4.94,8.2,8.11,5,12,5c1.93,0,3.68,0.79,4.95,2.05l-2.09,2.09C14.54,9.46,14.76,10,15.21,10h5.29C20.78,10,21,9.78,21,9.5z')
								]),
							_List_Nil)
						]))
				]))
		]));
var $author$project$UI$Playlists$ContextMenu$addToQueue = function (identifiedTracks) {
	return $author$project$ContextMenu$Item(
		{
			active: false,
			icon: $icidasset$elm_material_icons$Material$Icons$Round$update,
			label: 'Add to queue',
			msg: $author$project$UI$Types$QueueMsg(
				$author$project$UI$Queue$Types$AddTracks(
					{inFront: false, tracks: identifiedTracks}))
		});
};
var $icidasset$elm_material_icons$Material$Icons$Round$waves = A2(
	$icidasset$elm_material_icons$Material$Icons$Internal$icon,
	_List_fromArray(
		[
			$icidasset$elm_material_icons$Material$Icons$Internal$v('0 0 24 24')
		]),
	_List_fromArray(
		[
			A2(
			$icidasset$elm_material_icons$Material$Icons$Internal$p,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$d('M0 0h24v24H0V0z'),
					$icidasset$elm_material_icons$Material$Icons$Internal$f('none')
				]),
			_List_Nil),
			A2(
			$icidasset$elm_material_icons$Material$Icons$Internal$p,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$d('M17 16.99c-1.35 0-2.2.42-2.95.8-.65.33-1.18.6-2.05.6-.9 0-1.4-.25-2.05-.6-.75-.38-1.57-.8-2.95-.8s-2.2.42-2.95.8c-.43.22-.81.41-1.27.52-.45.1-.78.46-.78.91v.1c0 .6.56 1.03 1.14.91.74-.15 1.3-.43 1.81-.69.65-.33 1.17-.6 2.05-.6s1.4.25 2.05.6c.75.38 1.57.8 2.95.8s2.2-.42 2.95-.8c.65-.33 1.18-.6 2.05-.6.9 0 1.4.25 2.05.6.52.26 1.08.55 1.83.7.58.11 1.12-.33 1.12-.91v-.09c0-.46-.34-.82-.79-.92-.46-.1-.83-.29-1.26-.52-.75-.39-1.6-.81-2.95-.81zm0-4.45c-1.35 0-2.2.43-2.95.8-.65.32-1.18.6-2.05.6-.9 0-1.4-.25-2.05-.6-.75-.38-1.57-.8-2.95-.8s-2.2.43-2.95.8c-.43.21-.81.41-1.28.52-.44.1-.77.46-.77.91v.1c0 .59.54 1.03 1.12.91.75-.15 1.31-.44 1.83-.69.65-.35 1.15-.6 2.05-.6s1.4.25 2.05.6c.75.38 1.57.8 2.95.8s2.2-.43 2.95-.8c.65-.35 1.15-.6 2.05-.6s1.4.25 2.05.6c.52.26 1.08.55 1.83.7.58.11 1.12-.33 1.12-.92v-.09c0-.46-.34-.82-.79-.92-.46-.1-.83-.29-1.26-.52-.75-.38-1.6-.8-2.95-.8zm2.95-8.08c-.75-.38-1.58-.8-2.95-.8s-2.2.42-2.95.8c-.65.32-1.18.6-2.05.6-.9 0-1.4-.25-2.05-.6-.75-.37-1.57-.8-2.95-.8s-2.2.42-2.95.8c-.43.22-.81.41-1.27.52-.45.1-.78.46-.78.91v.07c0 .6.54 1.04 1.12.92.75-.15 1.31-.44 1.83-.69.65-.33 1.17-.6 2.05-.6s1.4.25 2.05.6c.75.38 1.57.8 2.95.8s2.2-.43 2.95-.8c.65-.32 1.18-.6 2.05-.6.9 0 1.4.25 2.05.6.52.26 1.08.55 1.83.7.58.11 1.12-.33 1.12-.92v-.09c0-.46-.34-.82-.79-.92-.46-.1-.83-.28-1.26-.5zM17 8.09c-1.35 0-2.2.43-2.95.8-.65.35-1.15.6-2.05.6s-1.4-.25-2.05-.6c-.75-.38-1.57-.8-2.95-.8s-2.2.43-2.95.8c-.43.23-.8.42-1.26.52-.45.1-.79.46-.79.92v.09c0 .59.54 1.03 1.12.91.75-.15 1.31-.44 1.83-.69.65-.32 1.18-.6 2.05-.6s1.4.25 2.05.6c.75.38 1.57.8 2.95.8s2.2-.43 2.95-.8c.65-.32 1.18-.6 2.05-.6.9 0 1.4.25 2.05.6.52.26 1.08.55 1.83.7.58.11 1.12-.33 1.12-.91v-.09c0-.46-.34-.82-.79-.92-.46-.1-.83-.29-1.26-.52-.75-.39-1.6-.81-2.95-.81z')
				]),
			_List_Nil)
		]));
var $author$project$UI$Playlists$ContextMenu$convertToRegularPlaylist = F2(
	function (tracksFromPlaylist, playlist) {
		return $author$project$ContextMenu$Item(
			{
				active: false,
				icon: $icidasset$elm_material_icons$Material$Icons$Round$waves,
				label: 'Convert to regular playlist',
				msg: $author$project$UI$Types$AddTracksToPlaylist(
					{
						playlistName: playlist.name,
						tracks: A2($elm$core$List$map, $author$project$Tracks$playlistTrackFromTrack, tracksFromPlaylist)
					})
			});
	});
var $author$project$UI$Tracks$Types$Download = F2(
	function (a, b) {
		return {$: 'Download', a: a, b: b};
	});
var $icidasset$elm_material_icons$Material$Icons$Round$archive = A2(
	$icidasset$elm_material_icons$Material$Icons$Internal$icon,
	_List_fromArray(
		[
			$icidasset$elm_material_icons$Material$Icons$Internal$v('0 0 24 24')
		]),
	_List_fromArray(
		[
			A2(
			$icidasset$elm_material_icons$Material$Icons$Internal$p,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$d('M0 0h24v24H0V0z'),
					$icidasset$elm_material_icons$Material$Icons$Internal$f('none')
				]),
			_List_Nil),
			A2(
			$icidasset$elm_material_icons$Material$Icons$Internal$p,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$d('M20.54 5.23l-1.39-1.68C18.88 3.21 18.47 3 18 3H6c-.47 0-.88.21-1.16.55L3.46 5.23C3.17 5.57 3 6.02 3 6.5V19c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V6.5c0-.48-.17-.93-.46-1.27zm-8.89 11.92L6.5 12H10v-2h4v2h3.5l-5.15 5.15c-.19.19-.51.19-.7 0zM5.12 5l.81-1h12l.94 1H5.12z')
				]),
			_List_Nil)
		]));
var $author$project$UI$Playlists$ContextMenu$downloadAsZip = F2(
	function (tracksFromPlaylist, playlist) {
		return $author$project$ContextMenu$Item(
			{
				active: false,
				icon: $icidasset$elm_material_icons$Material$Icons$Round$archive,
				label: 'Download as zip file',
				msg: $author$project$UI$Types$TracksMsg(
					A2($author$project$UI$Tracks$Types$Download, playlist.name, tracksFromPlaylist))
			});
	});
var $author$project$UI$Types$ContextMenuConfirmation = F2(
	function (a, b) {
		return {$: 'ContextMenuConfirmation', a: a, b: b};
	});
var $author$project$UI$Types$DeletePlaylist = function (a) {
	return {$: 'DeletePlaylist', a: a};
};
var $icidasset$elm_material_icons$Material$Icons$Round$delete = A2(
	$icidasset$elm_material_icons$Material$Icons$Internal$icon,
	_List_fromArray(
		[
			$icidasset$elm_material_icons$Material$Icons$Internal$v('0 0 24 24')
		]),
	_List_fromArray(
		[
			A2(
			$icidasset$elm_material_icons$Material$Icons$Internal$p,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$d('M0 0h24v24H0V0z'),
					$icidasset$elm_material_icons$Material$Icons$Internal$f('none')
				]),
			_List_Nil),
			A2(
			$icidasset$elm_material_icons$Material$Icons$Internal$p,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$d('M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V9c0-1.1-.9-2-2-2H8c-1.1 0-2 .9-2 2v10zM18 4h-2.5l-.71-.71c-.18-.18-.44-.29-.7-.29H9.91c-.26 0-.52.11-.7.29L8.5 4H6c-.55 0-1 .45-1 1s.45 1 1 1h12c.55 0 1-.45 1-1s-.45-1-1-1z')
				]),
			_List_Nil)
		]));
var $author$project$UI$Playlists$ContextMenu$removePlaylist = F3(
	function (menuMsg, confirmation, playlist) {
		var playlistId = 'Playlist - ' + playlist.name;
		var askForConfirmation = _Utils_eq(
			confirmation,
			$elm$core$Maybe$Just(playlistId));
		return $author$project$ContextMenu$Item(
			{
				active: askForConfirmation,
				icon: $icidasset$elm_material_icons$Material$Icons$Round$delete,
				label: askForConfirmation ? 'Are you sure?' : 'Remove playlist',
				msg: askForConfirmation ? $author$project$UI$Types$DeletePlaylist(
					{playlistName: playlist.name}) : A2($author$project$UI$Types$ContextMenuConfirmation, playlistId, menuMsg)
			});
	});
var $icidasset$elm_material_icons$Material$Icons$Round$font_download = A2(
	$icidasset$elm_material_icons$Material$Icons$Internal$icon,
	_List_fromArray(
		[
			$icidasset$elm_material_icons$Material$Icons$Internal$v('0 0 24 24')
		]),
	_List_fromArray(
		[
			A2(
			$icidasset$elm_material_icons$Material$Icons$Internal$p,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$d('M0 0h24v24H0V0z'),
					$icidasset$elm_material_icons$Material$Icons$Internal$f('none')
				]),
			_List_Nil),
			A2(
			$icidasset$elm_material_icons$Material$Icons$Internal$p,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$d('M9.93 13.5h4.14L12 7.98 9.93 13.5zM20 2H4c-1.1 0-2 .9-2 2v16c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-4.29 15.88l-.9-2.38H9.17l-.89 2.37c-.14.38-.5.63-.91.63-.68 0-1.15-.69-.9-1.32l4.25-10.81c.22-.53.72-.87 1.28-.87s1.06.34 1.27.87l4.25 10.81c.25.63-.22 1.32-.9 1.32-.4 0-.76-.25-.91-.62z')
				]),
			_List_Nil)
		]));
var $author$project$UI$Playlists$ContextMenu$renamePlaylist = function (playlist) {
	return $author$project$ContextMenu$Item(
		{
			active: false,
			icon: $icidasset$elm_material_icons$Material$Icons$Round$font_download,
			label: 'Rename playlist',
			msg: $author$project$UI$Types$ChangeUrlUsingPage(
				$author$project$UI$Page$Playlists(
					$author$project$UI$Playlists$Page$Edit(
						$elm$url$Url$percentEncode(playlist.name))))
		});
};
var $author$project$UI$Playlists$ContextMenu$storeInCache = function (tracksFromPlaylist) {
	return $author$project$ContextMenu$Item(
		{
			active: false,
			icon: $icidasset$elm_material_icons$Material$Icons$Round$offline_bolt,
			label: 'Store in cache',
			msg: $author$project$UI$Types$TracksMsg(
				$author$project$UI$Tracks$Types$StoreInCache(tracksFromPlaylist))
		});
};
var $author$project$Coordinates$toTuple = function (_v0) {
	var x = _v0.x;
	var y = _v0.y;
	return _Utils_Tuple2(x, y);
};
var $author$project$UI$Playlists$ContextMenu$listMenu = F4(
	function (playlist, allTracks, confirmation, coordinates) {
		var menuMsg = A2(
			$author$project$UI$Types$ShowPlaylistListMenu,
			playlist,
			{
				button: $mpizenberg$elm_pointer_events$Html$Events$Extra$Mouse$MainButton,
				clientPos: $author$project$Coordinates$toTuple(coordinates),
				keys: {alt: false, ctrl: false, shift: false},
				offsetPos: _Utils_Tuple2(0, 0),
				pagePos: _Utils_Tuple2(0, 0),
				screenPos: _Utils_Tuple2(0, 0)
			});
		var identifiedTracksFromPlaylist = playlist.autoGenerated ? A2(
			$elm$core$List$filter,
			A2(
				$elm$core$Basics$composeR,
				$elm$core$Tuple$second,
				$author$project$Tracks$matchesAutoGeneratedPlaylist(playlist)),
			allTracks) : A2($author$project$Playlists$Matching$match, playlist, allTracks).a;
		var tracksFromPlaylist = playlist.autoGenerated ? A2(
			$elm$core$List$map,
			$elm$core$Tuple$second,
			A3($author$project$Tracks$Sorting$sort, $author$project$Tracks$Album, $author$project$Tracks$Asc, identifiedTracksFromPlaylist)) : A2(
			$elm$core$List$map,
			$elm$core$Tuple$second,
			A2(
				$elm$core$List$sortBy,
				function (_v0) {
					var i = _v0.a;
					var t = _v0.b;
					return A2($elm$core$Maybe$withDefault, (t.tags.disc * 1000) + t.tags.nr, i.indexInPlaylist);
				},
				identifiedTracksFromPlaylist));
		return playlist.autoGenerated ? A2(
			$author$project$ContextMenu$ContextMenu,
			_List_fromArray(
				[
					$author$project$UI$Playlists$ContextMenu$addToQueue(identifiedTracksFromPlaylist),
					A2($author$project$UI$Playlists$ContextMenu$convertToRegularPlaylist, tracksFromPlaylist, playlist),
					A2($author$project$UI$Playlists$ContextMenu$downloadAsZip, tracksFromPlaylist, playlist),
					$author$project$UI$Playlists$ContextMenu$storeInCache(tracksFromPlaylist)
				]),
			coordinates) : A2(
			$author$project$ContextMenu$ContextMenu,
			_List_fromArray(
				[
					$author$project$UI$Playlists$ContextMenu$addToQueue(identifiedTracksFromPlaylist),
					A2($author$project$UI$Playlists$ContextMenu$downloadAsZip, tracksFromPlaylist, playlist),
					A3($author$project$UI$Playlists$ContextMenu$removePlaylist, menuMsg, confirmation, playlist),
					$author$project$UI$Playlists$ContextMenu$renamePlaylist(playlist),
					$author$project$UI$Playlists$ContextMenu$storeInCache(tracksFromPlaylist)
				]),
			coordinates);
	});
var $author$project$UI$Playlists$State$showListMenu = F3(
	function (playlist, mouseEvent, model) {
		var coordinates = $author$project$Coordinates$fromTuple(mouseEvent.clientPos);
		var contextMenu = A4($author$project$UI$Playlists$ContextMenu$listMenu, playlist, model.tracks.identified, model.confirmation, coordinates);
		return $Fresheyeball$elm_return$Return$singleton(
			_Utils_update(
				model,
				{
					contextMenu: $elm$core$Maybe$Just(contextMenu)
				}));
	});
var $author$project$UI$Audio$State$stop = $author$project$Return$Ext$communicate(
	$author$project$UI$Ports$pause(_Utils_Tuple0));
var $author$project$UI$DnD$Stop = {$: 'Stop'};
var $author$project$UI$DnD$stoppedDragging = $author$project$UI$DnD$Stop;
var $author$project$UI$Interface$State$stoppedDragging = function (model) {
	var notDragging = _Utils_update(
		model,
		{isDragging: false});
	var _v0 = model.page;
	switch (_v0.$) {
		case 'Queue':
			return A2($author$project$UI$Interface$State$dnd, $author$project$UI$DnD$stoppedDragging, notDragging);
		case 'Index':
			return A2($author$project$UI$Interface$State$dnd, $author$project$UI$DnD$stoppedDragging, notDragging);
		default:
			return $Fresheyeball$elm_return$Return$singleton(notDragging);
	}
};
var $author$project$UI$Audio$State$toggleRememberProgress = function (model) {
	return $author$project$UI$User$State$Export$saveSettings(
		_Utils_update(
			model,
			{rememberProgress: !model.rememberProgress}));
};
var $author$project$UI$Playlists$State$toggleVisibility = F2(
	function (playlist, model) {
		var updatedPlaylist = _Utils_update(
			playlist,
			{_public: !playlist._public});
		return $author$project$UI$User$State$Export$savePlaylists(
			function (c) {
				return _Utils_update(
					model,
					{playlists: c});
			}(
				A2(
					$elm$core$List$map,
					function (p) {
						return _Utils_eq(p.name, playlist.name) ? updatedPlaylist : p;
					},
					model.playlists)));
	});
var $author$project$UI$Equalizer$State$toggleVolumeSlider = F2(
	function (_switch, model) {
		if (_switch.$ === 'On') {
			return $Fresheyeball$elm_return$Return$singleton(
				_Utils_update(
					model,
					{showVolumeSlider: true}));
		} else {
			return $Fresheyeball$elm_return$Return$singleton(
				_Utils_update(
					model,
					{showVolumeSlider: false}));
		}
	});
var $author$project$UI$Queue$Fill$cleanAutoGenerated = F3(
	function (shuffle, trackId, future) {
		return shuffle ? A2(
			$elm_community$list_extra$List$Extra$filterNot,
			function (i) {
				return (!i.manualEntry) && _Utils_eq(
					$author$project$UI$Queue$Fill$itemTrackId(i),
					trackId);
			},
			future) : future;
	});
var $author$project$UI$Queue$State$injectFirst = F3(
	function (_v0, identifiedTracks, model) {
		var showNotification = _v0.showNotification;
		var _v1 = _Utils_Tuple2(
			A2(
				$elm$core$List$map,
				$author$project$Queue$makeItem(true),
				identifiedTracks),
			A2($elm$core$List$map, $elm$core$Tuple$second, identifiedTracks));
		var items = _v1.a;
		var tracks = _v1.b;
		var cleanedFuture = A3(
			$elm$core$List$foldl,
			A2(
				$elm$core$Basics$composeR,
				function ($) {
					return $.id;
				},
				$author$project$UI$Queue$Fill$cleanAutoGenerated(model.shuffle)),
			model.playingNext,
			tracks);
		var notification = function () {
			if (tracks.b && (!tracks.b.b)) {
				var t = tracks.a;
				return $author$project$Notifications$casual('__' + (t.tags.title + '__ will be played next'));
			} else {
				var list = tracks;
				return $author$project$Notifications$casual(
					function (s) {
						return '__' + (s + ' tracks__ will be played next');
					}(
						$elm$core$String$fromInt(
							$elm$core$List$length(list))));
			}
		}();
		return A2(
			$Fresheyeball$elm_return$Return$andThen,
			$author$project$UI$Queue$State$fill,
			(showNotification ? $author$project$UI$Common$State$showNotification(notification) : $Fresheyeball$elm_return$Return$singleton)(
				_Utils_update(
					model,
					{
						playingNext: _Utils_ap(items, cleanedFuture)
					})));
	});
var $author$project$UI$Queue$State$injectLast = F3(
	function (_v0, identifiedTracks, model) {
		var showNotification = _v0.showNotification;
		var _v1 = _Utils_Tuple2(
			A2(
				$elm$core$List$map,
				$author$project$Queue$makeItem(true),
				identifiedTracks),
			A2($elm$core$List$map, $elm$core$Tuple$second, identifiedTracks));
		var items = _v1.a;
		var tracks = _v1.b;
		var cleanedFuture = A3(
			$elm$core$List$foldl,
			A2(
				$elm$core$Basics$composeR,
				function ($) {
					return $.id;
				},
				$author$project$UI$Queue$Fill$cleanAutoGenerated(model.shuffle)),
			model.playingNext,
			tracks);
		var manualItems = $elm$core$List$length(
			A2(
				$elm$core$List$filter,
				A2(
					$elm$core$Basics$composeR,
					function ($) {
						return $.manualEntry;
					},
					$elm$core$Basics$eq(true)),
				cleanedFuture));
		var newFuture = _Utils_ap(
			_List_Nil,
			_Utils_ap(
				A2($elm$core$List$take, manualItems, cleanedFuture),
				_Utils_ap(
					items,
					A2($elm$core$List$drop, manualItems, cleanedFuture))));
		var notification = function () {
			if (tracks.b && (!tracks.b.b)) {
				var t = tracks.a;
				return $author$project$Notifications$casual('__' + (t.tags.title + '__ was added to the queue'));
			} else {
				var list = tracks;
				return $author$project$Notifications$casual(
					function (s) {
						return '__' + (s + ' tracks__ were added to the queue');
					}(
						$elm$core$String$fromInt(
							$elm$core$List$length(list))));
			}
		}();
		return A2(
			$Fresheyeball$elm_return$Return$andThen,
			$author$project$UI$Queue$State$fill,
			(showNotification ? $author$project$UI$Common$State$showNotification(notification) : $Fresheyeball$elm_return$Return$singleton)(
				_Utils_update(
					model,
					{playingNext: newFuture})));
	});
var $author$project$UI$Queue$State$addTracks = function (_v0) {
	var inFront = _v0.inFront;
	var tracks = _v0.tracks;
	return A2(
		inFront ? $author$project$UI$Queue$State$injectFirst : $author$project$UI$Queue$State$injectLast,
		{showNotification: true},
		tracks);
};
var $author$project$UI$Queue$State$clear = function (model) {
	return $author$project$UI$Queue$State$fill(
		_Utils_update(
			model,
			{dontPlay: _List_Nil, playingNext: _List_Nil}));
};
var $author$project$UI$Queue$State$injectFirstAndPlay = F2(
	function (identifiedTrack, model) {
		return A2(
			$Fresheyeball$elm_return$Return$andThen,
			$author$project$UI$Queue$State$shift,
			A3(
				$author$project$UI$Queue$State$injectFirst,
				{showNotification: false},
				_List_fromArray(
					[identifiedTrack]),
				model));
	});
var $author$project$UI$Queue$State$moveItemToFirst = F2(
	function (_v0, model) {
		var index = _v0.index;
		return $author$project$UI$Queue$State$fill(
			function (f) {
				return _Utils_update(
					model,
					{playingNext: f});
			}(
				A2(
					$author$project$UI$Queue$State$moveItem,
					{from: index, shuffle: model.shuffle, to: 0},
					model.playingNext)));
	});
var $author$project$UI$Queue$State$moveItemToLast = F2(
	function (_v0, model) {
		var index = _v0.index;
		var to = $elm$core$List$length(
			A2(
				$elm$core$List$filter,
				A2(
					$elm$core$Basics$composeR,
					function ($) {
						return $.manualEntry;
					},
					$elm$core$Basics$eq(true)),
				model.playingNext));
		return $author$project$UI$Queue$State$fill(
			function (f) {
				return _Utils_update(
					model,
					{playingNext: f});
			}(
				A2(
					$author$project$UI$Queue$State$moveItem,
					{from: index, shuffle: model.shuffle, to: to},
					model.playingNext)));
	});
var $author$project$UI$Queue$State$removeItem = F2(
	function (_v0, model) {
		var index = _v0.index;
		var item = _v0.item;
		var newIgnored = item.manualEntry ? model.dontPlay : A2($elm$core$List$cons, item, model.dontPlay);
		var newFuture = A2($elm_community$list_extra$List$Extra$removeAt, index, model.playingNext);
		return $author$project$UI$Queue$State$fill(
			_Utils_update(
				model,
				{dontPlay: newIgnored, playingNext: newFuture}));
	});
var $author$project$UI$Queue$State$select = F2(
	function (item, model) {
		return $Fresheyeball$elm_return$Return$singleton(
			_Utils_update(
				model,
				{
					selectedQueueItem: $elm$core$Maybe$Just(item)
				}));
	});
var $author$project$UI$Queue$Types$MoveItemToFirst = function (a) {
	return {$: 'MoveItemToFirst', a: a};
};
var $author$project$UI$Queue$Types$MoveItemToLast = function (a) {
	return {$: 'MoveItemToLast', a: a};
};
var $author$project$UI$Tracks$Types$RemoveFromCache = function (a) {
	return {$: 'RemoveFromCache', a: a};
};
var $author$project$UI$Tracks$ContextMenu$cacheAction = F2(
	function (_v0, tracks) {
		var cached = _v0.cached;
		var cachingInProgress = _v0.cachingInProgress;
		if (tracks.b && (!tracks.b.b)) {
			var _v2 = tracks.a;
			var t = _v2.b;
			return A2($elm$core$List$member, t.id, cached) ? $author$project$ContextMenu$Item(
				{
					active: false,
					icon: $icidasset$elm_material_icons$Material$Icons$Round$offline_bolt,
					label: 'Remove from cache',
					msg: $author$project$UI$Types$TracksMsg(
						$author$project$UI$Tracks$Types$RemoveFromCache(
							A2($elm$core$List$map, $elm$core$Tuple$second, tracks)))
				}) : (A2($elm$core$List$member, t.id, cachingInProgress) ? $author$project$ContextMenu$Item(
				{active: true, icon: $icidasset$elm_material_icons$Material$Icons$Round$offline_bolt, label: 'Downloading ...', msg: $author$project$UI$Types$Bypass}) : $author$project$ContextMenu$Item(
				{
					active: false,
					icon: $icidasset$elm_material_icons$Material$Icons$Round$offline_bolt,
					label: 'Store in cache',
					msg: $author$project$UI$Types$TracksMsg(
						$author$project$UI$Tracks$Types$StoreInCache(
							A2($elm$core$List$map, $elm$core$Tuple$second, tracks)))
				}));
		} else {
			return $author$project$ContextMenu$Item(
				{
					active: false,
					icon: $icidasset$elm_material_icons$Material$Icons$Round$offline_bolt,
					label: 'Store in cache',
					msg: $author$project$UI$Types$TracksMsg(
						$author$project$UI$Tracks$Types$StoreInCache(
							A2($elm$core$List$map, $elm$core$Tuple$second, tracks)))
				});
		}
	});
var $author$project$UI$Queue$ContextMenu$futureMenu = F2(
	function (_v0, item) {
		var cached = _v0.cached;
		var cachingInProgress = _v0.cachingInProgress;
		var itemIndex = _v0.itemIndex;
		var tracks = _List_fromArray(
			[item.identifiedTrack]);
		return $author$project$ContextMenu$ContextMenu(
			_List_fromArray(
				[
					$author$project$ContextMenu$Item(
					{
						active: false,
						icon: $icidasset$elm_material_icons$Material$Icons$Round$update,
						label: 'Move to the top',
						msg: $author$project$UI$Types$QueueMsg(
							$author$project$UI$Queue$Types$MoveItemToFirst(
								{index: itemIndex}))
					}),
					$author$project$ContextMenu$Item(
					{
						active: false,
						icon: $icidasset$elm_material_icons$Material$Icons$Round$update,
						label: 'Move to the end of my picks',
						msg: $author$project$UI$Types$QueueMsg(
							$author$project$UI$Queue$Types$MoveItemToLast(
								{index: itemIndex}))
					}),
					$author$project$ContextMenu$Item(
					{
						active: false,
						icon: $icidasset$elm_material_icons$Material$Icons$Round$waves,
						label: 'Add to playlist',
						msg: $author$project$UI$Types$AssistWithAddingTracksToPlaylist(tracks)
					}),
					A2(
					$author$project$UI$Tracks$ContextMenu$cacheAction,
					{cached: cached, cachingInProgress: cachingInProgress},
					tracks)
				]));
	});
var $author$project$UI$Queue$State$showFutureMenu = F4(
	function (item, _v0, mouseEvent, model) {
		var index = _v0.index;
		return $Fresheyeball$elm_return$Return$singleton(
			function (c) {
				return _Utils_update(
					model,
					{contextMenu: c});
			}(
				$elm$core$Maybe$Just(
					A3(
						$author$project$UI$Queue$ContextMenu$futureMenu,
						{cached: model.cachedTracks, cachingInProgress: model.cachingTracksInProgress, itemIndex: index},
						item,
						$author$project$Coordinates$fromTuple(mouseEvent.clientPos)))));
	});
var $author$project$UI$Queue$ContextMenu$historyMenu = F2(
	function (_v0, item) {
		var cached = _v0.cached;
		var cachingInProgress = _v0.cachingInProgress;
		var tracks = _List_fromArray(
			[item.identifiedTrack]);
		return $author$project$ContextMenu$ContextMenu(
			_List_fromArray(
				[
					$author$project$ContextMenu$Item(
					{
						active: false,
						icon: $icidasset$elm_material_icons$Material$Icons$Round$update,
						label: 'Play next',
						msg: $author$project$UI$Types$QueueMsg(
							$author$project$UI$Queue$Types$AddTracks(
								{inFront: true, tracks: tracks}))
					}),
					$author$project$ContextMenu$Item(
					{
						active: false,
						icon: $icidasset$elm_material_icons$Material$Icons$Round$update,
						label: 'Add to queue',
						msg: $author$project$UI$Types$QueueMsg(
							$author$project$UI$Queue$Types$AddTracks(
								{inFront: false, tracks: tracks}))
					}),
					$author$project$ContextMenu$Item(
					{
						active: false,
						icon: $icidasset$elm_material_icons$Material$Icons$Round$waves,
						label: 'Add to playlist',
						msg: $author$project$UI$Types$AssistWithAddingTracksToPlaylist(tracks)
					}),
					A2(
					$author$project$UI$Tracks$ContextMenu$cacheAction,
					{cached: cached, cachingInProgress: cachingInProgress},
					tracks)
				]));
	});
var $author$project$UI$Queue$State$showHistoryMenu = F3(
	function (item, mouseEvent, model) {
		return $Fresheyeball$elm_return$Return$singleton(
			function (c) {
				return _Utils_update(
					model,
					{contextMenu: c});
			}(
				$elm$core$Maybe$Just(
					A3(
						$author$project$UI$Queue$ContextMenu$historyMenu,
						{cached: model.cachedTracks, cachingInProgress: model.cachingTracksInProgress},
						item,
						$author$project$Coordinates$fromTuple(mouseEvent.clientPos)))));
	});
var $author$project$UI$Queue$State$update = function (msg) {
	switch (msg.$) {
		case 'Clear':
			return $author$project$UI$Queue$State$clear;
		case 'Reset':
			return $author$project$UI$Queue$State$reset;
		case 'Rewind':
			return $author$project$UI$Queue$State$rewind;
		case 'Shift':
			return $author$project$UI$Queue$State$shift;
		case 'Select':
			var a = msg.a;
			return $author$project$UI$Queue$State$select(a);
		case 'ShowFutureMenu':
			var a = msg.a;
			var b = msg.b;
			var c = msg.c;
			return A3($author$project$UI$Queue$State$showFutureMenu, a, b, c);
		case 'ShowHistoryMenu':
			var a = msg.a;
			var b = msg.b;
			return A2($author$project$UI$Queue$State$showHistoryMenu, a, b);
		case 'ToggleRepeat':
			return $author$project$UI$Queue$State$toggleRepeat;
		case 'ToggleShuffle':
			return $author$project$UI$Queue$State$toggleShuffle;
		case 'AddTracks':
			var a = msg.a;
			return $author$project$UI$Queue$State$addTracks(a);
		case 'InjectFirst':
			var a = msg.a;
			var b = msg.b;
			return A2($author$project$UI$Queue$State$injectFirst, a, b);
		case 'InjectLast':
			var a = msg.a;
			var b = msg.b;
			return A2($author$project$UI$Queue$State$injectLast, a, b);
		case 'InjectFirstAndPlay':
			var a = msg.a;
			return $author$project$UI$Queue$State$injectFirstAndPlay(a);
		case 'MoveItemToFirst':
			var a = msg.a;
			return $author$project$UI$Queue$State$moveItemToFirst(a);
		case 'MoveItemToLast':
			var a = msg.a;
			return $author$project$UI$Queue$State$moveItemToLast(a);
		default:
			var a = msg.a;
			return $author$project$UI$Queue$State$removeItem(a);
	}
};
var $elm$core$Dict$map = F2(
	function (func, dict) {
		if (dict.$ === 'RBEmpty_elm_builtin') {
			return $elm$core$Dict$RBEmpty_elm_builtin;
		} else {
			var color = dict.a;
			var key = dict.b;
			var value = dict.c;
			var left = dict.d;
			var right = dict.e;
			return A5(
				$elm$core$Dict$RBNode_elm_builtin,
				color,
				key,
				A2(func, key, value),
				A2($elm$core$Dict$map, func, left),
				A2($elm$core$Dict$map, func, right));
		}
	});
var $author$project$UI$Sources$State$returnToIndex = $author$project$UI$Common$State$changeUrlUsingPage(
	$author$project$UI$Page$Sources($author$project$UI$Sources$Page$Index));
var $author$project$UI$Sources$State$addSourceUsingForm = function (model) {
	var context = model.sourceForm.context;
	var cleanContext = _Utils_update(
		context,
		{
			data: A2(
				$elm$core$Dict$map,
				$elm$core$Basics$always($elm$core$String$trim),
				context.data)
		});
	return A2(
		$Fresheyeball$elm_return$Return$andThen,
		$author$project$UI$Sources$State$returnToIndex,
		A2(
			$author$project$UI$Sources$State$addToCollection,
			cleanContext,
			A2($author$project$UI$Sources$State$formLens.set, $author$project$UI$Sources$Form$initialModel, model)));
};
var $author$project$UI$Sources$State$sourcesToProcess = function (model) {
	return A2(
		$elm$core$List$filter,
		A2(
			$elm$core$Basics$composeR,
			function ($) {
				return $.enabled;
			},
			$elm$core$Basics$eq(true)),
		model.sources);
};
var $author$project$Sources$worksOffline = function (source) {
	var _v0 = source.service;
	switch (_v0.$) {
		case 'AmazonS3':
			return false;
		case 'AzureBlob':
			return false;
		case 'AzureFile':
			return false;
		case 'Btfs':
			return true;
		case 'Dropbox':
			return false;
		case 'Google':
			return false;
		case 'Ipfs':
			return true;
		default:
			return A2(
				$elm$core$Maybe$withDefault,
				false,
				A2(
					$elm$core$Maybe$map,
					function (u) {
						return A2($elm$core$String$contains, 'localhost', u) || A2($elm$core$String$contains, '127.0.0.1', u);
					},
					A2($elm$core$Dict$get, 'url', source.data)));
	}
};
var $author$project$UI$Sources$State$process = function (model) {
	var _v0 = $author$project$UI$Sources$State$sourcesToProcess(model);
	if (!_v0.b) {
		return $Fresheyeball$elm_return$Return$singleton(model);
	} else {
		var toProcess = _v0;
		return model.isOnline ? A2($author$project$UI$Sources$State$processSpecific, toProcess, model) : function (s) {
			if (!s.b) {
				return $Fresheyeball$elm_return$Return$singleton(model);
			} else {
				return A2($author$project$UI$Sources$State$processSpecific, s, model);
			}
		}(
			A2($elm$core$List$filter, $author$project$Sources$worksOffline, toProcess));
	}
};
var $author$project$UI$Sources$State$replaceSourceInCollection = F2(
	function (source, model) {
		return $author$project$UI$User$State$Export$saveSources(
			function (s) {
				return _Utils_update(
					model,
					{sources: s});
			}(
				A2(
					$elm$core$List$map,
					function (s) {
						return A3(
							$author$project$Conditional$ifThenElse,
							_Utils_eq(s.id, source.id),
							source,
							s);
					},
					model.sources)));
	});
var $author$project$UI$Sources$State$editSourceUsingForm = function (model) {
	return A2(
		$Fresheyeball$elm_return$Return$andThen,
		$author$project$UI$Sources$State$returnToIndex,
		A2(
			$Fresheyeball$elm_return$Return$andThen,
			$author$project$UI$Sources$State$process,
			A2(
				$author$project$UI$Sources$State$replaceSourceInCollection,
				model.sourceForm.context,
				A2($author$project$UI$Sources$State$formLens.set, $author$project$UI$Sources$Form$initialModel, model))));
};
var $author$project$UI$Sources$State$finishedProcessing = function (model) {
	return function () {
		var _v0 = model.processingNotificationId;
		if (_v0.$ === 'Just') {
			var id = _v0.a;
			return $author$project$UI$Common$State$dismissNotification(
				{id: id});
		} else {
			return $Fresheyeball$elm_return$Return$singleton;
		}
	}()(
		_Utils_update(
			model,
			{processingContext: _List_Nil}));
};
var $author$project$UI$Sources$State$finishedProcessingSource = F2(
	function (json, model) {
		var _v0 = A2($elm$json$Json$Decode$decodeValue, $elm$json$Json$Decode$string, json);
		if (_v0.$ === 'Ok') {
			var sourceId = _v0.a;
			return $Fresheyeball$elm_return$Return$singleton(
				function (newContext) {
					return _Utils_update(
						model,
						{processingContext: newContext});
				}(
					A2(
						$elm$core$List$filter,
						A2(
							$elm$core$Basics$composeR,
							$elm$core$Tuple$first,
							$elm$core$Basics$neq(sourceId)),
						model.processingContext)));
		} else {
			return $Fresheyeball$elm_return$Return$singleton(model);
		}
	});
var $author$project$Tracks$removeBySourceId = F2(
	function (removedSourceId, tracks) {
		return function (_v1) {
			var k = _v1.a;
			var r = _v1.b;
			return {kept: k, removed: r};
		}(
			A3(
				$elm$core$List$foldr,
				F2(
					function (t, _v0) {
						var kept = _v0.a;
						var removed = _v0.b;
						return _Utils_eq(t.sourceId, removedSourceId) ? _Utils_Tuple2(
							kept,
							A2($elm$core$List$cons, t, removed)) : _Utils_Tuple2(
							A2($elm$core$List$cons, t, kept),
							removed);
					}),
				_Utils_Tuple2(_List_Nil, _List_Nil),
				tracks));
	});
var $elm_community$list_extra$List$Extra$notMember = function (x) {
	return A2(
		$elm$core$Basics$composeL,
		$elm$core$Basics$not,
		$elm$core$List$member(x));
};
var $author$project$List$Ext$without = function (exclude) {
	return $elm$core$List$filter(
		function (c) {
			return A2($elm_community$list_extra$List$Extra$notMember, c, exclude);
		});
};
var $author$project$UI$Tracks$State$removeFromCache = F2(
	function (tracks, model) {
		var trackIds = A2(
			$elm$core$List$map,
			function ($) {
				return $.id;
			},
			tracks);
		return A2(
			$Fresheyeball$elm_return$Return$andThen,
			$author$project$UI$User$State$Export$saveEnclosedUserData,
			A2(
				$Fresheyeball$elm_return$Return$andThen,
				$author$project$UI$Tracks$State$harvest,
				A2(
					$Fresheyeball$elm_return$Return$return,
					_Utils_update(
						model,
						{
							cachedTracks: A2($author$project$List$Ext$without, trackIds, model.cachedTracks)
						}),
					$author$project$UI$Ports$toBrain(
						A2(
							$author$project$Alien$broadcast,
							$author$project$Alien$RemoveTracksFromCache,
							A2($elm$json$Json$Encode$list, $elm$json$Json$Encode$string, trackIds))))));
	});
var $author$project$UI$Tracks$State$removeBySourceId = F2(
	function (sourceId, model) {
		var _v0 = A2($author$project$Tracks$removeBySourceId, sourceId, model.tracks.untouched);
		var kept = _v0.kept;
		var removed = _v0.removed;
		var newCollection = _Utils_update(
			$author$project$Tracks$emptyCollection,
			{untouched: kept});
		return A2(
			$Fresheyeball$elm_return$Return$andThen,
			$author$project$UI$Tracks$State$removeFromCache(removed),
			A2(
				$Fresheyeball$elm_return$Return$andThen,
				$author$project$UI$Tracks$State$reviseCollection($author$project$Tracks$Collection$identify),
				A2(
					$Fresheyeball$elm_return$Return$return,
					_Utils_update(
						model,
						{tracks: newCollection}),
					$author$project$UI$Ports$toBrain(
						A2(
							$author$project$Alien$broadcast,
							$author$project$Alien$RemoveTracksBySourceId,
							$elm$json$Json$Encode$string(sourceId))))));
	});
var $author$project$UI$Sources$State$removeFromCollection = F2(
	function (_v0, model) {
		var sourceId = _v0.sourceId;
		return A2(
			$Fresheyeball$elm_return$Return$andThen,
			$author$project$UI$Tracks$State$removeBySourceId(sourceId),
			A2(
				$Fresheyeball$elm_return$Return$andThen,
				$author$project$UI$User$State$Export$saveSources,
				$Fresheyeball$elm_return$Return$singleton(
					function (c) {
						return _Utils_update(
							model,
							{sources: c});
					}(
						A2(
							$elm$core$List$filter,
							A2(
								$elm$core$Basics$composeR,
								function ($) {
									return $.id;
								},
								$elm$core$Basics$neq(sourceId)),
							model.sources)))));
	});
var $author$project$UI$Sources$State$renameSourceUsingForm = function (model) {
	return A2(
		$Fresheyeball$elm_return$Return$andThen,
		$author$project$UI$Sources$State$returnToIndex,
		A2(
			$author$project$UI$Sources$State$replaceSourceInCollection,
			model.sourceForm.context,
			A2($author$project$UI$Sources$State$formLens.set, $author$project$UI$Sources$Form$initialModel, model)));
};
var $elm$html$Html$div = _VirtualDom_node('div');
var $elm$html$Html$Attributes$stringProperty = F2(
	function (key, string) {
		return A2(
			_VirtualDom_property,
			key,
			$elm$json$Json$Encode$string(string));
	});
var $elm$html$Html$Attributes$class = $elm$html$Html$Attributes$stringProperty('className');
var $author$project$Chunky$slab = F4(
	function (typ, attributes, stylingAttributes, children) {
		return A2(
			typ,
			A2(
				$elm$core$List$cons,
				$elm$html$Html$Attributes$class(
					A2($elm$core$String$join, ' ', stylingAttributes)),
				attributes),
			children);
	});
var $author$project$Chunky$brick = $author$project$Chunky$slab($elm$html$Html$div);
var $author$project$Chunky$chunk = $author$project$Chunky$brick(_List_Nil);
var $elm$html$Html$code = _VirtualDom_node('code');
var $elm$virtual_dom$VirtualDom$text = _VirtualDom_text;
var $elm$html$Html$text = $elm$virtual_dom$VirtualDom$text;
var $author$project$Chunky$nothing = $elm$html$Html$text('');
var $author$project$Notifications$errorWithCode = F3(
	function (content, code, _v0) {
		return A4(
			$author$project$Notifications$Notification,
			$author$project$Notifications$Error,
			A2($robinheghan$murmur3$Murmur3$hashString, 0, content),
			{sticky: true, wasDismissed: false},
			A2(
				$elm$html$Html$div,
				_List_Nil,
				_List_fromArray(
					[
						$author$project$Notifications$render(content),
						$elm$core$String$isEmpty(
						$elm$core$String$trim(code)) ? $author$project$Chunky$nothing : A2(
						$author$project$Chunky$chunk,
						_List_fromArray(
							['bg-black-50', 'break-all', 'rounded', 'mb-0', 'mt-3', 'p-2', 'text-xxs']),
						_List_fromArray(
							[
								A4(
								$author$project$Chunky$slab,
								$elm$html$Html$code,
								_List_Nil,
								_List_fromArray(
									['align-middle']),
								_List_fromArray(
									[
										$elm$html$Html$text(code)
									]))
							]))
					])));
	});
var $author$project$UI$Sources$State$reportProcessingError = F2(
	function (json, model) {
		var _v0 = A2(
			$elm$json$Json$Decode$decodeValue,
			$elm$json$Json$Decode$dict($elm$json$Json$Decode$string),
			json);
		if (_v0.$ === 'Ok') {
			var dict = _v0.a;
			var args = {
				error: A3($author$project$Dict$Ext$fetch, 'error', '', dict),
				sourceId: A3($author$project$Dict$Ext$fetch, 'sourceId', '', dict)
			};
			return A2(
				$author$project$UI$Common$State$showNotificationWithModel,
				_Utils_update(
					model,
					{
						processingError: $elm$core$Maybe$Just(args)
					}),
				A3(
					$author$project$Notifications$errorWithCode,
					'Could not process the _' + (A3($author$project$Dict$Ext$fetch, 'sourceName', '', dict) + '_ source. I got the following response from the source:'),
					A3($author$project$Dict$Ext$fetch, 'error', 'missingError', dict),
					_List_Nil));
		} else {
			return A2(
				$author$project$UI$Common$State$showNotificationWithModel,
				model,
				$author$project$Notifications$stickyError('Could not decode processing error'));
		}
	});
var $author$project$UI$Sources$State$reportProcessingProgress = F2(
	function (json, model) {
		var _v0 = A2(
			$elm$json$Json$Decode$decodeValue,
			A3(
				$elm$json$Json$Decode$map2,
				F2(
					function (p, s) {
						return {progress: p, sourceId: s};
					}),
				A2($elm$json$Json$Decode$field, 'progress', $elm$json$Json$Decode$float),
				A2($elm$json$Json$Decode$field, 'sourceId', $elm$json$Json$Decode$string)),
			json);
		if (_v0.$ === 'Ok') {
			var progress = _v0.a.progress;
			var sourceId = _v0.a.sourceId;
			return $Fresheyeball$elm_return$Return$singleton(
				function (processingContext) {
					return _Utils_update(
						model,
						{processingContext: processingContext});
				}(
					A2(
						$elm$core$List$map,
						function (_v1) {
							var sid = _v1.a;
							var pro = _v1.b;
							return A3(
								$author$project$Conditional$ifThenElse,
								_Utils_eq(sid, sourceId),
								_Utils_Tuple2(sid, progress),
								_Utils_Tuple2(sid, pro));
						},
						model.processingContext)));
		} else {
			return A2(
				$author$project$UI$Common$State$showNotificationWithModel,
				model,
				$author$project$Notifications$stickyError('Could not decode processing progress'));
		}
	});
var $arturopala$elm_monocle$Monocle$Lens$Lens = F2(
	function (get, set) {
		return {get: get, set: set};
	});
var $arturopala$elm_monocle$Monocle$Lens$compose = F2(
	function (outer, inner) {
		var set = F2(
			function (c, a) {
				return function (b) {
					return A2(outer.set, b, a);
				}(
					A2(
						inner.set,
						c,
						outer.get(a)));
			});
		return A2(
			$arturopala$elm_monocle$Monocle$Lens$Lens,
			A2($elm$core$Basics$composeR, outer.get, inner.get),
			set);
	});
var $author$project$UI$Sources$State$formContextLens = A2(
	$arturopala$elm_monocle$Monocle$Lens$compose,
	$author$project$UI$Sources$State$formLens,
	{
		get: function ($) {
			return $.context;
		},
		set: F2(
			function (context, m) {
				return _Utils_update(
					m,
					{context: context});
			})
	});
var $author$project$UI$Sources$State$selectService = F2(
	function (serviceKey, model) {
		var _v0 = $author$project$Sources$Services$keyToType(serviceKey);
		if (_v0.$ === 'Just') {
			var service = _v0.a;
			return $Fresheyeball$elm_return$Return$singleton(
				A3(
					$arturopala$elm_monocle$Monocle$Lens$modify,
					$author$project$UI$Sources$State$formContextLens,
					function (c) {
						return _Utils_update(
							c,
							{
								data: $author$project$Sources$Services$initialData(service),
								service: service
							});
					},
					model));
		} else {
			return $Fresheyeball$elm_return$Return$singleton(model);
		}
	});
var $author$project$UI$Sources$State$setFormData = F3(
	function (key, value, model) {
		return $Fresheyeball$elm_return$Return$singleton(
			A3(
				$arturopala$elm_monocle$Monocle$Lens$modify,
				$author$project$UI$Sources$State$formContextLens,
				function (context) {
					return function (data) {
						return _Utils_update(
							context,
							{data: data});
					}(
						A3($elm$core$Dict$insert, key, value, context.data));
				},
				model));
	});
var $author$project$UI$Common$State$showContextMenuWithModel = F2(
	function (model, contextMenu) {
		return $Fresheyeball$elm_return$Return$singleton(
			_Utils_update(
				model,
				{
					contextMenu: $elm$core$Maybe$Just(contextMenu)
				}));
	});
var $author$project$UI$Sources$Types$ProcessSpecific = function (a) {
	return {$: 'ProcessSpecific', a: a};
};
var $author$project$UI$Sources$Types$RemoveFromCollection = function (a) {
	return {$: 'RemoveFromCollection', a: a};
};
var $author$project$UI$Sources$Types$ToggleDirectoryPlaylists = function (a) {
	return {$: 'ToggleDirectoryPlaylists', a: a};
};
var $icidasset$elm_material_icons$Material$Icons$Round$edit = A2(
	$icidasset$elm_material_icons$Material$Icons$Internal$icon,
	_List_fromArray(
		[
			$icidasset$elm_material_icons$Material$Icons$Internal$v('0 0 24 24')
		]),
	_List_fromArray(
		[
			A2(
			$icidasset$elm_material_icons$Material$Icons$Internal$p,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$d('M0 0h24v24H0V0z'),
					$icidasset$elm_material_icons$Material$Icons$Internal$f('none')
				]),
			_List_Nil),
			A2(
			$icidasset$elm_material_icons$Material$Icons$Internal$p,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$d('M3 17.46v3.04c0 .28.22.5.5.5h3.04c.13 0 .26-.05.35-.15L17.81 9.94l-3.75-3.75L3.15 17.1c-.1.1-.15.22-.15.36zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.39-.39-1.02-.39-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z')
				]),
			_List_Nil)
		]));
var $icidasset$elm_material_icons$Material$Icons$Round$folder = A2(
	$icidasset$elm_material_icons$Material$Icons$Internal$icon,
	_List_fromArray(
		[
			$icidasset$elm_material_icons$Material$Icons$Internal$v('0 0 24 24')
		]),
	_List_fromArray(
		[
			A2(
			$icidasset$elm_material_icons$Material$Icons$Internal$p,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$d('M0 0h24v24H0V0z'),
					$icidasset$elm_material_icons$Material$Icons$Internal$f('none')
				]),
			_List_Nil),
			A2(
			$icidasset$elm_material_icons$Material$Icons$Internal$p,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$d('M10.59 4.59C10.21 4.21 9.7 4 9.17 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2h-8l-1.41-1.41z')
				]),
			_List_Nil)
		]));
var $icidasset$elm_material_icons$Material$Icons$Round$folder_open = A2(
	$icidasset$elm_material_icons$Material$Icons$Internal$icon,
	_List_fromArray(
		[
			$icidasset$elm_material_icons$Material$Icons$Internal$v('0 0 24 24')
		]),
	_List_fromArray(
		[
			A2(
			$icidasset$elm_material_icons$Material$Icons$Internal$p,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$d('M0 0h24v24H0V0z'),
					$icidasset$elm_material_icons$Material$Icons$Internal$f('none')
				]),
			_List_Nil),
			A2(
			$icidasset$elm_material_icons$Material$Icons$Internal$p,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$d('M20 6h-8l-1.41-1.41C10.21 4.21 9.7 4 9.17 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2zm-1 12H5c-.55 0-1-.45-1-1V9c0-.55.45-1 1-1h14c.55 0 1 .45 1 1v8c0 .55-.45 1-1 1z')
				]),
			_List_Nil)
		]));
var $author$project$UI$Sources$ContextMenu$sourceMenu = function (source) {
	return $author$project$ContextMenu$ContextMenu(
		_List_fromArray(
			[
				$author$project$ContextMenu$Item(
				{
					active: false,
					icon: A3($author$project$Conditional$ifThenElse, source.directoryPlaylists, $icidasset$elm_material_icons$Material$Icons$Round$folder, $icidasset$elm_material_icons$Material$Icons$Round$folder_open),
					label: A3($author$project$Conditional$ifThenElse, source.directoryPlaylists, 'Disable Directory Playlists', 'Enable Directory Playlists'),
					msg: $author$project$UI$Types$SourcesMsg(
						$author$project$UI$Sources$Types$ToggleDirectoryPlaylists(
							{sourceId: source.id}))
				}),
				$author$project$ContextMenu$Item(
				{
					active: false,
					icon: $icidasset$elm_material_icons$Material$Icons$Round$edit,
					label: 'Edit source',
					msg: $author$project$UI$Types$ChangeUrlUsingPage(
						$author$project$UI$Page$Sources(
							$author$project$UI$Sources$Page$Edit(source.id)))
				}),
				$author$project$ContextMenu$Item(
				{
					active: false,
					icon: $icidasset$elm_material_icons$Material$Icons$Round$sync,
					label: 'Process source',
					msg: $author$project$UI$Types$SourcesMsg(
						$author$project$UI$Sources$Types$ProcessSpecific(
							_List_fromArray(
								[source])))
				}),
				$author$project$ContextMenu$Item(
				{
					active: false,
					icon: $icidasset$elm_material_icons$Material$Icons$Round$delete,
					label: 'Remove source',
					msg: $author$project$UI$Types$SourcesMsg(
						$author$project$UI$Sources$Types$RemoveFromCollection(
							{sourceId: source.id}))
				}),
				$author$project$ContextMenu$Item(
				{
					active: false,
					icon: $icidasset$elm_material_icons$Material$Icons$Round$font_download,
					label: 'Rename source',
					msg: $author$project$UI$Types$ChangeUrlUsingPage(
						$author$project$UI$Page$Sources(
							$author$project$UI$Sources$Page$Rename(source.id)))
				})
			]));
};
var $author$project$UI$Sources$State$sourceContextMenu = F3(
	function (source, mouseEvent, model) {
		return A2(
			$author$project$UI$Common$State$showContextMenuWithModel,
			model,
			A2(
				$author$project$UI$Sources$ContextMenu$sourceMenu,
				source,
				$author$project$Coordinates$fromTuple(mouseEvent.clientPos)));
	});
var $author$project$UI$Sources$State$stopProcessing = function (model) {
	var _v0 = model.processingNotificationId;
	if (_v0.$ === 'Just') {
		var notificationId = _v0.a;
		return A2(
			$Fresheyeball$elm_return$Return$andThen,
			$author$project$UI$Common$State$dismissNotification(
				{id: notificationId}),
			A2(
				$Fresheyeball$elm_return$Return$return,
				_Utils_update(
					model,
					{processingContext: _List_Nil, processingNotificationId: $elm$core$Maybe$Nothing}),
				$author$project$UI$Ports$toBrain(
					$author$project$Alien$trigger($author$project$Alien$StopProcessing))));
	} else {
		return $Fresheyeball$elm_return$Return$singleton(model);
	}
};
var $author$project$Sources$Services$Dropbox$authorizationUrl = F2(
	function (sourceData, origin) {
		var encodeData = function (data) {
			return $elm$json$Json$Encode$object(
				A2(
					$elm$core$List$map,
					$elm$core$Tuple$mapSecond($elm$json$Json$Encode$string),
					$elm$core$Dict$toList(data)));
		};
		var state = $truqu$elm_base64$Base64$encode(
			A2(
				$elm$json$Json$Encode$encode,
				0,
				encodeData(sourceData)));
		return A2(
			$elm$core$String$append,
			'https://www.dropbox.com/oauth2/authorize',
			$author$project$Common$queryString(
				_List_fromArray(
					[
						_Utils_Tuple2('response_type', 'token'),
						_Utils_Tuple2(
						'client_id',
						A3($author$project$Dict$Ext$fetch, 'appKey', 'unknown', sourceData)),
						_Utils_Tuple2('redirect_uri', origin + '?path=sources/new/dropbox'),
						_Utils_Tuple2('state', state)
					])));
	});
var $author$project$Sources$Services$Google$authorizationUrl = F2(
	function (sourceData, origin) {
		var encodeData = function (data) {
			return $elm$json$Json$Encode$object(
				A2(
					$elm$core$List$map,
					$elm$core$Tuple$mapSecond($elm$json$Json$Encode$string),
					$elm$core$Dict$toList(data)));
		};
		var state = $truqu$elm_base64$Base64$encode(
			A2(
				$elm$json$Json$Encode$encode,
				0,
				encodeData(sourceData)));
		return A2(
			$elm$core$String$append,
			'https://accounts.google.com/o/oauth2/v2/auth',
			$author$project$Common$queryString(
				_List_fromArray(
					[
						_Utils_Tuple2('access_type', 'offline'),
						_Utils_Tuple2(
						'client_id',
						A3($author$project$Dict$Ext$fetch, 'clientId', 'unknown', sourceData)),
						_Utils_Tuple2('prompt', 'consent'),
						_Utils_Tuple2('redirect_uri', origin + '?path=sources/new/google'),
						_Utils_Tuple2('response_type', 'code'),
						_Utils_Tuple2('scope', 'https://www.googleapis.com/auth/drive.readonly'),
						_Utils_Tuple2('state', state)
					])));
	});
var $author$project$UI$Sources$State$externalAuthorization = F2(
	function (model, urlBuilder) {
		return A2(
			$Fresheyeball$elm_return$Return$return,
			model,
			$elm$browser$Browser$Navigation$load(
				urlBuilder(
					$author$project$Common$urlOrigin(model.url))));
	});
var $author$project$UI$Sources$State$formStepLens = A2(
	$arturopala$elm_monocle$Monocle$Lens$compose,
	$author$project$UI$Sources$State$formLens,
	{
		get: function ($) {
			return $.step;
		},
		set: F2(
			function (step, m) {
				return _Utils_update(
					m,
					{step: step});
			})
	});
var $author$project$UI$Sources$Types$How = {$: 'How'};
var $author$project$UI$Sources$State$takeStepForwards = function (currentStep) {
	if (currentStep.$ === 'Where') {
		return $author$project$UI$Sources$Types$How;
	} else {
		return $author$project$UI$Sources$Types$By;
	}
};
var $author$project$UI$Sources$State$takeStep = function (model) {
	var form = $author$project$UI$Sources$State$formLens.get(model);
	var _v0 = _Utils_Tuple2(form.step, form.context.service);
	_v0$2:
	while (true) {
		if (_v0.a.$ === 'How') {
			switch (_v0.b.$) {
				case 'Dropbox':
					var _v1 = _v0.a;
					var _v2 = _v0.b;
					return A2(
						$author$project$UI$Sources$State$externalAuthorization,
						model,
						$author$project$Sources$Services$Dropbox$authorizationUrl(form.context.data));
				case 'Google':
					var _v3 = _v0.a;
					var _v4 = _v0.b;
					return A2(
						$author$project$UI$Sources$State$externalAuthorization,
						model,
						$author$project$Sources$Services$Google$authorizationUrl(form.context.data));
				default:
					break _v0$2;
			}
		} else {
			break _v0$2;
		}
	}
	return $Fresheyeball$elm_return$Return$singleton(
		A3($arturopala$elm_monocle$Monocle$Lens$modify, $author$project$UI$Sources$State$formStepLens, $author$project$UI$Sources$State$takeStepForwards, model));
};
var $author$project$UI$Sources$State$takeStepBackwards_ = function (currentStep) {
	if (currentStep.$ === 'By') {
		return $author$project$UI$Sources$Types$How;
	} else {
		return $author$project$UI$Sources$Types$Where;
	}
};
var $author$project$UI$Sources$State$takeStepBackwards = A2(
	$elm$core$Basics$composeR,
	A2($arturopala$elm_monocle$Monocle$Lens$modify, $author$project$UI$Sources$State$formStepLens, $author$project$UI$Sources$State$takeStepBackwards_),
	$Fresheyeball$elm_return$Return$singleton);
var $author$project$UI$Sources$State$toggleActivation = F2(
	function (_v0, model) {
		var sourceId = _v0.sourceId;
		return A2(
			$Fresheyeball$elm_return$Return$andThen,
			$author$project$UI$User$State$Export$saveSources,
			A2(
				$Fresheyeball$elm_return$Return$andThen,
				$author$project$UI$Common$State$generateDirectoryPlaylists,
				A2(
					$Fresheyeball$elm_return$Return$andThen,
					$author$project$UI$Common$State$forceTracksRerender,
					A2(
						$author$project$UI$Tracks$State$reviseCollection,
						$author$project$Tracks$Collection$identify,
						function (collection) {
							return _Utils_update(
								model,
								{sources: collection});
						}(
							A2(
								$elm$core$List$map,
								function (source) {
									return _Utils_eq(source.id, sourceId) ? _Utils_update(
										source,
										{enabled: !source.enabled}) : source;
								},
								model.sources))))));
	});
var $author$project$UI$Sources$State$toggleDirectoryPlaylists = F2(
	function (_v0, model) {
		var sourceId = _v0.sourceId;
		return A2(
			$Fresheyeball$elm_return$Return$andThen,
			$author$project$UI$Common$State$generateDirectoryPlaylists,
			$author$project$UI$User$State$Export$saveSources(
				function (collection) {
					return _Utils_update(
						model,
						{sources: collection});
				}(
					A2(
						$elm$core$List$map,
						function (source) {
							return _Utils_eq(source.id, sourceId) ? _Utils_update(
								source,
								{directoryPlaylists: !source.directoryPlaylists}) : source;
						},
						model.sources))));
	});
var $author$project$UI$Sources$State$toggleProcessAutomatically = function (model) {
	return $author$project$UI$User$State$Export$saveSettings(
		_Utils_update(
			model,
			{processAutomatically: !model.processAutomatically}));
};
var $author$project$Sources$Encoding$decode = function (value) {
	return $elm$core$Result$toMaybe(
		A2($elm$json$Json$Decode$decodeValue, $author$project$Sources$Encoding$decoder, value));
};
var $author$project$UI$Sources$State$updateSourceData = F2(
	function (json, model) {
		return $author$project$UI$User$State$Export$saveSources(
			A2(
				$elm$core$Maybe$withDefault,
				model,
				A2(
					$elm$core$Maybe$map,
					function (col) {
						return _Utils_update(
							model,
							{sources: col});
					},
					A2(
						$elm$core$Maybe$map,
						function (source) {
							return A2(
								$elm$core$List$map,
								function (s) {
									return _Utils_eq(s.id, source.id) ? source : s;
								},
								model.sources);
						},
						$author$project$Sources$Encoding$decode(json)))));
	});
var $author$project$UI$Sources$State$update = function (msg) {
	switch (msg.$) {
		case 'Bypass':
			return $Fresheyeball$elm_return$Return$singleton;
		case 'FinishedProcessingSource':
			var a = msg.a;
			return $author$project$UI$Sources$State$finishedProcessingSource(a);
		case 'FinishedProcessing':
			return $author$project$UI$Sources$State$finishedProcessing;
		case 'Process':
			return $author$project$UI$Sources$State$process;
		case 'ProcessSpecific':
			var a = msg.a;
			return $author$project$UI$Sources$State$processSpecific(a);
		case 'ReportProcessingError':
			var a = msg.a;
			return $author$project$UI$Sources$State$reportProcessingError(a);
		case 'ReportProcessingProgress':
			var a = msg.a;
			return $author$project$UI$Sources$State$reportProcessingProgress(a);
		case 'StopProcessing':
			return $author$project$UI$Sources$State$stopProcessing;
		case 'AddToCollection':
			var a = msg.a;
			return $author$project$UI$Sources$State$addToCollection(a);
		case 'RemoveFromCollection':
			var a = msg.a;
			return $author$project$UI$Sources$State$removeFromCollection(a);
		case 'UpdateSourceData':
			var a = msg.a;
			return $author$project$UI$Sources$State$updateSourceData(a);
		case 'AddSourceUsingForm':
			return $author$project$UI$Sources$State$addSourceUsingForm;
		case 'EditSourceUsingForm':
			return $author$project$UI$Sources$State$editSourceUsingForm;
		case 'RenameSourceUsingForm':
			return $author$project$UI$Sources$State$renameSourceUsingForm;
		case 'ReturnToIndex':
			return $author$project$UI$Sources$State$returnToIndex;
		case 'SelectService':
			var a = msg.a;
			return $author$project$UI$Sources$State$selectService(a);
		case 'SetFormData':
			var a = msg.a;
			var b = msg.b;
			return A2($author$project$UI$Sources$State$setFormData, a, b);
		case 'TakeStep':
			return $author$project$UI$Sources$State$takeStep;
		case 'TakeStepBackwards':
			return $author$project$UI$Sources$State$takeStepBackwards;
		case 'SourceContextMenu':
			var a = msg.a;
			var b = msg.b;
			return A2($author$project$UI$Sources$State$sourceContextMenu, a, b);
		case 'ToggleActivation':
			var a = msg.a;
			return $author$project$UI$Sources$State$toggleActivation(a);
		case 'ToggleDirectoryPlaylists':
			var a = msg.a;
			return $author$project$UI$Sources$State$toggleDirectoryPlaylists(a);
		default:
			return $author$project$UI$Sources$State$toggleProcessAutomatically;
	}
};
var $author$project$User$Layer$methodSeparator = '___';
var $author$project$User$Layer$methodToString = function (method) {
	switch (method.$) {
		case 'Dropbox':
			var accessToken = method.a.accessToken;
			var expiresAt = method.a.expiresAt;
			var refreshToken = method.a.refreshToken;
			return A2(
				$elm$core$String$join,
				$author$project$User$Layer$methodSeparator,
				_List_fromArray(
					[
						'DROPBOX',
						accessToken,
						$elm$core$String$fromInt(expiresAt),
						refreshToken
					]));
		case 'Fission':
			return 'FISSION';
		case 'Ipfs':
			var apiOrigin = method.a.apiOrigin;
			return A2(
				$elm$core$String$join,
				$author$project$User$Layer$methodSeparator,
				_List_fromArray(
					['IPFS', apiOrigin]));
		default:
			var userAddress = method.a.userAddress;
			var token = method.a.token;
			return A2(
				$elm$core$String$join,
				$author$project$User$Layer$methodSeparator,
				_List_fromArray(
					['REMOTE_STORAGE', userAddress, token]));
	}
};
var $author$project$User$Layer$encodeMethod = A2($elm$core$Basics$composeR, $author$project$User$Layer$methodToString, $elm$json$Json$Encode$string);
var $author$project$UI$Syncing$State$activateSync = F2(
	function (method, model) {
		return A2(
			$Fresheyeball$elm_return$Return$return,
			model,
			$author$project$UI$Ports$toBrain(
				A2(
					$author$project$Alien$broadcast,
					$author$project$Alien$SetSyncMethod,
					$elm$json$Json$Encode$object(
						_List_fromArray(
							[
								_Utils_Tuple2(
								'method',
								$author$project$User$Layer$encodeMethod(method)),
								_Utils_Tuple2('passphrase', $elm$json$Json$Encode$null)
							])))));
	});
var $author$project$UI$Syncing$State$hashPassphrase = function (phrase) {
	return $elm$core$String$toLower(
		$icidasset$elm_binary$Binary$toHex(
			$icidasset$elm_sha$SHA$sha256(
				$icidasset$elm_binary$Binary$fromStringAsUtf8(phrase))));
};
var $author$project$UI$Syncing$State$minimumPassphraseLength = 16;
var $author$project$UI$Syncing$State$passphraseLengthErrorMessage = 'Your passphrase should be atleast *16 characters* long.';
var $author$project$UI$Syncing$State$activateSyncWithPassphrase = F3(
	function (method, passphrase, model) {
		return (_Utils_cmp(
			$elm$core$String$length(passphrase),
			$author$project$UI$Syncing$State$minimumPassphraseLength) < 0) ? A2(
			$author$project$UI$Common$State$showNotificationWithModel,
			model,
			$author$project$Notifications$error($author$project$UI$Syncing$State$passphraseLengthErrorMessage)) : A2(
			$Fresheyeball$elm_return$Return$return,
			model,
			$author$project$UI$Ports$toBrain(
				A2(
					$author$project$Alien$broadcast,
					$author$project$Alien$SetSyncMethod,
					$elm$json$Json$Encode$object(
						_List_fromArray(
							[
								_Utils_Tuple2(
								'method',
								$author$project$User$Layer$encodeMethod(method)),
								_Utils_Tuple2(
								'passphrase',
								$elm$json$Json$Encode$string(
									$author$project$UI$Syncing$State$hashPassphrase(passphrase)))
							])))));
	});
var $author$project$UI$Syncing$Types$InputScreen = F2(
	function (a, b) {
		return {$: 'InputScreen', a: a, b: b};
	});
var $author$project$UI$Syncing$State$lens = {
	get: function ($) {
		return $.syncing;
	},
	set: F2(
		function (a, m) {
			return _Utils_update(
				m,
				{syncing: a});
		})
};
var $author$project$UI$Syncing$State$replaceState = function (state) {
	return A2(
		$elm$core$Basics$composeR,
		$author$project$UI$Syncing$State$lens.set(state),
		$Fresheyeball$elm_return$Return$singleton);
};
var $author$project$UI$Syncing$State$askForInput = F2(
	function (method, question) {
		return $author$project$UI$Syncing$State$replaceState(
			A2($author$project$UI$Syncing$Types$InputScreen, method, question));
	});
var $author$project$UI$Backdrop$setDefault = function (model) {
	return $Fresheyeball$elm_return$Return$singleton(
		_Utils_update(
			model,
			{
				chosenBackdrop: $elm$core$Maybe$Just($author$project$UI$Backdrop$default)
			}));
};
var $author$project$UI$Syncing$State$bootFailure = F2(
	function (err, model) {
		return A2(
			$Fresheyeball$elm_return$Return$andThen,
			$author$project$UI$Backdrop$setDefault,
			A2(
				$author$project$UI$Common$State$showNotification,
				$author$project$Notifications$error(err),
				model));
	});
var $author$project$UI$Syncing$Types$Synced = function (a) {
	return {$: 'Synced', a: a};
};
var $author$project$UI$Syncing$State$cancelInput = function (model) {
	var _v0 = $author$project$UI$Syncing$State$lens.get(model);
	switch (_v0.$) {
		case 'InputScreen':
			return A2($author$project$UI$Syncing$State$replaceState, $author$project$UI$Syncing$Types$NotSynced, model);
		case 'NewEncryptionKeyScreen':
			return A2($author$project$UI$Syncing$State$replaceState, $author$project$UI$Syncing$Types$NotSynced, model);
		case 'UpdateEncryptionKeyScreen':
			var method = _v0.a;
			return A2(
				$author$project$UI$Syncing$State$replaceState,
				$author$project$UI$Syncing$Types$Synced(method),
				model);
		default:
			var m = _v0;
			return A2($author$project$UI$Syncing$State$replaceState, m, model);
	}
};
var $author$project$UI$Ports$collectFissionCapabilities = _Platform_outgoingPort(
	'collectFissionCapabilities',
	function ($) {
		return $elm$json$Json$Encode$null;
	});
var $author$project$UI$Syncing$State$collectFissionCapabilities = function (model) {
	return A2(
		$Fresheyeball$elm_return$Return$return,
		model,
		$author$project$UI$Ports$collectFissionCapabilities(_Utils_Tuple0));
};
var $author$project$UI$Syncing$Types$RemoteStorageWebfinger = F2(
	function (a, b) {
		return {$: 'RemoteStorageWebfinger', a: a, b: b};
	});
var $author$project$UI$Ports$authenticateWithFission = _Platform_outgoingPort(
	'authenticateWithFission',
	function ($) {
		return $elm$json$Json$Encode$null;
	});
var $author$project$User$Layer$Methods$RemoteStorage$parseUserAddress = function (str) {
	var _v0 = A2($elm$core$String$split, '@', str);
	if ((_v0.b && _v0.b.b) && (!_v0.b.b.b)) {
		var u = _v0.a;
		var _v1 = _v0.b;
		var h = _v1.a;
		return $elm$core$Maybe$Just(
			{host: h, username: u});
	} else {
		return $elm$core$Maybe$Nothing;
	}
};
var $author$project$User$Layer$Methods$RemoteStorage$userAddressError = 'Please provide a valid RemoteStorage address, the format is **user@server**';
var $author$project$User$Layer$Methods$RemoteStorage$webfingerAddress = F2(
	function (originProtocol, _v0) {
		var host = _v0.host;
		var username = _v0.username;
		var hostWithoutProtocol = A2(
			$elm$core$Maybe$withDefault,
			host,
			$elm$core$List$head(
				A2(
					$elm$core$List$drop,
					1,
					A2($elm$core$String$split, '://', host))));
		var fallbackProtocol = function () {
			if (originProtocol.$ === 'Http') {
				return 'http';
			} else {
				return 'https';
			}
		}();
		var protocol = A2($elm$core$String$contains, '://', host) ? A2(
			$elm$core$Maybe$withDefault,
			fallbackProtocol,
			$elm$core$List$head(
				A2($elm$core$String$split, '://', host))) : fallbackProtocol;
		return protocol + ('://' + (hostWithoutProtocol + ('/.well-known/webfinger?resource=acct:' + $elm$url$Url$percentEncode(username + ('@' + hostWithoutProtocol)))));
	});
var $author$project$User$Layer$Methods$RemoteStorage$webfingerDecoder = A2(
	$elm$json$Json$Decode$at,
	_List_fromArray(
		['links', '0', 'properties', 'http://tools.ietf.org/html/rfc6749#section-4.2']),
	$elm$json$Json$Decode$string);
var $author$project$User$Layer$Methods$RemoteStorage$webfingerRequest = F3(
	function (toMsg, originProtocol, rs) {
		return $elm$http$Http$get(
			{
				expect: A2(
					$elm$http$Http$expectJson,
					toMsg(rs),
					$author$project$User$Layer$Methods$RemoteStorage$webfingerDecoder),
				url: A2($author$project$User$Layer$Methods$RemoteStorage$webfingerAddress, originProtocol, rs)
			});
	});
var $author$project$UI$Syncing$State$externalAuth = F3(
	function (method, string, model) {
		switch (method.$) {
			case 'Dropbox':
				return A2(
					$Fresheyeball$elm_return$Return$return,
					model,
					$elm$browser$Browser$Navigation$load(
						A2(
							$elm$core$String$append,
							'https://www.dropbox.com/oauth2/authorize',
							$author$project$Common$queryString(
								_List_fromArray(
									[
										_Utils_Tuple2('client_id', $author$project$User$Layer$Methods$Dropbox$clientId),
										_Utils_Tuple2(
										'redirect_uri',
										$author$project$User$Layer$Methods$Dropbox$redirectUri(model.url)),
										_Utils_Tuple2('response_type', 'code'),
										_Utils_Tuple2('token_access_type', 'offline')
									])))));
			case 'Fission':
				return A2(
					$Fresheyeball$elm_return$Return$command,
					$author$project$UI$Ports$authenticateWithFission(_Utils_Tuple0),
					A2(
						$author$project$UI$Common$State$showNotificationWithModel,
						model,
						$author$project$Notifications$stickyCasual('Just a moment, loading necessary components ...')));
			case 'RemoteStorage':
				return A3(
					$elm_community$maybe_extra$Maybe$Extra$unwrap,
					A2(
						$author$project$UI$Common$State$showNotificationWithModel,
						model,
						$author$project$Notifications$error($author$project$User$Layer$Methods$RemoteStorage$userAddressError)),
					$Fresheyeball$elm_return$Return$return(model),
					A2(
						$elm$core$Maybe$map,
						$elm$core$Platform$Cmd$map($author$project$UI$Types$SyncingMsg),
						A2(
							$elm$core$Maybe$map,
							A2($author$project$User$Layer$Methods$RemoteStorage$webfingerRequest, $author$project$UI$Syncing$Types$RemoteStorageWebfinger, model.url.protocol),
							$author$project$User$Layer$Methods$RemoteStorage$parseUserAddress(string))));
			default:
				return $Fresheyeball$elm_return$Return$singleton(model);
		}
	});
var $author$project$UI$Syncing$Types$PingOtherIpfsCallback = F2(
	function (a, b) {
		return {$: 'PingOtherIpfsCallback', a: a, b: b};
	});
var $author$project$UI$Syncing$State$pingOtherIpfs = F2(
	function (origin, model) {
		return A2(
			$Fresheyeball$elm_return$Return$return,
			model,
			$elm$http$Http$post(
				{
					body: $elm$http$Http$emptyBody,
					expect: $elm$http$Http$expectWhatever(
						A2(
							$elm$core$Basics$composeL,
							$author$project$UI$Types$SyncingMsg,
							$author$project$UI$Syncing$Types$PingOtherIpfsCallback(origin))),
					url: origin + '/api/v0/id'
				}));
	});
var $author$project$UI$Syncing$State$confirmInput = function (model) {
	var _v0 = $author$project$UI$Syncing$State$lens.get(model);
	_v0$2:
	while (true) {
		if (_v0.$ === 'InputScreen') {
			switch (_v0.a.$) {
				case 'Ipfs':
					var value = _v0.b.value;
					return A2(
						$author$project$UI$Syncing$State$pingOtherIpfs,
						A2($author$project$String$Ext$chopEnd, '/', value),
						model);
				case 'RemoteStorage':
					var r = _v0.a.a;
					var value = _v0.b.value;
					return A3(
						$author$project$UI$Syncing$State$externalAuth,
						$author$project$User$Layer$RemoteStorage(r),
						value,
						model);
				default:
					break _v0$2;
			}
		} else {
			break _v0$2;
		}
	}
	return $Fresheyeball$elm_return$Return$singleton(model);
};
var $author$project$User$Layer$Dropbox = function (a) {
	return {$: 'Dropbox', a: a};
};
var $author$project$Http$Ext$errorToString = function (err) {
	switch (err.$) {
		case 'Timeout':
			return 'Timeout exceeded';
		case 'NetworkError':
			return 'Network error';
		case 'BadStatus':
			var code = err.a;
			return 'Something went wrong, got status code: ' + $elm$core$String$fromInt(code);
		case 'BadBody':
			var text = err.a;
			return 'Unexpected response: ' + text;
		default:
			var url = err.a;
			return 'Malformed url: ' + url;
	}
};
var $author$project$Lens$Ext$replace = F3(
	function (lens, a, b) {
		return A2(lens.set, b, a);
	});
var $author$project$UI$Syncing$State$exchangeDropboxAuthCode = F2(
	function (result, model) {
		if (result.$ === 'Ok') {
			var tokens = result.a;
			var _v1 = tokens.refreshToken;
			if (_v1.$ === 'Just') {
				var refreshToken = _v1.a;
				return $Fresheyeball$elm_return$Return$singleton(
					A3(
						$author$project$Lens$Ext$replace,
						$author$project$UI$Syncing$State$lens,
						model,
						A2(
							$author$project$UI$Syncing$Types$NewEncryptionKeyScreen,
							$author$project$User$Layer$Dropbox(
								{
									accessToken: tokens.accessToken,
									expiresAt: (($elm$time$Time$posixToMillis(model.currentTime) / 1000) | 0) + tokens.expiresIn,
									refreshToken: refreshToken
								}),
							$elm$core$Maybe$Nothing)));
			} else {
				return A2(
					$author$project$UI$Common$State$showNotificationWithModel,
					A3($author$project$Lens$Ext$replace, $author$project$UI$Syncing$State$lens, model, $author$project$UI$Syncing$Types$NotSynced),
					$author$project$Notifications$stickyError('Missing refresh token in Dropbox code exchange flow.'));
			}
		} else {
			var err = result.a;
			return A2(
				$author$project$UI$Common$State$showNotificationWithModel,
				A3($author$project$Lens$Ext$replace, $author$project$UI$Syncing$State$lens, model, $author$project$UI$Syncing$Types$NotSynced),
				A3(
					$author$project$Notifications$errorWithCode,
					'Failed to authenticate with Dropbox',
					$author$project$Http$Ext$errorToString(err),
					_List_Nil));
		}
	});
var $author$project$User$Layer$Ipfs = function (a) {
	return {$: 'Ipfs', a: a};
};
var $author$project$User$Layer$methodFromString = function (string) {
	var _v0 = A2($elm$core$String$split, $author$project$User$Layer$methodSeparator, string);
	_v0$4:
	while (true) {
		if (_v0.b) {
			if (!_v0.b.b) {
				if (_v0.a === 'FISSION') {
					return $elm$core$Maybe$Just(
						$author$project$User$Layer$Fission(
							{}));
				} else {
					break _v0$4;
				}
			} else {
				if (!_v0.b.b.b) {
					if (_v0.a === 'IPFS') {
						var _v4 = _v0.b;
						var a = _v4.a;
						return $elm$core$Maybe$Just(
							$author$project$User$Layer$Ipfs(
								{apiOrigin: a}));
					} else {
						break _v0$4;
					}
				} else {
					if (_v0.b.b.b.b) {
						if ((_v0.a === 'DROPBOX') && (!_v0.b.b.b.b.b)) {
							var _v1 = _v0.b;
							var a = _v1.a;
							var _v2 = _v1.b;
							var e = _v2.a;
							var _v3 = _v2.b;
							var r = _v3.a;
							return $elm$core$Maybe$Just(
								$author$project$User$Layer$Dropbox(
									{
										accessToken: a,
										expiresAt: A2(
											$elm$core$Maybe$withDefault,
											0,
											$elm$core$String$toInt(e)),
										refreshToken: r
									}));
						} else {
							break _v0$4;
						}
					} else {
						if (_v0.a === 'REMOTE_STORAGE') {
							var _v5 = _v0.b;
							var u = _v5.a;
							var _v6 = _v5.b;
							var t = _v6.a;
							return $elm$core$Maybe$Just(
								$author$project$User$Layer$RemoteStorage(
									{token: t, userAddress: u}));
						} else {
							break _v0$4;
						}
					}
				}
			}
		} else {
			break _v0$4;
		}
	}
	return $elm$core$Maybe$Nothing;
};
var $author$project$User$Layer$decodeMethod = A2(
	$elm$core$Basics$composeR,
	$elm$json$Json$Decode$decodeValue(
		A2($elm$json$Json$Decode$map, $author$project$User$Layer$methodFromString, $elm$json$Json$Decode$string)),
	A2($elm$core$Basics$composeR, $elm$core$Result$toMaybe, $elm_community$maybe_extra$Maybe$Extra$join));
var $author$project$UI$Syncing$State$gotSyncMethod = F2(
	function (json, model) {
		var afterwards = function (a) {
			return A2(
				$Fresheyeball$elm_return$Return$andThen,
				function (m) {
					return m.processAutomatically ? $author$project$UI$Sources$State$process(m) : $Fresheyeball$elm_return$Return$singleton(m);
				},
				function () {
					var _v1 = model.syncing;
					if (_v1.$ === 'Syncing') {
						var notificationId = _v1.a.notificationId;
						return A2(
							$author$project$UI$Common$State$dismissNotification,
							{id: notificationId},
							a);
					} else {
						return $Fresheyeball$elm_return$Return$singleton(a);
					}
				}());
		};
		var _v0 = $author$project$User$Layer$decodeMethod(json);
		if (_v0.$ === 'Just') {
			var method = _v0.a;
			return A2(
				$Fresheyeball$elm_return$Return$andThen,
				afterwards,
				A2(
					$author$project$UI$Syncing$State$replaceState,
					$author$project$UI$Syncing$Types$Synced(method),
					model));
		} else {
			return afterwards(model);
		}
	});
var $author$project$Lens$Ext$adjust = F3(
	function (lens, a, fn) {
		return A3($arturopala$elm_monocle$Monocle$Lens$modify, lens, fn, a);
	});
var $author$project$UI$Syncing$State$input = F2(
	function (string, model) {
		return $Fresheyeball$elm_return$Return$singleton(
			A3(
				$author$project$Lens$Ext$adjust,
				$author$project$UI$Syncing$State$lens,
				model,
				function (state) {
					if (state.$ === 'InputScreen') {
						var method = state.a;
						var opts = state.b;
						return A2(
							$author$project$UI$Syncing$Types$InputScreen,
							method,
							_Utils_update(
								opts,
								{value: string}));
					} else {
						var s = state;
						return s;
					}
				}));
	});
var $author$project$UI$Syncing$Types$UpdateEncryptionKeyScreen = F2(
	function (a, b) {
		return {$: 'UpdateEncryptionKeyScreen', a: a, b: b};
	});
var $author$project$UI$Syncing$State$keepPassphraseInMemory = F2(
	function (passphrase, model) {
		return $Fresheyeball$elm_return$Return$singleton(
			A3(
				$author$project$Lens$Ext$adjust,
				$author$project$UI$Syncing$State$lens,
				model,
				function (state) {
					switch (state.$) {
						case 'NewEncryptionKeyScreen':
							var method = state.a;
							return A2(
								$author$project$UI$Syncing$Types$NewEncryptionKeyScreen,
								method,
								$elm$core$Maybe$Just(passphrase));
						case 'UpdateEncryptionKeyScreen':
							var method = state.a;
							return A2(
								$author$project$UI$Syncing$Types$UpdateEncryptionKeyScreen,
								method,
								$elm$core$Maybe$Just(passphrase));
						default:
							var s = state;
							return s;
					}
				}));
	});
var $author$project$UI$Syncing$State$stopSync = function (model) {
	return A2(
		$Fresheyeball$elm_return$Return$andThen,
		$author$project$UI$Syncing$State$replaceState($author$project$UI$Syncing$Types$NotSynced),
		A2(
			$Fresheyeball$elm_return$Return$return,
			model,
			$author$project$UI$Ports$toBrain(
				$author$project$Alien$trigger($author$project$Alien$UnsetSyncMethod))));
};
var $author$project$UI$Syncing$State$needEncryptionKey = F2(
	function (_v0, model) {
		var error = _v0.error;
		return A2(
			$Fresheyeball$elm_return$Return$andThen,
			$author$project$UI$Syncing$State$stopSync,
			A2(
				$Fresheyeball$elm_return$Return$andThen,
				$author$project$UI$Common$State$showNotification(
					$author$project$Notifications$stickyError(error)),
				function () {
					var _v1 = $author$project$UI$Syncing$State$lens.get(model);
					if (_v1.$ === 'Syncing') {
						var notificationId = _v1.a.notificationId;
						return A2(
							$author$project$UI$Common$State$dismissNotification,
							{id: notificationId},
							model);
					} else {
						var m = _v1;
						return A2($author$project$UI$Syncing$State$replaceState, m, model);
					}
				}()));
	});
var $author$project$UI$Syncing$Types$PingIpfsCallback = function (a) {
	return {$: 'PingIpfsCallback', a: a};
};
var $author$project$UI$Syncing$State$pingIpfs = function (model) {
	var _v0 = model.url.protocol;
	if (_v0.$ === 'Https') {
		return A2(
			$author$project$UI$Common$State$showNotificationWithModel,
			model,
			$author$project$Notifications$error('\n            Unfortunately the local IPFS API doesn\'t work with HTTPS.\n            Install the [IPFS Companion](https://github.com/ipfs-shipyard/ipfs-companion#release-channel) browser extension to get around this issue\n            (and make sure it redirects to the local gateway).\n            '));
	} else {
		return A2(
			$Fresheyeball$elm_return$Return$return,
			model,
			$elm$http$Http$post(
				{
					body: $elm$http$Http$emptyBody,
					expect: $elm$http$Http$expectWhatever(
						A2($elm$core$Basics$composeL, $author$project$UI$Types$SyncingMsg, $author$project$UI$Syncing$Types$PingIpfsCallback)),
					url: '//localhost:5001/api/v0/id'
				}));
	}
};
var $elm$html$Html$a = _VirtualDom_node('a');
var $elm$html$Html$span = _VirtualDom_node('span');
var $author$project$UI$Kit$askForInput = function (_v0) {
	var question = _v0.question;
	var info = _v0.info;
	return A2(
		$elm$html$Html$span,
		_List_Nil,
		_List_fromArray(
			[
				A2(
				$author$project$Chunky$chunk,
				_List_fromArray(
					['font-semibold', 'pt-1']),
				_List_fromArray(
					[
						$elm$html$Html$text(question)
					])),
				function () {
				if (!info.b) {
					return $elm$html$Html$text('');
				} else {
					return A2(
						$author$project$Chunky$chunk,
						_List_fromArray(
							['italic', 'mt-2', 'text-sm']),
						info);
				}
			}()
			]));
};
var $elm$html$Html$br = _VirtualDom_node('br');
var $elm$html$Html$Attributes$href = function (url) {
	return A2(
		$elm$html$Html$Attributes$stringProperty,
		'href',
		_VirtualDom_noJavaScriptUri(url));
};
var $elm$svg$Svg$Attributes$fillOpacity = _VirtualDom_attribute('fill-opacity');
var $elm$svg$Svg$Attributes$transform = _VirtualDom_attribute('transform');
var $author$project$UI$Svg$Elements$ipfsLogo = function (size) {
	return A2(
		$elm$svg$Svg$svg,
		_List_fromArray(
			[
				$elm$svg$Svg$Attributes$height(
				$elm$core$String$fromInt(size)),
				$elm$svg$Svg$Attributes$viewBox('0 0 511.99999 511.99998'),
				$elm$svg$Svg$Attributes$width(
				$elm$core$String$fromInt(size))
			]),
		_List_fromArray(
			[
				A2(
				$elm$svg$Svg$g,
				_List_fromArray(
					[
						$elm$svg$Svg$Attributes$transform('translate(-50.017 -515.51)')
					]),
				_List_fromArray(
					[
						A2(
						$elm$svg$Svg$path,
						_List_fromArray(
							[
								$elm$svg$Svg$Attributes$d('m283.13 546.35-160.74 92.806c0.32126 2.8543 0.32125 5.7352 0 8.5894l160.75 92.806c13.554-10.001 32.043-10.001 45.597 0l160.75-92.807c-0.32126-2.8543-0.32293-5.7338-0.001-8.588l-160.74-92.806c-13.554 10.001-32.044 10.001-45.599 0zm221.79 127.03-160.92 93.84c1.884 16.739-7.3611 32.751-22.799 39.489l0.18062 184.58c2.6325 1.1489 5.1267 2.5886 7.438 4.294l160.75-92.805c-1.884-16.739 7.3611-32.752 22.799-39.49v-185.61c-2.6325-1.1489-5.1281-2.5886-7.4394-4.294zm-397.81 1.0315c-2.3112 1.7054-4.8054 3.1465-7.438 4.2954v185.61c15.438 6.7378 24.683 22.75 22.799 39.489l160.74 92.806c2.3112-1.7054 4.8069-3.1465 7.4394-4.2954v-185.61c-15.438-6.7378-24.683-22.75-22.799-39.489l-160.74-92.81z'),
								$elm$svg$Svg$Attributes$fill('currentColor')
							]),
						_List_Nil)
					])),
				A2(
				$elm$svg$Svg$g,
				_List_fromArray(
					[
						$elm$svg$Svg$Attributes$fill('currentColor'),
						$elm$svg$Svg$Attributes$transform('translate(0 -196.66)')
					]),
				_List_fromArray(
					[
						A2(
						$elm$svg$Svg$path,
						_List_fromArray(
							[
								$elm$svg$Svg$Attributes$d('m256 708.66 221.7-128v-256l-221.7 128v256z'),
								$elm$svg$Svg$Attributes$fillOpacity('1')
							]),
						_List_Nil),
						A2(
						$elm$svg$Svg$path,
						_List_fromArray(
							[
								$elm$svg$Svg$Attributes$d('m256 708.66v-256l-221.7-128v256l221.7 128z'),
								$elm$svg$Svg$Attributes$fillOpacity('.75')
							]),
						_List_Nil),
						A2(
						$elm$svg$Svg$path,
						_List_fromArray(
							[
								$elm$svg$Svg$Attributes$d('m34.298 324.66 221.7 128 221.7-128-221.7-128-221.7 128z'),
								$elm$svg$Svg$Attributes$fillOpacity('.5')
							]),
						_List_Nil)
					]))
			]));
};
var $elm$virtual_dom$VirtualDom$map = _VirtualDom_map;
var $elm$svg$Svg$map = $elm$virtual_dom$VirtualDom$map;
var $author$project$UI$Syncing$State$showNewEncryptionKeyScreen = function (method) {
	return $author$project$UI$Syncing$State$replaceState(
		A2($author$project$UI$Syncing$Types$NewEncryptionKeyScreen, method, $elm$core$Maybe$Nothing));
};
var $elm$html$Html$Attributes$target = $elm$html$Html$Attributes$stringProperty('target');
var $author$project$UI$Syncing$State$pingIpfsCallback = function (result) {
	if (result.$ === 'Ok') {
		return $author$project$UI$Syncing$State$showNewEncryptionKeyScreen(
			$author$project$User$Layer$Ipfs(
				{apiOrigin: '//localhost:5001'}));
	} else {
		return A2(
			$author$project$UI$Syncing$State$askForInput,
			$author$project$User$Layer$Ipfs(
				{apiOrigin: ''}),
			{
				icon: F2(
					function (size, _v1) {
						return A2(
							$elm$svg$Svg$map,
							$elm$core$Basics$never,
							$author$project$UI$Svg$Elements$ipfsLogo(size));
					}),
				placeholder: '//localhost:5001',
				question: $author$project$UI$Kit$askForInput(
					{
						info: _List_fromArray(
							[
								$elm$html$Html$text('You can find this address on the IPFS Web UI.'),
								A2($elm$html$Html$br, _List_Nil, _List_Nil),
								$elm$html$Html$text('Most likely you\'ll also need to setup CORS.'),
								A2($elm$html$Html$br, _List_Nil, _List_Nil),
								$elm$html$Html$text('You can find the instructions for that '),
								A2(
								$elm$html$Html$a,
								_List_fromArray(
									[
										$elm$html$Html$Attributes$class('border-b border-current-color font-semibold inline-block leading-tight'),
										$elm$html$Html$Attributes$href('about/cors/#CORS__IPFS'),
										$elm$html$Html$Attributes$target('_blank')
									]),
								_List_fromArray(
									[
										$elm$html$Html$text('here')
									]))
							]),
						question: 'Where\'s your IPFS API located?'
					}),
				value: '//localhost:5001'
			});
	}
};
var $author$project$UI$Syncing$State$pingOtherIpfsCallback = F2(
	function (origin, result) {
		if (result.$ === 'Ok') {
			return $author$project$UI$Syncing$State$showNewEncryptionKeyScreen(
				$author$project$User$Layer$Ipfs(
					{apiOrigin: origin}));
		} else {
			return $author$project$UI$Common$State$showNotification(
				$author$project$Notifications$error('Can\'t reach this IPFS API, maybe it\'s offline? Or I don\'t have access?'));
		}
	});
var $prozacchiwawa$elm_urlbase64$UrlBase64$replaceForUrl = A2(
	$elm$core$Maybe$withDefault,
	$elm$regex$Regex$never,
	$elm$regex$Regex$fromString('[\\+/=]'));
var $prozacchiwawa$elm_urlbase64$UrlBase64$encode = F2(
	function (enc, t) {
		var replaceChar = function (rematch) {
			var _v0 = rematch.match;
			switch (_v0) {
				case '+':
					return '-';
				case '/':
					return '_';
				default:
					return '';
			}
		};
		return A2(
			$elm$core$Result$map,
			A2($elm$regex$Regex$replace, $prozacchiwawa$elm_urlbase64$UrlBase64$replaceForUrl, replaceChar),
			enc(t));
	});
var $author$project$User$Layer$Methods$RemoteStorage$oauthAddress = F2(
	function (_v0, _v1) {
		var oauthOrigin = _v0.oauthOrigin;
		var origin = _v0.origin;
		var host = _v1.host;
		var username = _v1.username;
		var hostWithoutProtocol = A2(
			$elm$core$Maybe$withDefault,
			host,
			$elm$core$List$head(
				A2(
					$elm$core$List$drop,
					1,
					A2($elm$core$String$split, '://', host))));
		var ua = A2(
			$elm$core$Result$withDefault,
			'BASE64_ENCODING_FAILED',
			A2(
				$prozacchiwawa$elm_urlbase64$UrlBase64$encode,
				A2($elm$core$Basics$composeR, $truqu$elm_base64$Base64$encode, $elm$core$Result$Ok),
				username + ('@' + hostWithoutProtocol)));
		return $elm$core$String$concat(
			_List_fromArray(
				[
					oauthOrigin,
					'?redirect_uri=' + $elm$url$Url$percentEncode(origin + ('?action=authenticate/remotestorage/' + ua)),
					'&client_id=' + $elm$url$Url$percentEncode(origin),
					'&scope=' + $elm$url$Url$percentEncode('diffuse:rw'),
					'&response_type=token'
				]));
	});
var $author$project$User$Layer$Methods$RemoteStorage$webfingerError = '**Failed to connect** to the given RemoteStorage server, maybe a typo?';
var $author$project$UI$Syncing$State$remoteStorageWebfinger = F3(
	function (remoteStorage, result, model) {
		if (result.$ === 'Ok') {
			var oauthOrigin = result.a;
			var origin = $author$project$Common$urlOrigin(model.url);
			return A2(
				$Fresheyeball$elm_return$Return$return,
				model,
				$elm$browser$Browser$Navigation$load(
					A2(
						$author$project$User$Layer$Methods$RemoteStorage$oauthAddress,
						{oauthOrigin: oauthOrigin, origin: origin},
						remoteStorage)));
		} else {
			return A2(
				$author$project$UI$Common$State$showNotificationWithModel,
				model,
				$author$project$Notifications$error($author$project$User$Layer$Methods$RemoteStorage$webfingerError));
		}
	});
var $author$project$UI$Syncing$State$removeEncryptionKey = F2(
	function (method, model) {
		return A2(
			$Fresheyeball$elm_return$Return$andThen,
			$author$project$UI$Common$State$forceTracksRerender,
			A2(
				$Fresheyeball$elm_return$Return$andThen,
				$author$project$UI$Common$State$showNotification(
					$author$project$Notifications$success('Saving data without encryption ...')),
				A2(
					$Fresheyeball$elm_return$Return$return,
					A2(
						$author$project$UI$Syncing$State$lens.set,
						$author$project$UI$Syncing$Types$Synced(method),
						model),
					$author$project$UI$Ports$toBrain(
						$author$project$Alien$trigger($author$project$Alien$RemoveEncryptionKey)))));
	});
var $author$project$UI$Svg$Elements$dropboxLogo = function (size) {
	return A2(
		$elm$svg$Svg$svg,
		_List_fromArray(
			[
				$elm$svg$Svg$Attributes$height(
				$elm$core$String$fromInt(size)),
				$elm$svg$Svg$Attributes$viewBox('0 0 43 40'),
				$elm$svg$Svg$Attributes$width(
				$elm$core$String$fromInt(size))
			]),
		_List_fromArray(
			[
				A2(
				$elm$svg$Svg$path,
				_List_fromArray(
					[
						$elm$svg$Svg$Attributes$d('m12.5 0l-12.5 8.1 8.7 7 12.5-7.8-8.7-7.3zm-12.5 21.9l12.5 8.2 8.7-7.3-12.5-7.7-8.7 6.8zm21.2 0.9l8.8 7.3 12.4-8.1-8.6-6.9-12.6 7.7zm21.2-14.7l-12.4-8.1-8.8 7.3 12.6 7.8 8.6-7zm-21.1 16.3l-8.8 7.3-3.7-2.5v2.8l12.5 7.5 12.5-7.5v-2.8l-3.8 2.5-8.7-7.3z'),
						$elm$svg$Svg$Attributes$fill('currentColor')
					]),
				_List_Nil)
			]));
};
var $author$project$User$Layer$dropboxMethod = $author$project$User$Layer$Dropbox(
	{accessToken: '', expiresAt: 0, refreshToken: ''});
var $author$project$User$Layer$fissionMethod = $author$project$User$Layer$Fission(
	{});
var $author$project$User$Layer$ipfsMethod = $author$project$User$Layer$Ipfs(
	{apiOrigin: 'https://ipfs.io'});
var $author$project$User$Layer$methodName = function (method) {
	switch (method.$) {
		case 'Dropbox':
			return 'Dropbox';
		case 'Fission':
			return 'Fission';
		case 'Ipfs':
			return 'IPFS (using MFS)';
		default:
			return 'Remote Storage';
	}
};
var $elm$svg$Svg$Attributes$clipRule = _VirtualDom_attribute('clip-rule');
var $elm$svg$Svg$Attributes$fillRule = _VirtualDom_attribute('fill-rule');
var $elm$svg$Svg$Attributes$imageRendering = _VirtualDom_attribute('image-rendering');
var $elm$svg$Svg$Attributes$points = _VirtualDom_attribute('points');
var $elm$svg$Svg$polygon = $elm$svg$Svg$trustedNode('polygon');
var $elm$svg$Svg$Attributes$shapeRendering = _VirtualDom_attribute('shape-rendering');
var $elm$svg$Svg$Attributes$textRendering = _VirtualDom_attribute('text-rendering');
var $author$project$UI$Svg$Elements$remoteStorageLogo = function (size) {
	return A2(
		$elm$svg$Svg$svg,
		_List_fromArray(
			[
				$elm$svg$Svg$Attributes$clipRule('evenodd'),
				$elm$svg$Svg$Attributes$fillRule('evenodd'),
				$elm$svg$Svg$Attributes$height(
				$elm$core$String$fromInt(size)),
				$elm$svg$Svg$Attributes$imageRendering('optimizeQuality'),
				$elm$svg$Svg$Attributes$shapeRendering('geometricPrecision'),
				$elm$svg$Svg$Attributes$textRendering('geometricPrecision'),
				$elm$svg$Svg$Attributes$viewBox('0 0 739 853'),
				$elm$svg$Svg$Attributes$width(
				$elm$core$String$fromInt(size))
			]),
		_List_fromArray(
			[
				A2(
				$elm$svg$Svg$polygon,
				_List_fromArray(
					[
						$elm$svg$Svg$Attributes$points('370,754 0,542 0,640 185,747 370,853 554,747 739,640 739,525 739,525 739,476 739,427 739,378 653,427 370,589 86,427 86,427 86,361 185,418 370,524 554,418 653,361 739,311 739,213 739,213 554,107 370,0 185,107 58,180 144,230 228,181 370,100 511,181 652,263 370,425 87,263 87,263 0,213 0,213 0,311 0,378 0,427 0,476 86,525 185,582 370,689 554,582 653,525 653,590 653,592'),
						$elm$svg$Svg$Attributes$fill('currentColor')
					]),
				_List_Nil)
			]));
};
var $author$project$User$Layer$remoteStorageMethod = $author$project$User$Layer$RemoteStorage(
	{token: '', userAddress: ''});
var $author$project$UI$Syncing$Types$TriggerExternalAuth = F2(
	function (a, b) {
		return {$: 'TriggerExternalAuth', a: a, b: b};
	});
var $author$project$UI$Syncing$Common$startDropbox = $author$project$UI$Types$SyncingMsg(
	A2($author$project$UI$Syncing$Types$TriggerExternalAuth, $author$project$User$Layer$dropboxMethod, ''));
var $author$project$UI$Syncing$Common$startFission = $author$project$UI$Types$SyncingMsg(
	A2($author$project$UI$Syncing$Types$TriggerExternalAuth, $author$project$User$Layer$fissionMethod, ''));
var $author$project$UI$Syncing$Types$PingIpfs = {$: 'PingIpfs'};
var $author$project$UI$Syncing$Common$startIpfs = $author$project$UI$Types$SyncingMsg($author$project$UI$Syncing$Types$PingIpfs);
var $author$project$UI$Syncing$Types$AskForInput = F2(
	function (a, b) {
		return {$: 'AskForInput', a: a, b: b};
	});
var $author$project$Chunky$inline = A2($author$project$Chunky$slab, $elm$html$Html$span, _List_Nil);
var $author$project$UI$Syncing$Common$startRemoteStorage = $author$project$UI$Types$SyncingMsg(
	A2(
		$author$project$UI$Syncing$Types$AskForInput,
		$author$project$User$Layer$remoteStorageMethod,
		{
			icon: F2(
				function (size, _v0) {
					return A2(
						$elm$svg$Svg$map,
						$elm$core$Basics$never,
						$author$project$UI$Svg$Elements$remoteStorageLogo(size));
				}),
			placeholder: 'example@5apps.com',
			question: $author$project$UI$Kit$askForInput(
				{
					info: _List_fromArray(
						[
							$elm$html$Html$text('The format is '),
							A2(
							$author$project$Chunky$inline,
							_List_Nil,
							_List_fromArray(
								[
									$elm$html$Html$text('username@server.domain')
								]))
						]),
					question: 'What\'s your user address?'
				}),
			value: ''
		}));
var $author$project$UI$Svg$Elements$webnativeLogo = function (size) {
	return A2(
		$elm$svg$Svg$svg,
		_List_fromArray(
			[
				$elm$svg$Svg$Attributes$fill('none'),
				$elm$svg$Svg$Attributes$height(
				$elm$core$String$fromInt(size)),
				$elm$svg$Svg$Attributes$viewBox('0 0 250 250'),
				$elm$svg$Svg$Attributes$width(
				$elm$core$String$fromInt(size))
			]),
		_List_fromArray(
			[
				A2(
				$elm$svg$Svg$path,
				_List_fromArray(
					[
						$elm$svg$Svg$Attributes$fillRule('evenodd'),
						$elm$svg$Svg$Attributes$clipRule('evenodd'),
						$elm$svg$Svg$Attributes$d('M33.3333 0C10.1347 0 0 9.99249 0 33.3333V216.667C0 239.091 10.4172 250 33.3333 250H216.667C239.765 250 250 239.51 250 216.667V125V33.3333C250 10.3955 239.574 0 216.667 0H33.3333ZM57.3911 164.984L68.5617 51.2427C69.5933 40.7383 61.393 31.631 50.9031 31.631C38.1496 31.631 28.537 45.3231 32.0648 58.3591C36.7876 75.8111 41.3556 98.9561 41.6476 123.919C41.8176 138.455 40.3539 152.52 38.1506 165.262C35.9358 178.071 39.4107 191.433 46.7165 201.576C54.005 211.695 64.908 218.369 77.4832 218.369H83.9689C99.8795 218.369 112.778 205.39 112.778 189.38V177.288C112.778 170.016 107.529 163.82 100.393 162.669L91.5656 161.246C87.9339 160.66 84.5681 163.29 84.2316 166.975L84.1788 167.554C83.5427 174.522 77.7345 179.854 70.7805 179.854C62.8267 179.854 56.6089 172.949 57.3911 164.984ZM112.778 128.877V81.8168C112.778 75.371 117.97 70.1457 124.376 70.1457C130.782 70.1457 135.975 75.371 135.975 81.8168V183.356C135.975 202.693 151.553 218.369 170.77 218.369H172.247C197.218 218.369 215.844 191.62 211.259 165.803C208.974 152.93 207.384 138.689 207.384 123.965C207.384 98.3245 212.206 74.6027 217.157 56.9885C220.619 44.6718 211.535 31.631 199.501 31.631C189.81 31.631 182.175 39.9419 182.936 49.6632L191.972 165.139C192.593 173.072 186.363 179.854 178.454 179.854C171.446 179.854 165.592 174.48 164.951 167.458L155.103 59.5792C153.657 43.7467 140.46 31.631 124.66 31.631C108.793 31.631 95.5628 43.8469 94.202 59.755L87.6689 127.792C87.0977 134.468 91.798 140.436 98.3885 141.401C105.976 142.513 112.778 136.592 112.778 128.877Z'),
						$elm$svg$Svg$Attributes$fill('currentColor')
					]),
				_List_Nil)
			]));
};
var $author$project$UI$Syncing$ContextMenu$syncDataMenu = $author$project$ContextMenu$ContextMenu(
	_List_fromArray(
		[
			$author$project$ContextMenu$Item(
			{
				active: false,
				icon: F2(
					function (_v0, _v1) {
						return A2(
							$elm$svg$Svg$map,
							$elm$core$Basics$never,
							$author$project$UI$Svg$Elements$webnativeLogo(16));
					}),
				label: $author$project$User$Layer$methodName($author$project$User$Layer$fissionMethod),
				msg: $author$project$UI$Syncing$Common$startFission
			}),
			$author$project$ContextMenu$Item(
			{
				active: false,
				icon: F2(
					function (_v2, _v3) {
						return A2(
							$elm$svg$Svg$map,
							$elm$core$Basics$never,
							$author$project$UI$Svg$Elements$dropboxLogo(16));
					}),
				label: $author$project$User$Layer$methodName($author$project$User$Layer$dropboxMethod),
				msg: $author$project$UI$Syncing$Common$startDropbox
			}),
			$author$project$ContextMenu$Item(
			{
				active: false,
				icon: F2(
					function (_v4, _v5) {
						return A2(
							$elm$svg$Svg$map,
							$elm$core$Basics$never,
							$author$project$UI$Svg$Elements$remoteStorageLogo(16));
					}),
				label: $author$project$User$Layer$methodName($author$project$User$Layer$remoteStorageMethod),
				msg: $author$project$UI$Syncing$Common$startRemoteStorage
			}),
			$author$project$ContextMenu$Item(
			{
				active: false,
				icon: F2(
					function (_v6, _v7) {
						return A2(
							$elm$svg$Svg$map,
							$elm$core$Basics$never,
							$author$project$UI$Svg$Elements$ipfsLogo(16));
					}),
				label: $author$project$User$Layer$methodName($author$project$User$Layer$ipfsMethod),
				msg: $author$project$UI$Syncing$Common$startIpfs
			})
		]));
var $author$project$UI$Syncing$State$showSyncDataMenu = F2(
	function (mouseEvent, model) {
		return A2(
			$author$project$UI$Common$State$showContextMenuWithModel,
			model,
			$author$project$UI$Syncing$ContextMenu$syncDataMenu(
				$author$project$Coordinates$fromTuple(mouseEvent.clientPos)));
	});
var $author$project$UI$Syncing$State$showUpdateEncryptionKeyScreen = function (method) {
	return $author$project$UI$Syncing$State$replaceState(
		A2($author$project$UI$Syncing$Types$UpdateEncryptionKeyScreen, method, $elm$core$Maybe$Nothing));
};
var $author$project$UI$Syncing$Types$Syncing = function (a) {
	return {$: 'Syncing', a: a};
};
var $author$project$UI$Common$State$showSyncingNotification = F2(
	function (method, model) {
		var notification = $author$project$Notifications$stickyCasual('Syncing user data ...');
		var syncing = $author$project$UI$Syncing$Types$Syncing(
			{
				method: method,
				notificationId: $author$project$Notifications$id(notification)
			});
		return A2(
			$author$project$UI$Common$State$showNotification,
			notification,
			_Utils_update(
				model,
				{syncing: syncing}));
	});
var $author$project$UI$Syncing$State$startedSyncing = function (json) {
	var _v0 = $author$project$User$Layer$decodeMethod(json);
	if (_v0.$ === 'Just') {
		var method = _v0.a;
		return $author$project$UI$Common$State$showSyncingNotification(method);
	} else {
		return $Fresheyeball$elm_return$Return$singleton;
	}
};
var $author$project$UI$Syncing$State$updateEncryptionKey = F3(
	function (method, passphrase, model) {
		return (_Utils_cmp(
			$elm$core$String$length(passphrase),
			$author$project$UI$Syncing$State$minimumPassphraseLength) < 0) ? A2(
			$author$project$UI$Common$State$showNotificationWithModel,
			model,
			$author$project$Notifications$error($author$project$UI$Syncing$State$passphraseLengthErrorMessage)) : A2(
			$Fresheyeball$elm_return$Return$andThen,
			$author$project$UI$Common$State$forceTracksRerender,
			A2(
				$Fresheyeball$elm_return$Return$andThen,
				$author$project$UI$Common$State$showNotification(
					$author$project$Notifications$success('Encrypting data with new passphrase ...')),
				A2(
					$Fresheyeball$elm_return$Return$return,
					A2(
						$author$project$UI$Syncing$State$lens.set,
						$author$project$UI$Syncing$Types$Synced(method),
						model),
					$author$project$UI$Ports$toBrain(
						A2(
							$author$project$Alien$broadcast,
							$author$project$Alien$UpdateEncryptionKey,
							$elm$json$Json$Encode$string(
								$author$project$UI$Syncing$State$hashPassphrase(passphrase)))))));
	});
var $author$project$UI$Syncing$State$update = function (msg) {
	switch (msg.$) {
		case 'Bypass':
			return $Fresheyeball$elm_return$Return$singleton;
		case 'ActivateSync':
			var a = msg.a;
			return $author$project$UI$Syncing$State$activateSync(a);
		case 'ActivateSyncWithPassphrase':
			var a = msg.a;
			var b = msg.b;
			return A2($author$project$UI$Syncing$State$activateSyncWithPassphrase, a, b);
		case 'BootFailure':
			var a = msg.a;
			return $author$project$UI$Syncing$State$bootFailure(a);
		case 'CollectFissionCapabilities':
			return $author$project$UI$Syncing$State$collectFissionCapabilities;
		case 'ExchangeDropboxAuthCode':
			var a = msg.a;
			return $author$project$UI$Syncing$State$exchangeDropboxAuthCode(a);
		case 'GotSyncMethod':
			var a = msg.a;
			return $author$project$UI$Syncing$State$gotSyncMethod(a);
		case 'RemoteStorageWebfinger':
			var a = msg.a;
			var b = msg.b;
			return A2($author$project$UI$Syncing$State$remoteStorageWebfinger, a, b);
		case 'ShowSyncDataMenu':
			var a = msg.a;
			return $author$project$UI$Syncing$State$showSyncDataMenu(a);
		case 'StartedSyncing':
			var a = msg.a;
			return $author$project$UI$Syncing$State$startedSyncing(a);
		case 'StopSync':
			return $author$project$UI$Syncing$State$stopSync;
		case 'TriggerExternalAuth':
			var a = msg.a;
			var b = msg.b;
			return A2($author$project$UI$Syncing$State$externalAuth, a, b);
		case 'KeepPassphraseInMemory':
			var a = msg.a;
			return $author$project$UI$Syncing$State$keepPassphraseInMemory(a);
		case 'NeedEncryptionKey':
			var a = msg.a;
			return $author$project$UI$Syncing$State$needEncryptionKey(a);
		case 'RemoveEncryptionKey':
			var a = msg.a;
			return $author$project$UI$Syncing$State$removeEncryptionKey(a);
		case 'ShowNewEncryptionKeyScreen':
			var a = msg.a;
			return $author$project$UI$Syncing$State$showNewEncryptionKeyScreen(a);
		case 'ShowUpdateEncryptionKeyScreen':
			var a = msg.a;
			return $author$project$UI$Syncing$State$showUpdateEncryptionKeyScreen(a);
		case 'UpdateEncryptionKey':
			var a = msg.a;
			var b = msg.b;
			return A2($author$project$UI$Syncing$State$updateEncryptionKey, a, b);
		case 'PingIpfs':
			return $author$project$UI$Syncing$State$pingIpfs;
		case 'PingIpfsCallback':
			var a = msg.a;
			return $author$project$UI$Syncing$State$pingIpfsCallback(a);
		case 'PingOtherIpfs':
			var a = msg.a;
			return $author$project$UI$Syncing$State$pingOtherIpfs(a);
		case 'PingOtherIpfsCallback':
			var a = msg.a;
			var b = msg.b;
			return A2($author$project$UI$Syncing$State$pingOtherIpfsCallback, a, b);
		case 'AskForInput':
			var a = msg.a;
			var b = msg.b;
			return A2($author$project$UI$Syncing$State$askForInput, a, b);
		case 'CancelInput':
			return $author$project$UI$Syncing$State$cancelInput;
		case 'ConfirmInput':
			return $author$project$UI$Syncing$State$confirmInput;
		default:
			var a = msg.a;
			return $author$project$UI$Syncing$State$input(a);
	}
};
var $author$project$Tracks$Collection$add = F2(
	function (tracks, _v0) {
		var deps = _v0.a;
		var untouched = _v0.b.untouched;
		return $author$project$Tracks$Collection$identify(
			_Utils_Tuple2(
				deps,
				_Utils_update(
					$author$project$Tracks$emptyCollection,
					{
						untouched: _Utils_ap(untouched, tracks)
					})));
	});
var $author$project$UI$Tracks$State$add = F2(
	function (encodedTracks, model) {
		return A2(
			$author$project$UI$Tracks$State$reviseCollection,
			$author$project$Tracks$Collection$add(
				A2(
					$elm$core$Result$withDefault,
					_List_Nil,
					A2(
						$elm$json$Json$Decode$decodeValue,
						$elm$json$Json$Decode$list($author$project$Tracks$Encoding$trackDecoder),
						encodedTracks))),
			model);
	});
var $author$project$UI$Tracks$State$AddToFavourites = {$: 'AddToFavourites'};
var $author$project$Tracks$Favourites$completeFavouritesList = F2(
	function (tracks, favourites) {
		return A2(
			$elm$core$List$append,
			favourites,
			A2(
				$elm$core$List$filterMap,
				function (_v0) {
					var i = _v0.a;
					var t = _v0.b;
					return (!i.isFavourite) ? $elm$core$Maybe$Just(
						{artist: t.tags.artist, title: t.tags.title}) : $elm$core$Maybe$Nothing;
				},
				tracks));
	});
var $author$project$Tracks$Favourites$lowercaseArtist = A2(
	$elm$core$Basics$composeR,
	function ($) {
		return $.tags;
	},
	A2(
		$elm$core$Basics$composeR,
		function ($) {
			return $.artist;
		},
		$elm$core$String$toLower));
var $author$project$Tracks$Favourites$lowercaseTitle = A2(
	$elm$core$Basics$composeR,
	function ($) {
		return $.tags;
	},
	A2(
		$elm$core$Basics$composeR,
		function ($) {
			return $.title;
		},
		$elm$core$String$toLower));
var $author$project$Tracks$Favourites$completeTracksList = F2(
	function (tracksToMakeFavourite, tracks) {
		var favs = A2(
			$elm$core$List$filterMap,
			function (_v4) {
				var i = _v4.a;
				var t = _v4.b;
				return (!i.isFavourite) ? $elm$core$Maybe$Just(
					_Utils_Tuple2(
						$author$project$Tracks$Favourites$lowercaseArtist(t),
						$author$project$Tracks$Favourites$lowercaseTitle(t))) : $elm$core$Maybe$Nothing;
			},
			tracksToMakeFavourite);
		return A2(
			$elm$core$List$map,
			function (_v0) {
				var i = _v0.a;
				var t = _v0.b;
				var _v1 = _Utils_Tuple2(
					$author$project$Tracks$Favourites$lowercaseArtist(t),
					$author$project$Tracks$Favourites$lowercaseTitle(t));
				var la = _v1.a;
				var lt = _v1.b;
				return A3(
					$elm$core$List$foldr,
					F2(
						function (_v2, _v3) {
							var lartist = _v2.a;
							var ltitle = _v2.b;
							var ai = _v3.a;
							var at = _v3.b;
							return (_Utils_eq(la, lartist) && (_Utils_eq(lt, ltitle) && (!ai.isFavourite))) ? _Utils_Tuple2(
								_Utils_update(
									ai,
									{isFavourite: true}),
								at) : _Utils_Tuple2(ai, at);
						}),
					_Utils_Tuple2(i, t),
					favs);
			},
			tracks);
	});
var $author$project$Tracks$Collection$map = F2(
	function (fn, _v0) {
		var model = _v0.a;
		var collection = _v0.b;
		return _Utils_Tuple2(
			model,
			_Utils_update(
				collection,
				{
					arranged: fn(collection.arranged),
					harvested: fn(collection.harvested),
					identified: fn(collection.identified)
				}));
	});
var $author$project$Tracks$Favourites$match = F2(
	function (a, b) {
		var _v0 = _Utils_Tuple2(
			$elm$core$String$toLower(b.artist),
			$elm$core$String$toLower(b.title));
		var ba = _v0.a;
		var bt = _v0.b;
		var _v1 = _Utils_Tuple2(
			$elm$core$String$toLower(a.artist),
			$elm$core$String$toLower(a.title));
		var aa = _v1.a;
		var at = _v1.b;
		return _Utils_eq(aa, ba) && _Utils_eq(at, bt);
	});
var $author$project$Tracks$Favourites$removeFromFavouritesList = F2(
	function (tracks, favourites) {
		return A3(
			$elm$core$List$foldr,
			F2(
				function (_v0, acc) {
					var i = _v0.a;
					var t = _v0.b;
					return i.isFavourite ? A2(
						$elm_community$list_extra$List$Extra$filterNot,
						$author$project$Tracks$Favourites$match(
							{artist: t.tags.artist, title: t.tags.title}),
						acc) : acc;
				}),
			favourites,
			tracks);
	});
var $author$project$Tracks$Favourites$removeFromTracksList = F2(
	function (tracksToRemoveFromFavs, tracks) {
		var unfavs = A2(
			$elm$core$List$filterMap,
			function (_v4) {
				var i = _v4.a;
				var t = _v4.b;
				return i.isFavourite ? $elm$core$Maybe$Just(
					_Utils_Tuple2(
						$author$project$Tracks$Favourites$lowercaseArtist(t),
						$author$project$Tracks$Favourites$lowercaseTitle(t))) : $elm$core$Maybe$Nothing;
			},
			tracksToRemoveFromFavs);
		return A2(
			$elm$core$List$map,
			function (_v0) {
				var i = _v0.a;
				var t = _v0.b;
				var _v1 = _Utils_Tuple2(
					$author$project$Tracks$Favourites$lowercaseArtist(t),
					$author$project$Tracks$Favourites$lowercaseTitle(t));
				var la = _v1.a;
				var lt = _v1.b;
				return A3(
					$elm$core$List$foldr,
					F2(
						function (_v2, _v3) {
							var lartist = _v2.a;
							var ltitle = _v2.b;
							var ai = _v3.a;
							var at = _v3.b;
							return (_Utils_eq(la, lartist) && (_Utils_eq(lt, ltitle) && ai.isFavourite)) ? _Utils_Tuple2(
								_Utils_update(
									ai,
									{isFavourite: false}),
								at) : _Utils_Tuple2(ai, at);
						}),
					_Utils_Tuple2(i, t),
					unfavs);
			},
			tracks);
	});
var $author$project$UI$Tracks$State$manageFavourites = F3(
	function (action, tracks, model) {
		var selectedCover = A2(
			$elm$core$Maybe$map,
			function (cover) {
				return function (a) {
					return _Utils_update(
						cover,
						{tracks: a});
				}(
					function () {
						if (action.$ === 'AddToFavourites') {
							return $author$project$Tracks$Favourites$completeTracksList(tracks);
						} else {
							return $author$project$Tracks$Favourites$removeFromTracksList(tracks);
						}
					}()(cover.tracks));
			},
			model.selectedCover);
		var newFavourites = A2(
			function () {
				if (action.$ === 'AddToFavourites') {
					return $author$project$Tracks$Favourites$completeFavouritesList;
				} else {
					return $author$project$Tracks$Favourites$removeFromFavouritesList;
				}
			}(),
			tracks,
			model.favourites);
		var effect = function (collection) {
			return (model.favouritesOnly ? $author$project$Tracks$Collection$harvest : $elm$core$Basics$identity)(
				A2(
					$author$project$Tracks$Collection$map,
					function () {
						if (action.$ === 'AddToFavourites') {
							return $author$project$Tracks$Favourites$completeTracksList(tracks);
						} else {
							return $author$project$Tracks$Favourites$removeFromTracksList(tracks);
						}
					}(),
					collection));
		};
		return (_Utils_eq(model.scene, $author$project$Tracks$Covers) ? A2(
			$elm$core$Basics$composeR,
			$Fresheyeball$elm_return$Return$andThen($author$project$UI$Tracks$State$generateCovers),
			$Fresheyeball$elm_return$Return$andThen($author$project$UI$Tracks$State$harvestCovers)) : $elm$core$Basics$identity)(
			A2(
				$Fresheyeball$elm_return$Return$andThen,
				$author$project$UI$User$State$Export$saveFavourites,
				A2(
					$author$project$UI$Tracks$State$reviseCollection,
					effect,
					_Utils_update(
						model,
						{favourites: newFavourites, selectedCover: selectedCover}))));
	});
var $author$project$UI$Tracks$State$addFavourites = $author$project$UI$Tracks$State$manageFavourites($author$project$UI$Tracks$State$AddToFavourites);
var $author$project$UI$Tracks$State$changeScene = F2(
	function (scene, model) {
		return A2(
			$Fresheyeball$elm_return$Return$andThen,
			$author$project$UI$User$State$Export$saveEnclosedUserData,
			A2(
				$Fresheyeball$elm_return$Return$andThen,
				$author$project$UI$Common$State$forceTracksRerender,
				A2(
					$Fresheyeball$elm_return$Return$andThen,
					model.coverSelectionReducesPool ? $author$project$UI$Queue$State$reset : $Fresheyeball$elm_return$Return$singleton,
					A2(
						$Fresheyeball$elm_return$Return$return,
						_Utils_update(
							model,
							{scene: scene, selectedCover: $elm$core$Maybe$Nothing}),
						function () {
							if (scene.$ === 'Covers') {
								return $author$project$UI$Ports$loadAlbumCovers(
									{coverView: true, list: true});
							} else {
								return $elm$core$Platform$Cmd$none;
							}
						}()))));
	});
var $author$project$UI$Tracks$State$clearSearch = function (model) {
	return A2(
		$Fresheyeball$elm_return$Return$andThen,
		$author$project$UI$User$State$Export$saveEnclosedUserData,
		A2(
			$author$project$UI$Tracks$State$reviseCollection,
			$author$project$Tracks$Collection$harvest,
			_Utils_update(
				model,
				{searchResults: $elm$core$Maybe$Nothing, searchTerm: $elm$core$Maybe$Nothing})));
};
var $author$project$UI$Tracks$State$deselectCover = function (model) {
	return (model.coverSelectionReducesPool ? $author$project$UI$Queue$State$reset : $Fresheyeball$elm_return$Return$singleton)(
		_Utils_update(
			model,
			{selectedCover: $elm$core$Maybe$Nothing}));
};
var $author$project$UI$Tracks$State$disableGrouping = function (model) {
	return A2(
		$Fresheyeball$elm_return$Return$andThen,
		$author$project$UI$User$State$Export$saveEnclosedUserData,
		A2(
			$author$project$UI$Tracks$State$reviseCollection,
			$author$project$Tracks$Collection$arrange,
			_Utils_update(
				model,
				{grouping: $elm$core$Maybe$Nothing})));
};
var $author$project$UI$Tracks$State$download = F3(
	function (zipName, tracks, model) {
		var notification = $author$project$Notifications$stickyCasual('Downloading tracks ...');
		var downloading = $elm$core$Maybe$Just(
			{
				notificationId: $author$project$Notifications$id(notification)
			});
		return A2(
			$Fresheyeball$elm_return$Return$andThen,
			$author$project$UI$Common$State$showNotification(notification),
			A2(
				$Fresheyeball$elm_return$Return$return,
				_Utils_update(
					model,
					{downloading: downloading}),
				$author$project$UI$Ports$toBrain(
					A2(
						$author$project$Alien$broadcast,
						$author$project$Alien$DownloadTracks,
						$elm$json$Json$Encode$object(
							_List_fromArray(
								[
									_Utils_Tuple2(
									'zipName',
									$elm$json$Json$Encode$string(zipName)),
									_Utils_Tuple2(
									'trackIds',
									A2(
										$elm$json$Json$Encode$list,
										$elm$json$Json$Encode$string,
										A2(
											$elm$core$List$map,
											function ($) {
												return $.id;
											},
											tracks)))
								]))))));
	});
var $author$project$UI$Tracks$State$downloadFinished = function (model) {
	var _v0 = model.downloading;
	if (_v0.$ === 'Just') {
		var notificationId = _v0.a.notificationId;
		return A2(
			$author$project$UI$Common$State$dismissNotification,
			{id: notificationId},
			_Utils_update(
				model,
				{downloading: $elm$core$Maybe$Nothing}));
	} else {
		return $Fresheyeball$elm_return$Return$singleton(model);
	}
};
var $author$project$UI$Tracks$State$gotCachedCover = F2(
	function (json, model) {
		var cachedCovers = A2($elm$core$Maybe$withDefault, $elm$core$Dict$empty, model.cachedCovers);
		return $Fresheyeball$elm_return$Return$singleton(
			A2(
				$elm$core$Result$withDefault,
				model,
				A2(
					$elm$core$Result$map,
					function (dict) {
						return _Utils_update(
							model,
							{
								cachedCovers: $elm$core$Maybe$Just(dict)
							});
					},
					A2(
						$elm$core$Result$map,
						function (_v0) {
							var key = _v0.a;
							var url = _v0.b;
							return A3($elm$core$Dict$insert, key, url, cachedCovers);
						},
						A2(
							$elm$json$Json$Decode$decodeValue,
							A3(
								$elm$json$Json$Decode$map2,
								$elm$core$Tuple$pair,
								A2($elm$json$Json$Decode$field, 'key', $elm$json$Json$Decode$string),
								A2($elm$json$Json$Decode$field, 'url', $elm$json$Json$Decode$string)),
							json)))));
	});
var $author$project$UI$Tracks$State$groupBy = F2(
	function (grouping, model) {
		return A2(
			$Fresheyeball$elm_return$Return$andThen,
			$author$project$UI$User$State$Export$saveEnclosedUserData,
			A2(
				$author$project$UI$Tracks$State$reviseCollection,
				$author$project$Tracks$Collection$arrange,
				_Utils_update(
					model,
					{
						grouping: $elm$core$Maybe$Just(grouping)
					})));
	});
var $author$project$UI$Tracks$State$infiniteListMsg = F2(
	function (infiniteList, model) {
		return A2(
			$Fresheyeball$elm_return$Return$return,
			_Utils_update(
				model,
				{infiniteList: infiniteList}),
			$author$project$UI$Ports$loadAlbumCovers(
				{coverView: false, list: true}));
	});
var $author$project$UI$Tracks$State$insertCoverCache = F2(
	function (json, model) {
		return $Fresheyeball$elm_return$Return$singleton(
			A2(
				$elm$core$Result$withDefault,
				model,
				A2(
					$elm$core$Result$map,
					function (dict) {
						return _Utils_update(
							model,
							{
								cachedCovers: $elm$core$Maybe$Just(dict)
							});
					},
					A2(
						$elm$json$Json$Decode$decodeValue,
						$elm$json$Json$Decode$dict($elm$json$Json$Decode$string),
						json))));
	});
var $author$project$UI$Tracks$State$markAsSelected = F3(
	function (indexInList, _v0, model) {
		var shiftKey = _v0.shiftKey;
		var selection = shiftKey ? A2(
			$elm$core$Maybe$withDefault,
			_List_fromArray(
				[indexInList]),
			A2(
				$elm$core$Maybe$map,
				function (n) {
					return (_Utils_cmp(n, indexInList) > 0) ? A2($elm$core$List$range, indexInList, n) : A2($elm$core$List$range, n, indexInList);
				},
				$elm$core$List$head(model.selectedTrackIndexes))) : _List_fromArray(
			[indexInList]);
		return $Fresheyeball$elm_return$Return$singleton(
			_Utils_update(
				model,
				{selectedTrackIndexes: selection}));
	});
var $author$project$Tracks$Collection$replace = F2(
	function (tracks, _v0) {
		var deps = _v0.a;
		var untouched = _v0.b.untouched;
		return $author$project$Tracks$Collection$identify(
			_Utils_Tuple2(
				deps,
				_Utils_update(
					$author$project$Tracks$emptyCollection,
					{untouched: tracks})));
	});
var $author$project$UI$Tracks$State$reload = F2(
	function (encodedTracks, model) {
		return A2(
			$author$project$UI$Tracks$State$reviseCollection,
			$author$project$Tracks$Collection$replace(
				A2(
					$elm$core$Result$withDefault,
					model.tracks.untouched,
					A2(
						$elm$json$Json$Decode$decodeValue,
						$elm$json$Json$Decode$list($author$project$Tracks$Encoding$trackDecoder),
						encodedTracks))),
			model);
	});
var $author$project$Tracks$removeByPaths = F2(
	function (_v0, tracks) {
		var sourceId = _v0.sourceId;
		var paths = _v0.paths;
		return function (_v2) {
			var k = _v2.a;
			var r = _v2.b;
			return {kept: k, removed: r};
		}(
			A3(
				$elm$core$List$foldr,
				F2(
					function (t, _v1) {
						var kept = _v1.a;
						var removed = _v1.b;
						var remainingPathsToRemove = _v1.c;
						return (_Utils_eq(t.sourceId, sourceId) && A2($elm$core$List$member, t.path, remainingPathsToRemove)) ? _Utils_Tuple3(
							kept,
							A2($elm$core$List$cons, t, removed),
							A2($elm_community$list_extra$List$Extra$remove, t.path, remainingPathsToRemove)) : _Utils_Tuple3(
							A2($elm$core$List$cons, t, kept),
							removed,
							remainingPathsToRemove);
					}),
				_Utils_Tuple3(_List_Nil, _List_Nil, paths),
				tracks));
	});
var $author$project$UI$Tracks$State$removeByPaths = F2(
	function (encodedParams, model) {
		var decoder = A3(
			$elm$json$Json$Decode$map2,
			$elm$core$Tuple$pair,
			A2(
				$elm$json$Json$Decode$field,
				'filePaths',
				$elm$json$Json$Decode$list($elm$json$Json$Decode$string)),
			A2($elm$json$Json$Decode$field, 'sourceId', $elm$json$Json$Decode$string));
		var _v0 = A2(
			$elm$core$Result$withDefault,
			_Utils_Tuple2(_List_Nil, $author$project$Tracks$missingId),
			A2($elm$json$Json$Decode$decodeValue, decoder, encodedParams));
		var paths = _v0.a;
		var sourceId = _v0.b;
		var _v1 = A2(
			$author$project$Tracks$removeByPaths,
			{paths: paths, sourceId: sourceId},
			model.tracks.untouched);
		var kept = _v1.kept;
		var removed = _v1.removed;
		var newCollection = _Utils_update(
			$author$project$Tracks$emptyCollection,
			{untouched: kept});
		return A2(
			$Fresheyeball$elm_return$Return$andThen,
			$author$project$UI$Tracks$State$removeFromCache(removed),
			A2(
				$author$project$UI$Tracks$State$reviseCollection,
				$author$project$Tracks$Collection$identify,
				_Utils_update(
					model,
					{tracks: newCollection})));
	});
var $author$project$UI$Tracks$State$RemoveFromFavourites = {$: 'RemoveFromFavourites'};
var $author$project$UI$Tracks$State$removeFavourites = $author$project$UI$Tracks$State$manageFavourites($author$project$UI$Tracks$State$RemoveFromFavourites);
var $author$project$UI$Tracks$State$selectCover = F2(
	function (cover, model) {
		return A2(
			$Fresheyeball$elm_return$Return$command,
			$author$project$UI$Ports$loadAlbumCovers(
				{coverView: true, list: false}),
			(model.coverSelectionReducesPool ? $author$project$UI$Queue$State$reset : $Fresheyeball$elm_return$Return$singleton)(
				_Utils_update(
					model,
					{
						selectedCover: $elm$core$Maybe$Just(cover)
					})));
	});
var $author$project$UI$Tracks$State$setSearchResults = F2(
	function (json, model) {
		var _v0 = model.searchTerm;
		if (_v0.$ === 'Just') {
			return A2(
				$Fresheyeball$elm_return$Return$andThen,
				$author$project$UI$Tracks$State$afterInitialLoad,
				A2(
					$author$project$UI$Tracks$State$reviseCollection,
					$author$project$Tracks$Collection$harvest,
					function (results) {
						return _Utils_update(
							model,
							{
								searchResults: $elm$core$Maybe$Just(results)
							});
					}(
						A2(
							$elm$core$Result$withDefault,
							_List_Nil,
							A2(
								$elm$json$Json$Decode$decodeValue,
								$elm$json$Json$Decode$list($elm$json$Json$Decode$string),
								json)))));
		} else {
			return $Fresheyeball$elm_return$Return$singleton(model);
		}
	});
var $author$project$UI$Tracks$Types$Search = {$: 'Search'};
var $author$project$Task$Extra$do = function (msg) {
	return A2(
		$elm$core$Task$perform,
		$elm$core$Basics$identity,
		$elm$core$Task$succeed(msg));
};
var $author$project$UI$Tracks$State$setSearchTerm = F2(
	function (term, model) {
		return A2(
			$Fresheyeball$elm_return$Return$andThen,
			$author$project$UI$User$State$Export$saveEnclosedUserData,
			A2(
				$author$project$Return$Ext$communicate,
				$author$project$Task$Extra$do(
					$author$project$UI$Types$SearchDebounce(
						$Gizra$elm_debouncer$Debouncer$Basic$provideInput(
							$author$project$UI$Types$TracksMsg($author$project$UI$Tracks$Types$Search)))),
				function () {
					var _v0 = $elm$core$String$trim(term);
					if (_v0 === '') {
						return _Utils_update(
							model,
							{searchTerm: $elm$core$Maybe$Nothing});
					} else {
						return _Utils_update(
							model,
							{
								searchTerm: $elm$core$Maybe$Just(term)
							});
					}
				}()));
	});
var $author$project$UI$Types$CopyToClipboard = function (a) {
	return {$: 'CopyToClipboard', a: a};
};
var $author$project$UI$Tracks$Types$SyncTags = function (a) {
	return {$: 'SyncTags', a: a};
};
var $icidasset$elm_material_icons$Material$Icons$Round$link = A2(
	$icidasset$elm_material_icons$Material$Icons$Internal$icon,
	_List_fromArray(
		[
			$icidasset$elm_material_icons$Material$Icons$Internal$b('new 0 0 24 24'),
			$icidasset$elm_material_icons$Material$Icons$Internal$v('0 0 24 24')
		]),
	_List_fromArray(
		[
			A2(
			$elm$svg$Svg$g,
			_List_Nil,
			_List_fromArray(
				[
					A2(
					$elm$svg$Svg$rect,
					_List_fromArray(
						[
							$icidasset$elm_material_icons$Material$Icons$Internal$f('none')
						]),
					_List_Nil)
				])),
			A2(
			$elm$svg$Svg$g,
			_List_Nil,
			_List_fromArray(
				[
					A2(
					$elm$svg$Svg$g,
					_List_Nil,
					_List_fromArray(
						[
							A2(
							$icidasset$elm_material_icons$Material$Icons$Internal$p,
							_List_fromArray(
								[
									$elm$svg$Svg$Attributes$d('M17,7h-3c-0.55,0-1,0.45-1,1s0.45,1,1,1h3c1.65,0,3,1.35,3,3s-1.35,3-3,3h-3c-0.55,0-1,0.45-1,1c0,0.55,0.45,1,1,1h3 c2.76,0,5-2.24,5-5S19.76,7,17,7z M8,12c0,0.55,0.45,1,1,1h6c0.55,0,1-0.45,1-1s-0.45-1-1-1H9C8.45,11,8,11.45,8,12z M10,15H7 c-1.65,0-3-1.35-3-3s1.35-3,3-3h3c0.55,0,1-0.45,1-1s-0.45-1-1-1H7c-2.76,0-5,2.24-5,5s2.24,5,5,5h3c0.55,0,1-0.45,1-1 C11,15.45,10.55,15,10,15z')
								]),
							_List_Nil)
						]))
				]))
		]));
var $author$project$UI$Tracks$ContextMenu$alternativeMenuActions = F3(
	function (timestamp, sources, tracks) {
		if (tracks.b && (!tracks.b.b)) {
			var _v1 = tracks.a;
			var t = _v1.b;
			return _List_fromArray(
				[
					$author$project$ContextMenu$Item(
					{
						active: false,
						icon: $icidasset$elm_material_icons$Material$Icons$Round$link,
						label: 'Copy temporary url',
						msg: $author$project$UI$Types$CopyToClipboard(
							A3($author$project$Queue$makeTrackUrl, timestamp, sources, t))
					}),
					$author$project$ContextMenu$Item(
					{
						active: false,
						icon: $icidasset$elm_material_icons$Material$Icons$Round$sync,
						label: 'Sync tags',
						msg: $author$project$UI$Types$TracksMsg(
							$author$project$UI$Tracks$Types$SyncTags(
								_List_fromArray(
									[t])))
					})
				]);
		} else {
			return _List_Nil;
		}
	});
var $author$project$UI$Types$RemoveTracksFromPlaylist = F2(
	function (a, b) {
		return {$: 'RemoveTracksFromPlaylist', a: a, b: b};
	});
var $author$project$ContextMenu$justAnItem = A2($elm$core$Basics$composeL, $elm$core$Maybe$Just, $author$project$ContextMenu$Item);
var $author$project$UI$Tracks$ContextMenu$playlistActions = F2(
	function (_v0, tracks) {
		var selectedPlaylist = _v0.selectedPlaylist;
		var lastModifiedPlaylistName = _v0.lastModifiedPlaylistName;
		var maybeCustomPlaylist = A2(
			$elm$core$Maybe$andThen,
			function (p) {
				return A3(
					$author$project$Conditional$ifThenElse,
					p.autoGenerated,
					$elm$core$Maybe$Nothing,
					$elm$core$Maybe$Just(p));
			},
			selectedPlaylist);
		var maybeAddToLastModifiedPlaylist = A2(
			$elm$core$Maybe$andThen,
			function (n) {
				return (!_Utils_eq(
					A2(
						$elm$core$Maybe$map,
						function ($) {
							return $.name;
						},
						selectedPlaylist),
					$elm$core$Maybe$Just(n))) ? $author$project$ContextMenu$justAnItem(
					{
						active: false,
						icon: $icidasset$elm_material_icons$Material$Icons$Round$waves,
						label: 'Add to \"' + (n + '\"'),
						msg: $author$project$UI$Types$AddTracksToPlaylist(
							{
								playlistName: n,
								tracks: $author$project$Tracks$toPlaylistTracks(tracks)
							})
					}) : $elm$core$Maybe$Nothing;
			},
			lastModifiedPlaylistName);
		if (maybeCustomPlaylist.$ === 'Just') {
			var playlist = maybeCustomPlaylist.a;
			return $elm_community$maybe_extra$Maybe$Extra$values(
				_List_fromArray(
					[
						$author$project$ContextMenu$justAnItem(
						{
							active: false,
							icon: $icidasset$elm_material_icons$Material$Icons$Round$waves,
							label: 'Remove from playlist',
							msg: A2($author$project$UI$Types$RemoveTracksFromPlaylist, playlist, tracks)
						}),
						maybeAddToLastModifiedPlaylist,
						$author$project$ContextMenu$justAnItem(
						{
							active: false,
							icon: $icidasset$elm_material_icons$Material$Icons$Round$waves,
							label: 'Add to another playlist',
							msg: $author$project$UI$Types$AssistWithAddingTracksToPlaylist(tracks)
						})
					]));
		} else {
			return $elm_community$maybe_extra$Maybe$Extra$values(
				_List_fromArray(
					[
						maybeAddToLastModifiedPlaylist,
						$author$project$ContextMenu$justAnItem(
						{
							active: false,
							icon: $icidasset$elm_material_icons$Material$Icons$Round$waves,
							label: 'Add to playlist',
							msg: $author$project$UI$Types$AssistWithAddingTracksToPlaylist(tracks)
						})
					]));
		}
	});
var $author$project$UI$Tracks$ContextMenu$queueActions = function (identifiedTracks) {
	return _List_fromArray(
		[
			$author$project$ContextMenu$Item(
			{
				active: false,
				icon: $icidasset$elm_material_icons$Material$Icons$Round$update,
				label: 'Play next',
				msg: $author$project$UI$Types$QueueMsg(
					$author$project$UI$Queue$Types$AddTracks(
						{inFront: true, tracks: identifiedTracks}))
			}),
			$author$project$ContextMenu$Item(
			{
				active: false,
				icon: $icidasset$elm_material_icons$Material$Icons$Round$update,
				label: 'Add to queue',
				msg: $author$project$UI$Types$QueueMsg(
					$author$project$UI$Queue$Types$AddTracks(
						{inFront: false, tracks: identifiedTracks}))
			})
		]);
};
var $author$project$UI$Tracks$ContextMenu$trackMenu = F2(
	function (_v0, tracks) {
		var cached = _v0.cached;
		var cachingInProgress = _v0.cachingInProgress;
		var currentTime = _v0.currentTime;
		var selectedPlaylist = _v0.selectedPlaylist;
		var lastModifiedPlaylistName = _v0.lastModifiedPlaylistName;
		var showAlternativeMenu = _v0.showAlternativeMenu;
		var sources = _v0.sources;
		return showAlternativeMenu ? $author$project$ContextMenu$ContextMenu(
			$elm$core$List$concat(
				_List_fromArray(
					[
						A3($author$project$UI$Tracks$ContextMenu$alternativeMenuActions, currentTime, sources, tracks)
					]))) : $author$project$ContextMenu$ContextMenu(
			$elm$core$List$concat(
				_List_fromArray(
					[
						$author$project$UI$Tracks$ContextMenu$queueActions(tracks),
						A2(
						$author$project$UI$Tracks$ContextMenu$playlistActions,
						{lastModifiedPlaylistName: lastModifiedPlaylistName, selectedPlaylist: selectedPlaylist},
						tracks),
						$elm$core$List$singleton(
						A2(
							$author$project$UI$Tracks$ContextMenu$cacheAction,
							{cached: cached, cachingInProgress: cachingInProgress},
							tracks))
					])));
	});
var $author$project$UI$Tracks$State$showCoverMenu = F3(
	function (cover, coordinates, model) {
		var menuDependencies = {cached: model.cachedTracks, cachingInProgress: model.cachingTracksInProgress, currentTime: model.currentTime, lastModifiedPlaylistName: model.lastModifiedPlaylist, selectedPlaylist: model.selectedPlaylist, showAlternativeMenu: false, sources: model.sources};
		return A2(
			$author$project$UI$Common$State$showContextMenuWithModel,
			model,
			A3($author$project$UI$Tracks$ContextMenu$trackMenu, menuDependencies, cover.tracks, coordinates));
	});
var $author$project$UI$Tracks$Types$ShowCoverMenu = F2(
	function (a, b) {
		return {$: 'ShowCoverMenu', a: a, b: b};
	});
var $author$project$Task$Extra$doDelayed = F2(
	function (delay, msg) {
		return A2(
			$elm$core$Task$perform,
			$elm$core$Basics$always(msg),
			$elm$core$Process$sleep(delay));
	});
var $author$project$UI$Tracks$State$showCoverMenuWithDelay = F3(
	function (a, b, model) {
		return A2(
			$Fresheyeball$elm_return$Return$return,
			model,
			A2(
				$author$project$Task$Extra$doDelayed,
				250,
				$author$project$UI$Types$TracksMsg(
					A2($author$project$UI$Tracks$Types$ShowCoverMenu, a, b))));
	});
var $author$project$List$Ext$pickIndexes = F2(
	function (indexes, items) {
		return A3(
			$elm$core$List$foldr,
			F2(
				function (idx, acc) {
					return A2(
						$elm$core$Maybe$withDefault,
						acc,
						A2(
							$elm$core$Maybe$map,
							$author$project$List$Ext$addTo(acc),
							A2($elm_community$list_extra$List$Extra$getAt, idx, items)));
				}),
			_List_Nil,
			indexes);
	});
var $author$project$UI$Tracks$State$showTracksMenu = F4(
	function (maybeTrackIndex, _v0, coordinates, model) {
		var alt = _v0.alt;
		var selection = function () {
			if (maybeTrackIndex.$ === 'Just') {
				var trackIndex = maybeTrackIndex.a;
				return $elm$core$List$isEmpty(model.selectedTrackIndexes) ? _List_fromArray(
					[trackIndex]) : ((!A2($elm$core$List$member, trackIndex, model.selectedTrackIndexes)) ? _List_fromArray(
					[trackIndex]) : model.selectedTrackIndexes);
			} else {
				return model.selectedTrackIndexes;
			}
		}();
		var tracks = A2($author$project$List$Ext$pickIndexes, selection, model.tracks.harvested);
		var menuDependencies = {cached: model.cachedTracks, cachingInProgress: model.cachingTracksInProgress, currentTime: model.currentTime, lastModifiedPlaylistName: model.lastModifiedPlaylist, selectedPlaylist: model.selectedPlaylist, showAlternativeMenu: alt, sources: model.sources};
		return A2(
			$author$project$UI$Common$State$showContextMenuWithModel,
			_Utils_update(
				model,
				{dnd: $author$project$UI$DnD$initialModel, selectedTrackIndexes: selection}),
			A3($author$project$UI$Tracks$ContextMenu$trackMenu, menuDependencies, tracks, coordinates));
	});
var $author$project$UI$Tracks$Types$ShowTracksMenu = F3(
	function (a, b, c) {
		return {$: 'ShowTracksMenu', a: a, b: b, c: c};
	});
var $author$project$UI$Tracks$State$showTracksMenuWithDelay = F4(
	function (a, b, c, model) {
		return A2(
			$Fresheyeball$elm_return$Return$return,
			model,
			A2(
				$author$project$Task$Extra$doDelayed,
				250,
				$author$project$UI$Types$TracksMsg(
					A3($author$project$UI$Tracks$Types$ShowTracksMenu, a, b, c))));
	});
var $icidasset$elm_material_icons$Material$Icons$Round$clear = A2(
	$icidasset$elm_material_icons$Material$Icons$Internal$icon,
	_List_fromArray(
		[
			$icidasset$elm_material_icons$Material$Icons$Internal$v('0 0 24 24')
		]),
	_List_fromArray(
		[
			A2(
			$icidasset$elm_material_icons$Material$Icons$Internal$p,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$d('M0 0h24v24H0V0z'),
					$icidasset$elm_material_icons$Material$Icons$Internal$f('none')
				]),
			_List_Nil),
			A2(
			$icidasset$elm_material_icons$Material$Icons$Internal$p,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$d('M18.3 5.71c-.39-.39-1.02-.39-1.41 0L12 10.59 7.11 5.7c-.39-.39-1.02-.39-1.41 0-.39.39-.39 1.02 0 1.41L10.59 12 5.7 16.89c-.39.39-.39 1.02 0 1.41.39.39 1.02.39 1.41 0L12 13.41l4.89 4.89c.39.39 1.02.39 1.41 0 .39-.39.39-1.02 0-1.41L13.41 12l4.89-4.89c.38-.38.38-1.02 0-1.4z')
				]),
			_List_Nil)
		]));
var $author$project$UI$Tracks$ContextMenu$groupByDirectory = function (isActive) {
	return $author$project$ContextMenu$Item(
		{
			active: isActive,
			icon: A3($author$project$Conditional$ifThenElse, isActive, $icidasset$elm_material_icons$Material$Icons$Round$clear, $icidasset$elm_material_icons$Material$Icons$Round$library_music),
			label: 'Group by directory',
			msg: isActive ? $author$project$UI$Types$TracksMsg($author$project$UI$Tracks$Types$DisableGrouping) : $author$project$UI$Types$TracksMsg(
				$author$project$UI$Tracks$Types$GroupBy($author$project$Tracks$Directory))
		});
};
var $author$project$UI$Tracks$ContextMenu$groupByFirstAlphaCharacter = function (isActive) {
	return $author$project$ContextMenu$Item(
		{
			active: isActive,
			icon: A3($author$project$Conditional$ifThenElse, isActive, $icidasset$elm_material_icons$Material$Icons$Round$clear, $icidasset$elm_material_icons$Material$Icons$Round$library_music),
			label: 'Group by first letter',
			msg: isActive ? $author$project$UI$Types$TracksMsg($author$project$UI$Tracks$Types$DisableGrouping) : $author$project$UI$Types$TracksMsg(
				$author$project$UI$Tracks$Types$GroupBy($author$project$Tracks$FirstAlphaCharacter))
		});
};
var $author$project$UI$Tracks$ContextMenu$groupByProcessingDate = function (isActive) {
	return $author$project$ContextMenu$Item(
		{
			active: isActive,
			icon: A3($author$project$Conditional$ifThenElse, isActive, $icidasset$elm_material_icons$Material$Icons$Round$clear, $icidasset$elm_material_icons$Material$Icons$Round$library_music),
			label: 'Group by processing date',
			msg: isActive ? $author$project$UI$Types$TracksMsg($author$project$UI$Tracks$Types$DisableGrouping) : $author$project$UI$Types$TracksMsg(
				$author$project$UI$Tracks$Types$GroupBy($author$project$Tracks$AddedOn))
		});
};
var $author$project$UI$Tracks$ContextMenu$groupByTrackYear = function (isActive) {
	return $author$project$ContextMenu$Item(
		{
			active: isActive,
			icon: A3($author$project$Conditional$ifThenElse, isActive, $icidasset$elm_material_icons$Material$Icons$Round$clear, $icidasset$elm_material_icons$Material$Icons$Round$library_music),
			label: 'Group by track year',
			msg: isActive ? $author$project$UI$Types$TracksMsg($author$project$UI$Tracks$Types$DisableGrouping) : $author$project$UI$Types$TracksMsg(
				$author$project$UI$Tracks$Types$GroupBy($author$project$Tracks$TrackYear))
		});
};
var $author$project$UI$Tracks$ContextMenu$viewMenu = F2(
	function (onlyCachedTracks, maybeGrouping) {
		return $author$project$ContextMenu$ContextMenu(
			_List_fromArray(
				[
					$author$project$UI$Tracks$ContextMenu$groupByDirectory(
					_Utils_eq(
						maybeGrouping,
						$elm$core$Maybe$Just($author$project$Tracks$Directory))),
					$author$project$UI$Tracks$ContextMenu$groupByFirstAlphaCharacter(
					_Utils_eq(
						maybeGrouping,
						$elm$core$Maybe$Just($author$project$Tracks$FirstAlphaCharacter))),
					$author$project$UI$Tracks$ContextMenu$groupByProcessingDate(
					_Utils_eq(
						maybeGrouping,
						$elm$core$Maybe$Just($author$project$Tracks$AddedOn))),
					$author$project$UI$Tracks$ContextMenu$groupByTrackYear(
					_Utils_eq(
						maybeGrouping,
						$elm$core$Maybe$Just($author$project$Tracks$TrackYear))),
					$author$project$ContextMenu$Item(
					{
						active: onlyCachedTracks,
						icon: $icidasset$elm_material_icons$Material$Icons$Round$filter_list,
						label: 'Cached tracks only',
						msg: $author$project$UI$Types$TracksMsg($author$project$UI$Tracks$Types$ToggleCachedOnly)
					})
				]));
	});
var $author$project$UI$Tracks$State$showViewMenu = F3(
	function (maybeGrouping, mouseEvent, model) {
		return A2(
			$author$project$UI$Common$State$showContextMenuWithModel,
			model,
			A3(
				$author$project$UI$Tracks$ContextMenu$viewMenu,
				model.cachedTracksOnly,
				maybeGrouping,
				$author$project$Coordinates$fromTuple(mouseEvent.clientPos)));
	});
var $author$project$UI$Tracks$State$sortBy = F2(
	function (property, model) {
		var sortDir = (!_Utils_eq(model.sortBy, property)) ? $author$project$Tracks$Asc : (_Utils_eq(model.sortDirection, $author$project$Tracks$Asc) ? $author$project$Tracks$Desc : $author$project$Tracks$Asc);
		return A2(
			$Fresheyeball$elm_return$Return$andThen,
			$author$project$UI$User$State$Export$saveEnclosedUserData,
			A2(
				$author$project$UI$Tracks$State$reviseCollection,
				$author$project$Tracks$Collection$arrange,
				_Utils_update(
					model,
					{sortBy: property, sortDirection: sortDir})));
	});
var $author$project$UI$Tracks$State$storeInCache = F2(
	function (tracks, model) {
		var trackIds = A2(
			$elm$core$List$map,
			function ($) {
				return $.id;
			},
			tracks);
		var notification = function () {
			if (tracks.b && (!tracks.b.b)) {
				var t = tracks.a;
				return $author$project$Notifications$casual('__' + (t.tags.title + '__ will be stored in the cache'));
			} else {
				var list = tracks;
				return $author$project$Notifications$casual(
					function (s) {
						return '__' + (s + ' tracks__ will be stored in the cache');
					}(
						$elm$core$String$fromInt(
							$elm$core$List$length(list))));
			}
		}();
		return A2(
			$Fresheyeball$elm_return$Return$andThen,
			$author$project$UI$Common$State$showNotification(notification),
			A2(
				$Fresheyeball$elm_return$Return$return,
				_Utils_update(
					model,
					{
						cachingTracksInProgress: _Utils_ap(model.cachingTracksInProgress, trackIds)
					}),
				$author$project$UI$Ports$toBrain(
					A2(
						$author$project$Alien$broadcast,
						$author$project$Alien$StoreTracksInCache,
						A2(
							$elm$json$Json$Encode$list,
							function (track) {
								return $elm$json$Json$Encode$object(
									_List_fromArray(
										[
											_Utils_Tuple2(
											'trackId',
											$elm$json$Json$Encode$string(track.id)),
											_Utils_Tuple2(
											'url',
											$elm$json$Json$Encode$string(
												A3($author$project$Queue$makeTrackUrl, model.currentTime, model.sources, track)))
										]));
							},
							tracks)))));
	});
var $author$project$UI$Tracks$State$failedToStoreInCache = F2(
	function (trackIds, m) {
		return A2(
			$author$project$UI$Common$State$showNotification,
			$author$project$Notifications$error('Failed to store track in cache'),
			_Utils_update(
				m,
				{
					cachingTracksInProgress: A2($author$project$List$Ext$without, trackIds, m.cachingTracksInProgress)
				}));
	});
var $author$project$ContextMenu$anyItem = F2(
	function (fn, _v0) {
		var items = _v0.a;
		return A2(
			$elm$core$List$any,
			function (item) {
				if (item.$ === 'Item') {
					var props = item.a;
					return fn(props);
				} else {
					return false;
				}
			},
			items);
	});
var $author$project$ContextMenu$coordinates = function (_v0) {
	var c = _v0.b;
	return c;
};
var $author$project$UI$Tracks$State$finishedStoringInCache = F2(
	function (trackIds, model) {
		return A2(
			$Fresheyeball$elm_return$Return$andThen,
			$author$project$UI$User$State$Export$saveEnclosedUserData,
			A2(
				$Fresheyeball$elm_return$Return$andThen,
				$author$project$UI$Tracks$State$harvest,
				function (m) {
					var _v0 = m.contextMenu;
					if (_v0.$ === 'Just') {
						var contextMenu = _v0.a;
						var isTrackContextMenu = A2(
							$author$project$ContextMenu$anyItem,
							A2(
								$elm$core$Basics$composeR,
								function ($) {
									return $.label;
								},
								$elm$core$Basics$eq('Downloading ...')),
							contextMenu);
						var coordinates = $author$project$ContextMenu$coordinates(contextMenu);
						return isTrackContextMenu ? A4(
							$author$project$UI$Tracks$State$showTracksMenu,
							$elm$core$Maybe$Nothing,
							{alt: false},
							coordinates,
							m) : $Fresheyeball$elm_return$Return$singleton(m);
					} else {
						return $Fresheyeball$elm_return$Return$singleton(m);
					}
				}(
					_Utils_update(
						model,
						{
							cachedTracks: _Utils_ap(model.cachedTracks, trackIds),
							cachingTracksInProgress: A2($author$project$List$Ext$without, trackIds, model.cachingTracksInProgress)
						}))));
	});
var $author$project$UI$Tracks$State$storedInCache = F2(
	function (json, maybeError) {
		var _v0 = _Utils_Tuple2(
			maybeError,
			A2(
				$elm$json$Json$Decode$decodeValue,
				$elm$json$Json$Decode$list($elm$json$Json$Decode$string),
				json));
		if (_v0.a.$ === 'Nothing') {
			if (_v0.b.$ === 'Ok') {
				var _v1 = _v0.a;
				var list = _v0.b.a;
				return $author$project$UI$Tracks$State$finishedStoringInCache(list);
			} else {
				var _v2 = _v0.a;
				var err = _v0.b.a;
				return $author$project$UI$Common$State$showNotification(
					$author$project$Notifications$error(
						$elm$json$Json$Decode$errorToString(err)));
			}
		} else {
			if (_v0.b.$ === 'Ok') {
				var trackIds = _v0.b.a;
				return $author$project$UI$Tracks$State$failedToStoreInCache(trackIds);
			} else {
				var err = _v0.a.a;
				return $author$project$UI$Common$State$showNotification(
					$author$project$Notifications$error(err));
			}
		}
	});
var $author$project$UI$Tracks$State$syncTags = function (tracks) {
	return $author$project$Return$Ext$communicate(
		$author$project$UI$Ports$toBrain(
			A2(
				$author$project$Alien$broadcast,
				$author$project$Alien$SyncTrackTags,
				A2(
					$elm$json$Json$Encode$list,
					function (track) {
						return $elm$json$Json$Encode$object(
							_List_fromArray(
								[
									_Utils_Tuple2(
									'path',
									$elm$json$Json$Encode$string(track.path)),
									_Utils_Tuple2(
									'sourceId',
									$elm$json$Json$Encode$string(track.sourceId)),
									_Utils_Tuple2(
									'trackId',
									$elm$json$Json$Encode$string(track.id))
								]));
					},
					tracks))));
};
var $author$project$UI$Tracks$State$toggleCachedOnly = function (model) {
	return A2(
		$Fresheyeball$elm_return$Return$andThen,
		$author$project$UI$Common$State$forceTracksRerender,
		A2(
			$Fresheyeball$elm_return$Return$andThen,
			$author$project$UI$User$State$Export$saveEnclosedUserData,
			A2(
				$author$project$UI$Tracks$State$reviseCollection,
				$author$project$Tracks$Collection$harvest,
				_Utils_update(
					model,
					{cachedTracksOnly: !model.cachedTracksOnly}))));
};
var $author$project$UI$Tracks$State$toggleCoverSelectionReducesPool = function (model) {
	return A2(
		$Fresheyeball$elm_return$Return$andThen,
		$author$project$UI$User$State$Export$saveSettings,
		$author$project$UI$Queue$State$reset(
			_Utils_update(
				model,
				{coverSelectionReducesPool: !model.coverSelectionReducesPool})));
};
var $author$project$Tracks$Favourites$toggleInFavouritesList = F2(
	function (_v0, favourites) {
		var i = _v0.a;
		var t = _v0.b;
		var favourite = {artist: t.tags.artist, title: t.tags.title};
		return i.isFavourite ? A2(
			$elm_community$list_extra$List$Extra$filterNot,
			$author$project$Tracks$Favourites$match(favourite),
			favourites) : A2(
			$elm$core$List$append,
			favourites,
			_List_fromArray(
				[favourite]));
	});
var $author$project$Tracks$Favourites$toggleInTracksList = function (track) {
	var ltitle = $author$project$Tracks$Favourites$lowercaseTitle(track);
	var lartist = $author$project$Tracks$Favourites$lowercaseArtist(track);
	return $elm$core$List$map(
		function (_v0) {
			var i = _v0.a;
			var t = _v0.b;
			return (_Utils_eq(
				$author$project$Tracks$Favourites$lowercaseArtist(t),
				lartist) && _Utils_eq(
				$author$project$Tracks$Favourites$lowercaseTitle(t),
				ltitle)) ? _Utils_Tuple2(
				_Utils_update(
					i,
					{isFavourite: !i.isFavourite}),
				t) : _Utils_Tuple2(i, t);
		});
};
var $author$project$UI$Tracks$State$toggleFavourite = F2(
	function (index, model) {
		var _v0 = A2($elm_community$list_extra$List$Extra$getAt, index, model.tracks.harvested);
		if (_v0.$ === 'Just') {
			var _v1 = _v0.a;
			var i = _v1.a;
			var t = _v1.b;
			var selectedCover = A2(
				$elm$core$Maybe$map,
				function (cover) {
					return function (a) {
						return _Utils_update(
							cover,
							{tracks: a});
					}(
						A2($author$project$Tracks$Favourites$toggleInTracksList, t, cover.tracks));
				},
				model.selectedCover);
			var newFavourites = A2(
				$author$project$Tracks$Favourites$toggleInFavouritesList,
				_Utils_Tuple2(i, t),
				model.favourites);
			var effect = function (collection) {
				return (model.favouritesOnly ? $author$project$Tracks$Collection$harvest : $elm$core$Basics$identity)(
					A2(
						$author$project$Tracks$Collection$map,
						$author$project$Tracks$Favourites$toggleInTracksList(t),
						collection));
			};
			return (_Utils_eq(model.scene, $author$project$Tracks$Covers) ? A2(
				$elm$core$Basics$composeR,
				$Fresheyeball$elm_return$Return$andThen($author$project$UI$Tracks$State$generateCovers),
				$Fresheyeball$elm_return$Return$andThen($author$project$UI$Tracks$State$harvestCovers)) : $elm$core$Basics$identity)(
				A2(
					$Fresheyeball$elm_return$Return$andThen,
					$author$project$UI$User$State$Export$saveFavourites,
					A2(
						$author$project$UI$Tracks$State$reviseCollection,
						effect,
						_Utils_update(
							model,
							{favourites: newFavourites, selectedCover: selectedCover}))));
		} else {
			return $Fresheyeball$elm_return$Return$singleton(model);
		}
	});
var $author$project$UI$Tracks$State$toggleFavouritesOnly = function (model) {
	return A2(
		$Fresheyeball$elm_return$Return$andThen,
		$author$project$UI$User$State$Export$saveEnclosedUserData,
		A2(
			$author$project$UI$Tracks$State$reviseCollection,
			$author$project$Tracks$Collection$harvest,
			_Utils_update(
				model,
				{favouritesOnly: !model.favouritesOnly})));
};
var $author$project$UI$Tracks$State$toggleHideDuplicates = function (model) {
	return A2(
		$Fresheyeball$elm_return$Return$andThen,
		$author$project$UI$User$State$Export$saveSettings,
		A2(
			$author$project$UI$Tracks$State$reviseCollection,
			$author$project$Tracks$Collection$arrange,
			_Utils_update(
				model,
				{hideDuplicates: !model.hideDuplicates})));
};
var $author$project$UI$Tracks$State$update = function (msg) {
	switch (msg.$) {
		case 'Download':
			var a = msg.a;
			var b = msg.b;
			return A2($author$project$UI$Tracks$State$download, a, b);
		case 'DownloadFinished':
			return $author$project$UI$Tracks$State$downloadFinished;
		case 'Harvest':
			return $author$project$UI$Tracks$State$harvest;
		case 'MarkAsSelected':
			var a = msg.a;
			var b = msg.b;
			return A2($author$project$UI$Tracks$State$markAsSelected, a, b);
		case 'ScrollToNowPlaying':
			return $author$project$UI$Tracks$State$scrollToNowPlaying;
		case 'SyncTags':
			var a = msg.a;
			return $author$project$UI$Tracks$State$syncTags(a);
		case 'ToggleCachedOnly':
			return $author$project$UI$Tracks$State$toggleCachedOnly;
		case 'ToggleCoverSelectionReducesPool':
			return $author$project$UI$Tracks$State$toggleCoverSelectionReducesPool;
		case 'ToggleFavouritesOnly':
			return $author$project$UI$Tracks$State$toggleFavouritesOnly;
		case 'ToggleHideDuplicates':
			return $author$project$UI$Tracks$State$toggleHideDuplicates;
		case 'ClearCache':
			return $author$project$UI$Tracks$State$clearCache;
		case 'RemoveFromCache':
			var a = msg.a;
			return $author$project$UI$Tracks$State$removeFromCache(a);
		case 'StoreInCache':
			var a = msg.a;
			return $author$project$UI$Tracks$State$storeInCache(a);
		case 'StoredInCache':
			var a = msg.a;
			var b = msg.b;
			return A2($author$project$UI$Tracks$State$storedInCache, a, b);
		case 'GotCachedCover':
			var a = msg.a;
			return $author$project$UI$Tracks$State$gotCachedCover(a);
		case 'InsertCoverCache':
			var a = msg.a;
			return $author$project$UI$Tracks$State$insertCoverCache(a);
		case 'Add':
			var a = msg.a;
			return $author$project$UI$Tracks$State$add(a);
		case 'AddFavourites':
			var a = msg.a;
			return $author$project$UI$Tracks$State$addFavourites(a);
		case 'Reload':
			var a = msg.a;
			return $author$project$UI$Tracks$State$reload(a);
		case 'RemoveByPaths':
			var a = msg.a;
			return $author$project$UI$Tracks$State$removeByPaths(a);
		case 'RemoveBySourceId':
			var a = msg.a;
			return $author$project$UI$Tracks$State$removeBySourceId(a);
		case 'RemoveFavourites':
			var a = msg.a;
			return $author$project$UI$Tracks$State$removeFavourites(a);
		case 'SortBy':
			var a = msg.a;
			return $author$project$UI$Tracks$State$sortBy(a);
		case 'ToggleFavourite':
			var a = msg.a;
			return $author$project$UI$Tracks$State$toggleFavourite(a);
		case 'DisableGrouping':
			return $author$project$UI$Tracks$State$disableGrouping;
		case 'GroupBy':
			var a = msg.a;
			return $author$project$UI$Tracks$State$groupBy(a);
		case 'ShowCoverMenu':
			var a = msg.a;
			var b = msg.b;
			return A2($author$project$UI$Tracks$State$showCoverMenu, a, b);
		case 'ShowCoverMenuWithSmallDelay':
			var a = msg.a;
			var b = msg.b;
			return A2($author$project$UI$Tracks$State$showCoverMenuWithDelay, a, b);
		case 'ShowTracksMenu':
			var a = msg.a;
			var b = msg.b;
			var c = msg.c;
			return A3($author$project$UI$Tracks$State$showTracksMenu, a, b, c);
		case 'ShowTracksMenuWithSmallDelay':
			var a = msg.a;
			var b = msg.b;
			var c = msg.c;
			return A3($author$project$UI$Tracks$State$showTracksMenuWithDelay, a, b, c);
		case 'ShowViewMenu':
			var a = msg.a;
			var b = msg.b;
			return A2($author$project$UI$Tracks$State$showViewMenu, a, b);
		case 'ChangeScene':
			var a = msg.a;
			return $author$project$UI$Tracks$State$changeScene(a);
		case 'DeselectCover':
			return $author$project$UI$Tracks$State$deselectCover;
		case 'InfiniteListMsg':
			var a = msg.a;
			return $author$project$UI$Tracks$State$infiniteListMsg(a);
		case 'SelectCover':
			var a = msg.a;
			return $author$project$UI$Tracks$State$selectCover(a);
		case 'ClearSearch':
			return $author$project$UI$Tracks$State$clearSearch;
		case 'Search':
			return $author$project$UI$Tracks$State$search;
		case 'SetSearchResults':
			var a = msg.a;
			return $author$project$UI$Tracks$State$setSearchResults(a);
		default:
			var a = msg.a;
			return $author$project$UI$Tracks$State$setSearchTerm(a);
	}
};
var $author$project$UI$Routing$State$urlChanged = F2(
	function (url, model) {
		var rewrittenUrl = $author$project$UI$Page$rewriteUrl(
			_Utils_update(
				url,
				{query: $elm$core$Maybe$Nothing}));
		var _v0 = _Utils_Tuple2(
			url.query,
			$author$project$UI$Page$fromUrl(rewrittenUrl));
		_v0$2:
		while (true) {
			if (_v0.a.$ === 'Nothing') {
				if (_v0.b.$ === 'Just') {
					var _v1 = _v0.a;
					var page = _v0.b.a;
					return A2(
						$author$project$UI$Routing$State$transition,
						page,
						_Utils_update(
							model,
							{page: page, url: url}));
				} else {
					break _v0$2;
				}
			} else {
				if (_v0.b.$ === 'Just') {
					var page = _v0.b.a;
					return A2(
						$Fresheyeball$elm_return$Return$return,
						model,
						A3($author$project$UI$Routing$State$resetUrl, model.navKey, url, page));
				} else {
					break _v0$2;
				}
			}
		}
		return A2(
			$Fresheyeball$elm_return$Return$return,
			model,
			A3($author$project$UI$Routing$State$resetUrl, model.navKey, url, $author$project$UI$Page$Index));
	});
var $author$project$UI$update = function (msg) {
	switch (msg.$) {
		case 'Bypass':
			return $Fresheyeball$elm_return$Return$singleton;
		case 'AssignAlfred':
			var a = msg.a;
			return $author$project$UI$Alfred$State$assign(a);
		case 'GotAlfredInput':
			var a = msg.a;
			return $author$project$UI$Alfred$State$gotInput(a);
		case 'SelectAlfredItem':
			var a = msg.a;
			return $author$project$UI$Alfred$State$runAction(a);
		case 'NoteProgress':
			var a = msg.a;
			return $author$project$UI$Audio$State$noteProgress(a);
		case 'Pause':
			return $author$project$UI$Audio$State$pause;
		case 'Play':
			return $author$project$UI$Audio$State$play;
		case 'Seek':
			var a = msg.a;
			return $author$project$UI$Audio$State$seek(a);
		case 'SetAudioDuration':
			var a = msg.a;
			return $author$project$UI$Audio$State$setDuration(a);
		case 'SetAudioHasStalled':
			var a = msg.a;
			return $author$project$UI$Audio$State$setHasStalled(a);
		case 'SetAudioIsLoading':
			var a = msg.a;
			return $author$project$UI$Audio$State$setIsLoading(a);
		case 'SetAudioIsPlaying':
			var a = msg.a;
			return $author$project$UI$Audio$State$setIsPlaying(a);
		case 'SetAudioPosition':
			var a = msg.a;
			return $author$project$UI$Audio$State$setPosition(a);
		case 'Stop':
			return $author$project$UI$Audio$State$stop;
		case 'TogglePlay':
			return $author$project$UI$Audio$State$playPause;
		case 'ToggleRememberProgress':
			return $author$project$UI$Audio$State$toggleRememberProgress;
		case 'ExtractedBackdropColor':
			var a = msg.a;
			return $author$project$UI$Backdrop$extractedBackdropColor(a);
		case 'ChooseBackdrop':
			var a = msg.a;
			return $author$project$UI$Backdrop$chooseBackdrop(a);
		case 'LoadBackdrop':
			var a = msg.a;
			return $author$project$UI$Backdrop$loadBackdrop(a);
		case 'AdjustVolume':
			var a = msg.a;
			return $author$project$UI$Equalizer$State$adjustVolume(a);
		case 'ToggleVolumeSlider':
			var a = msg.a;
			return $author$project$UI$Equalizer$State$toggleVolumeSlider(a);
		case 'Blur':
			return $author$project$UI$Interface$State$blur;
		case 'ContextMenuConfirmation':
			var a = msg.a;
			var b = msg.b;
			return A2($author$project$UI$Interface$State$contextMenuConfirmation, a, b);
		case 'CopyToClipboard':
			var a = msg.a;
			return $author$project$UI$Interface$State$copyToClipboard(a);
		case 'DismissNotification':
			var a = msg.a;
			return $author$project$UI$Common$State$dismissNotification(a);
		case 'DnD':
			var a = msg.a;
			return $author$project$UI$Interface$State$dnd(a);
		case 'FocusedOnInput':
			return $author$project$UI$Interface$State$focusedOnInput;
		case 'HideOverlay':
			return $author$project$UI$Interface$State$hideOverlay;
		case 'LostWindowFocus':
			return $author$project$UI$Interface$State$lostWindowFocus;
		case 'MsgViaContextMenu':
			var a = msg.a;
			return $author$project$UI$Interface$State$msgViaContextMenu(a);
		case 'PreferredColorSchemaChanged':
			var a = msg.a;
			return $author$project$UI$Interface$State$preferredColorSchemaChanged(a);
		case 'RemoveNotification':
			var a = msg.a;
			return $author$project$UI$Interface$State$removeNotification(a);
		case 'RemoveQueueSelection':
			return $author$project$UI$Interface$State$removeQueueSelection;
		case 'RemoveTrackSelection':
			return $author$project$UI$Interface$State$removeTrackSelection;
		case 'ResizeDebounce':
			var a = msg.a;
			return A2($author$project$UI$Interface$State$resizeDebounce, $author$project$UI$update, a);
		case 'ResizedWindow':
			var a = msg.a;
			return $author$project$UI$Interface$State$resizedWindow(a);
		case 'SearchDebounce':
			var a = msg.a;
			return A2($author$project$UI$Interface$State$searchDebounce, $author$project$UI$update, a);
		case 'SetIsTouchDevice':
			var a = msg.a;
			return $author$project$UI$Interface$State$setIsTouchDevice(a);
		case 'ShowNotification':
			var a = msg.a;
			return $author$project$UI$Common$State$showNotification(a);
		case 'StoppedDragging':
			return $author$project$UI$Interface$State$stoppedDragging;
		case 'ToggleLoadingScreen':
			var a = msg.a;
			return $author$project$UI$Common$State$toggleLoadingScreen(a);
		case 'ActivatePlaylist':
			var a = msg.a;
			return $author$project$UI$Playlists$State$activate(a);
		case 'AddTracksToPlaylist':
			var a = msg.a;
			return $author$project$UI$Playlists$State$addTracksToPlaylist(a);
		case 'AssistWithAddingTracksToPlaylist':
			var a = msg.a;
			return $author$project$UI$Playlists$State$assistWithAddingTracksToPlaylist(a);
		case 'AssistWithSelectingPlaylist':
			return $author$project$UI$Playlists$State$assistWithSelectingPlaylist;
		case 'CreatePlaylist':
			return $author$project$UI$Playlists$State$create;
		case 'DeactivatePlaylist':
			return $author$project$UI$Playlists$State$deactivate;
		case 'DeletePlaylist':
			var a = msg.a;
			return $author$project$UI$Playlists$State$delete(a);
		case 'DeselectPlaylist':
			return $author$project$UI$Playlists$State$deselect;
		case 'ModifyPlaylist':
			return $author$project$UI$Playlists$State$modify;
		case 'MoveTrackInSelectedPlaylist':
			var a = msg.a;
			return $author$project$UI$Playlists$State$moveTrackInSelected(a);
		case 'RemoveTracksFromPlaylist':
			var a = msg.a;
			var b = msg.b;
			return A2($author$project$UI$Playlists$State$removeTracks, a, b);
		case 'SelectPlaylist':
			var a = msg.a;
			return $author$project$UI$Playlists$State$select(a);
		case 'SetPlaylistCreationContext':
			var a = msg.a;
			return $author$project$UI$Playlists$State$setCreationContext(a);
		case 'SetPlaylistModificationContext':
			var a = msg.a;
			var b = msg.b;
			return A2($author$project$UI$Playlists$State$setModificationContext, a, b);
		case 'ShowPlaylistListMenu':
			var a = msg.a;
			var b = msg.b;
			return A2($author$project$UI$Playlists$State$showListMenu, a, b);
		case 'TogglePlaylistVisibility':
			var a = msg.a;
			return $author$project$UI$Playlists$State$toggleVisibility(a);
		case 'ChangeUrlUsingPage':
			var a = msg.a;
			return $author$project$UI$Common$State$changeUrlUsingPage(a);
		case 'LinkClicked':
			var a = msg.a;
			return $author$project$UI$Routing$State$linkClicked(a);
		case 'OpenUrlOnNewPage':
			var a = msg.a;
			return $author$project$UI$Routing$State$openUrlOnNewPage(a);
		case 'PageChanged':
			var a = msg.a;
			return $author$project$UI$Routing$State$transition(a);
		case 'UrlChanged':
			var a = msg.a;
			return $author$project$UI$Routing$State$urlChanged(a);
		case 'ConnectLastFm':
			return $author$project$UI$Services$State$connectLastFm;
		case 'DisconnectLastFm':
			return $author$project$UI$Services$State$disconnectLastFm;
		case 'GotLastFmSession':
			var a = msg.a;
			return $author$project$UI$Services$State$gotLastFmSession(a);
		case 'Scrobble':
			var a = msg.a;
			return $author$project$UI$Services$State$scrobble(a);
		case 'Export':
			return $author$project$UI$User$State$Export$export;
		case 'ImportFile':
			var a = msg.a;
			return $author$project$UI$User$State$Import$importFile(a);
		case 'ImportJson':
			var a = msg.a;
			return $author$project$UI$User$State$Import$importJson(a);
		case 'InsertDemo':
			return $author$project$UI$User$State$Import$insertDemo;
		case 'LoadEnclosedUserData':
			var a = msg.a;
			return $author$project$UI$User$State$Import$loadEnclosedUserData(a);
		case 'LoadHypaethralUserData':
			var a = msg.a;
			return $author$project$UI$User$State$Import$loadHypaethralUserData(a);
		case 'RequestImport':
			return $author$project$UI$User$State$Import$requestImport;
		case 'SaveEnclosedUserData':
			return $author$project$UI$User$State$Export$saveEnclosedUserData;
		case 'KeyboardMsg':
			var a = msg.a;
			return $author$project$UI$Adjunct$keyboardInput(a);
		case 'SyncingMsg':
			var a = msg.a;
			return $author$project$UI$Syncing$State$update(a);
		case 'QueueMsg':
			var a = msg.a;
			return $author$project$UI$Queue$State$update(a);
		case 'SourcesMsg':
			var a = msg.a;
			return $author$project$UI$Sources$State$update(a);
		case 'TracksMsg':
			var a = msg.a;
			return $author$project$UI$Tracks$State$update(a);
		case 'InstalledServiceWorker':
			return $author$project$UI$Other$State$installedServiceWorker;
		case 'InstallingServiceWorker':
			return $author$project$UI$Other$State$installingServiceWorker;
		case 'RedirectToBrain':
			var a = msg.a;
			return $author$project$UI$Other$State$redirectToBrain(a);
		case 'ReloadApp':
			return $author$project$UI$Other$State$reloadApp;
		case 'SetCurrentTime':
			var a = msg.a;
			return $author$project$UI$Other$State$setCurrentTime(a);
		case 'SetCurrentTimeZone':
			var a = msg.a;
			return $author$project$UI$Other$State$setCurrentTimeZone(a);
		default:
			var a = msg.a;
			return $author$project$UI$Other$State$setIsOnline(a);
	}
};
var $author$project$UI$Types$HideOverlay = {$: 'HideOverlay'};
var $author$project$UI$Types$RemoveQueueSelection = {$: 'RemoveQueueSelection'};
var $author$project$UI$Types$RemoveTrackSelection = {$: 'RemoveTrackSelection'};
var $author$project$UI$Types$StoppedDragging = {$: 'StoppedDragging'};
var $author$project$UI$Types$ToggleVolumeSlider = function (a) {
	return {$: 'ToggleVolumeSlider', a: a};
};
var $author$project$UI$Types$Blur = {$: 'Blur'};
var $author$project$UI$Types$FocusedOnInput = {$: 'FocusedOnInput'};
var $author$project$UI$View$inputFocusDecoder = A2(
	$elm$json$Json$Decode$andThen,
	function (targetTagName) {
		switch (targetTagName) {
			case 'INPUT':
				return $elm$json$Json$Decode$succeed($author$project$UI$Types$FocusedOnInput);
			case 'TEXTAREA':
				return $elm$json$Json$Decode$succeed($author$project$UI$Types$FocusedOnInput);
			default:
				return $elm$json$Json$Decode$fail('NOT_INPUT');
		}
	},
	A2(
		$elm$json$Json$Decode$at,
		_List_fromArray(
			['target', 'tagName']),
		$elm$json$Json$Decode$string));
var $elm$virtual_dom$VirtualDom$Normal = function (a) {
	return {$: 'Normal', a: a};
};
var $elm$virtual_dom$VirtualDom$on = _VirtualDom_on;
var $elm$html$Html$Events$on = F2(
	function (event, decoder) {
		return A2(
			$elm$virtual_dom$VirtualDom$on,
			event,
			$elm$virtual_dom$VirtualDom$Normal(decoder));
	});
var $elm$virtual_dom$VirtualDom$style = _VirtualDom_style;
var $elm$html$Html$Attributes$style = $elm$virtual_dom$VirtualDom$style;
var $author$project$UI$View$content = F2(
	function (_v0, nodes) {
		var justifyCenter = _v0.justifyCenter;
		var scrolling = _v0.scrolling;
		return A3(
			$author$project$Chunky$brick,
			_List_fromArray(
				[
					A2(
					$elm$html$Html$Events$on,
					'focusout',
					$elm$json$Json$Decode$succeed($author$project$UI$Types$Blur)),
					A2($elm$html$Html$Events$on, 'focusin', $author$project$UI$View$inputFocusDecoder)
				]),
			_List_fromArray(
				[
					'overflow-x-hidden',
					'relative',
					'screen-height',
					'scrolling-touch',
					'w-screen',
					'z-10',
					A3($author$project$Conditional$ifThenElse, scrolling, 'overflow-y-auto', 'overflow-y-hidden')
				]),
			_List_fromArray(
				[
					A3(
					$author$project$Chunky$brick,
					_List_fromArray(
						[
							A2($elm$html$Html$Attributes$style, 'min-width', '280px')
						]),
					_List_fromArray(
						[
							'flex',
							'flex-col',
							'items-center',
							'h-full',
							'px-3',
							'md:px-8',
							'lg:px-16',
							A3($author$project$Conditional$ifThenElse, justifyCenter, 'justify-center', 'justify-start')
						]),
					nodes)
				]));
	});
var $author$project$UI$Syncing$Common$extractMethod = function (state) {
	switch (state.$) {
		case 'Synced':
			var method = state.a;
			return $elm$core$Maybe$Just(method);
		case 'Syncing':
			var method = state.a.method;
			return $elm$core$Maybe$Just(method);
		case 'InputScreen':
			var method = state.a;
			return $elm$core$Maybe$Just(method);
		case 'NewEncryptionKeyScreen':
			var method = state.a;
			return $elm$core$Maybe$Just(method);
		case 'UpdateEncryptionKeyScreen':
			var method = state.a;
			return $elm$core$Maybe$Just(method);
		default:
			return $elm$core$Maybe$Nothing;
	}
};
var $author$project$UI$Page$sameBase = F2(
	function (a, b) {
		var _v0 = _Utils_Tuple2(a, b);
		_v0$6:
		while (true) {
			switch (_v0.a.$) {
				case 'Playlists':
					if (_v0.b.$ === 'Playlists') {
						return true;
					} else {
						break _v0$6;
					}
				case 'Queue':
					if (_v0.b.$ === 'Queue') {
						return true;
					} else {
						break _v0$6;
					}
				case 'Settings':
					if (_v0.b.$ === 'Settings') {
						return true;
					} else {
						break _v0$6;
					}
				case 'Sources':
					if (_v0.b.$ === 'Sources') {
						return true;
					} else {
						break _v0$6;
					}
				default:
					switch (_v0.b.$) {
						case 'Playlists':
							var _v1 = _v0.a;
							return true;
						case 'Queue':
							var _v2 = _v0.a;
							return true;
						default:
							break _v0$6;
					}
			}
		}
		return _Utils_eq(a, b);
	});
var $author$project$UI$Navigation$globalItem = F4(
	function (activePage, totalItems, idx, _v0) {
		var page = _v0.a;
		var label = _v0.b;
		var isLastItem = _Utils_eq(idx + 1, totalItems);
		var isActivePage = A2($author$project$UI$Page$sameBase, page, activePage);
		return A2(
			$author$project$Chunky$chunk,
			_List_fromArray(
				[
					'inline-block',
					A3($author$project$Conditional$ifThenElse, isLastItem, 'mr-0', 'mr-1')
				]),
			_List_fromArray(
				[
					A4(
					$author$project$Chunky$slab,
					$elm$html$Html$a,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$href(
							$author$project$UI$Page$toString(page))
						]),
					_List_fromArray(
						[
							'inline-block',
							'leading-normal',
							'no-underline',
							'cursor-pointer',
							'pt-2',
							A3($author$project$Conditional$ifThenElse, isActivePage, 'border-b', 'border-b-0'),
							A3($author$project$Conditional$ifThenElse, isActivePage, 'border-base01-15', 'border-transparent'),
							A3($author$project$Conditional$ifThenElse, isActivePage, 'text-base01', 'text-base01-55'),
							A3($author$project$Conditional$ifThenElse, isLastItem, 'mr-0', 'mr-8'),
							'focus:border-black-50',
							'focus:outline-none',
							'focus:text-black'
						]),
					_List_fromArray(
						[
							$elm$html$Html$text(label)
						]))
				]));
	});
var $author$project$UI$Navigation$global = F3(
	function (items, alfred, activePage) {
		return A3(
			$author$project$Chunky$brick,
			_List_fromArray(
				[
					A2($elm$html$Html$Attributes$style, 'font-size', '11.25px')
				]),
			_List_fromArray(
				[
					'antialiased',
					'font-semibold',
					'mb-16',
					'mt-8',
					'text-xs',
					'tracking-widest',
					'uppercase',
					A3(
					$author$project$Conditional$ifThenElse,
					$elm_community$maybe_extra$Maybe$Extra$isJust(alfred),
					'opacity-0',
					'opacity-100')
				]),
			A2(
				$elm$core$List$indexedMap,
				A2(
					$author$project$UI$Navigation$globalItem,
					activePage,
					$elm$core$List$length(items)),
				items));
	});
var $elm$virtual_dom$VirtualDom$lazy2 = _VirtualDom_lazy2;
var $elm$html$Html$Lazy$lazy2 = $elm$virtual_dom$VirtualDom$lazy2;
var $elm$virtual_dom$VirtualDom$lazy6 = _VirtualDom_lazy6;
var $elm$html$Html$Lazy$lazy6 = $elm$virtual_dom$VirtualDom$lazy6;
var $author$project$User$Layer$methodSupportsPublicData = function (method) {
	switch (method.$) {
		case 'Dropbox':
			return false;
		case 'Fission':
			return true;
		case 'Ipfs':
			return false;
		default:
			return false;
	}
};
var $author$project$Chunky$bricky = F2(
	function (a, b) {
		return A2(
			$elm$core$Basics$composeR,
			$elm$core$List$singleton,
			A2($author$project$Chunky$brick, a, b));
	});
var $author$project$UI$View$vessel = A2(
	$elm$core$Basics$composeR,
	A2(
		$author$project$Chunky$brick,
		_List_fromArray(
			[
				A2($elm$html$Html$Attributes$style, '-webkit-mask-image', '-webkit-radial-gradient(white, black)')
			]),
		_List_fromArray(
			['bg-white', 'flex', 'flex-col', 'flex-grow', 'overflow-hidden', 'relative', 'rounded', 'dark:bg-darkest-hour'])),
	A2(
		$author$project$Chunky$bricky,
		_List_fromArray(
			[
				A2($elm$html$Html$Attributes$style, 'min-height', '296px')
			]),
		_List_fromArray(
			['flex', 'flex-grow', 'rounded', 'shadow-lg', 'w-full', 'lg:max-w-insulation', 'lg:min-w-3xl'])));
var $author$project$UI$Types$Seek = function (a) {
	return {$: 'Seek', a: a};
};
var $elm$html$Html$Events$onClick = function (msg) {
	return A2(
		$elm$html$Html$Events$on,
		'click',
		$elm$json$Json$Decode$succeed(msg));
};
var $elm$html$Html$Attributes$title = $elm$html$Html$Attributes$stringProperty('title');
var $author$project$UI$Console$button = F4(
	function (t, light, content, msg) {
		return A3(
			$author$project$Chunky$brick,
			_List_fromArray(
				[
					$elm$html$Html$Events$onClick(msg),
					$elm$html$Html$Attributes$title(t)
				]),
			_List_fromArray(
				['cursor-pointer', 'flex', 'flex-col', 'items-center', 'px-1', 'sm:mx-8']),
			_List_fromArray(
				[
					A3(
					$author$project$Chunky$brick,
					_List_fromArray(
						[
							A2($elm$html$Html$Attributes$style, 'height', '4px')
						]),
					_List_Nil,
					_List_fromArray(
						[light])),
					A3(
					$author$project$Chunky$brick,
					_List_fromArray(
						[
							A2($elm$html$Html$Attributes$style, 'height', '25px')
						]),
					_List_fromArray(
						['flex', 'items-center', 'my-2']),
					_List_fromArray(
						[content]))
				]));
	});
var $author$project$UI$Console$clickLocationDecoder = function (message) {
	return A2(
		$elm$json$Json$Decode$map,
		message,
		A3(
			$elm$json$Json$Decode$map2,
			F2(
				function (a, b) {
					return a / b;
				}),
			A2(
				$elm$json$Json$Decode$at,
				_List_fromArray(
					['offsetX']),
				$elm$json$Json$Decode$float),
			A2(
				$elm$json$Json$Decode$at,
				_List_fromArray(
					['currentTarget', 'clientWidth']),
				$elm$json$Json$Decode$float)));
};
var $icidasset$elm_material_icons$Material$Icons$Types$Inherit = {$: 'Inherit'};
var $author$project$UI$Console$icon = F2(
	function (iconFunction, _int) {
		return A2(iconFunction, _int, $icidasset$elm_material_icons$Material$Icons$Types$Inherit);
	});
var $author$project$UI$Console$largeLight = function (isOn) {
	return A3(
		$author$project$Chunky$brick,
		_List_fromArray(
			[
				A2($elm$html$Html$Attributes$style, 'height', '4px'),
				A2($elm$html$Html$Attributes$style, 'left', '-2px'),
				A2($elm$html$Html$Attributes$style, 'width', '17px'),
				A2(
				$elm$html$Html$Attributes$style,
				'background-color',
				A3($author$project$Conditional$ifThenElse, isOn, 'rgb(198, 254, 153)', 'rgba(255, 255, 255, 0.25)'))
			]),
		_List_fromArray(
			['relative', 'rounded-full']),
		_List_Nil);
};
var $author$project$UI$Console$lightPlaceHolder = A2(
	$elm$html$Html$div,
	_List_fromArray(
		[
			A2($elm$html$Html$Attributes$style, 'height', '4px')
		]),
	_List_Nil);
var $author$project$UI$Console$play = A3(
	$author$project$Chunky$brick,
	_List_fromArray(
		[
			A2($elm$html$Html$Attributes$style, 'font-size', '11.25px'),
			A2($elm$html$Html$Attributes$style, 'letter-spacing', '3.75px')
		]),
	_List_fromArray(
		['font-bold', 'font-display', 'relative', 'whitespace-nowrap']),
	_List_fromArray(
		[
			$elm$html$Html$text('PLAY')
		]));
var $author$project$UI$Console$smallLight = function (isOn) {
	return A3(
		$author$project$Chunky$brick,
		_List_fromArray(
			[
				A2($elm$html$Html$Attributes$style, 'height', '4px'),
				A2($elm$html$Html$Attributes$style, 'width', '4px'),
				A2(
				$elm$html$Html$Attributes$style,
				'background-color',
				A3($author$project$Conditional$ifThenElse, isOn, 'rgb(157, 174, 255)', 'rgba(255, 255, 255, 0.25)'))
			]),
		_List_fromArray(
			['rounded-full']),
		_List_Nil);
};
var $author$project$UI$Console$view = F5(
	function (activeQueueItem, repeat, shuffle, _v0, _v1) {
		var stalled = _v0.stalled;
		var loading = _v0.loading;
		var playing = _v0.playing;
		var position = _v1.a;
		var duration = _v1.b;
		return A2(
			$author$project$Chunky$chunk,
			_List_fromArray(
				['antialiased', 'mt-1', 'text-center', 'w-full', 'lg:max-w-insulation']),
			_List_fromArray(
				[
					A2(
					$author$project$Chunky$chunk,
					_List_fromArray(
						['text-sm', 'italic', 'leading-normal', 'py-4', 'text-white']),
					_List_fromArray(
						[
							function () {
							if (stalled) {
								return $elm$html$Html$text('Audio connection got interrupted, trying to reconnect ...');
							} else {
								if (loading) {
									return $elm$html$Html$text('Loading track ...');
								} else {
									var _v2 = A2(
										$elm$core$Maybe$map,
										function ($) {
											return $.identifiedTrack;
										},
										activeQueueItem);
									if (_v2.$ === 'Just') {
										var _v3 = _v2.a;
										var tags = _v3.b.tags;
										return A4(
											$author$project$Chunky$slab,
											$elm$html$Html$span,
											_List_fromArray(
												[
													$elm$html$Html$Events$onClick(
													$author$project$UI$Types$TracksMsg($author$project$UI$Tracks$Types$ScrollToNowPlaying)),
													$elm$html$Html$Attributes$title('Scroll to track')
												]),
											_List_fromArray(
												['cursor-pointer']),
											_List_fromArray(
												[
													$elm$html$Html$text(tags.artist + (' - ' + tags.title))
												]));
									} else {
										return $elm$html$Html$text('Diffuse');
									}
								}
							}
						}()
						])),
					function () {
					var progress = (duration <= 0) ? 0 : A2(
						$elm$core$Basics$max,
						0,
						A2($elm$core$Basics$min, 100, 100 * (position / duration)));
					return A3(
						$author$project$Chunky$brick,
						_List_fromArray(
							[
								A2(
								$elm$html$Html$Events$on,
								'click',
								$author$project$UI$Console$clickLocationDecoder($author$project$UI$Types$Seek))
							]),
						_List_fromArray(
							['cursor-pointer', 'py-1']),
						_List_fromArray(
							[
								A3(
								$author$project$Chunky$brick,
								_List_fromArray(
									[
										A2($elm$html$Html$Attributes$style, 'background-color', 'rgba(255, 255, 255, 0.25)'),
										A2($elm$html$Html$Attributes$style, 'height', '3px')
									]),
								_List_fromArray(
									['rounded-sm', 'select-none']),
								_List_fromArray(
									[
										A3(
										$author$project$Chunky$brick,
										_List_fromArray(
											[
												A2($elm$html$Html$Attributes$style, 'background-color', 'rgba(255, 255, 255, 0.325)'),
												A2($elm$html$Html$Attributes$style, 'height', '3px'),
												A2(
												$elm$html$Html$Attributes$style,
												'width',
												$elm$core$String$fromFloat(progress) + '%')
											]),
										_List_fromArray(
											['progressBarValue', 'rounded-sm']),
										_List_Nil)
									]))
							]));
				}(),
					A2(
					$author$project$Chunky$chunk,
					_List_fromArray(
						['flex', 'justify-between', 'mb-3', 'mt-4', 'select-none', 'text-white-90', 'sm:justify-center']),
					_List_fromArray(
						[
							A4(
							$author$project$UI$Console$button,
							'Toggle repeat',
							$author$project$UI$Console$smallLight(repeat),
							A2($author$project$UI$Console$icon, $icidasset$elm_material_icons$Material$Icons$Round$repeat, 18),
							$author$project$UI$Types$QueueMsg($author$project$UI$Queue$Types$ToggleRepeat)),
							A4(
							$author$project$UI$Console$button,
							'Play previous track',
							$author$project$UI$Console$lightPlaceHolder,
							A2($author$project$UI$Console$icon, $icidasset$elm_material_icons$Material$Icons$Round$fast_rewind, 20),
							$author$project$UI$Types$QueueMsg($author$project$UI$Queue$Types$Rewind)),
							A4(
							$author$project$UI$Console$button,
							'',
							$author$project$UI$Console$largeLight(playing),
							$author$project$UI$Console$play,
							$author$project$UI$Types$TogglePlay),
							A4(
							$author$project$UI$Console$button,
							'Play next track',
							$author$project$UI$Console$lightPlaceHolder,
							A2($author$project$UI$Console$icon, $icidasset$elm_material_icons$Material$Icons$Round$fast_forward, 20),
							$author$project$UI$Types$QueueMsg($author$project$UI$Queue$Types$Shift)),
							A4(
							$author$project$UI$Console$button,
							'Toggle shuffle',
							$author$project$UI$Console$smallLight(shuffle),
							A2($author$project$UI$Console$icon, $icidasset$elm_material_icons$Material$Icons$Round$shuffle, 18),
							$author$project$UI$Types$QueueMsg($author$project$UI$Queue$Types$ToggleShuffle))
						]))
				]));
	});
var $author$project$UI$Navigation$Hidden = {$: 'Hidden'};
var $author$project$UI$Navigation$Icon = function (a) {
	return {$: 'Icon', a: a};
};
var $author$project$UI$Navigation$Label = F2(
	function (a, b) {
		return {$: 'Label', a: a, b: b};
	});
var $author$project$UI$Types$ModifyPlaylist = {$: 'ModifyPlaylist'};
var $author$project$UI$Navigation$NavigateToPage = function (a) {
	return {$: 'NavigateToPage', a: a};
};
var $author$project$UI$Kit$Normal = {$: 'Normal'};
var $author$project$UI$Types$SetPlaylistModificationContext = F2(
	function (a, b) {
		return {$: 'SetPlaylistModificationContext', a: a, b: b};
	});
var $icidasset$elm_material_icons$Material$Icons$Round$arrow_back = A2(
	$icidasset$elm_material_icons$Material$Icons$Internal$icon,
	_List_fromArray(
		[
			$icidasset$elm_material_icons$Material$Icons$Internal$v('0 0 24 24')
		]),
	_List_fromArray(
		[
			A2(
			$icidasset$elm_material_icons$Material$Icons$Internal$p,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$d('M0 0h24v24H0V0z'),
					$icidasset$elm_material_icons$Material$Icons$Internal$f('none')
				]),
			_List_Nil),
			A2(
			$icidasset$elm_material_icons$Material$Icons$Internal$p,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$d('M19 11H7.83l4.88-4.88c.39-.39.39-1.03 0-1.42-.39-.39-1.02-.39-1.41 0l-6.59 6.59c-.39.39-.39 1.02 0 1.41l6.59 6.59c.39.39 1.02.39 1.41 0 .39-.39.39-1.02 0-1.41L7.83 13H19c.55 0 1-.45 1-1s-.45-1-1-1z')
				]),
			_List_Nil)
		]));
var $author$project$UI$Kit$Gray = {$: 'Gray'};
var $elm$html$Html$button = _VirtualDom_node('button');
var $author$project$UI$Kit$buttonWithOptions = F6(
	function (tag, attributes, buttonColor, buttonType, maybeMsg, child) {
		var specificClasses = function () {
			if (buttonType.$ === 'Filled') {
				switch (buttonColor.$) {
					case 'Accent':
						return _List_fromArray(
							['bg-accent-btn', 'border-transparent', 'text-white-90']);
					case 'Blank':
						return _List_fromArray(
							['bg-white', 'border-transparent', 'text-accent-light', 'dark:bg-darkest-hour', 'dark:text-accent-dark']);
					default:
						return _List_fromArray(
							['bg-base04', 'border-transparent', 'text-white', 'dark:bg-base05']);
				}
			} else {
				switch (buttonColor.$) {
					case 'Accent':
						return _List_fromArray(
							['bg-transparent', 'border-accent-btn', 'text-accent-btn']);
					case 'Blank':
						return _List_fromArray(
							['bg-transparent', 'border-white', 'text-white']);
					default:
						return _List_fromArray(
							['bg-transparent', 'border-base04', 'text-base04', 'dark:border-base05', 'dark:text-base05']);
				}
			}
		}();
		var defaultClasses = _List_fromArray(
			['antialiased', 'border-2', 'cursor-pointer', 'font-semibold', 'inline-block', 'leading-relaxed', 'no-underline', 'py-2', 'px-4', 'rounded', 'text-center', 'text-sm', 'fixate:bg-white', 'fixate:border-black', 'fixate:text-black']);
		return A4(
			$author$project$Chunky$slab,
			tag,
			function () {
				if (maybeMsg.$ === 'Just') {
					var msg = maybeMsg.a;
					return _Utils_ap(
						attributes,
						_List_fromArray(
							[
								$elm$html$Html$Events$onClick(msg)
							]));
				} else {
					return attributes;
				}
			}(),
			A2($elm$core$List$append, defaultClasses, specificClasses),
			_List_fromArray(
				[
					function () {
					if (buttonType.$ === 'IconOnly') {
						return A2(
							$author$project$Chunky$inline,
							_List_fromArray(
								['align-middle', 'inline-block', 'leading-none', 'pointer-events-none', 'text-0']),
							_List_fromArray(
								[child]));
					} else {
						return A2(
							$author$project$Chunky$inline,
							_List_fromArray(
								['align-middle', 'inline-block', 'leading-none', 'pointer-events-none']),
							_List_fromArray(
								[child]));
					}
				}()
				]));
	});
var $author$project$UI$Kit$buttonWithColor = F3(
	function (color, buttonType, msg) {
		return A5(
			$author$project$UI$Kit$buttonWithOptions,
			$elm$html$Html$button,
			_List_Nil,
			color,
			buttonType,
			$elm$core$Maybe$Just(msg));
	});
var $author$project$UI$Kit$button = $author$project$UI$Kit$buttonWithColor($author$project$UI$Kit$Gray);
var $author$project$UI$Kit$canisterForm = function (children) {
	return A2(
		$author$project$Chunky$chunk,
		_List_fromArray(
			['mx-1', 'px-4', 'pb-4', 'w-full']),
		children);
};
var $author$project$UI$Kit$logoBackdrop = A2(
	$author$project$Chunky$chunk,
	_List_fromArray(
		['logo-backdrop', 'absolute', 'bg-cover', 'bg-no-repeat', 'h-0', 'left-full', 'opacity-025', 'pt-full', 'top-0', 'z-0', 'dark:opacity-40']),
	_List_Nil);
var $elm$html$Html$map = $elm$virtual_dom$VirtualDom$map;
var $author$project$UI$Kit$centeredContent = function (children) {
	return A2(
		$author$project$Chunky$chunk,
		_List_fromArray(
			['flex', 'flex-grow', 'items-stretch', 'overflow-hidden', 'relative']),
		_List_fromArray(
			[
				A2($elm$html$Html$map, $elm$core$Basics$never, $author$project$UI$Kit$logoBackdrop),
				A2(
				$author$project$Chunky$chunk,
				_List_fromArray(
					['flex', 'flex-col', 'flex-grow', 'items-center', 'justify-center', 'max-w-full', 'relative', 'z-10']),
				children)
			]));
};
var $author$project$Chunky$chunky = function (a) {
	return A2(
		$elm$core$Basics$composeR,
		$elm$core$List$singleton,
		$author$project$Chunky$chunk(a));
};
var $elm$html$Html$form = _VirtualDom_node('form');
var $elm$html$Html$h2 = _VirtualDom_node('h2');
var $author$project$UI$Kit$h2 = function (text) {
	return A4(
		$author$project$Chunky$slab,
		$elm$html$Html$h2,
		_List_Nil,
		_List_fromArray(
			['font-bold', 'font-display', 'leading-tight', 'mb-8', 'mt-4', 'mx-auto', 'text-2xl', 'text-center']),
		_List_fromArray(
			[
				$elm$html$Html$text(text)
			]));
};
var $author$project$Common$backToIndex = 'Back to tracks';
var $elm$html$Html$Attributes$tabindex = function (n) {
	return A2(
		_VirtualDom_attribute,
		'tabIndex',
		$elm$core$String$fromInt(n));
};
var $author$project$UI$Navigation$localItem = F3(
	function (tabindex_, _v0, _v1) {
		var amount = _v0.amount;
		var icon = _v1.a.a;
		var _v2 = _v1.b;
		var labelText = _v2.a;
		var labelType = _v2.b;
		var action = _v1.c;
		return A4(
			$author$project$Chunky$slab,
			function () {
				switch (action.$) {
					case 'NavigateToPage':
						return $elm$html$Html$a;
					case 'OpenLinkInNewPage':
						return $elm$html$Html$a;
					default:
						return $elm$html$Html$button;
				}
			}(),
			_List_fromArray(
				[
					function () {
					switch (action.$) {
						case 'NavigateToPage':
							var page = action.a;
							return $elm$html$Html$Attributes$href(
								$author$project$UI$Page$toString(page));
						case 'OpenLinkInNewPage':
							var link = action.a;
							return $elm$html$Html$Attributes$href(link);
						default:
							var msg = action.a;
							return $elm$html$Html$Events$onClick(msg);
					}
				}(),
					function () {
					if (labelType.$ === 'Hidden') {
						return $elm$html$Html$Attributes$title(labelText);
					} else {
						return $elm$html$Html$Attributes$title('');
					}
				}(),
					function () {
					if (action.$ === 'OpenLinkInNewPage') {
						return $elm$html$Html$Attributes$target('_blank');
					} else {
						return $elm$html$Html$Attributes$target('_self');
					}
				}(),
					$elm$html$Html$Attributes$tabindex(tabindex_)
				]),
			_List_fromArray(
				[
					'bg-transparent',
					'border-gray-300',
					'border-r',
					'cursor-pointer',
					'flex-basis-0',
					'font-semibold',
					'leading-none',
					'no-underline',
					'px-4',
					'py-3',
					'text-base02',
					A3(
					$author$project$Conditional$ifThenElse,
					_Utils_eq(labelText, $author$project$Common$backToIndex) && (_Utils_eq(labelType, $author$project$UI$Navigation$Hidden) && (amount > 1)),
					'flex-shrink-0',
					'flex-grow'),
					A3(
					$author$project$Conditional$ifThenElse,
					_Utils_eq(labelText, $author$project$Common$backToIndex) && (_Utils_eq(labelType, $author$project$UI$Navigation$Hidden) && (amount > 1)),
					'overflow-visible',
					'overflow-hidden'),
					'fixate:text-black',
					'last:border-r-0',
					'sm:overflow-visible',
					A3(
					$author$project$Conditional$ifThenElse,
					_Utils_eq(labelType, $author$project$UI$Navigation$Hidden),
					'sm:flex-shrink-0',
					'sm:flex-grow'),
					A3(
					$author$project$Conditional$ifThenElse,
					_Utils_eq(labelType, $author$project$UI$Navigation$Hidden),
					'sm:flex-grow-0',
					'sm:flex-grow'),
					'dark:border-base01',
					'dark:text-base06',
					'dark:fixate:text-base07'
				]),
			_List_fromArray(
				[
					A2(
					$author$project$Chunky$chunk,
					_List_fromArray(
						['border-b', 'border-t', 'border-transparent', 'flex', 'items-center', 'justify-center', 'mt-px', 'pt-px']),
					_List_fromArray(
						[
							A2(
							$author$project$Chunky$inline,
							_List_fromArray(
								['flex-shrink-0']),
							_List_fromArray(
								[
									A2(icon, 16, $icidasset$elm_material_icons$Material$Icons$Types$Inherit)
								])),
							function () {
							if (labelType.$ === 'Hidden') {
								return $author$project$Chunky$nothing;
							} else {
								return A4(
									$author$project$Chunky$slab,
									$elm$html$Html$span,
									_List_Nil,
									_List_fromArray(
										['hidden', 'leading-tight', 'ml-1', 'transform', 'translate-y-px', 'truncate', 'sm:inline-block']),
									_List_fromArray(
										[
											$elm$html$Html$text(labelText)
										]));
							}
						}()
						]))
				]));
	});
var $author$project$UI$Navigation$localWithTabindex = F2(
	function (tabindex_, items) {
		return A3(
			$author$project$Chunky$brick,
			_List_fromArray(
				[
					A2($elm$html$Html$Attributes$style, 'font-size', '12.5px')
				]),
			_List_fromArray(
				['antialiased', 'border-b', 'border-gray-300', 'dark:border-base01']),
			_List_fromArray(
				[
					A2(
					$author$project$Chunky$chunk,
					_List_fromArray(
						['flex']),
					$elm$core$List$reverse(
						A2(
							$elm$core$List$map,
							A2(
								$author$project$UI$Navigation$localItem,
								tabindex_,
								{
									amount: $elm$core$List$length(items)
								}),
							$elm$core$List$reverse(items))))
				]));
	});
var $author$project$UI$Navigation$local = $author$project$UI$Navigation$localWithTabindex(0);
var $elm$html$Html$Events$alwaysStop = function (x) {
	return _Utils_Tuple2(x, true);
};
var $elm$virtual_dom$VirtualDom$MayStopPropagation = function (a) {
	return {$: 'MayStopPropagation', a: a};
};
var $elm$html$Html$Events$stopPropagationOn = F2(
	function (event, decoder) {
		return A2(
			$elm$virtual_dom$VirtualDom$on,
			event,
			$elm$virtual_dom$VirtualDom$MayStopPropagation(decoder));
	});
var $elm$html$Html$Events$targetValue = A2(
	$elm$json$Json$Decode$at,
	_List_fromArray(
		['target', 'value']),
	$elm$json$Json$Decode$string);
var $elm$html$Html$Events$onInput = function (tagger) {
	return A2(
		$elm$html$Html$Events$stopPropagationOn,
		'input',
		A2(
			$elm$json$Json$Decode$map,
			$elm$html$Html$Events$alwaysStop,
			A2($elm$json$Json$Decode$map, tagger, $elm$html$Html$Events$targetValue)));
};
var $elm$html$Html$Events$alwaysPreventDefault = function (msg) {
	return _Utils_Tuple2(msg, true);
};
var $elm$virtual_dom$VirtualDom$MayPreventDefault = function (a) {
	return {$: 'MayPreventDefault', a: a};
};
var $elm$html$Html$Events$preventDefaultOn = F2(
	function (event, decoder) {
		return A2(
			$elm$virtual_dom$VirtualDom$on,
			event,
			$elm$virtual_dom$VirtualDom$MayPreventDefault(decoder));
	});
var $elm$html$Html$Events$onSubmit = function (msg) {
	return A2(
		$elm$html$Html$Events$preventDefaultOn,
		'submit',
		A2(
			$elm$json$Json$Decode$map,
			$elm$html$Html$Events$alwaysPreventDefault,
			$elm$json$Json$Decode$succeed(msg)));
};
var $elm$html$Html$Attributes$placeholder = $elm$html$Html$Attributes$stringProperty('placeholder');
var $elm$html$Html$input = _VirtualDom_node('input');
var $author$project$UI$Kit$textField = function (attributes) {
	return A4(
		$author$project$Chunky$slab,
		$elm$html$Html$input,
		attributes,
		_List_fromArray(
			['appearance-none', 'border-b', 'border-l-0', 'border-r-0', 'border-t-0', 'border-gray-400', 'bg-transparent', 'block', 'leading-normal', 'mt-1', 'py-2', 'rounded-none', 'text-base01', 'text-sm', 'w-full', 'focus:border-black', 'focus:outline-none', 'placeholder:text-base01', 'placeholder:text-opacity-40', 'dark:border-base02', 'dark:text-gray-600', 'dark:focus:border-base07', 'dark:placeholder:text-gray-600', 'dark:placeholder:text-opacity-30']),
		_List_Nil);
};
var $elm$html$Html$Attributes$value = $elm$html$Html$Attributes$stringProperty('value');
var $author$project$UI$Playlists$View$edit = F2(
	function (editContext, playlist) {
		return _List_fromArray(
			[
				$author$project$UI$Navigation$local(
				_List_fromArray(
					[
						_Utils_Tuple3(
						$author$project$UI$Navigation$Icon($icidasset$elm_material_icons$Material$Icons$Round$arrow_back),
						A2($author$project$UI$Navigation$Label, 'Back to list', $author$project$UI$Navigation$Hidden),
						$author$project$UI$Navigation$NavigateToPage(
							$author$project$UI$Page$Playlists($author$project$UI$Playlists$Page$Index)))
					])),
				A4(
				$author$project$Chunky$slab,
				$elm$html$Html$form,
				_List_fromArray(
					[
						$elm$html$Html$Events$onSubmit($author$project$UI$Types$ModifyPlaylist)
					]),
				_List_fromArray(
					['flex', 'flex-grow', 'text-center']),
				$elm$core$List$singleton(
					$author$project$UI$Kit$centeredContent(
						$elm$core$List$singleton(
							$author$project$UI$Kit$canisterForm(
								_List_fromArray(
									[
										$author$project$UI$Kit$h2('Name your playlist'),
										A2(
										$author$project$Chunky$chunky,
										_List_fromArray(
											['max-w-md', 'mx-auto']),
										$author$project$UI$Kit$textField(
											_List_fromArray(
												[
													$elm$html$Html$Events$onInput(
													$author$project$UI$Types$SetPlaylistModificationContext(playlist.name)),
													$elm$html$Html$Attributes$placeholder('The Classics'),
													function () {
													if (editContext.$ === 'Just') {
														var oldName = editContext.a.oldName;
														var newName = editContext.a.newName;
														return _Utils_eq(playlist.name, oldName) ? $elm$html$Html$Attributes$value(newName) : $elm$html$Html$Attributes$value(playlist.name);
													} else {
														return $elm$html$Html$Attributes$value(playlist.name);
													}
												}()
												]))),
										A2(
										$author$project$Chunky$chunk,
										_List_fromArray(
											['mt-10']),
										_List_fromArray(
											[
												A3(
												$author$project$UI$Kit$button,
												$author$project$UI$Kit$Normal,
												$author$project$UI$Types$Bypass,
												$elm$html$Html$text('Save'))
											]))
									]))))))
			]);
	});
var $author$project$UI$Types$ActivatePlaylist = function (a) {
	return {$: 'ActivatePlaylist', a: a};
};
var $author$project$UI$List$Normal = {$: 'Normal'};
var $author$project$UI$Navigation$Shown = {$: 'Shown'};
var $author$project$UI$Types$TogglePlaylistVisibility = function (a) {
	return {$: 'TogglePlaylistVisibility', a: a};
};
var $author$project$UI$Kit$canister = function (children) {
	return A2(
		$author$project$Chunky$chunk,
		_List_fromArray(
			['mx-1', 'px-4', 'pb-4']),
		children);
};
var $author$project$UI$Kit$inlineIcon = function (icon) {
	return A2(
		$author$project$Chunky$inline,
		_List_fromArray(
			['align-sub', 'inline-block', 'leading-0', 'mr-1', 'text-0']),
		_List_fromArray(
			[
				A2(icon, 14, $icidasset$elm_material_icons$Material$Icons$Types$Inherit)
			]));
};
var $author$project$UI$Playlists$View$category = function (cat) {
	return A2(
		$author$project$Chunky$chunk,
		_List_fromArray(
			['antialiased', 'font-display', 'mb-3', 'mt-10', 'text-base05', 'text-xxs', 'truncate', 'uppercase', 'dark:text-base04']),
		_List_fromArray(
			[
				$author$project$UI$Kit$inlineIcon($icidasset$elm_material_icons$Material$Icons$Round$folder),
				A2(
				$author$project$Chunky$inline,
				_List_fromArray(
					['font-bold', 'ml-2']),
				_List_fromArray(
					[
						$elm$html$Html$text(cat)
					]))
			]));
};
var $elm$html$Html$h1 = _VirtualDom_node('h1');
var $author$project$UI$Kit$h1 = function (text) {
	return A4(
		$author$project$Chunky$slab,
		$elm$html$Html$h1,
		_List_fromArray(
			[
				A2($elm$html$Html$Attributes$style, 'font-size', '13.5px')
			]),
		_List_fromArray(
			['all-small-caps', 'antialiased', 'bg-base06', 'inline-block', 'font-semibold', 'leading-tight', 'm-0', '-top-px', 'overflow-hidden', 'pointer-events-none', 'px-2', 'py-1', 'relative', 'rounded-b', 'uppercase', 'text-sm', 'text-white', 'dark:bg-base01', 'dark:text-base05']),
		_List_fromArray(
			[
				$elm$html$Html$text(text)
			]));
};
var $elm$html$Html$p = _VirtualDom_node('p');
var $author$project$UI$Kit$intro = function (child) {
	return A4(
		$author$project$Chunky$slab,
		$elm$html$Html$p,
		_List_fromArray(
			[
				A2($elm$html$Html$Attributes$style, 'line-height', '1.75')
			]),
		_List_fromArray(
			['mb-6', 'mt-3', 'text-base05', 'text-sm', 'dark:text-base03']),
		_List_fromArray(
			[child]));
};
var $author$project$Chunky$lineBreak = A2($elm$html$Html$br, _List_Nil, _List_Nil);
var $author$project$Chunky$raw = $author$project$Chunky$chunk(_List_Nil);
var $author$project$UI$Playlists$View$intro = $author$project$UI$Kit$intro(
	$author$project$Chunky$raw(
		_List_fromArray(
			[
				$elm$html$Html$text('Playlists are not tied to the sources of its tracks, '),
				$elm$html$Html$text('same goes for favourites.'),
				$author$project$Chunky$lineBreak,
				$elm$html$Html$text('There\'s also directory playlists, which are playlists derived from root directories.')
			])));
var $author$project$UI$Playlists$View$lowercaseName = A2(
	$elm$core$Basics$composeR,
	function ($) {
		return $.name;
	},
	$elm$core$String$toLower);
var $icidasset$elm_material_icons$Material$Icons$Round$more_vert = A2(
	$icidasset$elm_material_icons$Material$Icons$Internal$icon,
	_List_fromArray(
		[
			$icidasset$elm_material_icons$Material$Icons$Internal$v('0 0 24 24')
		]),
	_List_fromArray(
		[
			A2(
			$icidasset$elm_material_icons$Material$Icons$Internal$p,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$d('M0 0h24v24H0V0z'),
					$icidasset$elm_material_icons$Material$Icons$Internal$f('none')
				]),
			_List_Nil),
			A2(
			$icidasset$elm_material_icons$Material$Icons$Internal$p,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$d('M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z')
				]),
			_List_Nil)
		]));
var $icidasset$elm_material_icons$Material$Icons$Round$public = A2(
	$icidasset$elm_material_icons$Material$Icons$Internal$icon,
	_List_fromArray(
		[
			$icidasset$elm_material_icons$Material$Icons$Internal$v('0 0 24 24')
		]),
	_List_fromArray(
		[
			A2(
			$icidasset$elm_material_icons$Material$Icons$Internal$p,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$d('M0 0h24v24H0V0z'),
					$icidasset$elm_material_icons$Material$Icons$Internal$f('none')
				]),
			_List_Nil),
			A2(
			$icidasset$elm_material_icons$Material$Icons$Internal$p,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$d('M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-1 17.93c-3.95-.49-7-3.85-7-7.93 0-.62.08-1.21.21-1.79L9 15v1c0 1.1.9 2 2 2v1.93zm6.9-2.54c-.26-.81-1-1.39-1.9-1.39h-1v-3c0-.55-.45-1-1-1H8v-2h2c.55 0 1-.45 1-1V7h2c1.1 0 2-.9 2-2v-.41c2.93 1.19 5 4.06 5 7.41 0 2.08-.8 3.97-2.1 5.39z')
				]),
			_List_Nil)
		]));
var $icidasset$elm_material_icons$Material$Icons$Round$public_off = A2(
	$icidasset$elm_material_icons$Material$Icons$Internal$icon,
	_List_fromArray(
		[
			$icidasset$elm_material_icons$Material$Icons$Internal$b('new 0 0 24 24'),
			$icidasset$elm_material_icons$Material$Icons$Internal$v('0 0 24 24')
		]),
	_List_fromArray(
		[
			A2(
			$elm$svg$Svg$g,
			_List_Nil,
			_List_fromArray(
				[
					A2(
					$elm$svg$Svg$rect,
					_List_fromArray(
						[
							$icidasset$elm_material_icons$Material$Icons$Internal$f('none')
						]),
					_List_Nil),
					A2(
					$icidasset$elm_material_icons$Material$Icons$Internal$p,
					_List_fromArray(
						[
							$elm$svg$Svg$Attributes$d('M11,8.17L6.49,3.66C8.07,2.61,9.96,2,12,2c5.52,0,10,4.48,10,10c0,2.04-0.61,3.93-1.66,5.51l-1.46-1.46 C19.59,14.87,20,13.48,20,12c0-3.35-2.07-6.22-5-7.41V5c0,1.1-0.9,2-2,2h-2V8.17z M20.49,21.9L20.49,21.9 c-0.39,0.39-1.02,0.39-1.41,0l-1.56-1.56c-2.07,1.37-4.68,2-7.45,1.48c-3.95-0.75-7.13-3.92-7.88-7.88 c-0.52-2.77,0.1-5.38,1.48-7.45L2.1,4.93c-0.39-0.39-0.39-1.02,0-1.41l0,0c0.39-0.39,1.02-0.39,1.41,0l16.97,16.97 C20.88,20.88,20.88,21.51,20.49,21.9z M11,18c-1.1,0-2-0.9-2-2v-1l-4.79-4.79C4.08,10.79,4,11.38,4,12c0,4.08,3.05,7.44,7,7.93V18z')
						]),
					_List_Nil)
				]))
		]));
var $icidasset$elm_material_icons$Material$Icons$Types$Color = function (a) {
	return {$: 'Color', a: a};
};
var $author$project$UI$Types$DeactivatePlaylist = {$: 'DeactivatePlaylist'};
var $icidasset$elm_material_icons$Material$Icons$Round$check = A2(
	$icidasset$elm_material_icons$Material$Icons$Internal$icon,
	_List_fromArray(
		[
			$icidasset$elm_material_icons$Material$Icons$Internal$v('0 0 24 24')
		]),
	_List_fromArray(
		[
			A2(
			$icidasset$elm_material_icons$Material$Icons$Internal$p,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$d('M0 0h24v24H0V0z'),
					$icidasset$elm_material_icons$Material$Icons$Internal$f('none')
				]),
			_List_Nil),
			A2(
			$icidasset$elm_material_icons$Material$Icons$Internal$p,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$d('M9 16.17L5.53 12.7c-.39-.39-1.02-.39-1.41 0-.39.39-.39 1.02 0 1.41l4.18 4.18c.39.39 1.02.39 1.41 0L20.29 7.71c.39-.39.39-1.02 0-1.41-.39-.39-1.02-.39-1.41 0L9 16.17z')
				]),
			_List_Nil)
		]));
var $author$project$UI$Kit$rgb = $avh4$elm_color$Color$rgb255;
var $author$project$UI$Kit$colorKit = {
	base00: A3($author$project$UI$Kit$rgb, 45, 45, 45),
	base01: A3($author$project$UI$Kit$rgb, 63, 63, 63),
	base02: A3($author$project$UI$Kit$rgb, 79, 79, 79),
	base03: A3($author$project$UI$Kit$rgb, 119, 119, 119),
	base04: A3($author$project$UI$Kit$rgb, 140, 140, 140),
	base05: A3($author$project$UI$Kit$rgb, 163, 163, 163),
	base06: A3($author$project$UI$Kit$rgb, 186, 186, 186),
	base07: A3($author$project$UI$Kit$rgb, 232, 232, 232),
	base08: A3($author$project$UI$Kit$rgb, 239, 97, 85),
	base09: A3($author$project$UI$Kit$rgb, 249, 155, 21),
	base0A: A3($author$project$UI$Kit$rgb, 254, 196, 24),
	base0B: A3($author$project$UI$Kit$rgb, 72, 182, 133),
	base0C: A3($author$project$UI$Kit$rgb, 91, 196, 191),
	base0D: A3($author$project$UI$Kit$rgb, 6, 182, 239),
	base0E: A3($author$project$UI$Kit$rgb, 129, 91, 164),
	base0F: A3($author$project$UI$Kit$rgb, 233, 107, 168)
};
var $avh4$elm_color$Color$hsla = F4(
	function (hue, sat, light, alpha) {
		var _v0 = _Utils_Tuple3(hue, sat, light);
		var h = _v0.a;
		var s = _v0.b;
		var l = _v0.c;
		var m2 = (l <= 0.5) ? (l * (s + 1)) : ((l + s) - (l * s));
		var m1 = (l * 2) - m2;
		var hueToRgb = function (h__) {
			var h_ = (h__ < 0) ? (h__ + 1) : ((h__ > 1) ? (h__ - 1) : h__);
			return ((h_ * 6) < 1) ? (m1 + (((m2 - m1) * h_) * 6)) : (((h_ * 2) < 1) ? m2 : (((h_ * 3) < 2) ? (m1 + (((m2 - m1) * ((2 / 3) - h_)) * 6)) : m1));
		};
		var b = hueToRgb(h - (1 / 3));
		var g = hueToRgb(h);
		var r = hueToRgb(h + (1 / 3));
		return A4($avh4$elm_color$Color$RgbaSpace, r, g, b, alpha);
	});
var $avh4$elm_color$Color$hsl = F3(
	function (h, s, l) {
		return A4($avh4$elm_color$Color$hsla, h, s, l, 1.0);
	});
var $author$project$UI$Kit$colors = {
	background: A3($author$project$UI$Kit$rgb, 2, 7, 14),
	error: $author$project$UI$Kit$colorKit.base08,
	gray_100: A3($avh4$elm_color$Color$hsl, 0, 0, 0.988),
	gray_200: A3($avh4$elm_color$Color$hsl, 0, 0, 0.973),
	gray_300: A3($avh4$elm_color$Color$hsl, 0, 0, 0.933),
	gray_400: A3($avh4$elm_color$Color$hsl, 0, 0, 0.882),
	gray_500: A3($avh4$elm_color$Color$hsl, 0, 0, 0.863),
	gray_600: A3($avh4$elm_color$Color$hsl, 0, 0, 0.776),
	selection: $author$project$UI$Kit$colorKit.base04,
	success: $author$project$UI$Kit$colorKit.base0B,
	text: $author$project$UI$Kit$colorKit.base01,
	warning: $author$project$UI$Kit$colorKit.base0A
};
var $author$project$UI$Playlists$View$selectedPlaylistListItem = F2(
	function (playlist, bgColor) {
		var selectionColor = A2($elm$core$Maybe$withDefault, $author$project$UI$Kit$colors.selection, bgColor);
		return {
			actions: _List_fromArray(
				[
					{
					icon: F2(
						function (size, _v0) {
							return A2(
								$icidasset$elm_material_icons$Material$Icons$Round$check,
								size,
								$icidasset$elm_material_icons$Material$Icons$Types$Color(selectionColor));
						}),
					msg: $elm$core$Maybe$Just(
						$elm$core$Basics$always($author$project$UI$Types$DeactivatePlaylist)),
					title: 'Selected playlist'
				},
					{
					icon: $icidasset$elm_material_icons$Material$Icons$Round$more_vert,
					msg: $elm$core$Maybe$Just(
						$author$project$UI$Types$ShowPlaylistListMenu(playlist)),
					title: 'Menu'
				}
				]),
			isSelected: false,
			label: A3(
				$author$project$Chunky$brick,
				_List_fromArray(
					[
						A2(
						$elm$html$Html$Attributes$style,
						'color',
						$avh4$elm_color$Color$toCssString(selectionColor))
					]),
				_List_Nil,
				_List_fromArray(
					[
						$elm$html$Html$text(playlist.name)
					])),
			msg: $elm$core$Maybe$Just($author$project$UI$Types$DeactivatePlaylist)
		};
	});
var $elm$virtual_dom$VirtualDom$Custom = function (a) {
	return {$: 'Custom', a: a};
};
var $elm$html$Html$Events$custom = F2(
	function (event, decoder) {
		return A2(
			$elm$virtual_dom$VirtualDom$on,
			event,
			$elm$virtual_dom$VirtualDom$Custom(decoder));
	});
var $mpizenberg$elm_pointer_events$Html$Events$Extra$Mouse$Event = F6(
	function (keys, button, clientPos, offsetPos, pagePos, screenPos) {
		return {button: button, clientPos: clientPos, keys: keys, offsetPos: offsetPos, pagePos: pagePos, screenPos: screenPos};
	});
var $mpizenberg$elm_pointer_events$Html$Events$Extra$Mouse$BackButton = {$: 'BackButton'};
var $mpizenberg$elm_pointer_events$Html$Events$Extra$Mouse$ErrorButton = {$: 'ErrorButton'};
var $mpizenberg$elm_pointer_events$Html$Events$Extra$Mouse$ForwardButton = {$: 'ForwardButton'};
var $mpizenberg$elm_pointer_events$Html$Events$Extra$Mouse$MiddleButton = {$: 'MiddleButton'};
var $mpizenberg$elm_pointer_events$Html$Events$Extra$Mouse$SecondButton = {$: 'SecondButton'};
var $mpizenberg$elm_pointer_events$Html$Events$Extra$Mouse$buttonFromId = function (id) {
	switch (id) {
		case 0:
			return $mpizenberg$elm_pointer_events$Html$Events$Extra$Mouse$MainButton;
		case 1:
			return $mpizenberg$elm_pointer_events$Html$Events$Extra$Mouse$MiddleButton;
		case 2:
			return $mpizenberg$elm_pointer_events$Html$Events$Extra$Mouse$SecondButton;
		case 3:
			return $mpizenberg$elm_pointer_events$Html$Events$Extra$Mouse$BackButton;
		case 4:
			return $mpizenberg$elm_pointer_events$Html$Events$Extra$Mouse$ForwardButton;
		default:
			return $mpizenberg$elm_pointer_events$Html$Events$Extra$Mouse$ErrorButton;
	}
};
var $mpizenberg$elm_pointer_events$Html$Events$Extra$Mouse$buttonDecoder = A2(
	$elm$json$Json$Decode$map,
	$mpizenberg$elm_pointer_events$Html$Events$Extra$Mouse$buttonFromId,
	A2($elm$json$Json$Decode$field, 'button', $elm$json$Json$Decode$int));
var $mpizenberg$elm_pointer_events$Internal$Decode$clientPos = A3(
	$elm$json$Json$Decode$map2,
	F2(
		function (a, b) {
			return _Utils_Tuple2(a, b);
		}),
	A2($elm$json$Json$Decode$field, 'clientX', $elm$json$Json$Decode$float),
	A2($elm$json$Json$Decode$field, 'clientY', $elm$json$Json$Decode$float));
var $mpizenberg$elm_pointer_events$Internal$Decode$Keys = F3(
	function (alt, ctrl, shift) {
		return {alt: alt, ctrl: ctrl, shift: shift};
	});
var $mpizenberg$elm_pointer_events$Internal$Decode$keys = A4(
	$elm$json$Json$Decode$map3,
	$mpizenberg$elm_pointer_events$Internal$Decode$Keys,
	A2($elm$json$Json$Decode$field, 'altKey', $elm$json$Json$Decode$bool),
	A2($elm$json$Json$Decode$field, 'ctrlKey', $elm$json$Json$Decode$bool),
	A2($elm$json$Json$Decode$field, 'shiftKey', $elm$json$Json$Decode$bool));
var $elm$json$Json$Decode$map6 = _Json_map6;
var $mpizenberg$elm_pointer_events$Internal$Decode$offsetPos = A3(
	$elm$json$Json$Decode$map2,
	F2(
		function (a, b) {
			return _Utils_Tuple2(a, b);
		}),
	A2($elm$json$Json$Decode$field, 'offsetX', $elm$json$Json$Decode$float),
	A2($elm$json$Json$Decode$field, 'offsetY', $elm$json$Json$Decode$float));
var $mpizenberg$elm_pointer_events$Internal$Decode$pagePos = A3(
	$elm$json$Json$Decode$map2,
	F2(
		function (a, b) {
			return _Utils_Tuple2(a, b);
		}),
	A2($elm$json$Json$Decode$field, 'pageX', $elm$json$Json$Decode$float),
	A2($elm$json$Json$Decode$field, 'pageY', $elm$json$Json$Decode$float));
var $mpizenberg$elm_pointer_events$Internal$Decode$screenPos = A3(
	$elm$json$Json$Decode$map2,
	F2(
		function (a, b) {
			return _Utils_Tuple2(a, b);
		}),
	A2($elm$json$Json$Decode$field, 'screenX', $elm$json$Json$Decode$float),
	A2($elm$json$Json$Decode$field, 'screenY', $elm$json$Json$Decode$float));
var $mpizenberg$elm_pointer_events$Html$Events$Extra$Mouse$eventDecoder = A7($elm$json$Json$Decode$map6, $mpizenberg$elm_pointer_events$Html$Events$Extra$Mouse$Event, $mpizenberg$elm_pointer_events$Internal$Decode$keys, $mpizenberg$elm_pointer_events$Html$Events$Extra$Mouse$buttonDecoder, $mpizenberg$elm_pointer_events$Internal$Decode$clientPos, $mpizenberg$elm_pointer_events$Internal$Decode$offsetPos, $mpizenberg$elm_pointer_events$Internal$Decode$pagePos, $mpizenberg$elm_pointer_events$Internal$Decode$screenPos);
var $mpizenberg$elm_pointer_events$Html$Events$Extra$Mouse$onWithOptions = F3(
	function (event, options, tag) {
		return A2(
			$elm$html$Html$Events$custom,
			event,
			A2(
				$elm$json$Json$Decode$map,
				function (ev) {
					return {
						message: tag(ev),
						preventDefault: options.preventDefault,
						stopPropagation: options.stopPropagation
					};
				},
				$mpizenberg$elm_pointer_events$Html$Events$Extra$Mouse$eventDecoder));
	});
var $author$project$UI$List$actionView = function (action) {
	return A3(
		$author$project$Chunky$brick,
		function () {
			var _v0 = action.msg;
			if (_v0.$ === 'Just') {
				var msg = _v0.a;
				return _List_fromArray(
					[
						$elm$html$Html$Attributes$title(action.title),
						A3(
						$mpizenberg$elm_pointer_events$Html$Events$Extra$Mouse$onWithOptions,
						'click',
						{preventDefault: true, stopPropagation: true},
						msg)
					]);
			} else {
				return _List_fromArray(
					[
						$elm$html$Html$Attributes$title(action.title)
					]);
			}
		}(),
		_List_fromArray(
			[
				'leading-0',
				'ml-1',
				'pl-1',
				A3(
				$author$project$Conditional$ifThenElse,
				$elm_community$maybe_extra$Maybe$Extra$isJust(action.msg),
				'cursor-pointer',
				'cursor-default')
			]),
		_List_fromArray(
			[
				A2(action.icon, 16, $icidasset$elm_material_icons$Material$Icons$Types$Inherit)
			]));
};
var $author$project$UI$DnD$isDragging = function (model) {
	switch (model.$) {
		case 'NotDragging':
			return false;
		case 'Dragging':
			return true;
		case 'DraggingOver':
			return true;
		default:
			return false;
	}
};
var $author$project$UI$DnD$isDraggingOver = F2(
	function (context, model) {
		switch (model.$) {
			case 'NotDragging':
				return false;
			case 'Dragging':
				return false;
			case 'DraggingOver':
				var target = model.a.target;
				return _Utils_eq(target, context);
			default:
				return false;
		}
	});
var $author$project$UI$DnD$Enter = function (a) {
	return {$: 'Enter', a: a};
};
var $author$project$UI$DnD$Leave = function (a) {
	return {$: 'Leave', a: a};
};
var $mpizenberg$elm_pointer_events$Html$Events$Extra$Pointer$defaultOptions = {preventDefault: true, stopPropagation: false};
var $mpizenberg$elm_pointer_events$Html$Events$Extra$Pointer$Event = F5(
	function (pointerType, pointer, pointerId, isPrimary, contactDetails) {
		return {contactDetails: contactDetails, isPrimary: isPrimary, pointer: pointer, pointerId: pointerId, pointerType: pointerType};
	});
var $mpizenberg$elm_pointer_events$Html$Events$Extra$Pointer$ContactDetails = F5(
	function (width, height, pressure, tiltX, tiltY) {
		return {height: height, pressure: pressure, tiltX: tiltX, tiltY: tiltY, width: width};
	});
var $mpizenberg$elm_pointer_events$Html$Events$Extra$Pointer$contactDetailsDecoder = A6(
	$elm$json$Json$Decode$map5,
	$mpizenberg$elm_pointer_events$Html$Events$Extra$Pointer$ContactDetails,
	A2($elm$json$Json$Decode$field, 'width', $elm$json$Json$Decode$float),
	A2($elm$json$Json$Decode$field, 'height', $elm$json$Json$Decode$float),
	A2($elm$json$Json$Decode$field, 'pressure', $elm$json$Json$Decode$float),
	A2($elm$json$Json$Decode$field, 'tiltX', $elm$json$Json$Decode$float),
	A2($elm$json$Json$Decode$field, 'tiltY', $elm$json$Json$Decode$float));
var $mpizenberg$elm_pointer_events$Html$Events$Extra$Pointer$MouseType = {$: 'MouseType'};
var $mpizenberg$elm_pointer_events$Html$Events$Extra$Pointer$PenType = {$: 'PenType'};
var $mpizenberg$elm_pointer_events$Html$Events$Extra$Pointer$TouchType = {$: 'TouchType'};
var $mpizenberg$elm_pointer_events$Html$Events$Extra$Pointer$stringToPointerType = function (str) {
	switch (str) {
		case 'pen':
			return $mpizenberg$elm_pointer_events$Html$Events$Extra$Pointer$PenType;
		case 'touch':
			return $mpizenberg$elm_pointer_events$Html$Events$Extra$Pointer$TouchType;
		default:
			return $mpizenberg$elm_pointer_events$Html$Events$Extra$Pointer$MouseType;
	}
};
var $mpizenberg$elm_pointer_events$Html$Events$Extra$Pointer$pointerTypeDecoder = A2($elm$json$Json$Decode$map, $mpizenberg$elm_pointer_events$Html$Events$Extra$Pointer$stringToPointerType, $elm$json$Json$Decode$string);
var $mpizenberg$elm_pointer_events$Html$Events$Extra$Pointer$eventDecoder = A6(
	$elm$json$Json$Decode$map5,
	$mpizenberg$elm_pointer_events$Html$Events$Extra$Pointer$Event,
	A2($elm$json$Json$Decode$field, 'pointerType', $mpizenberg$elm_pointer_events$Html$Events$Extra$Pointer$pointerTypeDecoder),
	$mpizenberg$elm_pointer_events$Html$Events$Extra$Mouse$eventDecoder,
	A2($elm$json$Json$Decode$field, 'pointerId', $elm$json$Json$Decode$int),
	A2($elm$json$Json$Decode$field, 'isPrimary', $elm$json$Json$Decode$bool),
	$mpizenberg$elm_pointer_events$Html$Events$Extra$Pointer$contactDetailsDecoder);
var $mpizenberg$elm_pointer_events$Html$Events$Extra$Pointer$onWithOptions = F3(
	function (event, options, tag) {
		return A2(
			$elm$html$Html$Events$custom,
			event,
			A2(
				$elm$json$Json$Decode$map,
				function (ev) {
					return {
						message: tag(ev),
						preventDefault: options.preventDefault,
						stopPropagation: options.stopPropagation
					};
				},
				$mpizenberg$elm_pointer_events$Html$Events$Extra$Pointer$eventDecoder));
	});
var $mpizenberg$elm_pointer_events$Html$Events$Extra$Pointer$onEnter = A2($mpizenberg$elm_pointer_events$Html$Events$Extra$Pointer$onWithOptions, 'pointerenter', $mpizenberg$elm_pointer_events$Html$Events$Extra$Pointer$defaultOptions);
var $mpizenberg$elm_pointer_events$Html$Events$Extra$Pointer$onLeave = A2($mpizenberg$elm_pointer_events$Html$Events$Extra$Pointer$onWithOptions, 'pointerleave', $mpizenberg$elm_pointer_events$Html$Events$Extra$Pointer$defaultOptions);
var $author$project$UI$DnD$listenToEnterLeave = F2(
	function (_v0, context) {
		var model = _v0.model;
		var toMsg = _v0.toMsg;
		if (model.$ === 'NotDragging') {
			return _List_Nil;
		} else {
			return _List_fromArray(
				[
					$mpizenberg$elm_pointer_events$Html$Events$Extra$Pointer$onEnter(
					$elm$core$Basics$always(
						toMsg(
							$author$project$UI$DnD$Enter(context)))),
					$mpizenberg$elm_pointer_events$Html$Events$Extra$Pointer$onLeave(
					$elm$core$Basics$always(
						toMsg(
							$author$project$UI$DnD$Leave(context))))
				]);
		}
	});
var $author$project$UI$DnD$Start = function (a) {
	return {$: 'Start', a: a};
};
var $author$project$UI$DnD$listenToStart = F2(
	function (_v0, context) {
		var toMsg = _v0.toMsg;
		return A3(
			$mpizenberg$elm_pointer_events$Html$Events$Extra$Pointer$onWithOptions,
			'pointerdown',
			{preventDefault: false, stopPropagation: true},
			function (event) {
				var _v1 = _Utils_Tuple2(event.pointer.button, event.isPrimary);
				if ((_v1.a.$ === 'MainButton') && _v1.b) {
					var _v2 = _v1.a;
					return toMsg(
						$author$project$UI$DnD$Start(context));
				} else {
					return toMsg($author$project$UI$DnD$Stop);
				}
			});
	});
var $author$project$UI$List$item = F3(
	function (variant, idx, _v0) {
		var label = _v0.label;
		var actions = _v0.actions;
		var msg = _v0.msg;
		var isSelected = _v0.isSelected;
		var dragTarget = function () {
			if (variant.$ === 'Normal') {
				return false;
			} else {
				var env = variant.a;
				return A2($author$project$UI$DnD$isDraggingOver, idx, env.model);
			}
		}();
		return A2(
			$author$project$Chunky$chunky,
			_List_fromArray(
				[
					'border-t',
					dragTarget ? 'border-base03' : 'border-transparent',
					dragTarget ? 'dark:border-gray-300' : 'dark:border-transparent'
				]),
			A2(
				$author$project$Chunky$chunk,
				_List_fromArray(
					[
						'border-b',
						'border-gray-200',
						'flex',
						'items-center',
						A3(
						$author$project$Conditional$ifThenElse,
						$elm_community$maybe_extra$Maybe$Extra$isJust(msg),
						'cursor-pointer',
						'cursor-default'),
						A3($author$project$Conditional$ifThenElse, isSelected, 'text-base03', 'text-inherit'),
						'dark:border-base00',
						A3($author$project$Conditional$ifThenElse, isSelected, 'dark:text-gray-300', 'dark:text-inherit')
					]),
				_List_fromArray(
					[
						A3(
						$author$project$Chunky$brick,
						function () {
							if (variant.$ === 'Normal') {
								if (msg.$ === 'Just') {
									var m = msg.a;
									return _List_fromArray(
										[
											$elm$html$Html$Events$onClick(m)
										]);
								} else {
									return _List_Nil;
								}
							} else {
								var env = variant.a;
								return A2(
									$elm$core$List$append,
									function () {
										var _v3 = _Utils_Tuple2(isSelected, msg);
										if (_v3.a) {
											return _List_fromArray(
												[
													A2($author$project$UI$DnD$listenToStart, env, idx)
												]);
										} else {
											if (_v3.b.$ === 'Just') {
												var m = _v3.b.a;
												return _List_fromArray(
													[
														$elm$html$Html$Events$onClick(m)
													]);
											} else {
												var _v4 = _v3.b;
												return _List_Nil;
											}
										}
									}(),
									A2($author$project$UI$DnD$listenToEnterLeave, env, idx));
							}
						}(),
						_List_fromArray(
							['flex-grow', 'py-4', 'overflow-hidden']),
						_List_fromArray(
							[label])),
						A2(
						$author$project$Chunky$chunk,
						_List_fromArray(
							[
								'flex',
								'items-center',
								function () {
								if (variant.$ === 'Normal') {
									return 'pointer-events-auto';
								} else {
									var env = variant.a;
									return $author$project$UI$DnD$isDragging(env.model) ? 'pointer-events-none' : 'pointer-events-auto';
								}
							}()
							]),
						A2($elm$core$List$map, $author$project$UI$List$actionView, actions))
					])));
	});
var $author$project$UI$List$view = F2(
	function (variant, items) {
		return A2(
			$author$project$Chunky$chunk,
			_List_fromArray(
				['antialiased', 'font-semibold', 'leading-snug', 'text-nearly-sm']),
			A2(
				$elm$core$List$indexedMap,
				$author$project$UI$List$item(variant),
				items));
	});
var $author$project$UI$Playlists$View$index = F4(
	function (playlists, selectedPlaylist, bgColor, authMethodSupportsPublicData) {
		var isSelected = function (playlist) {
			return _Utils_eq(
				A2(
					$elm$core$Maybe$map,
					function (s) {
						return _Utils_Tuple2(s.autoGenerated, s.name);
					},
					selectedPlaylist),
				$elm$core$Maybe$Just(
					_Utils_Tuple2(playlist.autoGenerated, playlist.name)));
		};
		var directoryPlaylists = A2(
			$elm$core$List$sortBy,
			$author$project$UI$Playlists$View$lowercaseName,
			A2(
				$elm$core$List$filter,
				function ($) {
					return $.autoGenerated;
				},
				playlists));
		var directoryPlaylistListItem = function (playlist) {
			return isSelected(playlist) ? A2($author$project$UI$Playlists$View$selectedPlaylistListItem, playlist, bgColor) : {
				actions: _List_fromArray(
					[
						{
						icon: $icidasset$elm_material_icons$Material$Icons$Round$more_vert,
						msg: $elm$core$Maybe$Just(
							$author$project$UI$Types$ShowPlaylistListMenu(playlist)),
						title: 'Menu'
					}
					]),
				isSelected: false,
				label: $elm$html$Html$text(playlist.name),
				msg: $elm$core$Maybe$Just(
					$author$project$UI$Types$ActivatePlaylist(playlist))
			};
		};
		var customPlaylists = A2(
			$elm$core$List$sortBy,
			$author$project$UI$Playlists$View$lowercaseName,
			A2(
				$elm_community$list_extra$List$Extra$filterNot,
				function ($) {
					return $.autoGenerated;
				},
				playlists));
		var customPlaylistListItem = function (playlist) {
			return isSelected(playlist) ? A2($author$project$UI$Playlists$View$selectedPlaylistListItem, playlist, bgColor) : {
				actions: A2(
					$elm$core$List$append,
					authMethodSupportsPublicData ? _List_fromArray(
						[
							{
							icon: playlist._public ? $icidasset$elm_material_icons$Material$Icons$Round$public : $icidasset$elm_material_icons$Material$Icons$Round$public_off,
							msg: $elm$core$Maybe$Just(
								function (_v0) {
									return $author$project$UI$Types$TogglePlaylistVisibility(playlist);
								}),
							title: playlist._public ? 'Make private' : 'Make public'
						}
						]) : _List_Nil,
					_List_fromArray(
						[
							{
							icon: $icidasset$elm_material_icons$Material$Icons$Round$more_vert,
							msg: $elm$core$Maybe$Just(
								$author$project$UI$Types$ShowPlaylistListMenu(playlist)),
							title: 'Menu'
						}
						])),
				isSelected: false,
				label: $elm$html$Html$text(playlist.name),
				msg: $elm$core$Maybe$Just(
					$author$project$UI$Types$ActivatePlaylist(playlist))
			};
		};
		return _List_fromArray(
			[
				$author$project$UI$Navigation$local(
				_List_fromArray(
					[
						_Utils_Tuple3(
						$author$project$UI$Navigation$Icon($icidasset$elm_material_icons$Material$Icons$Round$arrow_back),
						A2($author$project$UI$Navigation$Label, $author$project$Common$backToIndex, $author$project$UI$Navigation$Hidden),
						$author$project$UI$Navigation$NavigateToPage($author$project$UI$Page$Index)),
						_Utils_Tuple3(
						$author$project$UI$Navigation$Icon($icidasset$elm_material_icons$Material$Icons$Round$add),
						A2($author$project$UI$Navigation$Label, 'Create a new playlist', $author$project$UI$Navigation$Shown),
						$author$project$UI$Navigation$NavigateToPage(
							$author$project$UI$Page$Playlists($author$project$UI$Playlists$Page$New)))
					])),
				$elm$core$List$isEmpty(playlists) ? A2(
				$author$project$Chunky$chunk,
				_List_fromArray(
					['relative']),
				_List_fromArray(
					[
						A2(
						$author$project$Chunky$chunk,
						_List_fromArray(
							['absolute', 'left-0', 'top-0']),
						_List_fromArray(
							[
								$author$project$UI$Kit$canister(
								_List_fromArray(
									[
										$author$project$UI$Kit$h1('Playlists')
									]))
							]))
					])) : $author$project$UI$Kit$canister(
				_List_fromArray(
					[
						$author$project$UI$Kit$h1('Playlists'),
						$author$project$UI$Playlists$View$intro,
						$elm$core$List$isEmpty(customPlaylists) ? $author$project$Chunky$nothing : $author$project$Chunky$raw(
						_List_fromArray(
							[
								$author$project$UI$Playlists$View$category('Your Playlists'),
								A2(
								$author$project$UI$List$view,
								$author$project$UI$List$Normal,
								A2($elm$core$List$map, customPlaylistListItem, customPlaylists))
							])),
						$elm$core$List$isEmpty(directoryPlaylists) ? $author$project$Chunky$nothing : $author$project$Chunky$raw(
						_List_fromArray(
							[
								$author$project$UI$Playlists$View$category('Autogenerated Directory Playlists'),
								A2(
								$author$project$UI$List$view,
								$author$project$UI$List$Normal,
								A2($elm$core$List$map, directoryPlaylistListItem, directoryPlaylists))
							]))
					])),
				$elm$core$List$isEmpty(playlists) ? $author$project$UI$Kit$centeredContent(
				_List_fromArray(
					[
						A4(
						$author$project$Chunky$slab,
						$elm$html$Html$a,
						_List_fromArray(
							[
								$elm$html$Html$Attributes$href(
								$author$project$UI$Page$toString(
									$author$project$UI$Page$Playlists($author$project$UI$Playlists$Page$New)))
							]),
						_List_fromArray(
							['block', 'opacity-30', 'text-inherit']),
						_List_fromArray(
							[
								A2($icidasset$elm_material_icons$Material$Icons$Round$waves, 64, $icidasset$elm_material_icons$Material$Icons$Types$Inherit)
							])),
						A4(
						$author$project$Chunky$slab,
						$elm$html$Html$a,
						_List_fromArray(
							[
								$elm$html$Html$Attributes$href(
								$author$project$UI$Page$toString(
									$author$project$UI$Page$Playlists($author$project$UI$Playlists$Page$New)))
							]),
						_List_fromArray(
							['block', 'leading-normal', 'mt-2', 'opacity-40', 'text-center', 'text-inherit']),
						_List_fromArray(
							[
								$elm$html$Html$text('No playlists found, create one'),
								$author$project$Chunky$lineBreak,
								$elm$html$Html$text('or enable directory playlists.')
							]))
					])) : $author$project$Chunky$nothing
			]);
	});
var $author$project$UI$Types$CreatePlaylist = {$: 'CreatePlaylist'};
var $author$project$UI$Types$SetPlaylistCreationContext = function (a) {
	return {$: 'SetPlaylistCreationContext', a: a};
};
var $author$project$UI$Playlists$View$new = _List_fromArray(
	[
		$author$project$UI$Navigation$local(
		_List_fromArray(
			[
				_Utils_Tuple3(
				$author$project$UI$Navigation$Icon($icidasset$elm_material_icons$Material$Icons$Round$arrow_back),
				A2($author$project$UI$Navigation$Label, 'Back to list', $author$project$UI$Navigation$Hidden),
				$author$project$UI$Navigation$NavigateToPage(
					$author$project$UI$Page$Playlists($author$project$UI$Playlists$Page$Index)))
			])),
		A4(
		$author$project$Chunky$slab,
		$elm$html$Html$form,
		_List_fromArray(
			[
				$elm$html$Html$Events$onSubmit($author$project$UI$Types$CreatePlaylist)
			]),
		_List_fromArray(
			['flex', 'flex-grow', 'text-center']),
		$elm$core$List$singleton(
			$author$project$UI$Kit$centeredContent(
				$elm$core$List$singleton(
					$author$project$UI$Kit$canisterForm(
						_List_fromArray(
							[
								$author$project$UI$Kit$h2('Name your playlist'),
								A2(
								$author$project$Chunky$chunky,
								_List_fromArray(
									['max-w-md', 'mx-auto']),
								$author$project$UI$Kit$textField(
									_List_fromArray(
										[
											$elm$html$Html$Events$onInput($author$project$UI$Types$SetPlaylistCreationContext),
											$elm$html$Html$Attributes$placeholder('The Classics')
										]))),
								A2(
								$author$project$Chunky$chunk,
								_List_fromArray(
									['mt-10']),
								_List_fromArray(
									[
										A3(
										$author$project$UI$Kit$button,
										$author$project$UI$Kit$Normal,
										$author$project$UI$Types$Bypass,
										$elm$html$Html$text('Create playlist'))
									]))
							]))))))
	]);
var $author$project$UI$Kit$receptacle = function (_v0) {
	var scrolling = _v0.scrolling;
	return $author$project$Chunky$chunk(
		_List_fromArray(
			[
				'absolute',
				'bg-white',
				'flex',
				'flex-col',
				'inset-0',
				'overflow-x-hidden',
				'scrolling-touch',
				'z-50',
				'dark:bg-darkest-hour',
				A3($author$project$Conditional$ifThenElse, scrolling, 'overflow-y-auto', 'overflow-y-hidden')
			]));
};
var $author$project$UI$Playlists$View$view = F6(
	function (page, playlists, selectedPlaylist, editContext, bgColor, authMethodSupportsPublicData) {
		return A2(
			$author$project$UI$Kit$receptacle,
			{scrolling: true},
			function () {
				switch (page.$) {
					case 'Edit':
						var encodedName = page.a;
						var filtered = A2(
							$elm$core$List$filter,
							A2(
								$elm$core$Basics$composeR,
								function ($) {
									return $.autoGenerated;
								},
								$elm$core$Basics$eq(false)),
							playlists);
						return A2(
							$elm$core$Maybe$withDefault,
							_List_fromArray(
								[$author$project$Chunky$nothing]),
							A2(
								$elm$core$Maybe$map,
								$author$project$UI$Playlists$View$edit(editContext),
								A2(
									$elm$core$Maybe$andThen,
									function (n) {
										return A2(
											$elm_community$list_extra$List$Extra$find,
											A2(
												$elm$core$Basics$composeR,
												function ($) {
													return $.name;
												},
												$elm$core$Basics$eq(n)),
											filtered);
									},
									$elm$url$Url$percentDecode(encodedName))));
					case 'Index':
						return A4($author$project$UI$Playlists$View$index, playlists, selectedPlaylist, bgColor, authMethodSupportsPublicData);
					default:
						return $author$project$UI$Playlists$View$new;
				}
			}());
	});
var $author$project$UI$Queue$Types$Clear = {$: 'Clear'};
var $author$project$UI$Types$DnD = function (a) {
	return {$: 'DnD', a: a};
};
var $author$project$UI$List$Draggable = function (a) {
	return {$: 'Draggable', a: a};
};
var $author$project$UI$Navigation$PerformMsg = function (a) {
	return {$: 'PerformMsg', a: a};
};
var $author$project$UI$Queue$Types$Reset = {$: 'Reset'};
var $author$project$UI$Queue$Types$RemoveItem = function (a) {
	return {$: 'RemoveItem', a: a};
};
var $author$project$UI$Queue$Types$Select = function (a) {
	return {$: 'Select', a: a};
};
var $author$project$UI$Queue$Types$ShowFutureMenu = F3(
	function (a, b, c) {
		return {$: 'ShowFutureMenu', a: a, b: b, c: c};
	});
var $icidasset$elm_material_icons$Material$Icons$Round$not_interested = A2(
	$icidasset$elm_material_icons$Material$Icons$Internal$icon,
	_List_fromArray(
		[
			$icidasset$elm_material_icons$Material$Icons$Internal$v('0 0 24 24')
		]),
	_List_fromArray(
		[
			A2(
			$icidasset$elm_material_icons$Material$Icons$Internal$p,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$d('M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8 0-1.85.63-3.55 1.69-4.9L16.9 18.31C15.55 19.37 13.85 20 12 20zm6.31-3.1L7.1 5.69C8.45 4.63 10.15 4 12 4c4.42 0 8 3.58 8 8 0 1.85-.63 3.55-1.69 4.9z')
				]),
			_List_Nil)
		]));
var $icidasset$elm_material_icons$Material$Icons$Round$remove_circle_outline = A2(
	$icidasset$elm_material_icons$Material$Icons$Internal$icon,
	_List_fromArray(
		[
			$icidasset$elm_material_icons$Material$Icons$Internal$v('0 0 24 24')
		]),
	_List_fromArray(
		[
			A2(
			$icidasset$elm_material_icons$Material$Icons$Internal$p,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$d('M0 0h24v24H0V0z'),
					$icidasset$elm_material_icons$Material$Icons$Internal$f('none')
				]),
			_List_Nil),
			A2(
			$icidasset$elm_material_icons$Material$Icons$Internal$p,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$d('M7 12c0 .55.45 1 1 1h8c.55 0 1-.45 1-1s-.45-1-1-1H8c-.55 0-1 .45-1 1zm5-10C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z')
				]),
			_List_Nil)
		]));
var $author$project$UI$Queue$View$subtleFutureIconClasses = _List_fromArray(
	['text-gray-500', 'dark:text-base02']);
var $author$project$Chunky$slaby = F3(
	function (a, b, c) {
		return A2(
			$elm$core$Basics$composeR,
			$elm$core$List$singleton,
			A3($author$project$Chunky$slab, a, b, c));
	});
var $author$project$Icons$wrapped = F4(
	function (classes, icon, size, coloring) {
		return A4(
			$author$project$Chunky$slaby,
			$elm$html$Html$span,
			_List_Nil,
			classes,
			A2(icon, size, coloring));
	});
var $author$project$UI$Queue$View$futureItem = F3(
	function (selectedQueueItem, idx, item) {
		var iconFn = item.manualEntry ? $elm$core$Basics$identity : $author$project$Icons$wrapped($author$project$UI$Queue$View$subtleFutureIconClasses);
		var _v0 = item.identifiedTrack;
		var identifiers = _v0.a;
		var track = _v0.b;
		var isSelected = _Utils_eq(
			$elm$core$Maybe$Just(identifiers.indexInList),
			A2(
				$elm$core$Maybe$map,
				A2(
					$elm$core$Basics$composeR,
					function ($) {
						return $.identifiedTrack;
					},
					A2(
						$elm$core$Basics$composeR,
						$elm$core$Tuple$first,
						function ($) {
							return $.indexInList;
						})),
				selectedQueueItem));
		return {
			actions: _List_fromArray(
				[
					{
					icon: item.manualEntry ? iconFn($icidasset$elm_material_icons$Material$Icons$Round$remove_circle_outline) : iconFn($icidasset$elm_material_icons$Material$Icons$Round$not_interested),
					msg: $elm$core$Maybe$Just(
						$elm$core$Basics$always(
							$author$project$UI$Types$QueueMsg(
								$author$project$UI$Queue$Types$RemoveItem(
									{index: idx, item: item})))),
					title: A3($author$project$Conditional$ifThenElse, item.manualEntry, 'Remove', 'Ignore')
				},
					{
					icon: iconFn($icidasset$elm_material_icons$Material$Icons$Round$more_vert),
					msg: $elm$core$Maybe$Just(
						A2(
							$elm$core$Basics$composeL,
							$author$project$UI$Types$QueueMsg,
							A2(
								$author$project$UI$Queue$Types$ShowFutureMenu,
								item,
								{index: idx}))),
					title: 'Menu'
				}
				]),
			isSelected: isSelected,
			label: A2(
				$author$project$Chunky$inline,
				_List_fromArray(
					[
						'block',
						'truncate',
						(item.manualEntry || isSelected) ? 'text-inherit' : 'text-base05',
						(item.manualEntry || isSelected) ? 'dark:text-inherit' : 'dark:text-base04'
					]),
				_List_fromArray(
					[
						A2(
						$author$project$Chunky$inline,
						_List_fromArray(
							['inline-block', 'mr-2', 'opacity-60', 'text-xs']),
						_List_fromArray(
							[
								$elm$html$Html$text(
								$elm$core$String$fromInt(idx + 1)),
								$elm$html$Html$text('.')
							])),
						$elm$html$Html$text(track.tags.artist + (' - ' + track.tags.title))
					])),
			msg: $elm$core$Maybe$Just(
				$author$project$UI$Types$QueueMsg(
					$author$project$UI$Queue$Types$Select(item)))
		};
	});
var $icidasset$elm_material_icons$Material$Icons$Round$history = A2(
	$icidasset$elm_material_icons$Material$Icons$Internal$icon,
	_List_fromArray(
		[
			$icidasset$elm_material_icons$Material$Icons$Internal$v('0 0 24 24')
		]),
	_List_fromArray(
		[
			A2(
			$icidasset$elm_material_icons$Material$Icons$Internal$p,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$d('M0 0h24v24H0V0z'),
					$icidasset$elm_material_icons$Material$Icons$Internal$f('none')
				]),
			_List_Nil),
			A2(
			$icidasset$elm_material_icons$Material$Icons$Internal$p,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$d('M13.26 3C8.17 2.86 4 6.95 4 12H2.21c-.45 0-.67.54-.35.85l2.79 2.8c.2.2.51.2.71 0l2.79-2.8c.31-.31.09-.85-.36-.85H6c0-3.9 3.18-7.05 7.1-7 3.72.05 6.85 3.18 6.9 6.9.05 3.91-3.1 7.1-7 7.1-1.61 0-3.1-.55-4.28-1.48-.4-.31-.96-.28-1.32.08-.42.42-.39 1.13.08 1.49C9 20.29 10.91 21 13 21c5.05 0 9.14-4.17 9-9.26-.13-4.69-4.05-8.61-8.74-8.74zm-.51 5c-.41 0-.75.34-.75.75v3.68c0 .35.19.68.49.86l3.12 1.85c.36.21.82.09 1.03-.26.21-.36.09-.82-.26-1.03l-2.88-1.71v-3.4c0-.4-.34-.74-.75-.74z')
				]),
			_List_Nil)
		]));
var $icidasset$elm_material_icons$Material$Icons$Round$music_note = A2(
	$icidasset$elm_material_icons$Material$Icons$Internal$icon,
	_List_fromArray(
		[
			$icidasset$elm_material_icons$Material$Icons$Internal$v('0 0 24 24')
		]),
	_List_fromArray(
		[
			A2(
			$icidasset$elm_material_icons$Material$Icons$Internal$p,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$d('M0 0h24v24H0V0z'),
					$icidasset$elm_material_icons$Material$Icons$Internal$f('none')
				]),
			_List_Nil),
			A2(
			$icidasset$elm_material_icons$Material$Icons$Internal$p,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$d('M12 5v8.55c-.94-.54-2.1-.75-3.33-.32-1.34.48-2.37 1.67-2.61 3.07-.46 2.74 1.86 5.08 4.59 4.65 1.96-.31 3.35-2.11 3.35-4.1V7h2c1.1 0 2-.9 2-2s-.9-2-2-2h-2c-1.1 0-2 .9-2 2z')
				]),
			_List_Nil)
		]));
var $author$project$UI$Queue$View$futureView = F3(
	function (playingNext, selectedQueueItem, dnd) {
		return A2(
			$author$project$UI$Kit$receptacle,
			{
				scrolling: !$author$project$UI$DnD$isDragging(dnd)
			},
			_List_fromArray(
				[
					$author$project$UI$Navigation$local(
					_List_fromArray(
						[
							_Utils_Tuple3(
							$author$project$UI$Navigation$Icon($icidasset$elm_material_icons$Material$Icons$Round$arrow_back),
							A2($author$project$UI$Navigation$Label, $author$project$Common$backToIndex, $author$project$UI$Navigation$Hidden),
							$author$project$UI$Navigation$NavigateToPage($author$project$UI$Page$Index)),
							_Utils_Tuple3(
							$author$project$UI$Navigation$Icon($icidasset$elm_material_icons$Material$Icons$Round$history),
							A2($author$project$UI$Navigation$Label, 'History', $author$project$UI$Navigation$Shown),
							$author$project$UI$Navigation$NavigateToPage(
								$author$project$UI$Page$Queue($author$project$UI$Queue$Page$History))),
							_Utils_Tuple3(
							$author$project$UI$Navigation$Icon($icidasset$elm_material_icons$Material$Icons$Round$clear),
							A2($author$project$UI$Navigation$Label, 'Clear', $author$project$UI$Navigation$Shown),
							$author$project$UI$Navigation$PerformMsg(
								$author$project$UI$Types$QueueMsg($author$project$UI$Queue$Types$Clear))),
							_Utils_Tuple3(
							$author$project$UI$Navigation$Icon($icidasset$elm_material_icons$Material$Icons$Round$not_interested),
							A2($author$project$UI$Navigation$Label, 'Reset ignored', $author$project$UI$Navigation$Shown),
							$author$project$UI$Navigation$PerformMsg(
								$author$project$UI$Types$QueueMsg($author$project$UI$Queue$Types$Reset)))
						])),
					$elm$core$List$isEmpty(playingNext) ? A2(
					$author$project$Chunky$chunk,
					_List_fromArray(
						['relative']),
					_List_fromArray(
						[
							A2(
							$author$project$Chunky$chunk,
							_List_fromArray(
								['absolute', 'left-0', 'top-0']),
							_List_fromArray(
								[
									$author$project$UI$Kit$canister(
									_List_fromArray(
										[
											$author$project$UI$Kit$h1('Up next')
										]))
								]))
						])) : $author$project$UI$Kit$canister(
					_List_fromArray(
						[
							$author$project$UI$Kit$h1('Up next'),
							A2(
							$author$project$Chunky$chunky,
							_List_fromArray(
								['mt-3']),
							A2(
								$author$project$UI$List$view,
								$author$project$UI$List$Draggable(
									{model: dnd, toMsg: $author$project$UI$Types$DnD}),
								A2(
									$elm$core$List$indexedMap,
									$author$project$UI$Queue$View$futureItem(selectedQueueItem),
									playingNext)))
						])),
					$elm$core$List$isEmpty(playingNext) ? $author$project$UI$Kit$centeredContent(
					_List_fromArray(
						[
							A4(
							$author$project$Chunky$slab,
							$elm$html$Html$a,
							_List_fromArray(
								[
									$elm$html$Html$Attributes$href(
									$author$project$UI$Page$toString(
										$author$project$UI$Page$Sources($author$project$UI$Sources$Page$New)))
								]),
							_List_fromArray(
								['text-inherit', 'block', 'opacity-30']),
							_List_fromArray(
								[
									A2($icidasset$elm_material_icons$Material$Icons$Round$music_note, 64, $icidasset$elm_material_icons$Material$Icons$Types$Inherit)
								])),
							A4(
							$author$project$Chunky$slab,
							$elm$html$Html$a,
							_List_fromArray(
								[
									$elm$html$Html$Attributes$href(
									$author$project$UI$Page$toString(
										$author$project$UI$Page$Sources($author$project$UI$Sources$Page$New)))
								]),
							_List_fromArray(
								['text-inherit', 'block', 'leading-normal', 'mt-2', 'opacity-40', 'text-center']),
							_List_fromArray(
								[
									$elm$html$Html$text('Nothing here yet,'),
									$author$project$Chunky$lineBreak,
									$elm$html$Html$text('add some music first.')
								]))
						])) : $author$project$Chunky$nothing
				]));
	});
var $author$project$UI$Queue$Types$ShowHistoryMenu = F2(
	function (a, b) {
		return {$: 'ShowHistoryMenu', a: a, b: b};
	});
var $author$project$UI$Queue$View$historyItem = F2(
	function (idx, item) {
		var identifiedTrack = item.identifiedTrack;
		var _v0 = identifiedTrack;
		var track = _v0.b;
		return {
			actions: _List_fromArray(
				[
					{
					icon: $icidasset$elm_material_icons$Material$Icons$Round$more_vert,
					msg: $elm$core$Maybe$Just(
						A2(
							$elm$core$Basics$composeL,
							$author$project$UI$Types$QueueMsg,
							$author$project$UI$Queue$Types$ShowHistoryMenu(item))),
					title: 'Menu'
				}
				]),
			isSelected: false,
			label: A2(
				$author$project$Chunky$inline,
				_List_fromArray(
					['block', 'truncate']),
				_List_fromArray(
					[
						A2(
						$author$project$Chunky$inline,
						_List_fromArray(
							['inline-block', 'text-xs', 'mr-2']),
						_List_fromArray(
							[
								$elm$html$Html$text(
								$elm$core$String$fromInt(idx + 1)),
								$elm$html$Html$text('.')
							])),
						$elm$html$Html$text(track.tags.artist + (' - ' + track.tags.title))
					])),
			msg: $elm$core$Maybe$Nothing
		};
	});
var $author$project$UI$Queue$View$historyView = F2(
	function (playedPreviously, dnd) {
		return A2(
			$author$project$UI$Kit$receptacle,
			{
				scrolling: !$author$project$UI$DnD$isDragging(dnd)
			},
			_List_fromArray(
				[
					$author$project$UI$Navigation$local(
					_List_fromArray(
						[
							_Utils_Tuple3(
							$author$project$UI$Navigation$Icon($icidasset$elm_material_icons$Material$Icons$Round$arrow_back),
							A2($author$project$UI$Navigation$Label, $author$project$Common$backToIndex, $author$project$UI$Navigation$Hidden),
							$author$project$UI$Navigation$NavigateToPage($author$project$UI$Page$Index)),
							_Utils_Tuple3(
							$author$project$UI$Navigation$Icon($icidasset$elm_material_icons$Material$Icons$Round$update),
							A2($author$project$UI$Navigation$Label, 'Up next', $author$project$UI$Navigation$Shown),
							$author$project$UI$Navigation$NavigateToPage(
								$author$project$UI$Page$Queue($author$project$UI$Queue$Page$Index)))
						])),
					$elm$core$List$isEmpty(playedPreviously) ? A2(
					$author$project$Chunky$chunk,
					_List_fromArray(
						['relative']),
					_List_fromArray(
						[
							A2(
							$author$project$Chunky$chunk,
							_List_fromArray(
								['absolute', 'left-0', 'top-0']),
							_List_fromArray(
								[
									$author$project$UI$Kit$canister(
									_List_fromArray(
										[
											$author$project$UI$Kit$h1('History')
										]))
								]))
						])) : $author$project$UI$Kit$canister(
					_List_fromArray(
						[
							$author$project$UI$Kit$h1('History'),
							A2(
							$author$project$Chunky$chunky,
							_List_fromArray(
								['mt-3']),
							A2(
								$author$project$UI$List$view,
								$author$project$UI$List$Normal,
								A2(
									$elm$core$List$indexedMap,
									$author$project$UI$Queue$View$historyItem,
									$elm$core$List$reverse(playedPreviously))))
						])),
					$elm$core$List$isEmpty(playedPreviously) ? $author$project$UI$Kit$centeredContent(
					_List_fromArray(
						[
							A2(
							$author$project$Chunky$chunk,
							_List_fromArray(
								['opacity-30']),
							_List_fromArray(
								[
									A2($icidasset$elm_material_icons$Material$Icons$Round$music_note, 64, $icidasset$elm_material_icons$Material$Icons$Types$Inherit)
								])),
							A2(
							$author$project$Chunky$chunk,
							_List_fromArray(
								['leading-normal', 'mt-2', 'opacity-40', 'text-center']),
							_List_fromArray(
								[
									$elm$html$Html$text('Nothing here yet,'),
									$author$project$Chunky$lineBreak,
									$elm$html$Html$text('play some music first.')
								]))
						])) : $author$project$Chunky$nothing
				]));
	});
var $elm$virtual_dom$VirtualDom$lazy3 = _VirtualDom_lazy3;
var $elm$html$Html$Lazy$lazy3 = $elm$virtual_dom$VirtualDom$lazy3;
var $author$project$UI$Queue$View$view = F2(
	function (page, model) {
		if (page.$ === 'History') {
			return A3($elm$html$Html$Lazy$lazy2, $author$project$UI$Queue$View$historyView, model.playedPreviously, model.dnd);
		} else {
			return A4($elm$html$Html$Lazy$lazy3, $author$project$UI$Queue$View$futureView, model.playingNext, model.selectedQueueItem, model.dnd);
		}
	});
var $author$project$UI$Navigation$OpenLinkInNewPage = function (a) {
	return {$: 'OpenLinkInNewPage', a: a};
};
var $icidasset$elm_material_icons$Material$Icons$Round$account_circle = A2(
	$icidasset$elm_material_icons$Material$Icons$Internal$icon,
	_List_fromArray(
		[
			$icidasset$elm_material_icons$Material$Icons$Internal$b('new 0 0 24 24'),
			$icidasset$elm_material_icons$Material$Icons$Internal$v('0 0 24 24')
		]),
	_List_fromArray(
		[
			A2(
			$elm$svg$Svg$g,
			_List_Nil,
			_List_fromArray(
				[
					A2(
					$elm$svg$Svg$rect,
					_List_fromArray(
						[
							$icidasset$elm_material_icons$Material$Icons$Internal$f('none')
						]),
					_List_Nil),
					A2(
					$elm$svg$Svg$rect,
					_List_fromArray(
						[
							$icidasset$elm_material_icons$Material$Icons$Internal$f('none')
						]),
					_List_Nil)
				])),
			A2(
			$elm$svg$Svg$g,
			_List_Nil,
			_List_fromArray(
				[
					A2(
					$icidasset$elm_material_icons$Material$Icons$Internal$p,
					_List_fromArray(
						[
							$elm$svg$Svg$Attributes$d('M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 4c1.93 0 3.5 1.57 3.5 3.5S13.93 13 12 13s-3.5-1.57-3.5-3.5S10.07 6 12 6zm0 14c-2.03 0-4.43-.82-6.14-2.88C7.55 15.8 9.68 15 12 15s4.45.8 6.14 2.12C16.43 19.18 14.03 20 12 20z')
						]),
					_List_Nil)
				]))
		]));
var $author$project$UI$Types$ConnectLastFm = {$: 'ConnectLastFm'};
var $author$project$UI$Types$DisconnectLastFm = {$: 'DisconnectLastFm'};
var $author$project$UI$Types$ReloadApp = {$: 'ReloadApp'};
var $author$project$UI$Tracks$Types$ToggleCoverSelectionReducesPool = {$: 'ToggleCoverSelectionReducesPool'};
var $author$project$UI$Tracks$Types$ToggleHideDuplicates = {$: 'ToggleHideDuplicates'};
var $author$project$UI$Sources$Types$ToggleProcessAutomatically = {$: 'ToggleProcessAutomatically'};
var $author$project$UI$Types$ToggleRememberProgress = {$: 'ToggleRememberProgress'};
var $author$project$UI$Types$ChooseBackdrop = function (a) {
	return {$: 'ChooseBackdrop', a: a};
};
var $author$project$UI$Backdrop$backgroundPositioning = function (filename) {
	switch (filename) {
		case '2.jpg':
			return A2($elm$html$Html$Attributes$style, 'background-position', 'center 68%');
		case '3.jpg':
			return A2($elm$html$Html$Attributes$style, 'background-position', 'center 30%');
		case '4.jpg':
			return A2($elm$html$Html$Attributes$style, 'background-position', 'center 96.125%');
		case '6.jpg':
			return A2($elm$html$Html$Attributes$style, 'background-position', 'center 40%');
		case '11.jpg':
			return A2($elm$html$Html$Attributes$style, 'background-position', 'center 67.25%');
		case '19.jpg':
			return A2($elm$html$Html$Attributes$style, 'background-position', 'center 13%');
		case '20.jpg':
			return A2($elm$html$Html$Attributes$style, 'background-position', 'center 39.75%');
		case '21.jpg':
			return A2($elm$html$Html$Attributes$style, 'background-position', 'center 52.5%');
		case '22.jpg':
			return A2($elm$html$Html$Attributes$style, 'background-position', 'center top');
		case '23.jpg':
			return A2($elm$html$Html$Attributes$style, 'background-position', 'center 92.5%');
		case '24.jpg':
			return A2($elm$html$Html$Attributes$style, 'background-position', 'center top');
		case '25.jpg':
			return A2($elm$html$Html$Attributes$style, 'background-position', 'center 50%');
		case '27.jpg':
			return A2($elm$html$Html$Attributes$style, 'background-position', 'center top');
		default:
			return A2($elm$html$Html$Attributes$style, 'background-position', 'center bottom');
	}
};
var $author$project$UI$Backdrop$options = _List_fromArray(
	[
		_Utils_Tuple2('1.jpg', 'Option 1'),
		_Utils_Tuple2('2.jpg', 'Option 2'),
		_Utils_Tuple2('3.jpg', 'Option 3'),
		_Utils_Tuple2('4.jpg', 'Option 4'),
		_Utils_Tuple2('5.jpg', 'Option 5'),
		_Utils_Tuple2('6.jpg', 'Option 6'),
		_Utils_Tuple2('7.jpg', 'Option 7'),
		_Utils_Tuple2('8.jpg', 'Option 8'),
		_Utils_Tuple2('9.jpg', 'Option 9'),
		_Utils_Tuple2('10.jpg', 'Option 10'),
		_Utils_Tuple2('11.jpg', 'Option 11'),
		_Utils_Tuple2('12.jpg', 'Option 12'),
		_Utils_Tuple2('13.jpg', 'Option 13'),
		_Utils_Tuple2('14.jpg', 'Option 14'),
		_Utils_Tuple2('15.jpg', 'Option 15'),
		_Utils_Tuple2('16.jpg', 'Option 16'),
		_Utils_Tuple2('17.jpg', 'Option 17'),
		_Utils_Tuple2('18.jpg', 'Option 18'),
		_Utils_Tuple2('19.jpg', 'Option 19'),
		_Utils_Tuple2('20.jpg', 'Option 20'),
		_Utils_Tuple2('21.jpg', 'Option 21 (default)'),
		_Utils_Tuple2('22.jpg', 'Option 22'),
		_Utils_Tuple2('23.jpg', 'Option 23'),
		_Utils_Tuple2('24.jpg', 'Option 24'),
		_Utils_Tuple2('25.jpg', 'Option 25'),
		_Utils_Tuple2('26.jpg', 'Option 26'),
		_Utils_Tuple2('27.jpg', 'Option 27'),
		_Utils_Tuple2('28.jpg', 'Option 28'),
		_Utils_Tuple2('29.jpg', 'Option 29'),
		_Utils_Tuple2('30.jpg', 'Option 30')
	]);
var $author$project$UI$Settings$backgroundImage = function (chosenBackground) {
	return A2(
		$author$project$Chunky$chunk,
		_List_fromArray(
			['flex', 'flex-wrap']),
		A2(
			$elm$core$List$map,
			function (_v0) {
				var filename = _v0.a;
				var isActive = _Utils_eq(
					chosenBackground,
					$elm$core$Maybe$Just(filename));
				return A3(
					$author$project$Chunky$brick,
					_List_fromArray(
						[
							$elm$html$Html$Events$onClick(
							$author$project$UI$Types$ChooseBackdrop(filename))
						]),
					_List_fromArray(
						['cursor-pointer', 'h-0', 'overflow-hidden', 'pt-1/8', 'relative', 'w-1/5', 'md:pt-1/16', 'md:w-1/10']),
					_List_fromArray(
						[
							isActive ? A2(
							$author$project$Chunky$chunk,
							_List_fromArray(
								['absolute', 'bg-base04', 'inset-0', 'mb-1', 'mr-1', 'rounded-sm', 'z-10', 'sm:mb-2', 'sm:mr-2', 'md:mb-1', 'md:mr-1']),
							_List_Nil) : $author$project$Chunky$nothing,
							A3(
							$author$project$Chunky$brick,
							_List_fromArray(
								[
									$author$project$UI$Backdrop$backgroundPositioning(filename),
									A2(
									$elm$html$Html$Attributes$style,
									'background-image',
									A2(
										$elm$core$String$append,
										'url(images/Background/Thumbnails/',
										A2($elm$core$String$append, filename, ')')))
								]),
							_List_fromArray(
								[
									'absolute',
									'bg-cover',
									'inset-0',
									'mb-1',
									'mr-1',
									'rounded-sm',
									'z-20',
									'sm:mb-2',
									'sm:mr-2',
									'md:mb-1',
									'md:mr-1',
									A3($author$project$Conditional$ifThenElse, isActive, 'opacity-20', 'opacity-100')
								]),
							_List_Nil),
							isActive ? A2(
							$author$project$Chunky$chunk,
							_List_fromArray(
								['absolute', 'inset-0', 'flex', 'font-semibold', 'items-center', 'justify-center', 'leading-snug', 'mb-1', 'mr-1', 'px-2', 'text-center', 'text-white', 'text-xs', 'z-30', 'sm:mb-2', 'sm:mr-2', 'md:mb-1', 'md:mr-1', 'dark:text-base07']),
							_List_fromArray(
								[
									A2(
									$author$project$Chunky$chunk,
									_List_fromArray(
										['mt-px']),
									_List_fromArray(
										[
											A2($icidasset$elm_material_icons$Material$Icons$Round$check, 16, $icidasset$elm_material_icons$Material$Icons$Types$Inherit)
										]))
								])) : $author$project$Chunky$nothing
						]));
			},
			$author$project$UI$Backdrop$options));
};
var $icidasset$elm_material_icons$Material$Icons$Round$check_box = A2(
	$icidasset$elm_material_icons$Material$Icons$Internal$icon,
	_List_fromArray(
		[
			$icidasset$elm_material_icons$Material$Icons$Internal$v('0 0 24 24')
		]),
	_List_fromArray(
		[
			A2(
			$icidasset$elm_material_icons$Material$Icons$Internal$p,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$d('M0 0h24v24H0V0z'),
					$icidasset$elm_material_icons$Material$Icons$Internal$f('none')
				]),
			_List_Nil),
			A2(
			$icidasset$elm_material_icons$Material$Icons$Internal$p,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$d('M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-8.29 13.29c-.39.39-1.02.39-1.41 0L5.71 12.7c-.39-.39-.39-1.02 0-1.41.39-.39 1.02-.39 1.41 0L10 14.17l6.88-6.88c.39-.39 1.02-.39 1.41 0 .39.39.39 1.02 0 1.41l-7.58 7.59z')
				]),
			_List_Nil)
		]));
var $icidasset$elm_material_icons$Material$Icons$Round$check_box_outline_blank = A2(
	$icidasset$elm_material_icons$Material$Icons$Internal$icon,
	_List_fromArray(
		[
			$icidasset$elm_material_icons$Material$Icons$Internal$v('0 0 24 24')
		]),
	_List_fromArray(
		[
			A2(
			$icidasset$elm_material_icons$Material$Icons$Internal$p,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$d('M0 0h24v24H0V0z'),
					$icidasset$elm_material_icons$Material$Icons$Internal$f('none')
				]),
			_List_Nil),
			A2(
			$icidasset$elm_material_icons$Material$Icons$Internal$p,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$d('M18 19H6c-.55 0-1-.45-1-1V6c0-.55.45-1 1-1h12c.55 0 1 .45 1 1v12c0 .55-.45 1-1 1zm1-16H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z')
				]),
			_List_Nil)
		]));
var $author$project$UI$Kit$checkbox = function (opts) {
	return A3(
		$author$project$Chunky$brick,
		_List_fromArray(
			[
				$elm$html$Html$Events$onClick(opts.toggleMsg),
				A2($elm$html$Html$Attributes$style, 'left', '-3px')
			]),
		_List_fromArray(
			['inline-block', 'cursor-pointer', 'relative']),
		_List_fromArray(
			[
				opts.checked ? A2($icidasset$elm_material_icons$Material$Icons$Round$check_box, 22, $icidasset$elm_material_icons$Material$Icons$Types$Inherit) : A2($icidasset$elm_material_icons$Material$Icons$Round$check_box_outline_blank, 22, $icidasset$elm_material_icons$Material$Icons$Types$Inherit)
			]));
};
var $ryannhg$date_format$DateFormat$DayOfMonthSuffix = {$: 'DayOfMonthSuffix'};
var $ryannhg$date_format$DateFormat$dayOfMonthSuffix = $ryannhg$date_format$DateFormat$DayOfMonthSuffix;
var $icidasset$elm_material_icons$Material$Icons$Round$downloading = A2(
	$icidasset$elm_material_icons$Material$Icons$Internal$icon,
	_List_fromArray(
		[
			$icidasset$elm_material_icons$Material$Icons$Internal$b('new 0 0 24 24'),
			$icidasset$elm_material_icons$Material$Icons$Internal$v('0 0 24 24')
		]),
	_List_fromArray(
		[
			A2(
			$elm$svg$Svg$g,
			_List_Nil,
			_List_fromArray(
				[
					A2(
					$elm$svg$Svg$rect,
					_List_fromArray(
						[
							$icidasset$elm_material_icons$Material$Icons$Internal$f('none')
						]),
					_List_Nil)
				])),
			A2(
			$elm$svg$Svg$g,
			_List_Nil,
			_List_fromArray(
				[
					A2(
					$elm$svg$Svg$g,
					_List_Nil,
					_List_fromArray(
						[
							A2(
							$icidasset$elm_material_icons$Material$Icons$Internal$p,
							_List_fromArray(
								[
									$elm$svg$Svg$Attributes$d('M17.33,3.55c-0.94-0.6-1.99-1.04-3.12-1.3C13.59,2.11,13,2.59,13,3.23v0c0,0.45,0.3,0.87,0.74,0.97 c0.91,0.2,1.77,0.56,2.53,1.05c0.39,0.25,0.89,0.17,1.22-0.16l0,0C17.94,4.64,17.87,3.89,17.33,3.55z M20.77,11L20.77,11 c0.64,0,1.13-0.59,0.98-1.21c-0.26-1.12-0.7-2.17-1.3-3.12c-0.34-0.54-1.1-0.61-1.55-0.16l0,0c-0.32,0.32-0.4,0.83-0.16,1.22 c0.49,0.77,0.85,1.62,1.05,2.53C19.9,10.7,20.31,11,20.77,11z M18.9,17.49L18.9,17.49c0.45,0.45,1.21,0.38,1.55-0.15 c0.6-0.94,1.04-1.99,1.3-3.11c0.14-0.62-0.35-1.21-0.98-1.21h0c-0.45,0-0.87,0.3-0.97,0.74c-0.2,0.91-0.57,1.76-1.05,2.53 C18.5,16.66,18.58,17.17,18.9,17.49z M13,20.77L13,20.77c0,0.64,0.59,1.13,1.21,0.98c1.12-0.26,2.17-0.7,3.11-1.3 c0.54-0.34,0.61-1.1,0.16-1.55l0,0c-0.32-0.32-0.83-0.4-1.21-0.15c-0.76,0.49-1.61,0.85-2.53,1.05C13.3,19.9,13,20.31,13,20.77z M13,12V8c0-0.55-0.45-1-1-1h0c-0.55,0-1,0.45-1,1v4H9.41c-0.89,0-1.34,1.08-0.71,1.71l2.59,2.59c0.39,0.39,1.02,0.39,1.41,0 l2.59-2.59c0.63-0.63,0.18-1.71-0.71-1.71H13z M11,20.77L11,20.77c0,0.64-0.59,1.13-1.21,0.99C5.33,20.75,2,16.77,2,12 s3.33-8.75,7.79-9.75C10.41,2.11,11,2.59,11,3.23v0c0,0.46-0.31,0.87-0.76,0.97C6.67,5,4,8.19,4,12s2.67,7,6.24,7.8 C10.69,19.9,11,20.31,11,20.77z')
								]),
							_List_Nil)
						]))
				]))
		]));
var $elm$html$Html$img = _VirtualDom_node('img');
var $elm$html$Html$label = _VirtualDom_node('label');
var $author$project$UI$Kit$label = F2(
	function (attributes, t) {
		return A4(
			$author$project$Chunky$slab,
			$elm$html$Html$label,
			A2(
				$elm$core$List$cons,
				A2($elm$html$Html$Attributes$style, 'font-size', '11.25px'),
				attributes),
			_List_fromArray(
				['antialiased', 'block', 'font-bold', 'leading-normal', 'opacity-90', 'uppercase']),
			_List_fromArray(
				[
					$elm$html$Html$text(t)
				]));
	});
var $author$project$UI$Settings$label = function (l) {
	return A2(
		$author$project$Chunky$chunk,
		_List_fromArray(
			['mb-3', 'mt-6', 'pb-px']),
		_List_fromArray(
			[
				A2($author$project$UI$Kit$label, _List_Nil, l)
			]));
};
var $elm$virtual_dom$VirtualDom$lazy = _VirtualDom_lazy;
var $elm$html$Html$Lazy$lazy = $elm$virtual_dom$VirtualDom$lazy;
var $ryannhg$date_format$DateFormat$MonthNameAbbreviated = {$: 'MonthNameAbbreviated'};
var $ryannhg$date_format$DateFormat$monthNameAbbreviated = $ryannhg$date_format$DateFormat$MonthNameAbbreviated;
var $elm$html$Html$Attributes$src = function (url) {
	return A2(
		$elm$html$Html$Attributes$stringProperty,
		'src',
		_VirtualDom_noJavaScriptOrHtmlUri(url));
};
var $elm$html$Html$Attributes$width = function (n) {
	return A2(
		_VirtualDom_attribute,
		'width',
		$elm$core$String$fromInt(n));
};
var $author$project$UI$Settings$content = function (deps) {
	return _List_fromArray(
		[
			$author$project$UI$Kit$h1('Settings'),
			A2(
			$author$project$Chunky$chunk,
			_List_fromArray(
				['mt-6']),
			_List_fromArray(
				[
					A2(
					$author$project$Chunky$chunk,
					_List_fromArray(
						['flex', 'flex-col', 'items-center', 'justify-center', 'text-base05', 'text-xs', 'dark:text-base03']),
					_List_fromArray(
						[
							A4(
							$author$project$Chunky$slab,
							$elm$html$Html$img,
							_List_fromArray(
								[
									$elm$html$Html$Attributes$src('images/diffuse-dark.svg'),
									$elm$html$Html$Attributes$width(160)
								]),
							_List_fromArray(
								['dark:hidden']),
							_List_Nil),
							A4(
							$author$project$Chunky$slab,
							$elm$html$Html$img,
							_List_fromArray(
								[
									$elm$html$Html$Attributes$src('images/diffuse-light.svg'),
									$elm$html$Html$Attributes$width(160)
								]),
							_List_fromArray(
								['hidden dark:block']),
							_List_Nil),
							A2(
							$author$project$Chunky$chunk,
							_List_fromArray(
								['italic', 'mt-3', 'text-center']),
							_List_fromArray(
								[
									$elm$html$Html$text('Version '),
									$elm$html$Html$text(deps.version),
									$author$project$Chunky$lineBreak,
									$elm$html$Html$text('Built on '),
									$elm$html$Html$text(
									A3(
										$ryannhg$date_format$DateFormat$format,
										_List_fromArray(
											[
												$ryannhg$date_format$DateFormat$monthNameAbbreviated,
												$ryannhg$date_format$DateFormat$text(' '),
												$ryannhg$date_format$DateFormat$dayOfMonthSuffix,
												$ryannhg$date_format$DateFormat$text(' '),
												$ryannhg$date_format$DateFormat$yearNumber,
												$ryannhg$date_format$DateFormat$text(', '),
												$ryannhg$date_format$DateFormat$hourMilitaryFixed,
												$ryannhg$date_format$DateFormat$text(':'),
												$ryannhg$date_format$DateFormat$minuteFixed,
												$ryannhg$date_format$DateFormat$text(':'),
												$ryannhg$date_format$DateFormat$secondFixed
											]),
										deps.currentTimeZone,
										$elm$time$Time$millisToPosix(1000 * deps.buildTimestamp))),
									A2(
									$author$project$Chunky$chunk,
									_List_fromArray(
										['not-italic', 'mt-3']),
									_List_fromArray(
										[
											function () {
											var _v0 = deps.serviceWorkerStatus;
											switch (_v0.$) {
												case 'InstallingInitial':
													return A2(
														$author$project$Chunky$inline,
														_List_fromArray(
															['inline-flex', 'items-center']),
														_List_fromArray(
															[
																$elm$html$Html$text('Setting up service worker'),
																A2(
																$author$project$Chunky$inline,
																_List_fromArray(
																	['ml-1']),
																_List_fromArray(
																	[
																		A2($icidasset$elm_material_icons$Material$Icons$Round$downloading, 12, $icidasset$elm_material_icons$Material$Icons$Types$Inherit)
																	]))
															]));
												case 'InstallingNew':
													return A2(
														$author$project$Chunky$inline,
														_List_fromArray(
															['inline-flex', 'items-center']),
														_List_fromArray(
															[
																$elm$html$Html$text('Installing new version'),
																A2(
																$author$project$Chunky$inline,
																_List_fromArray(
																	['ml-1']),
																_List_fromArray(
																	[
																		A2($icidasset$elm_material_icons$Material$Icons$Round$downloading, 12, $icidasset$elm_material_icons$Material$Icons$Types$Inherit)
																	]))
															]));
												case 'WaitingForActivation':
													return A2(
														$author$project$Chunky$inline,
														_List_Nil,
														_List_fromArray(
															[
																$elm$html$Html$text('Update available'),
																A3(
																$author$project$Chunky$brick,
																_List_fromArray(
																	[
																		A3(
																		$elm_community$maybe_extra$Maybe$Extra$unwrap,
																		$elm$html$Html$Attributes$class('bg-white-20'),
																		A2(
																			$elm$core$Basics$composeL,
																			$elm$html$Html$Attributes$style('background-color'),
																			$avh4$elm_color$Color$toCssString),
																		deps.extractedBackdropColor),
																		$elm$html$Html$Events$onClick($author$project$UI$Types$ReloadApp)
																	]),
																_List_fromArray(
																	['bg-base06', 'cursor-pointer', 'inline-block', 'leading-none', 'ml-1', 'p-1', 'rounded', 'text-white', 'dark:bg-base01']),
																_List_fromArray(
																	[
																		$elm$html$Html$text('Reload app')
																	]))
															]));
												default:
													return $author$project$Chunky$nothing;
											}
										}()
										]))
								]))
						]))
				])),
			A2(
			$author$project$Chunky$chunk,
			_List_fromArray(
				['mt-6']),
			_List_fromArray(
				[
					$author$project$UI$Settings$label('Background Image'),
					A2($elm$html$Html$Lazy$lazy, $author$project$UI$Settings$backgroundImage, deps.chosenBackgroundImage)
				])),
			A2(
			$author$project$Chunky$chunk,
			_List_fromArray(
				['flex', 'flex-wrap', 'pt-2']),
			_List_fromArray(
				[
					A2(
					$author$project$Chunky$chunk,
					_List_fromArray(
						['w-full', 'md:w-1/2']),
					_List_fromArray(
						[
							$author$project$UI$Settings$label('Downloaded tracks'),
							A4(
							$author$project$UI$Kit$buttonWithColor,
							$author$project$UI$Kit$Gray,
							$author$project$UI$Kit$Normal,
							$author$project$UI$Types$TracksMsg($author$project$UI$Tracks$Types$ClearCache),
							$elm$html$Html$text('Clear cache'))
						])),
					A2(
					$author$project$Chunky$chunk,
					_List_fromArray(
						['w-1/2']),
					_List_fromArray(
						[
							$author$project$UI$Settings$label('Last.fm scrobbling'),
							function () {
							var _v1 = _Utils_Tuple2(deps.lastFm.authenticating, deps.lastFm.sessionKey);
							if (_v1.b.$ === 'Just') {
								return $author$project$UI$Kit$checkbox(
									{checked: true, toggleMsg: $author$project$UI$Types$DisconnectLastFm});
							} else {
								if (_v1.a) {
									var _v2 = _v1.b;
									return A4(
										$author$project$UI$Kit$buttonWithColor,
										$author$project$UI$Kit$Gray,
										$author$project$UI$Kit$Normal,
										$author$project$UI$Types$Bypass,
										$elm$html$Html$text('Connecting'));
								} else {
									var _v3 = _v1.b;
									return A4(
										$author$project$UI$Kit$buttonWithColor,
										$author$project$UI$Kit$Gray,
										$author$project$UI$Kit$Normal,
										$author$project$UI$Types$ConnectLastFm,
										$elm$html$Html$text('Connect'));
								}
							}
						}()
						]))
				])),
			A2(
			$author$project$Chunky$chunk,
			_List_fromArray(
				['flex', 'flex-wrap']),
			_List_fromArray(
				[
					A2(
					$author$project$Chunky$chunk,
					_List_fromArray(
						['w-full', 'md:w-1/2']),
					_List_fromArray(
						[
							$author$project$UI$Settings$label('Hide Duplicates'),
							$author$project$UI$Kit$checkbox(
							{
								checked: deps.hideDuplicateTracks,
								toggleMsg: $author$project$UI$Types$TracksMsg($author$project$UI$Tracks$Types$ToggleHideDuplicates)
							})
						])),
					A2(
					$author$project$Chunky$chunk,
					_List_fromArray(
						['w-full', 'md:w-1/2']),
					_List_fromArray(
						[
							$author$project$UI$Settings$label('Process sources automatically'),
							$author$project$UI$Kit$checkbox(
							{
								checked: deps.processAutomatically,
								toggleMsg: $author$project$UI$Types$SourcesMsg($author$project$UI$Sources$Types$ToggleProcessAutomatically)
							})
						]))
				])),
			A2(
			$author$project$Chunky$chunk,
			_List_fromArray(
				['flex', 'flex-wrap']),
			_List_fromArray(
				[
					A2(
					$author$project$Chunky$chunk,
					_List_fromArray(
						['w-full', 'md:w-1/2']),
					_List_fromArray(
						[
							$author$project$UI$Settings$label('Remember position on long tracks'),
							$author$project$UI$Kit$checkbox(
							{checked: deps.rememberProgress, toggleMsg: $author$project$UI$Types$ToggleRememberProgress})
						])),
					A2(
					$author$project$Chunky$chunk,
					_List_fromArray(
						['w-full', 'md:w-1/2']),
					_List_fromArray(
						[
							$author$project$UI$Settings$label('Cover selection reduces track pool'),
							$author$project$UI$Kit$checkbox(
							{
								checked: deps.coverSelectionReducesPool,
								toggleMsg: $author$project$UI$Types$TracksMsg($author$project$UI$Tracks$Types$ToggleCoverSelectionReducesPool)
							})
						]))
				]))
		]);
};
var $icidasset$elm_material_icons$Material$Icons$Round$help_outline = A2(
	$icidasset$elm_material_icons$Material$Icons$Internal$icon,
	_List_fromArray(
		[
			$icidasset$elm_material_icons$Material$Icons$Internal$v('0 0 24 24')
		]),
	_List_fromArray(
		[
			A2(
			$icidasset$elm_material_icons$Material$Icons$Internal$p,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$d('M0 0h24v24H0V0z'),
					$icidasset$elm_material_icons$Material$Icons$Internal$f('none')
				]),
			_List_Nil),
			A2(
			$icidasset$elm_material_icons$Material$Icons$Internal$p,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$d('M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm-1-4h2v2h-2zm1.61-9.96c-2.06-.3-3.88.97-4.43 2.79-.18.58.26 1.17.87 1.17h.2c.41 0 .74-.29.88-.67.32-.89 1.27-1.5 2.3-1.28.95.2 1.65 1.13 1.57 2.1-.1 1.34-1.62 1.63-2.45 2.88 0 .01-.01.01-.01.02-.01.02-.02.03-.03.05-.09.15-.18.32-.25.5-.01.03-.03.05-.04.08-.01.02-.01.04-.02.07-.12.34-.2.75-.2 1.25h2c0-.42.11-.77.28-1.07.02-.03.03-.06.05-.09.08-.14.18-.27.28-.39.01-.01.02-.03.03-.04.1-.12.21-.23.33-.34.96-.91 2.26-1.65 1.99-3.56-.24-1.74-1.61-3.21-3.35-3.47z')
				]),
			_List_Nil)
		]));
var $author$project$UI$Settings$index = function (deps) {
	return _List_fromArray(
		[
			$author$project$UI$Navigation$local(
			_List_fromArray(
				[
					_Utils_Tuple3(
					$author$project$UI$Navigation$Icon($icidasset$elm_material_icons$Material$Icons$Round$account_circle),
					A2($author$project$UI$Navigation$Label, 'Data & Sync', $author$project$UI$Navigation$Shown),
					$author$project$UI$Navigation$NavigateToPage(
						$author$project$UI$Page$Settings($author$project$UI$Settings$Page$Sync))),
					_Utils_Tuple3(
					$author$project$UI$Navigation$Icon($icidasset$elm_material_icons$Material$Icons$Round$help_outline),
					A2($author$project$UI$Navigation$Label, 'Help', $author$project$UI$Navigation$Shown),
					$author$project$UI$Navigation$OpenLinkInNewPage('about/'))
				])),
			$author$project$UI$Kit$canister(
			$elm$core$List$singleton(
				A2(
					$author$project$Chunky$chunk,
					_List_fromArray(
						['pb-4']),
					$author$project$UI$Settings$content(deps))))
		]);
};
var $author$project$UI$Kit$Accent = {$: 'Accent'};
var $author$project$UI$Kit$Filled = {$: 'Filled'};
var $author$project$UI$Syncing$Types$ShowUpdateEncryptionKeyScreen = function (a) {
	return {$: 'ShowUpdateEncryptionKeyScreen', a: a};
};
var $elm$svg$Svg$Attributes$opacity = _VirtualDom_attribute('opacity');
var $icidasset$elm_material_icons$Material$Icons$Internal$o = $elm$svg$Svg$Attributes$opacity;
var $icidasset$elm_material_icons$Material$Icons$Round$lock = A2(
	$icidasset$elm_material_icons$Material$Icons$Internal$icon,
	_List_fromArray(
		[
			$icidasset$elm_material_icons$Material$Icons$Internal$v('0 0 24 24')
		]),
	_List_fromArray(
		[
			A2(
			$elm$svg$Svg$g,
			_List_fromArray(
				[
					$icidasset$elm_material_icons$Material$Icons$Internal$f('none')
				]),
			_List_fromArray(
				[
					A2(
					$icidasset$elm_material_icons$Material$Icons$Internal$p,
					_List_fromArray(
						[
							$elm$svg$Svg$Attributes$d('M0 0h24v24H0V0z')
						]),
					_List_Nil),
					A2(
					$icidasset$elm_material_icons$Material$Icons$Internal$p,
					_List_fromArray(
						[
							$elm$svg$Svg$Attributes$d('M0 0h24v24H0V0z'),
							$icidasset$elm_material_icons$Material$Icons$Internal$o('.87')
						]),
					_List_Nil)
				])),
			A2(
			$icidasset$elm_material_icons$Material$Icons$Internal$p,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$d('M18 8h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2zm-6 9c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2zM9 8V6c0-1.66 1.34-3 3-3s3 1.34 3 3v2H9z')
				]),
			_List_Nil)
		]));
var $author$project$UI$Settings$Common$changePassphrase = function (method) {
	return _Utils_Tuple3(
		$author$project$UI$Navigation$Icon($icidasset$elm_material_icons$Material$Icons$Round$lock),
		A2($author$project$UI$Navigation$Label, 'Change Passphrase', $author$project$UI$Navigation$Shown),
		$author$project$UI$Navigation$PerformMsg(
			$author$project$UI$Types$SyncingMsg(
				$author$project$UI$Syncing$Types$ShowUpdateEncryptionKeyScreen(method))));
};
var $author$project$UI$Kit$focusScreen = F2(
	function (_v0, nodes) {
		var icon = _v0.icon;
		var iconHref = _v0.iconHref;
		var text = _v0.text;
		var textHref = _v0.textHref;
		return $author$project$UI$Kit$centeredContent(
			$elm$core$List$singleton(
				A2(
					$author$project$Chunky$chunk,
					_List_fromArray(
						['flex', 'flex-col', 'items-center', 'max-h-full', 'overflow-y-auto', 'px-4', 'py-8', 'w-full']),
					_List_fromArray(
						[
							A4(
							$author$project$Chunky$slab,
							function () {
								if (iconHref.$ === 'Just') {
									return $elm$html$Html$a;
								} else {
									return $elm$html$Html$div;
								}
							}(),
							function () {
								if (iconHref.$ === 'Just') {
									var h = iconHref.a;
									return _List_fromArray(
										[
											$elm$html$Html$Attributes$href(h)
										]);
								} else {
									return _List_Nil;
								}
							}(),
							_List_fromArray(
								['block', 'opacity-30', 'text-inherit']),
							_List_fromArray(
								[
									A2(icon, 64, $icidasset$elm_material_icons$Material$Icons$Types$Inherit)
								])),
							A4(
							$author$project$Chunky$slab,
							function () {
								if (iconHref.$ === 'Just') {
									return $elm$html$Html$a;
								} else {
									return $elm$html$Html$div;
								}
							}(),
							function () {
								if (textHref.$ === 'Just') {
									var h = textHref.a;
									return _List_fromArray(
										[
											$elm$html$Html$Attributes$href(h)
										]);
								} else {
									return _List_Nil;
								}
							}(),
							_List_fromArray(
								['block', 'leading-normal', 'mt-2', 'opacity-40', 'text-center', 'text-inherit']),
							text),
							A2(
							$author$project$Chunky$chunk,
							_List_fromArray(
								['max-w-full', 'mt-4']),
							nodes)
						]))));
	});
var $author$project$UI$Settings$Data$view = function (activeMethod) {
	return A2(
		$author$project$UI$Kit$receptacle,
		{scrolling: true},
		_List_fromArray(
			[
				$author$project$UI$Navigation$local(
				A2(
					$elm$core$List$append,
					_List_fromArray(
						[
							_Utils_Tuple3(
							$author$project$UI$Navigation$Icon($icidasset$elm_material_icons$Material$Icons$Round$arrow_back),
							A2($author$project$UI$Navigation$Label, 'Settings', $author$project$UI$Navigation$Hidden),
							$author$project$UI$Navigation$NavigateToPage(
								$author$project$UI$Page$Settings($author$project$UI$Settings$Page$Index))),
							_Utils_Tuple3(
							$author$project$UI$Navigation$Icon($icidasset$elm_material_icons$Material$Icons$Round$account_circle),
							A2($author$project$UI$Navigation$Label, 'Storage Service', $author$project$UI$Navigation$Shown),
							$author$project$UI$Navigation$NavigateToPage(
								$author$project$UI$Page$Settings($author$project$UI$Settings$Page$Sync)))
						]),
					function () {
						if (activeMethod.$ === 'Just') {
							switch (activeMethod.a.$) {
								case 'Dropbox':
									var d = activeMethod.a.a;
									return _List_fromArray(
										[
											$author$project$UI$Settings$Common$changePassphrase(
											$author$project$User$Layer$Dropbox(d))
										]);
								case 'Fission':
									return _List_Nil;
								case 'Ipfs':
									var i = activeMethod.a.a;
									return _List_fromArray(
										[
											$author$project$UI$Settings$Common$changePassphrase(
											$author$project$User$Layer$Ipfs(i))
										]);
								default:
									var r = activeMethod.a.a;
									return _List_fromArray(
										[
											$author$project$UI$Settings$Common$changePassphrase(
											$author$project$User$Layer$RemoteStorage(r))
										]);
							}
						} else {
							return _List_Nil;
						}
					}())),
				A2(
				$author$project$Chunky$chunk,
				_List_fromArray(
					['relative']),
				_List_fromArray(
					[
						A2(
						$author$project$Chunky$chunk,
						_List_fromArray(
							['absolute', 'left-0', 'top-0']),
						_List_fromArray(
							[
								$author$project$UI$Kit$canister(
								_List_fromArray(
									[
										$author$project$UI$Kit$h1('Data Backup')
									]))
							]))
					])),
				A2(
				$author$project$UI$Kit$focusScreen,
				{
					icon: $icidasset$elm_material_icons$Material$Icons$Round$archive,
					iconHref: $elm$core$Maybe$Nothing,
					text: $elm$core$List$singleton(
						A2(
							$author$project$Chunky$chunk,
							_List_fromArray(
								['max-w-sm']),
							$elm$core$List$singleton(
								$elm$html$Html$text('You can download a snapshot of your user data, or recover an account by uploading a snapshot.')))),
					textHref: $elm$core$Maybe$Nothing
				},
				_List_fromArray(
					[
						A2(
						$author$project$Chunky$chunk,
						_List_fromArray(
							['flex', 'space-x-2.5']),
						_List_fromArray(
							[
								A3(
								$author$project$UI$Kit$button,
								$author$project$UI$Kit$Normal,
								$author$project$UI$Types$RequestImport,
								$elm$html$Html$text('Import snapshot')),
								A4(
								$author$project$UI$Kit$buttonWithColor,
								$author$project$UI$Kit$Accent,
								$author$project$UI$Kit$Filled,
								$author$project$UI$Types$Export,
								$elm$html$Html$text('Download snapshot'))
							]))
					]))
			]));
};
var $author$project$UI$Syncing$Types$StopSync = {$: 'StopSync'};
var $icidasset$elm_material_icons$Material$Icons$Round$cancel = A2(
	$icidasset$elm_material_icons$Material$Icons$Internal$icon,
	_List_fromArray(
		[
			$icidasset$elm_material_icons$Material$Icons$Internal$v('0 0 24 24')
		]),
	_List_fromArray(
		[
			A2(
			$icidasset$elm_material_icons$Material$Icons$Internal$p,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$d('M0 0h24v24H0V0z'),
					$icidasset$elm_material_icons$Material$Icons$Internal$f('none'),
					$icidasset$elm_material_icons$Material$Icons$Internal$o('.87')
				]),
			_List_Nil),
			A2(
			$icidasset$elm_material_icons$Material$Icons$Internal$p,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$d('M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm4.3 14.3c-.39.39-1.02.39-1.41 0L12 13.41 9.11 16.3c-.39.39-1.02.39-1.41 0-.39-.39-.39-1.02 0-1.41L10.59 12 7.7 9.11c-.39-.39-.39-1.02 0-1.41.39-.39 1.02-.39 1.41 0L12 10.59l2.89-2.89c.39-.39 1.02-.39 1.41 0 .39.39.39 1.02 0 1.41L13.41 12l2.89 2.89c.38.38.38 1.02 0 1.41z')
				]),
			_List_Nil)
		]));
var $author$project$UI$Settings$Sync$opacity = F2(
	function (isSelected, activeMethod) {
		return isSelected ? 'opacity-100' : ($elm_community$maybe_extra$Maybe$Extra$isJust(activeMethod) ? 'opacity-50' : 'opacity-100');
	});
var $author$project$UI$Settings$Sync$methodInfoAction = F3(
	function (isSelected, activeMethod, method) {
		return {
			icon: F2(
				function (a, b) {
					return A2(
						$author$project$Chunky$inline,
						_List_fromArray(
							[
								A2($author$project$UI$Settings$Sync$opacity, isSelected, activeMethod)
							]),
						_List_fromArray(
							[
								A2($icidasset$elm_material_icons$Material$Icons$Round$help, a, b)
							]));
				}),
			msg: function () {
				switch (method.$) {
					case 'Dropbox':
						return $elm$core$Maybe$Just(
							function (_v1) {
								return $author$project$UI$Types$OpenUrlOnNewPage('https://dropbox.com');
							});
					case 'Fission':
						return $elm$core$Maybe$Just(
							function (_v2) {
								return $author$project$UI$Types$OpenUrlOnNewPage('https://odd.dev');
							});
					case 'RemoteStorage':
						return $elm$core$Maybe$Just(
							function (_v3) {
								return $author$project$UI$Types$OpenUrlOnNewPage('https://remotestorage.io');
							});
					default:
						return $elm$core$Maybe$Just(
							function (_v4) {
								return $author$project$UI$Types$OpenUrlOnNewPage('https://ipfs.io');
							});
				}
			}(),
			title: 'Learn more about ' + $author$project$User$Layer$methodName(method)
		};
	});
var $author$project$UI$Settings$Sync$methodLabel = F4(
	function (activeMethod, method, isSelected, icon) {
		return A2(
			$author$project$Chunky$inline,
			_List_fromArray(
				[
					'flex',
					'items-center',
					A2($author$project$UI$Settings$Sync$opacity, isSelected, activeMethod)
				]),
			_List_fromArray(
				[
					A2(
					$author$project$Chunky$inline,
					_List_fromArray(
						['inline-block', 'mr-3']),
					_List_fromArray(
						[
							A2(
							$elm$html$Html$map,
							$elm$core$Basics$never,
							icon(15))
						])),
					$elm$html$Html$text(
					$author$project$User$Layer$methodName(method))
				]));
	});
var $elm$svg$Svg$Attributes$stroke = _VirtualDom_attribute('stroke');
var $author$project$UI$Svg$Elements$oddLogo = function (size) {
	return A2(
		$elm$svg$Svg$svg,
		_List_fromArray(
			[
				$elm$svg$Svg$Attributes$height(
				$elm$core$String$fromInt(size)),
				$elm$svg$Svg$Attributes$viewBox('0 0 53 27'),
				$elm$svg$Svg$Attributes$width(
				$elm$core$String$fromInt(size))
			]),
		_List_fromArray(
			[
				A2(
				$elm$svg$Svg$path,
				_List_fromArray(
					[
						$elm$svg$Svg$Attributes$fill('currentColor'),
						$elm$svg$Svg$Attributes$d('M52.5 13.854c0 6.627-5.373 12-12 12s-12-5.373-12-12c0-6.628 5.373-12 12-12s12 5.372 12 12Z')
					]),
				_List_Nil),
				A2(
				$elm$svg$Svg$path,
				_List_fromArray(
					[
						$elm$svg$Svg$Attributes$fill('currentColor'),
						$elm$svg$Svg$Attributes$stroke('#fff'),
						$elm$svg$Svg$Attributes$d('M26.5 26.354c6.904 0 12.5-5.597 12.5-12.5 0-6.904-5.596-12.5-12.5-12.5S14 6.95 14 13.854c0 6.903 5.596 12.5 12.5 12.5Z')
					]),
				_List_Nil),
				A2(
				$elm$svg$Svg$path,
				_List_fromArray(
					[
						$elm$svg$Svg$Attributes$fill('#fff'),
						$elm$svg$Svg$Attributes$stroke('#fff'),
						$elm$svg$Svg$Attributes$d('M12.745 26.354c6.757 0 12.214-5.608 12.214-12.5 0-6.893-5.457-12.5-12.214-12.5C5.988 1.354.53 6.96.53 13.854c0 6.892 5.458 12.5 12.215 12.5Z')
					]),
				_List_Nil),
				A2(
				$elm$svg$Svg$path,
				_List_fromArray(
					[
						$elm$svg$Svg$Attributes$clipRule('evenodd'),
						$elm$svg$Svg$Attributes$fill('currentColor'),
						$elm$svg$Svg$Attributes$fillRule('evenodd'),
						$elm$svg$Svg$Attributes$d('M12.745 21.597c4.174 0 7.559-3.467 7.559-7.744 0-4.276-3.385-7.743-7.56-7.743-4.174 0-7.558 3.467-7.558 7.744 0 4.276 3.384 7.743 7.559 7.743Zm0 4.256c6.47 0 11.714-5.372 11.714-12 0-6.627-5.245-12-11.714-12-6.47 0-11.715 5.373-11.715 12 0 6.628 5.245 12 11.715 12Z')
					]),
				_List_Nil)
			]));
};
var $author$project$UI$Settings$Sync$methodView = F2(
	function (activeMethod, method) {
		var isSelected = function () {
			var _v3 = _Utils_Tuple2(activeMethod, method);
			_v3$4:
			while (true) {
				if (_v3.a.$ === 'Just') {
					switch (_v3.a.a.$) {
						case 'Dropbox':
							if (_v3.b.$ === 'Dropbox') {
								return true;
							} else {
								break _v3$4;
							}
						case 'Fission':
							if (_v3.b.$ === 'Fission') {
								return true;
							} else {
								break _v3$4;
							}
						case 'RemoteStorage':
							if (_v3.b.$ === 'RemoteStorage') {
								return true;
							} else {
								break _v3$4;
							}
						default:
							if (_v3.b.$ === 'Ipfs') {
								return true;
							} else {
								break _v3$4;
							}
					}
				} else {
					break _v3$4;
				}
			}
			return false;
		}();
		var label = A3($author$project$UI$Settings$Sync$methodLabel, activeMethod, method, isSelected);
		return {
			actions: _List_fromArray(
				[
					isSelected ? {
					icon: $icidasset$elm_material_icons$Material$Icons$Round$cancel,
					msg: $elm$core$Maybe$Just(
						function (_v0) {
							return $author$project$UI$Types$SyncingMsg($author$project$UI$Syncing$Types$StopSync);
						}),
					title: 'Stop syncing with ' + $author$project$User$Layer$methodName(method)
				} : A3($author$project$UI$Settings$Sync$methodInfoAction, isSelected, activeMethod, method)
				]),
			isSelected: isSelected,
			label: function () {
				switch (method.$) {
					case 'Dropbox':
						return label($author$project$UI$Svg$Elements$dropboxLogo);
					case 'Fission':
						return label($author$project$UI$Svg$Elements$oddLogo);
					case 'RemoteStorage':
						return label($author$project$UI$Svg$Elements$remoteStorageLogo);
					default:
						return label($author$project$UI$Svg$Elements$ipfsLogo);
				}
			}(),
			msg: function () {
				if (isSelected) {
					return $elm$core$Maybe$Just(
						$author$project$UI$Types$SyncingMsg($author$project$UI$Syncing$Types$StopSync));
				} else {
					if ($elm_community$maybe_extra$Maybe$Extra$isJust(activeMethod)) {
						return $elm$core$Maybe$Nothing;
					} else {
						switch (method.$) {
							case 'Dropbox':
								return $elm$core$Maybe$Just($author$project$UI$Syncing$Common$startDropbox);
							case 'Fission':
								return $elm$core$Maybe$Just($author$project$UI$Syncing$Common$startFission);
							case 'RemoteStorage':
								return $elm$core$Maybe$Just($author$project$UI$Syncing$Common$startRemoteStorage);
							default:
								return $elm$core$Maybe$Just($author$project$UI$Syncing$Common$startIpfs);
						}
					}
				}
			}()
		};
	});
var $author$project$UI$Settings$Sync$view = function (activeMethod) {
	return A2(
		$author$project$UI$Kit$receptacle,
		{scrolling: true},
		_List_fromArray(
			[
				$author$project$UI$Navigation$local(
				A2(
					$elm$core$List$append,
					_List_fromArray(
						[
							_Utils_Tuple3(
							$author$project$UI$Navigation$Icon($icidasset$elm_material_icons$Material$Icons$Round$arrow_back),
							A2($author$project$UI$Navigation$Label, 'Settings', $author$project$UI$Navigation$Hidden),
							$author$project$UI$Navigation$NavigateToPage(
								$author$project$UI$Page$Settings($author$project$UI$Settings$Page$Index))),
							_Utils_Tuple3(
							$author$project$UI$Navigation$Icon($icidasset$elm_material_icons$Material$Icons$Round$archive),
							A2($author$project$UI$Navigation$Label, 'Data Backup', $author$project$UI$Navigation$Shown),
							$author$project$UI$Navigation$NavigateToPage(
								$author$project$UI$Page$Settings($author$project$UI$Settings$Page$Data)))
						]),
					function () {
						if (activeMethod.$ === 'Just') {
							switch (activeMethod.a.$) {
								case 'Dropbox':
									var d = activeMethod.a.a;
									return _List_fromArray(
										[
											$author$project$UI$Settings$Common$changePassphrase(
											$author$project$User$Layer$Dropbox(d))
										]);
								case 'Fission':
									return _List_Nil;
								case 'Ipfs':
									var i = activeMethod.a.a;
									return _List_fromArray(
										[
											$author$project$UI$Settings$Common$changePassphrase(
											$author$project$User$Layer$Ipfs(i))
										]);
								default:
									var r = activeMethod.a.a;
									return _List_fromArray(
										[
											$author$project$UI$Settings$Common$changePassphrase(
											$author$project$User$Layer$RemoteStorage(r))
										]);
							}
						} else {
							return _List_Nil;
						}
					}())),
				A2(
				$author$project$Chunky$chunk,
				_List_fromArray(
					['relative']),
				_List_fromArray(
					[
						A2(
						$author$project$Chunky$chunk,
						_List_fromArray(
							['absolute', 'left-0', 'top-0']),
						_List_fromArray(
							[
								$author$project$UI$Kit$canister(
								_List_fromArray(
									[
										$author$project$UI$Kit$h1('Storage Service')
									]))
							]))
					])),
				A2(
				$author$project$UI$Kit$focusScreen,
				{
					icon: $icidasset$elm_material_icons$Material$Icons$Round$account_circle,
					iconHref: $elm$core$Maybe$Nothing,
					text: $elm$core$List$singleton(
						A2(
							$author$project$Chunky$chunk,
							_List_fromArray(
								['max-w-md']),
							$elm$core$List$singleton(
								$elm$html$Html$text('By default, your playlists, favourites and other data are stored locally on your device. To ensure it is backed up, and to keep it in sync across all your connected devices, choose one of the following storage services. You can switch services at any point.')))),
					textHref: $elm$core$Maybe$Nothing
				},
				_List_fromArray(
					[
						A2(
						$author$project$Chunky$chunk,
						_List_fromArray(
							['max-w-full', 'w-96']),
						$elm$core$List$singleton(
							A2(
								$author$project$UI$List$view,
								$author$project$UI$List$Normal,
								A2(
									$elm$core$List$map,
									$author$project$UI$Settings$Sync$methodView(activeMethod),
									_List_fromArray(
										[$author$project$User$Layer$fissionMethod, $author$project$User$Layer$dropboxMethod, $author$project$User$Layer$remoteStorageMethod, $author$project$User$Layer$ipfsMethod])))))
					]))
			]));
};
var $author$project$UI$Settings$view = F2(
	function (page, deps) {
		switch (page.$) {
			case 'Data':
				return $author$project$UI$Settings$Data$view(deps.syncMethod);
			case 'Index':
				return A2(
					$author$project$UI$Kit$receptacle,
					{scrolling: true},
					$author$project$UI$Settings$index(deps));
			default:
				return $author$project$UI$Settings$Sync$view(deps.syncMethod);
		}
	});
var $author$project$UI$Sources$Types$Bypass = {$: 'Bypass'};
var $author$project$UI$Sources$Types$EditSourceUsingForm = {$: 'EditSourceUsingForm'};
var $author$project$UI$Sources$Types$ReturnToIndex = {$: 'ReturnToIndex'};
var $author$project$UI$Sources$Form$form = F2(
	function (msg, html) {
		return A4(
			$author$project$Chunky$slab,
			$elm$html$Html$form,
			_List_fromArray(
				[
					$elm$html$Html$Events$onSubmit(msg)
				]),
			_List_fromArray(
				['flex', 'flex-grow', 'flex-shrink-0', 'text-center']),
			_List_fromArray(
				[
					$author$project$UI$Kit$centeredContent(html)
				]));
	});
var $author$project$UI$Kit$h3 = function (text) {
	return A4(
		$author$project$Chunky$slab,
		$elm$html$Html$h2,
		_List_Nil,
		_List_fromArray(
			['antialiased', 'font-bold', 'font-display', 'leading-tight', 'mb-8', 'mt-4', 'text-xl']),
		_List_fromArray(
			[
				$elm$html$Html$text(text)
			]));
};
var $author$project$UI$Sources$Form$howNote = $author$project$Chunky$chunk(
	_List_fromArray(
		['text-sm', 'italic', 'leading-normal', 'max-w-lg', 'mb-8']));
var $author$project$UI$Kit$link = function (params) {
	return A4(
		$author$project$Chunky$slab,
		$elm$html$Html$a,
		_List_fromArray(
			[
				$elm$html$Html$Attributes$href(params.url),
				$elm$html$Html$Attributes$target('_blank')
			]),
		_List_fromArray(
			['border-b-2', 'border-base04', 'inline-block', 'leading-none', 'no-underline', 'text-inherit']),
		_List_fromArray(
			[
				$elm$html$Html$text(params.label)
			]));
};
var $icidasset$elm_material_icons$Material$Icons$Round$warning = A2(
	$icidasset$elm_material_icons$Material$Icons$Internal$icon,
	_List_fromArray(
		[
			$icidasset$elm_material_icons$Material$Icons$Internal$v('0 0 24 24')
		]),
	_List_fromArray(
		[
			A2(
			$icidasset$elm_material_icons$Material$Icons$Internal$p,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$d('M4.47 21h15.06c1.54 0 2.5-1.67 1.73-3L13.73 4.99c-.77-1.33-2.69-1.33-3.46 0L2.74 18c-.77 1.33.19 3 1.73 3zM12 14c-.55 0-1-.45-1-1v-2c0-.55.45-1 1-1s1 .45 1 1v2c0 .55-.45 1-1 1zm1 4h-2v-2h2v2z')
				]),
			_List_Nil)
		]));
var $author$project$UI$Sources$Form$note = function (service) {
	switch (service.$) {
		case 'AmazonS3':
			return $author$project$Chunky$nothing;
		case 'AzureBlob':
			return $author$project$Chunky$nothing;
		case 'AzureFile':
			return $author$project$Chunky$nothing;
		case 'Btfs':
			return $author$project$UI$Sources$Form$howNote(
				_List_fromArray(
					[
						A2(
						$author$project$Chunky$inline,
						_List_fromArray(
							['font-semibold']),
						_List_fromArray(
							[
								$elm$html$Html$text('Diffuse will try to use the default local gateway')
							])),
						$elm$html$Html$text('.'),
						$author$project$Chunky$lineBreak,
						$elm$html$Html$text('If you would like to use another gateway, please provide it below.'),
						$author$project$Chunky$lineBreak,
						$elm$html$Html$text('This is basically the same as the IPFS implementation, just with a different prefix.')
					]));
		case 'Dropbox':
			return $author$project$UI$Sources$Form$howNote(
				_List_fromArray(
					[
						A2(
						$author$project$Chunky$inline,
						_List_fromArray(
							['font-semibold']),
						_List_fromArray(
							[
								$elm$html$Html$text('If you don\'t know what any of this is, '),
								$elm$html$Html$text('continue to the next screen.')
							])),
						$elm$html$Html$text(' Changing the app key allows you to use your own Dropbox app.'),
						$elm$html$Html$text(' Also, make sure you verified your email address on Dropbox,'),
						$elm$html$Html$text(' or this might not work.')
					]));
		case 'Google':
			return $author$project$UI$Sources$Form$howNote(
				_List_fromArray(
					[
						A2(
						$author$project$Chunky$inline,
						_List_fromArray(
							['font-semibold']),
						_List_fromArray(
							[
								$elm$html$Html$text('If you don\'t know what any of this is, '),
								$elm$html$Html$text('continue to the next screen.')
							])),
						$elm$html$Html$text(' Changing the client stuff allows you to use your own Google OAuth client.'),
						$elm$html$Html$text(' Disclaimer: '),
						$elm$html$Html$text('The Google Drive API is fairly slow and limited, '),
						$elm$html$Html$text('consider using a different service.')
					]));
		case 'Ipfs':
			return $author$project$UI$Sources$Form$howNote(
				_List_fromArray(
					[
						A2(
						$author$project$Chunky$inline,
						_List_fromArray(
							['font-semibold']),
						_List_fromArray(
							[
								$elm$html$Html$text('Diffuse will use the ipfs.io gateway by default')
							])),
						$elm$html$Html$text('.'),
						$author$project$Chunky$lineBreak,
						A2(
						$author$project$Chunky$inline,
						_List_Nil,
						_List_fromArray(
							[
								$elm$html$Html$text('There are also '),
								A2(
								$elm$html$Html$a,
								_List_fromArray(
									[
										$elm$html$Html$Attributes$href('https://ipfs.github.io/public-gateway-checker/'),
										$elm$html$Html$Attributes$class('underline'),
										$elm$html$Html$Attributes$target('_blank')
									]),
								_List_fromArray(
									[
										$elm$html$Html$text('other public gateways')
									])),
								$elm$html$Html$text(' you can choose from.')
							])),
						$author$project$Chunky$lineBreak,
						$elm$html$Html$text('If you would like to use another gateway, please provide it below.')
					]));
		default:
			return $author$project$UI$Sources$Form$howNote(
				_List_fromArray(
					[
						A2(
						$author$project$Chunky$inline,
						_List_fromArray(
							['font-semibold']),
						_List_fromArray(
							[
								$author$project$UI$Kit$inlineIcon($icidasset$elm_material_icons$Material$Icons$Round$warning),
								$elm$html$Html$text('This app requires a proper implementation of '),
								$author$project$UI$Kit$link(
								{label: 'CORS', url: 'https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS'}),
								$elm$html$Html$text(' on the server side.')
							])),
						$author$project$Chunky$lineBreak,
						$elm$html$Html$text(' WebDAV servers usually don\'t implement'),
						$elm$html$Html$text(' CORS properly, if at all.'),
						$author$project$Chunky$lineBreak,
						$elm$html$Html$text(' Some servers, like '),
						$author$project$UI$Kit$link(
						{label: 'this one', url: 'https://github.com/hacdias/webdav'}),
						$elm$html$Html$text(', do. You can find the configuration for that server '),
						$author$project$UI$Kit$link(
						{label: 'here', url: 'about/cors/#CORS__WebDAV'}),
						$elm$html$Html$text('.')
					]));
	}
};
var $author$project$Sources$Services$AmazonS3$properties = _List_fromArray(
	[
		{key: 'accessKey', label: 'Access key', password: true, placeholder: 'Fv6EWfLfCcMo'},
		{key: 'secretKey', label: 'Secret key', password: true, placeholder: 'qeNcqiMpgqC8'},
		{key: 'bucketName', label: 'Bucket name', password: false, placeholder: 'music'},
		{key: 'region', label: 'Region', password: false, placeholder: $author$project$Sources$Services$AmazonS3$defaults.region},
		{key: 'directoryPath', label: 'Directory (Optional)', password: false, placeholder: '/'},
		{key: 'host', label: 'Host (Optional)', password: false, placeholder: 'http://localhost:9000'}
	]);
var $author$project$Sources$Services$AzureBlob$properties = _List_fromArray(
	[
		{key: 'accountName', label: 'Account name', password: false, placeholder: 'myaccount'},
		{key: 'accountKey', label: 'Account key', password: true, placeholder: 'MXFPDkaN4KBT'},
		{key: 'container', label: 'Container', password: false, placeholder: 'music'},
		{key: 'directoryPath', label: 'Directory (aka. Prefix, Optional)', password: false, placeholder: '/'}
	]);
var $author$project$Sources$Services$AzureFile$properties = _List_fromArray(
	[
		{key: 'accountName', label: 'Account name', password: false, placeholder: 'myaccount'},
		{key: 'accountKey', label: 'Account key', password: true, placeholder: 'MXFPDkaN4KBT'},
		{key: 'container', label: 'Share name', password: false, placeholder: 'music'},
		{key: 'directoryPath', label: 'Directory (aka. Prefix, Optional)', password: false, placeholder: '/'}
	]);
var $author$project$Sources$Services$Btfs$defaultGateway = 'http://127.0.0.1:8080';
var $author$project$Sources$Services$Btfs$properties = _List_fromArray(
	[
		{key: 'directoryHash', label: 'Directory object hash / DNSLink domain', password: false, placeholder: 'QmVLDAhCY3X9P2u'},
		{key: 'gateway', label: 'Gateway (Optional)', password: false, placeholder: $author$project$Sources$Services$Btfs$defaultGateway}
	]);
var $author$project$Sources$Services$Dropbox$properties = _List_fromArray(
	[
		{key: 'directoryPath', label: 'Directory (Optional)', password: false, placeholder: '/'},
		{key: 'appKey', label: 'App key', password: false, placeholder: $author$project$Sources$Services$Dropbox$defaults.appKey}
	]);
var $author$project$Sources$Services$Google$properties = _List_fromArray(
	[
		{key: 'folderId', label: 'Folder Id (Optional)', password: false, placeholder: $author$project$Sources$Services$Google$defaults.folderId},
		{key: 'clientId', label: 'Client Id (Google Console)', password: false, placeholder: $author$project$Sources$Services$Google$defaults.clientId},
		{key: 'clientSecret', label: 'Client Secret (Google Console)', password: false, placeholder: $author$project$Sources$Services$Google$defaults.clientSecret}
	]);
var $author$project$Sources$Services$Ipfs$properties = _List_fromArray(
	[
		{key: 'directoryHash', label: 'Directory hash / DNSLink domain', password: false, placeholder: 'QmVLDAhCY3X9P2u'},
		{key: 'ipns', label: 'Resolve using IPNS', password: false, placeholder: $author$project$Sources$Services$Ipfs$defaults.ipns},
		{key: 'gateway', label: 'Gateway (Optional)', password: false, placeholder: $author$project$Sources$Services$Ipfs$defaultGateway},
		{key: 'local', label: 'Resolve IPNS locally', password: false, placeholder: $author$project$Sources$Services$Ipfs$defaults.local}
	]);
var $author$project$Sources$Services$WebDav$properties = _List_fromArray(
	[
		{key: 'url', label: 'Host URL', password: false, placeholder: 'https://demo.nextcloud.com'},
		{key: 'directoryPath', label: 'Directory (Optional)', password: false, placeholder: '/icidasset/remote.php/webdav/'},
		{key: 'username', label: 'Username (Optional)', password: false, placeholder: ''},
		{key: 'password', label: 'Password (Optional)', password: true, placeholder: ''}
	]);
var $author$project$Sources$Services$properties = function (service) {
	switch (service.$) {
		case 'AmazonS3':
			return $author$project$Sources$Services$AmazonS3$properties;
		case 'AzureBlob':
			return $author$project$Sources$Services$AzureBlob$properties;
		case 'AzureFile':
			return $author$project$Sources$Services$AzureFile$properties;
		case 'Btfs':
			return $author$project$Sources$Services$Btfs$properties;
		case 'Dropbox':
			return $author$project$Sources$Services$Dropbox$properties;
		case 'Google':
			return $author$project$Sources$Services$Google$properties;
		case 'Ipfs':
			return $author$project$Sources$Services$Ipfs$properties;
		default:
			return $author$project$Sources$Services$WebDav$properties;
	}
};
var $author$project$UI$Sources$Types$SetFormData = F2(
	function (a, b) {
		return {$: 'SetFormData', a: a, b: b};
	});
var $elm$virtual_dom$VirtualDom$attribute = F2(
	function (key, value) {
		return A2(
			_VirtualDom_attribute,
			_VirtualDom_noOnOrFormAction(key),
			_VirtualDom_noJavaScriptOrHtmlUri(value));
	});
var $elm$html$Html$Attributes$attribute = $elm$virtual_dom$VirtualDom$attribute;
var $author$project$Common$boolFromString = function (string) {
	if (string === 't') {
		return true;
	} else {
		return false;
	}
};
var $elm$html$Html$Attributes$for = $elm$html$Html$Attributes$stringProperty('htmlFor');
var $elm$html$Html$Attributes$name = $elm$html$Html$Attributes$stringProperty('name');
var $elm$html$Html$Attributes$boolProperty = F2(
	function (key, bool) {
		return A2(
			_VirtualDom_property,
			key,
			$elm$json$Json$Encode$bool(bool));
	});
var $elm$html$Html$Attributes$required = $elm$html$Html$Attributes$boolProperty('required');
var $elm$html$Html$Attributes$type_ = $elm$html$Html$Attributes$stringProperty('type');
var $author$project$UI$Sources$Form$renderProperty = F2(
	function (context, property) {
		return A2(
			$author$project$Chunky$chunk,
			_List_fromArray(
				['mb-8']),
			_List_fromArray(
				[
					A2(
					$author$project$UI$Kit$label,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$for(property.key)
						]),
					property.label),
					function () {
					if (_Utils_eq(
						property.placeholder,
						$author$project$Common$boolToString(true)) || _Utils_eq(
						property.placeholder,
						$author$project$Common$boolToString(false))) {
						var bool = $author$project$Common$boolFromString(
							A3($author$project$Dict$Ext$fetch, property.key, property.placeholder, context.data));
						return A2(
							$author$project$Chunky$chunk,
							_List_fromArray(
								['mt-2', 'pt-1']),
							_List_fromArray(
								[
									$author$project$UI$Kit$checkbox(
									{
										checked: bool,
										toggleMsg: A2(
											$author$project$UI$Sources$Types$SetFormData,
											property.key,
											$author$project$Common$boolToString(!bool))
									})
								]));
					} else {
						return $author$project$UI$Kit$textField(
							_List_fromArray(
								[
									$elm$html$Html$Attributes$name(property.key),
									$elm$html$Html$Events$onInput(
									$author$project$UI$Sources$Types$SetFormData(property.key)),
									$elm$html$Html$Attributes$placeholder(property.placeholder),
									$elm$html$Html$Attributes$required(
									!A2(
										$elm$core$String$contains,
										'optional',
										$elm$core$String$toLower(property.label))),
									$elm$html$Html$Attributes$type_(
									A3($author$project$Conditional$ifThenElse, property.password, 'password', 'text')),
									$elm$html$Html$Attributes$value(
									A3($author$project$Dict$Ext$fetch, property.key, '', context.data)),
									A2($elm$html$Html$Attributes$attribute, 'spellcheck', 'false')
								]));
					}
				}()
				]));
	});
var $author$project$UI$Sources$Form$edit = function (_v0) {
	var context = _v0.context;
	return _List_fromArray(
		[
			$author$project$UI$Navigation$local(
			_List_fromArray(
				[
					_Utils_Tuple3(
					$author$project$UI$Navigation$Icon($icidasset$elm_material_icons$Material$Icons$Round$arrow_back),
					A2($author$project$UI$Navigation$Label, 'Go Back', $author$project$UI$Navigation$Shown),
					$author$project$UI$Navigation$PerformMsg($author$project$UI$Sources$Types$ReturnToIndex))
				])),
			function (h) {
			return A2(
				$author$project$UI$Sources$Form$form,
				$author$project$UI$Sources$Types$EditSourceUsingForm,
				_List_fromArray(
					[
						A2(
						$author$project$Chunky$chunk,
						_List_fromArray(
							['text-left', 'w-full']),
						_List_fromArray(
							[
								$author$project$UI$Kit$canister(h)
							]))
					]));
		}(
			_List_fromArray(
				[
					$author$project$UI$Kit$h3('Edit source'),
					$author$project$UI$Sources$Form$note(context.service),
					function () {
					var properties = $author$project$Sources$Services$properties(context.service);
					var dividingPoint = $elm$core$List$length(properties) / 2;
					var _v1 = A2(
						$elm_community$list_extra$List$Extra$splitAt,
						$elm$core$Basics$ceiling(dividingPoint),
						properties);
					var listA = _v1.a;
					var listB = _v1.b;
					return A2(
						$author$project$Chunky$chunk,
						_List_fromArray(
							['flex', 'pt-3']),
						_List_fromArray(
							[
								A2(
								$author$project$Chunky$chunk,
								_List_fromArray(
									['flex-grow', 'pr-4']),
								A2(
									$elm$core$List$map,
									$author$project$UI$Sources$Form$renderProperty(context),
									listA)),
								A2(
								$author$project$Chunky$chunk,
								_List_fromArray(
									['flex-grow', 'pl-4']),
								A2(
									$elm$core$List$map,
									$author$project$UI$Sources$Form$renderProperty(context),
									listB))
							]));
				}(),
					A2(
					$author$project$Chunky$chunk,
					_List_fromArray(
						['mt-3', 'text-center']),
					_List_fromArray(
						[
							A3(
							$author$project$UI$Kit$button,
							$author$project$UI$Kit$Normal,
							$author$project$UI$Sources$Types$Bypass,
							$elm$html$Html$text('Save'))
						]))
				]))
		]);
};
var $author$project$UI$Sources$Types$StopProcessing = {$: 'StopProcessing'};
var $author$project$UI$Sources$View$intro = function (amountOfTracks) {
	return $author$project$UI$Kit$intro(
		$author$project$Chunky$raw(
			_List_fromArray(
				[
					$elm$html$Html$text('A source is a place where your music is stored.'),
					$author$project$Chunky$lineBreak,
					$elm$html$Html$text('By connecting a source, the application will scan it and keep a list of all the music in it.'),
					$author$project$Chunky$lineBreak,
					$elm$html$Html$text('You currently have '),
					$elm$html$Html$text(
					$elm$core$String$fromInt(amountOfTracks)),
					$elm$html$Html$text(' '),
					$elm$html$Html$text(
					A3($author$project$Conditional$ifThenElse, amountOfTracks === 1, 'track', 'tracks')),
					$elm$html$Html$text(' in your collection.')
				])));
};
var $author$project$UI$Sources$View$lowercaseName = A2(
	$elm$core$Basics$composeR,
	function ($) {
		return $.data;
	},
	A2(
		$elm$core$Basics$composeR,
		A2($author$project$Dict$Ext$fetch, 'name', ''),
		$elm$core$String$toLower));
var $author$project$UI$Sources$Types$SourceContextMenu = F2(
	function (a, b) {
		return {$: 'SourceContextMenu', a: a, b: b};
	});
var $author$project$UI$Sources$Types$ToggleActivation = function (a) {
	return {$: 'ToggleActivation', a: a};
};
var $icidasset$elm_material_icons$Material$Icons$Round$block = A2(
	$icidasset$elm_material_icons$Material$Icons$Internal$icon,
	_List_fromArray(
		[
			$icidasset$elm_material_icons$Material$Icons$Internal$v('0 0 24 24')
		]),
	_List_fromArray(
		[
			A2(
			$icidasset$elm_material_icons$Material$Icons$Internal$p,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$d('M0 0h24v24H0V0z'),
					$icidasset$elm_material_icons$Material$Icons$Internal$f('none')
				]),
			_List_Nil),
			A2(
			$icidasset$elm_material_icons$Material$Icons$Internal$p,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$d('M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zM4 12c0-4.42 3.58-8 8-8 1.85 0 3.55.63 4.9 1.69L5.69 16.9C4.63 15.55 4 13.85 4 12zm8 8c-1.85 0-3.55-.63-4.9-1.69L18.31 7.1C19.37 8.45 20 10.15 20 12c0 4.42-3.58 8-8 8z')
				]),
			_List_Nil)
		]));
var $icidasset$elm_material_icons$Material$Icons$Round$error_outline = A2(
	$icidasset$elm_material_icons$Material$Icons$Internal$icon,
	_List_fromArray(
		[
			$icidasset$elm_material_icons$Material$Icons$Internal$v('0 0 24 24')
		]),
	_List_fromArray(
		[
			A2(
			$icidasset$elm_material_icons$Material$Icons$Internal$p,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$d('M12 7c.55 0 1 .45 1 1v4c0 .55-.45 1-1 1s-1-.45-1-1V8c0-.55.45-1 1-1zm-.01-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8zm1-3h-2v-2h2v2z')
				]),
			_List_Nil)
		]));
var $author$project$UI$Sources$View$sourceActions = F3(
	function (processingContext, processingError, source) {
		var processIndex = A2(
			$elm_community$list_extra$List$Extra$findIndex,
			A2(
				$elm$core$Basics$composeR,
				$elm$core$Tuple$first,
				$elm$core$Basics$eq(source.id)),
			processingContext);
		var process = A2(
			$elm$core$Maybe$andThen,
			function (idx) {
				return A2($elm_community$list_extra$List$Extra$getAt, idx, processingContext);
			},
			processIndex);
		return A2(
			$elm$core$List$append,
			function () {
				var _v0 = _Utils_Tuple2(process, processingError);
				if (_v0.a.$ === 'Just') {
					var _v1 = _v0.a.a;
					var progress = _v1.b;
					return _List_fromArray(
						[
							{
							icon: F2(
								function (_v2, _v3) {
									return (progress < 0.05) ? A2(
										$author$project$Chunky$inline,
										_List_fromArray(
											['inline-block', 'opacity-70', 'px-1']),
										_List_fromArray(
											[
												function () {
												if ((processIndex.$ === 'Just') && (!processIndex.a)) {
													return $elm$html$Html$text('Listing');
												} else {
													return $elm$html$Html$text('Waiting');
												}
											}()
											])) : A2(
										$author$project$Chunky$inline,
										_List_fromArray(
											['inline-block', 'opacity-70', 'px-1']),
										$elm$core$List$singleton(
											$elm$html$Html$text(
												function (s) {
													return s + '%';
												}(
													$elm$core$String$fromInt(
														$elm$core$Basics$round(100 * progress))))));
								}),
							msg: $elm$core$Maybe$Nothing,
							title: ''
						},
							{icon: $icidasset$elm_material_icons$Material$Icons$Round$sync, msg: $elm$core$Maybe$Nothing, title: 'Currently processing'}
						]);
				} else {
					if (_v0.b.$ === 'Just') {
						var _v5 = _v0.a;
						var error = _v0.b.a.error;
						var sourceId = _v0.b.a.sourceId;
						return _Utils_eq(sourceId, source.id) ? _List_fromArray(
							[
								{
								icon: F2(
									function (size, _v6) {
										return A2(
											$icidasset$elm_material_icons$Material$Icons$Round$error_outline,
											size,
											$icidasset$elm_material_icons$Material$Icons$Types$Color($author$project$UI$Kit$colors.error));
									}),
								msg: $elm$core$Maybe$Nothing,
								title: error
							}
							]) : _List_Nil;
					} else {
						return _List_Nil;
					}
				}
			}(),
			_List_fromArray(
				[
					{
					icon: source.enabled ? $icidasset$elm_material_icons$Material$Icons$Round$check : $icidasset$elm_material_icons$Material$Icons$Round$block,
					msg: $elm$core$Maybe$Just(
						$elm$core$Basics$always(
							$author$project$UI$Sources$Types$ToggleActivation(
								{sourceId: source.id}))),
					title: source.enabled ? 'Enabled (click to disable)' : 'Disabled (click to enable)'
				},
					{
					icon: $icidasset$elm_material_icons$Material$Icons$Round$more_vert,
					msg: $elm$core$Maybe$Just(
						$author$project$UI$Sources$Types$SourceContextMenu(source)),
					title: 'Menu'
				}
				]));
	});
var $author$project$UI$Sources$View$index = F2(
	function (amountOfTracks, model) {
		return _List_fromArray(
			[
				$elm$core$List$isEmpty(model.sources) ? $author$project$UI$Navigation$local(
				_List_fromArray(
					[
						_Utils_Tuple3(
						$author$project$UI$Navigation$Icon($icidasset$elm_material_icons$Material$Icons$Round$add),
						A2($author$project$UI$Navigation$Label, 'Add a new source', $author$project$UI$Navigation$Shown),
						$author$project$UI$Navigation$NavigateToPage(
							$author$project$UI$Page$Sources($author$project$UI$Sources$Page$New)))
					])) : $author$project$UI$Navigation$local(
				_List_fromArray(
					[
						_Utils_Tuple3(
						$author$project$UI$Navigation$Icon($icidasset$elm_material_icons$Material$Icons$Round$add),
						A2($author$project$UI$Navigation$Label, 'Add a new source', $author$project$UI$Navigation$Shown),
						$author$project$UI$Navigation$NavigateToPage(
							$author$project$UI$Page$Sources($author$project$UI$Sources$Page$New))),
						$elm$core$List$isEmpty(model.processingContext) ? _Utils_Tuple3(
						$author$project$UI$Navigation$Icon($icidasset$elm_material_icons$Material$Icons$Round$sync),
						A2($author$project$UI$Navigation$Label, 'Process sources', $author$project$UI$Navigation$Shown),
						$author$project$UI$Navigation$PerformMsg($author$project$UI$Sources$Types$Process)) : _Utils_Tuple3(
						$author$project$UI$Navigation$Icon($icidasset$elm_material_icons$Material$Icons$Round$sync),
						A2($author$project$UI$Navigation$Label, 'Stop processing ...', $author$project$UI$Navigation$Shown),
						$author$project$UI$Navigation$PerformMsg($author$project$UI$Sources$Types$StopProcessing))
					])),
				$elm$core$List$isEmpty(model.sources) ? A2(
				$author$project$Chunky$chunk,
				_List_fromArray(
					['relative']),
				_List_fromArray(
					[
						A2(
						$author$project$Chunky$chunk,
						_List_fromArray(
							['absolute', 'left-0', 'top-0']),
						_List_fromArray(
							[
								$author$project$UI$Kit$canister(
								_List_fromArray(
									[
										$author$project$UI$Kit$h1('Sources')
									]))
							]))
					])) : $author$project$UI$Kit$canister(
				_List_fromArray(
					[
						$author$project$UI$Kit$h1('Sources'),
						$author$project$UI$Sources$View$intro(amountOfTracks),
						A2(
						$author$project$UI$List$view,
						$author$project$UI$List$Normal,
						A2(
							$elm$core$List$map,
							function (source) {
								return {
									actions: A3($author$project$UI$Sources$View$sourceActions, model.processingContext, model.processingError, source),
									isSelected: false,
									label: $elm$html$Html$text(
										A3($author$project$Dict$Ext$fetch, 'name', '', source.data)),
									msg: $elm$core$Maybe$Nothing
								};
							},
							A2($elm$core$List$sortBy, $author$project$UI$Sources$View$lowercaseName, model.sources)))
					])),
				$elm$core$List$isEmpty(model.sources) ? $author$project$UI$Kit$centeredContent(
				_List_fromArray(
					[
						A4(
						$author$project$Chunky$slab,
						$elm$html$Html$a,
						_List_fromArray(
							[
								$elm$html$Html$Attributes$href(
								$author$project$UI$Page$toString(
									$author$project$UI$Page$Sources($author$project$UI$Sources$Page$New)))
							]),
						_List_fromArray(
							['block', 'opacity-30', 'text-inherit']),
						_List_fromArray(
							[
								A2($icidasset$elm_material_icons$Material$Icons$Round$music_note, 64, $icidasset$elm_material_icons$Material$Icons$Types$Inherit)
							])),
						A4(
						$author$project$Chunky$slab,
						$elm$html$Html$a,
						_List_fromArray(
							[
								$elm$html$Html$Attributes$href(
								$author$project$UI$Page$toString(
									$author$project$UI$Page$Sources($author$project$UI$Sources$Page$New)))
							]),
						_List_fromArray(
							['block', 'leading-normal', 'mt-2', 'opacity-40', 'text-center', 'text-inherit']),
						_List_fromArray(
							[
								$elm$html$Html$text('A source is a place where music is stored,'),
								$author$project$Chunky$lineBreak,
								$elm$html$Html$text('add one so you can play some music '),
								A2(
								$author$project$Chunky$inline,
								_List_fromArray(
									['align-middle', 'inline-block', '-mt-px']),
								_List_fromArray(
									[
										A2($icidasset$elm_material_icons$Material$Icons$Round$add, 14, $icidasset$elm_material_icons$Material$Icons$Types$Inherit)
									]))
							]))
					])) : $author$project$Chunky$nothing
			]);
	});
var $author$project$UI$Sources$View$receptacle = $author$project$UI$Kit$receptacle(
	{scrolling: true});
var $author$project$UI$Sources$View$lazyForm = F2(
	function (model, formView) {
		return A2(
			$elm$html$Html$Lazy$lazy,
			A2($elm$core$Basics$composeR, formView, $author$project$UI$Sources$View$receptacle),
			model.sourceForm);
	});
var $author$project$UI$Sources$Types$AddSourceUsingForm = {$: 'AddSourceUsingForm'};
var $author$project$UI$Sources$Types$TakeStepBackwards = {$: 'TakeStepBackwards'};
var $author$project$UI$Sources$Form$corsWarning = function (id) {
	return _List_fromArray(
		[
			A2(
			$author$project$Chunky$chunk,
			_List_fromArray(
				['text-sm', 'flex', 'items-center', 'justify-center', 'leading-snug', 'opacity-50']),
			_List_fromArray(
				[
					$author$project$UI$Kit$inlineIcon($icidasset$elm_material_icons$Material$Icons$Round$warning),
					A2(
					$author$project$Chunky$inline,
					_List_fromArray(
						['font-semibold']),
					_List_fromArray(
						[
							$elm$html$Html$text('Make sure CORS is enabled')
						]))
				])),
			A2(
			$author$project$Chunky$chunk,
			_List_fromArray(
				['text-sm', 'leading-snug', 'mb-8', 'mt-1', 'opacity-50']),
			_List_fromArray(
				[
					$elm$html$Html$text('You can find the instructions over '),
					$author$project$UI$Kit$link(
					{label: 'here', url: 'about/cors/#' + id})
				]))
		]);
};
var $author$project$UI$Sources$Form$newBy = function (_v0) {
	var context = _v0.context;
	return _List_fromArray(
		[
			$author$project$UI$Navigation$local(
			_List_fromArray(
				[
					_Utils_Tuple3(
					$author$project$UI$Navigation$Icon($icidasset$elm_material_icons$Material$Icons$Round$arrow_back),
					A2($author$project$UI$Navigation$Label, 'Take a step back', $author$project$UI$Navigation$Shown),
					$author$project$UI$Navigation$PerformMsg($author$project$UI$Sources$Types$TakeStepBackwards))
				])),
			function (h) {
			return A2(
				$author$project$UI$Sources$Form$form,
				$author$project$UI$Sources$Types$AddSourceUsingForm,
				_List_fromArray(
					[
						$author$project$UI$Kit$canisterForm(h)
					]));
		}(
			_List_fromArray(
				[
					$author$project$UI$Kit$h2('One last thing'),
					A2($author$project$UI$Kit$label, _List_Nil, 'What are we going to call this source?'),
					function () {
					var nameValue = A3($author$project$Dict$Ext$fetch, 'name', '', context.data);
					return A2(
						$author$project$Chunky$chunk,
						_List_fromArray(
							['flex', 'max-w-md', 'mt-8', 'mx-auto', 'justify-center', 'w-full']),
						_List_fromArray(
							[
								$author$project$UI$Kit$textField(
								_List_fromArray(
									[
										$elm$html$Html$Attributes$name('name'),
										$elm$html$Html$Events$onInput(
										$author$project$UI$Sources$Types$SetFormData('name')),
										$elm$html$Html$Attributes$value(nameValue)
									]))
							]));
				}(),
					A2(
					$author$project$Chunky$chunk,
					_List_fromArray(
						['mt-16']),
					function () {
						var _v1 = context.service;
						switch (_v1.$) {
							case 'AmazonS3':
								return $author$project$UI$Sources$Form$corsWarning('CORS__S3');
							case 'AzureBlob':
								return $author$project$UI$Sources$Form$corsWarning('CORS__Azure');
							case 'AzureFile':
								return $author$project$UI$Sources$Form$corsWarning('CORS__Azure');
							case 'Btfs':
								return $author$project$UI$Sources$Form$corsWarning('CORS__BTFS');
							case 'Dropbox':
								return _List_Nil;
							case 'Google':
								return _List_Nil;
							case 'Ipfs':
								return $author$project$UI$Sources$Form$corsWarning('CORS__IPFS');
							default:
								return $author$project$UI$Sources$Form$corsWarning('CORS__WebDAV');
						}
					}()),
					A3(
					$author$project$UI$Kit$button,
					$author$project$UI$Kit$Normal,
					$author$project$UI$Sources$Types$Bypass,
					$elm$html$Html$text('Add source'))
				]))
		]);
};
var $author$project$UI$Kit$IconOnly = {$: 'IconOnly'};
var $author$project$UI$Sources$Types$TakeStep = {$: 'TakeStep'};
var $icidasset$elm_material_icons$Material$Icons$Round$arrow_forward = A2(
	$icidasset$elm_material_icons$Material$Icons$Internal$icon,
	_List_fromArray(
		[
			$icidasset$elm_material_icons$Material$Icons$Internal$v('0 0 24 24')
		]),
	_List_fromArray(
		[
			A2(
			$icidasset$elm_material_icons$Material$Icons$Internal$p,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$d('M0 0h24v24H0V0z'),
					$icidasset$elm_material_icons$Material$Icons$Internal$f('none')
				]),
			_List_Nil),
			A2(
			$icidasset$elm_material_icons$Material$Icons$Internal$p,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$d('M5 13h11.17l-4.88 4.88c-.39.39-.39 1.03 0 1.42.39.39 1.02.39 1.41 0l6.59-6.59c.39-.39.39-1.02 0-1.41l-6.58-6.6c-.39-.39-1.02-.39-1.41 0-.39.39-.39 1.02 0 1.41L16.17 11H5c-.55 0-1 .45-1 1s.45 1 1 1z')
				]),
			_List_Nil)
		]));
var $author$project$UI$Sources$Form$newHow = function (_v0) {
	var context = _v0.context;
	return _List_fromArray(
		[
			$author$project$UI$Navigation$local(
			_List_fromArray(
				[
					_Utils_Tuple3(
					$author$project$UI$Navigation$Icon($icidasset$elm_material_icons$Material$Icons$Round$arrow_back),
					A2($author$project$UI$Navigation$Label, 'Take a step back', $author$project$UI$Navigation$Shown),
					$author$project$UI$Navigation$PerformMsg($author$project$UI$Sources$Types$TakeStepBackwards))
				])),
			function (h) {
			return A2(
				$author$project$UI$Sources$Form$form,
				$author$project$UI$Sources$Types$TakeStep,
				_List_fromArray(
					[
						A2(
						$author$project$Chunky$chunk,
						_List_fromArray(
							['text-left', 'w-full']),
						_List_fromArray(
							[
								$author$project$UI$Kit$canister(h)
							]))
					]));
		}(
			_List_fromArray(
				[
					$author$project$UI$Kit$h3('Where exactly?'),
					$author$project$UI$Sources$Form$note(context.service),
					function () {
					var properties = $author$project$Sources$Services$properties(context.service);
					var dividingPoint = $elm$core$List$length(properties) / 2;
					var _v1 = A2(
						$elm_community$list_extra$List$Extra$splitAt,
						$elm$core$Basics$ceiling(dividingPoint),
						properties);
					var listA = _v1.a;
					var listB = _v1.b;
					return A2(
						$author$project$Chunky$chunk,
						_List_fromArray(
							['flex', 'pt-3']),
						_List_fromArray(
							[
								A2(
								$author$project$Chunky$chunk,
								_List_fromArray(
									['flex-grow', 'pr-4']),
								A2(
									$elm$core$List$map,
									$author$project$UI$Sources$Form$renderProperty(context),
									listA)),
								A2(
								$author$project$Chunky$chunk,
								_List_fromArray(
									['flex-grow', 'pl-4']),
								A2(
									$elm$core$List$map,
									$author$project$UI$Sources$Form$renderProperty(context),
									listB))
							]));
				}(),
					A2(
					$author$project$Chunky$chunk,
					_List_fromArray(
						['mt-3', 'text-center']),
					_List_fromArray(
						[
							A3(
							$author$project$UI$Kit$button,
							$author$project$UI$Kit$IconOnly,
							$author$project$UI$Sources$Types$Bypass,
							A2($icidasset$elm_material_icons$Material$Icons$Round$arrow_forward, 17, $icidasset$elm_material_icons$Material$Icons$Types$Inherit))
						]))
				]))
		]);
};
var $author$project$UI$Sources$Types$SelectService = function (a) {
	return {$: 'SelectService', a: a};
};
var $author$project$Sources$Services$labels = _List_fromArray(
	[
		_Utils_Tuple2(
		$author$project$Sources$Services$typeToKey($author$project$Sources$AmazonS3),
		'Amazon S3'),
		_Utils_Tuple2(
		$author$project$Sources$Services$typeToKey($author$project$Sources$AzureBlob),
		'Azure Blob Storage'),
		_Utils_Tuple2(
		$author$project$Sources$Services$typeToKey($author$project$Sources$AzureFile),
		'Azure File Storage'),
		_Utils_Tuple2(
		$author$project$Sources$Services$typeToKey($author$project$Sources$Btfs),
		'BTFS'),
		_Utils_Tuple2(
		$author$project$Sources$Services$typeToKey($author$project$Sources$Dropbox),
		'Dropbox'),
		_Utils_Tuple2(
		$author$project$Sources$Services$typeToKey($author$project$Sources$Google),
		'Google Drive'),
		_Utils_Tuple2(
		$author$project$Sources$Services$typeToKey($author$project$Sources$Ipfs),
		'IPFS'),
		_Utils_Tuple2(
		$author$project$Sources$Services$typeToKey($author$project$Sources$WebDav),
		'WebDAV')
	]);
var $elm$html$Html$option = _VirtualDom_node('option');
var $icidasset$elm_material_icons$Material$Icons$Round$keyboard_arrow_down = A2(
	$icidasset$elm_material_icons$Material$Icons$Internal$icon,
	_List_fromArray(
		[
			$icidasset$elm_material_icons$Material$Icons$Internal$v('0 0 24 24')
		]),
	_List_fromArray(
		[
			A2(
			$icidasset$elm_material_icons$Material$Icons$Internal$p,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$d('M8.12 9.29L12 13.17l3.88-3.88c.39-.39 1.02-.39 1.41 0 .39.39.39 1.02 0 1.41l-4.59 4.59c-.39.39-1.02.39-1.41 0L6.7 10.7c-.39-.39-.39-1.02 0-1.41.39-.38 1.03-.39 1.42 0z')
				]),
			_List_Nil)
		]));
var $elm$html$Html$select = _VirtualDom_node('select');
var $author$project$UI$Kit$select = F2(
	function (inputHandler, options) {
		return A2(
			$author$project$Chunky$chunk,
			_List_fromArray(
				['max-w-md', 'mx-auto', 'relative', 'text-base05', 'w-full', 'focus-within:text-black', 'dark:text-gray-600', 'dark:focus-within:text-base07']),
			_List_fromArray(
				[
					A4(
					$author$project$Chunky$slab,
					$elm$html$Html$select,
					_List_fromArray(
						[
							$elm$html$Html$Events$onInput(inputHandler)
						]),
					_List_fromArray(
						['appearance-none', 'border-b', 'border-l-0', 'border-r-0', 'border-t-0', 'border-gray-400', 'bg-transparent', 'block', 'leading-normal', 'm-0', 'outline-none', 'py-2', 'px-0', 'rounded-none', 'text-base01', 'text-lg', 'w-full', 'focus:border-black', 'dark:border-base02', 'dark:text-gray-600', 'dark:focus:border-base07']),
					options),
					A2(
					$author$project$Chunky$chunk,
					_List_fromArray(
						['absolute', '-translate-y-1/2', 'mt-px', 'right-0', 'text-0', 'top-1/2', 'transform']),
					_List_fromArray(
						[
							A2($icidasset$elm_material_icons$Material$Icons$Round$keyboard_arrow_down, 20, $icidasset$elm_material_icons$Material$Icons$Types$Inherit)
						]))
				]));
	});
var $elm$html$Html$Attributes$selected = $elm$html$Html$Attributes$boolProperty('selected');
var $author$project$UI$Sources$Form$newWhere = F2(
	function (_v0, _v1) {
		var onboarding = _v0.onboarding;
		var context = _v1.context;
		return _List_fromArray(
			[
				$author$project$UI$Navigation$local(
				_List_fromArray(
					[
						_Utils_Tuple3(
						$author$project$UI$Navigation$Icon($icidasset$elm_material_icons$Material$Icons$Round$arrow_back),
						A2($author$project$UI$Navigation$Label, 'Back to list', $author$project$UI$Navigation$Hidden),
						onboarding ? $author$project$UI$Navigation$NavigateToPage($author$project$UI$Page$Index) : $author$project$UI$Navigation$NavigateToPage(
							$author$project$UI$Page$Sources($author$project$UI$Sources$Page$Index)))
					])),
				function (h) {
				return A2(
					$author$project$UI$Sources$Form$form,
					$author$project$UI$Sources$Types$TakeStep,
					_List_fromArray(
						[
							$author$project$UI$Kit$canisterForm(h)
						]));
			}(
				_List_fromArray(
					[
						$author$project$UI$Kit$h2('Where is your music stored?'),
						function () {
						var contextServiceKey = $author$project$Sources$Services$typeToKey(context.service);
						return A2(
							$author$project$UI$Kit$select,
							$author$project$UI$Sources$Types$SelectService,
							A2(
								$elm$core$List$map,
								function (_v2) {
									var k = _v2.a;
									var l = _v2.b;
									return A2(
										$elm$html$Html$option,
										_List_fromArray(
											[
												$elm$html$Html$Attributes$value(k),
												$elm$html$Html$Attributes$selected(
												_Utils_eq(contextServiceKey, k))
											]),
										_List_fromArray(
											[
												$elm$html$Html$text(l)
											]));
								},
								$author$project$Sources$Services$labels));
					}(),
						A2(
						$author$project$Chunky$chunk,
						_List_fromArray(
							['mt-10']),
						_List_fromArray(
							[
								A3(
								$author$project$UI$Kit$button,
								$author$project$UI$Kit$IconOnly,
								$author$project$UI$Sources$Types$Bypass,
								A2($icidasset$elm_material_icons$Material$Icons$Round$arrow_forward, 17, $icidasset$elm_material_icons$Material$Icons$Types$Inherit))
							]))
					]))
			]);
	});
var $author$project$UI$Sources$Form$new = F2(
	function (args, model) {
		var _v0 = model.step;
		switch (_v0.$) {
			case 'Where':
				return A2($author$project$UI$Sources$Form$newWhere, args, model);
			case 'How':
				return $author$project$UI$Sources$Form$newHow(model);
			default:
				return $author$project$UI$Sources$Form$newBy(model);
		}
	});
var $author$project$UI$Sources$Types$RenameSourceUsingForm = {$: 'RenameSourceUsingForm'};
var $author$project$UI$Sources$Form$rename = function (_v0) {
	var context = _v0.context;
	return _List_fromArray(
		[
			$author$project$UI$Navigation$local(
			_List_fromArray(
				[
					_Utils_Tuple3(
					$author$project$UI$Navigation$Icon($icidasset$elm_material_icons$Material$Icons$Round$arrow_back),
					A2($author$project$UI$Navigation$Label, 'Go Back', $author$project$UI$Navigation$Shown),
					$author$project$UI$Navigation$PerformMsg($author$project$UI$Sources$Types$ReturnToIndex))
				])),
			function (h) {
			return A2(
				$author$project$UI$Sources$Form$form,
				$author$project$UI$Sources$Types$RenameSourceUsingForm,
				_List_fromArray(
					[
						$author$project$UI$Kit$canisterForm(h)
					]));
		}(
			_List_fromArray(
				[
					$author$project$UI$Kit$h2('Name your source'),
					A2(
					$author$project$Chunky$chunky,
					_List_fromArray(
						['max-w-md', 'mx-auto']),
					$author$project$UI$Kit$textField(
						_List_fromArray(
							[
								$elm$html$Html$Attributes$name('name'),
								$elm$html$Html$Events$onInput(
								$author$project$UI$Sources$Types$SetFormData('name')),
								$elm$html$Html$Attributes$value(
								A3($author$project$Dict$Ext$fetch, 'name', '', context.data))
							]))),
					A2(
					$author$project$Chunky$chunk,
					_List_fromArray(
						['mt-10']),
					_List_fromArray(
						[
							A3(
							$author$project$UI$Kit$button,
							$author$project$UI$Kit$Normal,
							$author$project$UI$Sources$Types$Bypass,
							$elm$html$Html$text('Save'))
						]))
				]))
		]);
};
var $author$project$UI$Sources$View$view = F2(
	function (page, model) {
		return A2(
			$elm$html$Html$map,
			$author$project$UI$Types$SourcesMsg,
			function () {
				switch (page.$) {
					case 'Index':
						return A3(
							$elm$html$Html$Lazy$lazy2,
							F2(
								function (a, b) {
									return $author$project$UI$Sources$View$receptacle(
										A2($author$project$UI$Sources$View$index, a, b));
								}),
							$elm$core$List$length(model.tracks.untouched),
							{processingContext: model.processingContext, processingError: model.processingError, sources: model.sources});
					case 'Edit':
						return A2($author$project$UI$Sources$View$lazyForm, model, $author$project$UI$Sources$Form$edit);
					case 'New':
						return A2(
							$author$project$UI$Sources$View$lazyForm,
							model,
							$author$project$UI$Sources$Form$new(
								{onboarding: false}));
					case 'NewOnboarding':
						return A2(
							$author$project$UI$Sources$View$lazyForm,
							model,
							$author$project$UI$Sources$Form$new(
								{onboarding: true}));
					case 'NewThroughRedirect':
						return A2(
							$author$project$UI$Sources$View$lazyForm,
							model,
							$author$project$UI$Sources$Form$new(
								{onboarding: false}));
					default:
						return A2($author$project$UI$Sources$View$lazyForm, model, $author$project$UI$Sources$Form$rename);
				}
			}());
	});
var $author$project$UI$Syncing$Types$ActivateSyncWithPassphrase = F2(
	function (a, b) {
		return {$: 'ActivateSyncWithPassphrase', a: a, b: b};
	});
var $author$project$UI$Syncing$Types$RemoveEncryptionKey = function (a) {
	return {$: 'RemoveEncryptionKey', a: a};
};
var $author$project$UI$Syncing$Types$UpdateEncryptionKey = F2(
	function (a, b) {
		return {$: 'UpdateEncryptionKey', a: a, b: b};
	});
var $author$project$UI$Syncing$Types$Bypass = {$: 'Bypass'};
var $author$project$UI$Syncing$Types$CancelInput = {$: 'CancelInput'};
var $author$project$UI$Syncing$Types$KeepPassphraseInMemory = function (a) {
	return {$: 'KeepPassphraseInMemory', a: a};
};
var $elm_community$html_extra$Html$Events$Extra$onClickStopPropagation = function (msg) {
	return A2(
		$elm$html$Html$Events$stopPropagationOn,
		'click',
		$elm$json$Json$Decode$succeed(
			_Utils_Tuple2(msg, true)));
};
var $elm$html$Html$textarea = _VirtualDom_node('textarea');
var $author$project$UI$Kit$textArea = function (attributes) {
	return A4(
		$author$project$Chunky$slab,
		$elm$html$Html$textarea,
		attributes,
		_List_fromArray(
			['bg-white', 'block', 'leading-normal', 'mb-4', 'p-4', 'resize-none', 'rounded', 'text-base01', 'text-sm', 'w-full', 'placeholder:text-base01', 'placeholder:text-opacity-40', 'dark:bg-darkest-hour', 'dark:text-gray-600', 'dark:placeholder:text-gray-600', 'dark:placeholder:text-opacity-30']),
		_List_Nil);
};
var $author$project$UI$Syncing$View$encryptionKeyScreen = function (_v0) {
	var ableToCancel = _v0.ableToCancel;
	var withEncryption = _v0.withEncryption;
	var withoutEncryption = _v0.withoutEncryption;
	return A2(
		$author$project$UI$Kit$focusScreen,
		{
			icon: $icidasset$elm_material_icons$Material$Icons$Round$lock,
			iconHref: $elm$core$Maybe$Nothing,
			text: _List_fromArray(
				[
					$elm$html$Html$text('Optional passphrase to encrypt/decrypt your data')
				]),
			textHref: $elm$core$Maybe$Nothing
		},
		_List_fromArray(
			[
				A4(
				$author$project$Chunky$slab,
				$elm$html$Html$form,
				_List_fromArray(
					[
						$elm$html$Html$Events$onSubmit(withEncryption)
					]),
				_List_fromArray(
					['flex', 'flex-col', 'max-w-xs', 'px-3', 'w-screen', 'sm:px-0']),
				_List_fromArray(
					[
						$author$project$UI$Kit$textArea(
						_List_fromArray(
							[
								A2($elm$html$Html$Attributes$attribute, 'autocapitalize', 'none'),
								A2($elm$html$Html$Attributes$attribute, 'autocomplete', 'off'),
								A2($elm$html$Html$Attributes$attribute, 'autocorrect', 'off'),
								A2($elm$html$Html$Attributes$attribute, 'rows', '4'),
								A2($elm$html$Html$Attributes$attribute, 'spellcheck', 'false'),
								$elm$html$Html$Attributes$placeholder('anQLS9Usw24gxUi11IgVBg76z8SCWZgLKkoWIeJ1ClVmBHLRlaiA0CtvONVAMGritbgd3U45cPTxrhFU0WXaOAa8pVt186KyEccfUNyAq97'),
								A2($elm$html$Html$Attributes$style, '-webkit-text-security', 'disc'),
								$elm$html$Html$Attributes$class('shadow'),
								$elm$html$Html$Events$onInput($author$project$UI$Syncing$Types$KeepPassphraseInMemory)
							])),
						A2(
						$author$project$Chunky$chunk,
						_List_fromArray(
							['flex', 'items-stretch', 'space-x-2.5']),
						_List_fromArray(
							[
								A6(
								$author$project$UI$Kit$buttonWithOptions,
								$elm$html$Html$button,
								_List_fromArray(
									[
										$elm$html$Html$Attributes$class('flex-1')
									]),
								$author$project$UI$Kit$Gray,
								$author$project$UI$Kit$Filled,
								$elm$core$Maybe$Just($author$project$UI$Syncing$Types$Bypass),
								$elm$html$Html$text('Continue')),
								ableToCancel ? A6(
								$author$project$UI$Kit$buttonWithOptions,
								$elm$html$Html$button,
								_List_fromArray(
									[
										$elm$html$Html$Attributes$class('flex-1'),
										A2(
										$elm$html$Html$Events$stopPropagationOn,
										'click',
										$elm$json$Json$Decode$succeed(
											_Utils_Tuple2($author$project$UI$Syncing$Types$CancelInput, true)))
									]),
								$author$project$UI$Kit$Gray,
								$author$project$UI$Kit$Normal,
								$elm$core$Maybe$Nothing,
								$elm$html$Html$text('Cancel')) : $author$project$Chunky$nothing
							])),
						A3(
						$author$project$Chunky$brick,
						_List_fromArray(
							[
								$elm_community$html_extra$Html$Events$Extra$onClickStopPropagation(withoutEncryption)
							]),
						_List_fromArray(
							['cursor-pointer', 'flex', 'items-center', 'justify-center', 'leading-snug', 'mt-3', 'opacity-50', 'text-xs']),
						_List_fromArray(
							[
								A2(
								$author$project$Chunky$inline,
								_List_fromArray(
									['inline-block', 'leading-none', 'mr-2']),
								_List_fromArray(
									[
										A2($icidasset$elm_material_icons$Material$Icons$Round$warning, 13, $icidasset$elm_material_icons$Material$Icons$Types$Inherit)
									])),
								$elm$html$Html$text('Continue without encryption')
							]))
					]))
			]));
};
var $author$project$UI$Syncing$Types$ConfirmInput = {$: 'ConfirmInput'};
var $author$project$UI$Syncing$Types$Input = function (a) {
	return {$: 'Input', a: a};
};
var $author$project$UI$Kit$textFieldAlt = function (attributes) {
	return A4(
		$author$project$Chunky$slab,
		$elm$html$Html$input,
		attributes,
		_List_fromArray(
			['bg-white', 'block', 'leading-normal', 'mb-3', 'p-3', 'resize-none', 'rounded', 'text-base01', 'text-sm', 'w-full', 'dark:bg-darkest-hour', 'dark:text-gray-600']),
		_List_Nil);
};
var $author$project$UI$Syncing$View$inputScreen = function (question) {
	return A2(
		$author$project$UI$Kit$focusScreen,
		{
			icon: question.icon,
			iconHref: $elm$core$Maybe$Nothing,
			text: _List_fromArray(
				[question.question]),
			textHref: $elm$core$Maybe$Nothing
		},
		_List_fromArray(
			[
				A4(
				$author$project$Chunky$slab,
				$elm$html$Html$form,
				_List_fromArray(
					[
						$elm$html$Html$Events$onSubmit($author$project$UI$Syncing$Types$ConfirmInput)
					]),
				_List_fromArray(
					['flex', 'flex-col', 'max-w-xs', 'px-3', 'w-screen', 'sm:px-0']),
				_List_fromArray(
					[
						$author$project$UI$Kit$textFieldAlt(
						_List_fromArray(
							[
								A2($elm$html$Html$Attributes$attribute, 'autocapitalize', 'off'),
								$elm$html$Html$Attributes$placeholder(question.placeholder),
								$elm$html$Html$Attributes$class('shadow'),
								$elm$html$Html$Events$onInput($author$project$UI$Syncing$Types$Input),
								$elm$html$Html$Attributes$value(question.value)
							])),
						A3(
						$author$project$UI$Kit$button,
						$author$project$UI$Kit$Filled,
						$author$project$UI$Syncing$Types$Bypass,
						$elm$html$Html$text('Continue'))
					]))
			]));
};
var $elm_community$html_extra$Html$Extra$nothing = $elm$html$Html$text('');
var $author$project$UI$Syncing$View$view_ = function (state) {
	switch (state.$) {
		case 'InputScreen':
			var opts = state.b;
			return A2(
				$author$project$UI$Kit$receptacle,
				{scrolling: false},
				_List_fromArray(
					[
						$author$project$UI$Syncing$View$inputScreen(opts)
					]));
		case 'NewEncryptionKeyScreen':
			var method = state.a;
			var pass = state.b;
			return A2(
				$author$project$UI$Kit$receptacle,
				{scrolling: false},
				_List_fromArray(
					[
						$author$project$UI$Syncing$View$encryptionKeyScreen(
						{
							ableToCancel: false,
							withEncryption: A2(
								$author$project$UI$Syncing$Types$ActivateSyncWithPassphrase,
								method,
								A2($elm$core$Maybe$withDefault, '', pass)),
							withoutEncryption: $author$project$UI$Syncing$Types$ActivateSync(method)
						})
					]));
		case 'UpdateEncryptionKeyScreen':
			var method = state.a;
			var pass = state.b;
			return A2(
				$author$project$UI$Kit$receptacle,
				{scrolling: false},
				_List_fromArray(
					[
						$author$project$UI$Syncing$View$encryptionKeyScreen(
						{
							ableToCancel: true,
							withEncryption: A2(
								$author$project$UI$Syncing$Types$UpdateEncryptionKey,
								method,
								A2($elm$core$Maybe$withDefault, '', pass)),
							withoutEncryption: $author$project$UI$Syncing$Types$RemoveEncryptionKey(method)
						})
					]));
		default:
			return $elm_community$html_extra$Html$Extra$nothing;
	}
};
var $author$project$UI$Syncing$View$view = A2(
	$elm$core$Basics$composeL,
	A2(
		$elm$core$Basics$composeL,
		$elm$html$Html$map($author$project$UI$Types$SyncingMsg),
		$elm$html$Html$Lazy$lazy($author$project$UI$Syncing$View$view_)),
	function ($) {
		return $.syncing;
	});
var $elm$virtual_dom$VirtualDom$lazy5 = _VirtualDom_lazy5;
var $elm$html$Html$Lazy$lazy5 = $elm$virtual_dom$VirtualDom$lazy5;
var $author$project$UI$Types$AdjustVolume = function (a) {
	return {$: 'AdjustVolume', a: a};
};
var $author$project$UI$Types$AssistWithSelectingPlaylist = {$: 'AssistWithSelectingPlaylist'};
var $author$project$UI$Tracks$Types$ClearSearch = {$: 'ClearSearch'};
var $author$project$UI$Types$DeselectPlaylist = {$: 'DeselectPlaylist'};
var $author$project$Common$On = {$: 'On'};
var $author$project$UI$Types$SaveEnclosedUserData = {$: 'SaveEnclosedUserData'};
var $author$project$UI$Tracks$Types$SetSearchTerm = function (a) {
	return {$: 'SetSearchTerm', a: a};
};
var $author$project$UI$Tracks$Types$ShowViewMenu = F2(
	function (a, b) {
		return {$: 'ShowViewMenu', a: a, b: b};
	});
var $icidasset$elm_material_icons$Material$Icons$Round$favorite_border = A2(
	$icidasset$elm_material_icons$Material$Icons$Internal$icon,
	_List_fromArray(
		[
			$icidasset$elm_material_icons$Material$Icons$Internal$v('0 0 24 24')
		]),
	_List_fromArray(
		[
			A2(
			$icidasset$elm_material_icons$Material$Icons$Internal$p,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$d('M0 0h24v24H0V0z'),
					$icidasset$elm_material_icons$Material$Icons$Internal$f('none')
				]),
			_List_Nil),
			A2(
			$icidasset$elm_material_icons$Material$Icons$Internal$p,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$d('M19.66 3.99c-2.64-1.8-5.9-.96-7.66 1.1-1.76-2.06-5.02-2.91-7.66-1.1-1.4.96-2.28 2.58-2.34 4.29-.14 3.88 3.3 6.99 8.55 11.76l.1.09c.76.69 1.93.69 2.69-.01l.11-.1c5.25-4.76 8.68-7.87 8.55-11.75-.06-1.7-.94-3.32-2.34-4.28zM12.1 18.55l-.1.1-.1-.1C7.14 14.24 4 11.39 4 8.5 4 6.5 5.5 5 7.5 5c1.54 0 3.04.99 3.57 2.36h1.87C13.46 5.99 14.96 5 16.5 5c2 0 3.5 1.5 3.5 3.5 0 2.89-3.14 5.74-7.9 10.05z')
				]),
			_List_Nil)
		]));
var $elm$html$Html$Attributes$max = $elm$html$Html$Attributes$stringProperty('max');
var $elm$html$Html$Attributes$min = $elm$html$Html$Attributes$stringProperty('min');
var $elm$html$Html$Events$onBlur = function (msg) {
	return A2(
		$elm$html$Html$Events$on,
		'blur',
		$elm$json$Json$Decode$succeed(msg));
};
var $mpizenberg$elm_pointer_events$Html$Events$Extra$Mouse$defaultOptions = {preventDefault: true, stopPropagation: false};
var $mpizenberg$elm_pointer_events$Html$Events$Extra$Mouse$onClick = A2($mpizenberg$elm_pointer_events$Html$Events$Extra$Mouse$onWithOptions, 'click', $mpizenberg$elm_pointer_events$Html$Events$Extra$Mouse$defaultOptions);
var $icidasset$elm_material_icons$Material$Icons$Round$schedule = A2(
	$icidasset$elm_material_icons$Material$Icons$Internal$icon,
	_List_fromArray(
		[
			$icidasset$elm_material_icons$Material$Icons$Internal$v('0 0 24 24')
		]),
	_List_fromArray(
		[
			A2(
			$icidasset$elm_material_icons$Material$Icons$Internal$p,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$d('M0 0h24v24H0V0z'),
					$icidasset$elm_material_icons$Material$Icons$Internal$f('none')
				]),
			_List_Nil),
			A2(
			$icidasset$elm_material_icons$Material$Icons$Internal$p,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$d('M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8zm-.22-13h-.06c-.4 0-.72.32-.72.72v4.72c0 .35.18.68.49.86l4.15 2.49c.34.2.78.1.98-.24.21-.34.1-.79-.25-.99l-3.87-2.3V7.72c0-.4-.32-.72-.72-.72z')
				]),
			_List_Nil)
		]));
var $elm$html$Html$Attributes$step = function (n) {
	return A2($elm$html$Html$Attributes$stringProperty, 'step', n);
};
var $elm$core$String$toFloat = _String_toFloat;
var $icidasset$elm_material_icons$Material$Icons$Round$volume_down = A2(
	$icidasset$elm_material_icons$Material$Icons$Internal$icon,
	_List_fromArray(
		[
			$icidasset$elm_material_icons$Material$Icons$Internal$v('0 0 24 24')
		]),
	_List_fromArray(
		[
			A2(
			$icidasset$elm_material_icons$Material$Icons$Internal$p,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$d('M18.5 12c0-1.77-1.02-3.29-2.5-4.03v8.05c1.48-.73 2.5-2.25 2.5-4.02zM5 10v4c0 .55.45 1 1 1h3l3.29 3.29c.63.63 1.71.18 1.71-.71V6.41c0-.89-1.08-1.34-1.71-.71L9 9H6c-.55 0-1 .45-1 1z')
				]),
			_List_Nil)
		]));
var $icidasset$elm_material_icons$Material$Icons$Round$volume_off = A2(
	$icidasset$elm_material_icons$Material$Icons$Internal$icon,
	_List_fromArray(
		[
			$icidasset$elm_material_icons$Material$Icons$Internal$v('0 0 24 24')
		]),
	_List_fromArray(
		[
			A2(
			$icidasset$elm_material_icons$Material$Icons$Internal$p,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$d('M3.63 3.63c-.39.39-.39 1.02 0 1.41L7.29 8.7 7 9H4c-.55 0-1 .45-1 1v4c0 .55.45 1 1 1h3l3.29 3.29c.63.63 1.71.18 1.71-.71v-4.17l4.18 4.18c-.49.37-1.02.68-1.6.91-.36.15-.58.53-.58.92 0 .72.73 1.18 1.39.91.8-.33 1.55-.77 2.22-1.31l1.34 1.34c.39.39 1.02.39 1.41 0 .39-.39.39-1.02 0-1.41L5.05 3.63c-.39-.39-1.02-.39-1.42 0zM19 12c0 .82-.15 1.61-.41 2.34l1.53 1.53c.56-1.17.88-2.48.88-3.87 0-3.83-2.4-7.11-5.78-8.4-.59-.23-1.22.23-1.22.86v.19c0 .38.25.71.61.85C17.18 6.54 19 9.06 19 12zm-8.71-6.29l-.17.17L12 7.76V6.41c0-.89-1.08-1.33-1.71-.7zM16.5 12c0-1.77-1.02-3.29-2.5-4.03v1.79l2.48 2.48c.01-.08.02-.16.02-.24z')
				]),
			_List_Nil)
		]));
var $icidasset$elm_material_icons$Material$Icons$Round$volume_up = A2(
	$icidasset$elm_material_icons$Material$Icons$Internal$icon,
	_List_fromArray(
		[
			$icidasset$elm_material_icons$Material$Icons$Internal$v('0 0 24 24')
		]),
	_List_fromArray(
		[
			A2(
			$icidasset$elm_material_icons$Material$Icons$Internal$p,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$d('M3 10v4c0 .55.45 1 1 1h3l3.29 3.29c.63.63 1.71.18 1.71-.71V6.41c0-.89-1.08-1.34-1.71-.71L7 9H4c-.55 0-1 .45-1 1zm13.5 2c0-1.77-1.02-3.29-2.5-4.03v8.05c1.48-.73 2.5-2.25 2.5-4.02zM14 4.45v.2c0 .38.25.71.6.85C17.18 6.53 19 9.06 19 12s-1.82 5.47-4.4 6.5c-.36.14-.6.47-.6.85v.2c0 .63.63 1.07 1.21.85C18.6 19.11 21 15.84 21 12s-2.4-7.11-5.79-8.4c-.58-.23-1.21.22-1.21.85z')
				]),
			_List_Nil)
		]));
var $author$project$UI$Tracks$View$navigation = function (_v0) {
	var bgColor = _v0.bgColor;
	var favouritesOnly = _v0.favouritesOnly;
	var grouping = _v0.grouping;
	var isOnIndexPage = _v0.isOnIndexPage;
	var pressedShift = _v0.pressedShift;
	var scene = _v0.scene;
	var searchTerm = _v0.searchTerm;
	var selectedPlaylist = _v0.selectedPlaylist;
	var showVolumeSlider = _v0.showVolumeSlider;
	var volume = _v0.volume;
	var tabindex_ = A3($author$project$Conditional$ifThenElse, isOnIndexPage, 0, -1);
	return A2(
		$author$project$Chunky$chunk,
		_List_fromArray(
			['relative', 'sm:flex']),
		_List_fromArray(
			[
				A2(
				$author$project$Chunky$chunk,
				_List_fromArray(
					['border-b', 'border-r', 'border-gray-300', 'flex', 'flex-grow', 'h-12', 'mt-px', 'px-1', 'overflow-hidden', 'relative', 'text-gray-600', 'sm:h-auto', 'sm:px-0', 'dark:border-base01', 'dark:text-base04']),
				_List_fromArray(
					[
						A4(
						$author$project$Chunky$slab,
						$elm$html$Html$input,
						_List_fromArray(
							[
								A2($elm$html$Html$Attributes$attribute, 'autocorrect', 'off'),
								A2($elm$html$Html$Attributes$attribute, 'autocapitalize', 'none'),
								A2($elm$html$Html$Attributes$attribute, 'spellcheck', 'false'),
								$elm$html$Html$Events$onInput(
								A2($elm$core$Basics$composeL, $author$project$UI$Types$TracksMsg, $author$project$UI$Tracks$Types$SetSearchTerm)),
								$elm$html$Html$Attributes$placeholder('Search'),
								$elm$html$Html$Attributes$tabindex(tabindex_),
								$elm$html$Html$Attributes$value(
								A2($elm$core$Maybe$withDefault, '', searchTerm))
							]),
						_List_fromArray(
							['bg-transparent', 'border-none', 'flex-grow', 'h-full', 'min-w-0', 'ml-1', 'mt-px', 'outline-none', 'pl-8', 'pr-2', 'pt-px', 'text-base02', 'text-sm', 'w-full', 'dark:text-base06']),
						_List_Nil),
						A2(
						$author$project$Chunky$chunk,
						_List_fromArray(
							['absolute', 'bottom-0', 'flex', 'items-center', 'left-0', 'ml-3', 'mt-px', 'pl-1', 'top-0', 'z-0', 'sm:pl-0']),
						_List_fromArray(
							[
								A2($icidasset$elm_material_icons$Material$Icons$Round$search, 16, $icidasset$elm_material_icons$Material$Icons$Types$Inherit)
							])),
						A2(
						$author$project$Chunky$chunk,
						_List_fromArray(
							['flex', 'items-center', 'mr-3', 'mt-px', 'pt-px', 'space-x-4', 'sm:space-x-2']),
						_List_fromArray(
							[
								function () {
								if (searchTerm.$ === 'Just') {
									return A3(
										$author$project$Chunky$brick,
										_List_fromArray(
											[
												$elm$html$Html$Events$onClick(
												$author$project$UI$Types$TracksMsg($author$project$UI$Tracks$Types$ClearSearch)),
												$elm$html$Html$Attributes$title('Clear search')
											]),
										_List_fromArray(
											['cursor-pointer', 'mt-px']),
										_List_fromArray(
											[
												A2($icidasset$elm_material_icons$Material$Icons$Round$clear, 16, $icidasset$elm_material_icons$Material$Icons$Types$Inherit)
											]));
								} else {
									return $author$project$Chunky$nothing;
								}
							}(),
								A3(
								$author$project$Chunky$brick,
								_List_fromArray(
									[
										$elm$html$Html$Events$onClick(
										$author$project$UI$Types$TracksMsg($author$project$UI$Tracks$Types$ToggleFavouritesOnly)),
										$elm$html$Html$Attributes$title('Toggle favourites-only')
									]),
								_List_fromArray(
									['cursor-pointer']),
								_List_fromArray(
									[
										favouritesOnly ? A2(
										$icidasset$elm_material_icons$Material$Icons$Round$favorite,
										16,
										$icidasset$elm_material_icons$Material$Icons$Types$Color($author$project$UI$Kit$colorKit.base08)) : A2($icidasset$elm_material_icons$Material$Icons$Round$favorite_border, 16, $icidasset$elm_material_icons$Material$Icons$Types$Inherit)
									])),
								function () {
								if (scene.$ === 'Covers') {
									return A3(
										$author$project$Chunky$brick,
										_List_fromArray(
											[
												A2($elm$html$Html$Attributes$attribute, 'title', 'Switch to list view'),
												$elm$html$Html$Events$onClick(
												$author$project$UI$Types$TracksMsg(
													$author$project$UI$Tracks$Types$ChangeScene($author$project$Tracks$List)))
											]),
										_List_fromArray(
											['ml-6', 'mr-px', 'cursor-pointer']),
										_List_fromArray(
											[
												A2(
												$author$project$Chunky$chunk,
												_List_fromArray(
													['pl-1']),
												_List_fromArray(
													[
														A2($icidasset$elm_material_icons$Material$Icons$Round$notes, 18, $icidasset$elm_material_icons$Material$Icons$Types$Inherit)
													]))
											]));
								} else {
									return A3(
										$author$project$Chunky$brick,
										_List_fromArray(
											[
												A2($elm$html$Html$Attributes$attribute, 'title', 'Switch to cover view'),
												$elm$html$Html$Events$onClick(
												$author$project$UI$Types$TracksMsg(
													$author$project$UI$Tracks$Types$ChangeScene($author$project$Tracks$Covers)))
											]),
										_List_fromArray(
											['cursor-pointer', 'mr-px']),
										_List_fromArray(
											[
												A2(
												$author$project$Chunky$chunk,
												_List_fromArray(
													['pl-1']),
												_List_fromArray(
													[
														A2($icidasset$elm_material_icons$Material$Icons$Round$burst_mode, 20, $icidasset$elm_material_icons$Material$Icons$Types$Inherit)
													]))
											]));
								}
							}(),
								A3(
								$author$project$Chunky$brick,
								_List_fromArray(
									[
										$mpizenberg$elm_pointer_events$Html$Events$Extra$Mouse$onClick(
										A2(
											$elm$core$Basics$composeL,
											$author$project$UI$Types$TracksMsg,
											$author$project$UI$Tracks$Types$ShowViewMenu(grouping))),
										$elm$html$Html$Attributes$title('View settings')
									]),
								_List_fromArray(
									['cursor-pointer']),
								_List_fromArray(
									[
										A2($icidasset$elm_material_icons$Material$Icons$Round$more_vert, 16, $icidasset$elm_material_icons$Material$Icons$Types$Inherit)
									])),
								function () {
								if (selectedPlaylist.$ === 'Just') {
									var playlist = selectedPlaylist.a;
									return A3(
										$author$project$Chunky$brick,
										_List_fromArray(
											[
												$elm$html$Html$Events$onClick($author$project$UI$Types$DeselectPlaylist),
												$elm$html$Html$Attributes$title('Deactivate playlist'),
												A2(
												$elm$html$Html$Attributes$style,
												'background-color',
												$avh4$elm_color$Color$toCssString(
													A2($elm$core$Maybe$withDefault, $author$project$UI$Kit$colorKit.base01, bgColor)))
											]),
										_List_fromArray(
											['antialiased', 'cursor-pointer', 'duration-500', 'font-bold', 'leading-none', 'px-1', 'py-1', 'rounded', 'truncate', 'text-white-90', 'text-xxs', 'transition', 'dark:text-white-60']),
										_List_fromArray(
											[
												A2(
												$author$project$Chunky$chunk,
												_List_fromArray(
													['px-px', 'pt-px']),
												_List_fromArray(
													[
														$elm$html$Html$text(playlist.name)
													]))
											]));
								} else {
									return $author$project$Chunky$nothing;
								}
							}()
							]))
					])),
				A2(
				$author$project$UI$Navigation$localWithTabindex,
				tabindex_,
				_List_fromArray(
					[
						_Utils_Tuple3(
						$author$project$UI$Navigation$Icon($icidasset$elm_material_icons$Material$Icons$Round$waves),
						A2($author$project$UI$Navigation$Label, 'Playlists', $author$project$UI$Navigation$Hidden),
						pressedShift ? $author$project$UI$Navigation$PerformMsg($author$project$UI$Types$AssistWithSelectingPlaylist) : $author$project$UI$Navigation$NavigateToPage(
							$author$project$UI$Page$Playlists($author$project$UI$Playlists$Page$Index))),
						_Utils_Tuple3(
						$author$project$UI$Navigation$Icon($icidasset$elm_material_icons$Material$Icons$Round$schedule),
						A2($author$project$UI$Navigation$Label, 'Queue', $author$project$UI$Navigation$Hidden),
						pressedShift ? $author$project$UI$Navigation$PerformMsg(
							$author$project$UI$Types$ChangeUrlUsingPage(
								$author$project$UI$Page$Queue($author$project$UI$Queue$Page$History))) : $author$project$UI$Navigation$NavigateToPage(
							$author$project$UI$Page$Queue($author$project$UI$Queue$Page$Index))),
						_Utils_Tuple3(
						(!volume) ? $author$project$UI$Navigation$Icon($icidasset$elm_material_icons$Material$Icons$Round$volume_off) : ((volume < 0.5) ? $author$project$UI$Navigation$Icon($icidasset$elm_material_icons$Material$Icons$Round$volume_down) : $author$project$UI$Navigation$Icon($icidasset$elm_material_icons$Material$Icons$Round$volume_up)),
						A2($author$project$UI$Navigation$Label, 'Volume', $author$project$UI$Navigation$Hidden),
						pressedShift ? ((!volume) ? $author$project$UI$Navigation$PerformMsg(
							$author$project$UI$Types$AdjustVolume(0.5)) : $author$project$UI$Navigation$PerformMsg(
							$author$project$UI$Types$AdjustVolume(0))) : $author$project$UI$Navigation$PerformMsg(
							$author$project$UI$Types$ToggleVolumeSlider(
								A3($author$project$Conditional$ifThenElse, showVolumeSlider, $author$project$Common$Off, $author$project$Common$On))))
					])),
				showVolumeSlider ? A2(
				$author$project$Chunky$chunk,
				_List_fromArray(
					['absolute', 'bg-white', 'px-4', 'py-3', 'right-0', 'rounded-bl', 'shadow-lg', 'top-full', 'z-40', 'dark:bg-darkest-hour', 'dark:shadow-[rgba(0,0,0,.175)]']),
				_List_fromArray(
					[
						A2(
						$author$project$Chunky$chunk,
						_List_fromArray(
							['leading-[0px]', 'my-1', 'pt-px', 'text-[0px]']),
						_List_fromArray(
							[
								A4(
								$author$project$Chunky$slab,
								$elm$html$Html$input,
								_List_fromArray(
									[
										$elm$html$Html$Attributes$type_('range'),
										$elm$html$Html$Attributes$min('0'),
										$elm$html$Html$Attributes$max('1'),
										$elm$html$Html$Attributes$step('0.0125'),
										$elm$html$Html$Attributes$value(
										$elm$core$String$fromFloat(volume)),
										$elm$html$Html$Events$onBlur($author$project$UI$Types$SaveEnclosedUserData),
										$elm$html$Html$Events$onInput(
										A2(
											$elm$core$Basics$composeR,
											$elm$core$String$toFloat,
											A2($elm_community$maybe_extra$Maybe$Extra$unwrap, $author$project$UI$Types$Bypass, $author$project$UI$Types$AdjustVolume)))
									]),
								_List_fromArray(
									['range-slider']),
								_List_Nil)
							]))
					])) : $author$project$Chunky$nothing
			]));
};
var $author$project$UI$Types$InsertDemo = {$: 'InsertDemo'};
var $author$project$UI$Syncing$Types$ShowSyncDataMenu = function (a) {
	return {$: 'ShowSyncDataMenu', a: a};
};
var $author$project$UI$Tracks$View$message = function (m) {
	return A2(
		$author$project$Chunky$chunk,
		_List_fromArray(
			['border-b-2', 'border-current-color', 'text-sm', 'font-semibold', 'leading-snug', 'pb-1']),
		_List_fromArray(
			[
				$elm$html$Html$text(m)
			]));
};
var $author$project$UI$Tracks$View$noTracksView = F5(
	function (processingContext, amountOfSources, amountOfTracks, _v0, userLayerMethod) {
		return A2(
			$author$project$Chunky$chunk,
			_List_fromArray(
				['no-tracks-view', 'flex', 'flex-grow']),
			_List_fromArray(
				[
					$author$project$UI$Kit$centeredContent(
					_List_fromArray(
						[
							($elm$core$List$length(processingContext) > 0) ? $author$project$UI$Tracks$View$message('Processing Tracks') : ((!amountOfSources) ? A2(
							$author$project$Chunky$chunk,
							_List_fromArray(
								['flex', 'flex-col', 'items-center', 'justify-center', 'px-3']),
							_List_fromArray(
								[
									A4(
									$author$project$Chunky$slab,
									$elm$html$Html$img,
									_List_fromArray(
										[
											$elm$html$Html$Attributes$src('images/diffuse-dark.svg'),
											$elm$html$Html$Attributes$width(190)
										]),
									_List_fromArray(
										['dark:hidden']),
									_List_Nil),
									A4(
									$author$project$Chunky$slab,
									$elm$html$Html$img,
									_List_fromArray(
										[
											$elm$html$Html$Attributes$src('images/diffuse-light.svg'),
											$elm$html$Html$Attributes$width(190)
										]),
									_List_fromArray(
										['hidden dark:block']),
									_List_Nil),
									A2(
									$author$project$Chunky$chunk,
									_List_fromArray(
										['italic', 'max-w-sm', 'mt-6', 'text-base05', 'text-center', 'text-sm', 'dark:text-base03']),
									_List_fromArray(
										[
											$elm$html$Html$text('Play music'),
											A2(
											$author$project$Chunky$inline,
											_List_fromArray(
												['not-italic', 'font-normal', 'inline-block', 'mx-1', 'pr-px']),
											_List_fromArray(
												[
													$elm$html$Html$text(' ♫ ')
												])),
											$elm$html$Html$text('from your Dropbox,\nIPFS node, Amazon S3 bucket, or any other\ncloud/distributed storage service you use.\n                        ')
										])),
									A2(
									$author$project$Chunky$chunk,
									_List_fromArray(
										['flex', 'mt-5', 'space-x-3']),
									_List_fromArray(
										[
											A3(
											$author$project$UI$Kit$button,
											$author$project$UI$Kit$Normal,
											$author$project$UI$Types$InsertDemo,
											$elm$html$Html$text('Insert Demo')),
											A4(
											$author$project$UI$Kit$buttonWithColor,
											$author$project$UI$Kit$Accent,
											$author$project$UI$Kit$Filled,
											$author$project$UI$Types$ChangeUrlUsingPage(
												$author$project$UI$Page$Sources($author$project$UI$Sources$Page$New)),
											$elm$html$Html$text('Add Music')),
											function () {
											if (userLayerMethod.$ === 'Just') {
												var method = userLayerMethod.a;
												return A4(
													$author$project$UI$Kit$buttonWithColor,
													$author$project$UI$Kit$Gray,
													$author$project$UI$Kit$Filled,
													$author$project$UI$Types$SyncingMsg($author$project$UI$Syncing$Types$StopSync),
													$elm$html$Html$text('Stop syncing'));
											} else {
												return A6(
													$author$project$UI$Kit$buttonWithOptions,
													$elm$html$Html$button,
													_List_fromArray(
														[
															$mpizenberg$elm_pointer_events$Html$Events$Extra$Mouse$onClick(
															A2($elm$core$Basics$composeL, $author$project$UI$Types$SyncingMsg, $author$project$UI$Syncing$Types$ShowSyncDataMenu))
														]),
													$author$project$UI$Kit$Gray,
													$author$project$UI$Kit$Filled,
													$elm$core$Maybe$Nothing,
													$elm$html$Html$text('Sync data'));
											}
										}()
										])),
									A2(
									$author$project$Chunky$chunk,
									_List_fromArray(
										['mt-4']),
									_List_fromArray(
										[
											A4(
											$author$project$Chunky$slab,
											$elm$html$Html$a,
											_List_fromArray(
												[
													$elm$html$Html$Attributes$href('about/'),
													$elm$html$Html$Attributes$target('_blank')
												]),
											_List_fromArray(
												['border-b', 'border-current', 'inline-block', 'leading-snug', 'text-base05', 'text-xxs', 'tracking-widest', 'uppercase', 'dark:text-base03']),
											_List_fromArray(
												[
													$elm$html$Html$text('Learn more')
												]))
										]))
								])) : ((!amountOfTracks) ? $author$project$UI$Tracks$View$message('No tracks found') : $author$project$UI$Tracks$View$message('No sources available')))
						]))
				]));
	});
var $icidasset$elm_material_icons$Material$Icons$Round$arrow_downward = A2(
	$icidasset$elm_material_icons$Material$Icons$Internal$icon,
	_List_fromArray(
		[
			$icidasset$elm_material_icons$Material$Icons$Internal$v('0 0 24 24')
		]),
	_List_fromArray(
		[
			A2(
			$icidasset$elm_material_icons$Material$Icons$Internal$p,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$d('M0 0h24v24H0V0z'),
					$icidasset$elm_material_icons$Material$Icons$Internal$f('none')
				]),
			_List_Nil),
			A2(
			$icidasset$elm_material_icons$Material$Icons$Internal$p,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$d('M11 5v11.17l-4.88-4.88c-.39-.39-1.03-.39-1.42 0-.39.39-.39 1.02 0 1.41l6.59 6.59c.39.39 1.02.39 1.41 0l6.59-6.59c.39-.39.39-1.02 0-1.41-.39-.39-1.02-.39-1.41 0L13 16.17V5c0-.55-.45-1-1-1s-1 .45-1 1z')
				]),
			_List_Nil)
		]));
var $icidasset$elm_material_icons$Material$Icons$Round$arrow_upward = A2(
	$icidasset$elm_material_icons$Material$Icons$Internal$icon,
	_List_fromArray(
		[
			$icidasset$elm_material_icons$Material$Icons$Internal$v('0 0 24 24')
		]),
	_List_fromArray(
		[
			A2(
			$icidasset$elm_material_icons$Material$Icons$Internal$p,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$d('M0 0h24v24H0V0z'),
					$icidasset$elm_material_icons$Material$Icons$Internal$f('none')
				]),
			_List_Nil),
			A2(
			$icidasset$elm_material_icons$Material$Icons$Internal$p,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$d('M13 19V7.83l4.88 4.88c.39.39 1.03.39 1.42 0 .39-.39.39-1.02 0-1.41l-6.59-6.59c-.39-.39-1.02-.39-1.41 0l-6.6 6.58c-.39.39-.39 1.02 0 1.41.39.39 1.02.39 1.41 0L11 7.83V19c0 .55.45 1 1 1s1-.45 1-1z')
				]),
			_List_Nil)
		]));
var $author$project$UI$Tracks$Scene$Covers$compileItemDependencies = function (deps) {
	return {
		cachedCovers: deps.cachedCovers,
		columns: $author$project$UI$Tracks$Scene$Covers$determineColumns(deps.viewportWidth),
		containerWidth: $author$project$UI$Tracks$Scene$Covers$determineContainerWidth(deps.viewportWidth),
		nowPlaying: deps.nowPlaying,
		sortBy: deps.sortBy
	};
};
var $FabienHenon$elm_infinite_list_view$InfiniteList$Config = function (a) {
	return {$: 'Config', a: a};
};
var $FabienHenon$elm_infinite_list_view$InfiniteList$defaultContainer = F2(
	function (styles, elements) {
		return A2(
			$elm$html$Html$div,
			A2(
				$elm$core$List$map,
				function (_v0) {
					var attr = _v0.a;
					var value = _v0.b;
					return A2($elm$html$Html$Attributes$style, attr, value);
				},
				styles),
			elements);
	});
var $FabienHenon$elm_infinite_list_view$InfiniteList$config = function (conf) {
	return $FabienHenon$elm_infinite_list_view$InfiniteList$Config(
		{_class: $elm$core$Maybe$Nothing, containerHeight: conf.containerHeight, customContainer: $FabienHenon$elm_infinite_list_view$InfiniteList$defaultContainer, id: $elm$core$Maybe$Nothing, itemHeight: conf.itemHeight, itemView: conf.itemView, keepFirst: 0, offset: 200, styles: _List_Nil});
};
var $author$project$UI$Tracks$Scene$Covers$listStyles = _List_fromArray(
	[
		$elm$html$Html$Attributes$class('leading-tight'),
		$elm$html$Html$Attributes$class('pl-5'),
		$elm$html$Html$Attributes$class('pt-4')
	]);
var $author$project$UI$Tracks$Scene$Covers$infiniteListContainer = function (styles) {
	return $elm$html$Html$div(
		A2(
			$elm$core$List$append,
			$author$project$UI$Tracks$Scene$Covers$listStyles,
			A2(
				$elm$core$List$filterMap,
				function (_v0) {
					var k = _v0.a;
					var v = _v0.b;
					return (k === 'padding') ? $elm$core$Maybe$Nothing : $elm$core$Maybe$Just(
						A2($elm$html$Html$Attributes$style, k, v));
				},
				styles)));
};
var $author$project$UI$Tracks$Scene$groupIcon = A2(
	$author$project$Chunky$inline,
	_List_fromArray(
		['align-middle', 'inline-block', 'leading-0', 'pr-2']),
	_List_fromArray(
		[
			A2($icidasset$elm_material_icons$Material$Icons$Round$library_music, 16, $icidasset$elm_material_icons$Material$Icons$Types$Inherit)
		]));
var $author$project$UI$Tracks$Scene$group = F2(
	function (_v0, identifiers) {
		var index = _v0.index;
		var groupName = A2(
			$elm$core$Maybe$withDefault,
			'Unknown',
			A2(
				$elm$core$Maybe$map,
				function ($) {
					return $.name;
				},
				identifiers.group));
		return A3(
			$author$project$Chunky$brick,
			_List_fromArray(
				[
					A2($elm$html$Html$Attributes$style, 'height', '18px')
				]),
			_List_fromArray(
				[
					'box-content',
					'font-display',
					'font-semibold',
					'leading-normal',
					'pb-3',
					'px-4',
					'text-base04',
					'text-xxs',
					'tracking-tad-further',
					'truncate',
					A3($author$project$Conditional$ifThenElse, !index, 'pt-3', 'pt-4')
				]),
			_List_fromArray(
				[
					$author$project$UI$Tracks$Scene$groupIcon,
					A2(
					$author$project$Chunky$inline,
					_List_fromArray(
						['align-middle']),
					_List_fromArray(
						[
							$elm$html$Html$text(groupName)
						]))
				]));
	});
var $author$project$UI$Tracks$Types$SelectCover = function (a) {
	return {$: 'SelectCover', a: a};
};
var $icidasset$elm_material_icons$Material$Icons$Round$album = A2(
	$icidasset$elm_material_icons$Material$Icons$Internal$icon,
	_List_fromArray(
		[
			$icidasset$elm_material_icons$Material$Icons$Internal$v('0 0 24 24')
		]),
	_List_fromArray(
		[
			A2(
			$icidasset$elm_material_icons$Material$Icons$Internal$p,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$d('M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 14.5c-2.49 0-4.5-2.01-4.5-4.5S9.51 7.5 12 7.5s4.5 2.01 4.5 4.5-2.01 4.5-4.5 4.5zm0-5.5c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1z')
				]),
			_List_Nil)
		]));
var $icidasset$elm_material_icons$Material$Icons$Round$headset = A2(
	$icidasset$elm_material_icons$Material$Icons$Internal$icon,
	_List_fromArray(
		[
			$icidasset$elm_material_icons$Material$Icons$Internal$v('0 0 24 24')
		]),
	_List_fromArray(
		[
			A2(
			$icidasset$elm_material_icons$Material$Icons$Internal$p,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$d('M11.4 1.02C6.62 1.33 3 5.52 3 10.31V17c0 1.66 1.34 3 3 3h1c1.1 0 2-.9 2-2v-4c0-1.1-.9-2-2-2H5v-1.71C5 6.45 7.96 3.11 11.79 3 15.76 2.89 19 6.06 19 10v2h-2c-1.1 0-2 .9-2 2v4c0 1.1.9 2 2 2h1c1.66 0 3-1.34 3-3v-7c0-5.17-4.36-9.32-9.6-8.98z')
				]),
			_List_Nil)
		]));
var $mpizenberg$elm_pointer_events$Html$Events$Extra$Mouse$onContextMenu = A2($mpizenberg$elm_pointer_events$Html$Events$Extra$Mouse$onWithOptions, 'contextmenu', $mpizenberg$elm_pointer_events$Html$Events$Extra$Mouse$defaultOptions);
var $author$project$UI$Tracks$Types$ShowCoverMenuWithSmallDelay = F2(
	function (a, b) {
		return {$: 'ShowCoverMenuWithSmallDelay', a: a, b: b};
	});
var $author$project$UI$Tracks$Scene$Covers$showCoverMenu = function (cover) {
	return A2(
		$elm$core$Basics$composeR,
		function ($) {
			return $.clientPos;
		},
		A2(
			$elm$core$Basics$composeR,
			$author$project$Coordinates$fromTuple,
			A2(
				$elm$core$Basics$composeL,
				$author$project$UI$Types$TracksMsg,
				$author$project$UI$Tracks$Types$ShowCoverMenuWithSmallDelay(cover))));
};
var $author$project$UI$Tracks$Scene$Covers$coverView = F3(
	function (_v0, _v1, cover) {
		var clickable = _v0.clickable;
		var horizontal = _v0.horizontal;
		var cachedCovers = _v1.cachedCovers;
		var nowPlaying = _v1.nowPlaying;
		var nowPlayingId = A3(
			$elm_community$maybe_extra$Maybe$Extra$unwrap,
			'',
			A2(
				$elm$core$Basics$composeR,
				function ($) {
					return $.identifiedTrack;
				},
				A2(
					$elm$core$Basics$composeR,
					$elm$core$Tuple$second,
					function ($) {
						return $.id;
					})),
			nowPlaying);
		var maybeBlobUrlFromCache = A2(
			$elm$core$Dict$get,
			cover.key,
			A2($elm$core$Maybe$withDefault, $elm$core$Dict$empty, cachedCovers));
		var album = cover.identifiedTrackCover.b.tags.album;
		var missingTracks = _Utils_eq(album, $author$project$Tracks$missingAlbumPlaceholder);
		var bgOrDataAttributes = function () {
			var _v2 = _Utils_Tuple2(missingTracks, maybeBlobUrlFromCache);
			if (_v2.a) {
				return _List_Nil;
			} else {
				if (_v2.b.$ === 'Just') {
					var blobUrl = _v2.b.a;
					return _List_fromArray(
						[
							A2($elm$html$Html$Attributes$style, 'background-image', 'url(\'' + (blobUrl + '\')'))
						]);
				} else {
					var _v3 = _v2.b;
					if ($elm_community$maybe_extra$Maybe$Extra$isJust(cachedCovers)) {
						var _v4 = cover.identifiedTrackCover;
						var identifiers = _v4.a;
						var track = _v4.b;
						return _List_fromArray(
							[
								A2($elm$html$Html$Attributes$attribute, 'data-key', cover.key),
								A2($elm$html$Html$Attributes$attribute, 'data-filename', identifiers.filename),
								A2($elm$html$Html$Attributes$attribute, 'data-path', track.path),
								A2($elm$html$Html$Attributes$attribute, 'data-source-id', track.sourceId),
								A2(
								$elm$html$Html$Attributes$attribute,
								'data-various-artists',
								A3($author$project$Conditional$ifThenElse, cover.variousArtists, 't', 'f'))
							]);
					} else {
						return _List_Nil;
					}
				}
			}
		}();
		var hasBackgroundImage = $elm_community$maybe_extra$Maybe$Extra$isJust(maybeBlobUrlFromCache) && (!missingTracks);
		return A2(
			$author$project$Chunky$chunk,
			_List_fromArray(
				[
					'flex-shrink-0',
					'mr-5',
					'relative',
					A3($author$project$Conditional$ifThenElse, clickable, 'cursor-pointer', 'cursor-default'),
					A3($author$project$Conditional$ifThenElse, horizontal, 'h-32', 'h-0'),
					A3($author$project$Conditional$ifThenElse, horizontal, 'mb-4', 'pt-full'),
					A3($author$project$Conditional$ifThenElse, horizontal, 'w-32', 'w-auto')
				]),
			_List_fromArray(
				[
					A3(
					$author$project$Chunky$brick,
					A2(
						$elm$core$List$append,
						bgOrDataAttributes,
						clickable ? _List_fromArray(
							[
								$elm$html$Html$Events$onClick(
								$author$project$UI$Types$TracksMsg(
									$author$project$UI$Tracks$Types$SelectCover(cover))),
								$mpizenberg$elm_pointer_events$Html$Events$Extra$Mouse$onContextMenu(
								$author$project$UI$Tracks$Scene$Covers$showCoverMenu(cover))
							]) : _List_Nil),
					_List_fromArray(
						[
							'absolute',
							'bg-cover',
							'bg-gray-300',
							'mb-5',
							'inset-0',
							'rounded-md',
							'shadow',
							A3($author$project$Conditional$ifThenElse, horizontal, 'h-32', 'h-auto'),
							'dark:bg-white-025'
						]),
					_List_fromArray(
						[
							(!hasBackgroundImage) ? A2(
							$author$project$Chunky$chunk,
							_List_fromArray(
								['absolute', 'left-1/2', '-translate-x-1/2', '-translate-y-1/2', 'text-gray-400', 'top-1/2', 'transform', 'dark:text-base01']),
							_List_fromArray(
								[
									A2($icidasset$elm_material_icons$Material$Icons$Round$album, 26, $icidasset$elm_material_icons$Material$Icons$Types$Inherit)
								])) : $author$project$Chunky$nothing,
							function () {
							if (A2($elm$core$List$member, nowPlayingId, cover.trackIds)) {
								var dropShadow = 'drop-shadow(hsla(0, 0%, 0%, 0.275) 0px 0px 2.5px)';
								return A3(
									$author$project$Chunky$brick,
									_List_fromArray(
										[
											A2($elm$html$Html$Attributes$style, '-webkit-filter', dropShadow),
											A2($elm$html$Html$Attributes$style, 'filter', dropShadow)
										]),
									_List_fromArray(
										['absolute', 'bottom-0', 'mb-3', 'mr-3', 'right-0', 'text-white']),
									_List_fromArray(
										[
											A2($icidasset$elm_material_icons$Material$Icons$Round$headset, 16, $icidasset$elm_material_icons$Material$Icons$Types$Inherit)
										]));
							} else {
								return $author$project$Chunky$nothing;
							}
						}()
						]))
				]));
	});
var $author$project$UI$Tracks$Scene$Covers$metadataView = F3(
	function (_v0, _v1, cover) {
		var clickable = _v0.clickable;
		var horizontal = _v0.horizontal;
		var sortBy = _v1.sortBy;
		var _v2 = cover;
		var identifiedTrackCover = _v2.identifiedTrackCover;
		var _v3 = identifiedTrackCover;
		var track = _v3.b;
		var missingTracks = _Utils_eq(track.tags.album, $author$project$Tracks$missingAlbumPlaceholder);
		return A3(
			$author$project$Chunky$brick,
			clickable ? _List_fromArray(
				[
					$elm$html$Html$Events$onClick(
					$author$project$UI$Types$TracksMsg(
						$author$project$UI$Tracks$Types$SelectCover(cover))),
					$mpizenberg$elm_pointer_events$Html$Events$Extra$Mouse$onContextMenu(
					$author$project$UI$Tracks$Scene$Covers$showCoverMenu(cover))
				]) : _List_Nil,
			_List_fromArray(
				[
					'mr-5',
					'relative',
					'tracking-tad-closer',
					'z-10',
					A3($author$project$Conditional$ifThenElse, clickable, 'cursor-pointer', 'cursor-default'),
					A3($author$project$Conditional$ifThenElse, horizontal, 'mt-0', '-mt-5'),
					A3($author$project$Conditional$ifThenElse, horizontal, 'overflow-hidden', 'overflow-auto'),
					A3($author$project$Conditional$ifThenElse, horizontal, 'pt-0', 'pt-2')
				]),
			_List_fromArray(
				[
					A2(
					$author$project$Chunky$chunk,
					_List_fromArray(
						['mt-px', 'pt-px', 'truncate']),
					_List_fromArray(
						[
							function () {
							switch (sortBy.$) {
								case 'Album':
									return $elm$html$Html$text(track.tags.album);
								case 'Artist':
									return $elm$html$Html$text(track.tags.artist);
								default:
									return $author$project$Chunky$nothing;
							}
						}()
						])),
					A2(
					$author$project$Chunky$chunk,
					_List_fromArray(
						['mt-px', 'pt-px', 'text-base05', 'text-xs', 'truncate']),
					_List_fromArray(
						[
							function () {
							switch (sortBy.$) {
								case 'Album':
									return missingTracks ? $elm$html$Html$text('Missing tracks') : (cover.variousArtists ? $elm$html$Html$text('Various Artists') : $elm$html$Html$text(track.tags.artist));
								case 'Artist':
									var _v6 = $elm$core$List$length(cover.trackIds);
									if (_v6 === 1) {
										return $elm$html$Html$text('1 track');
									} else {
										var n = _v6;
										return $elm$html$Html$text(
											$elm$core$String$fromInt(n) + ' tracks');
									}
								default:
									return $author$project$Chunky$nothing;
							}
						}()
						]))
				]));
	});
var $author$project$UI$Tracks$Scene$Covers$itemView = F3(
	function (options, deps, cover) {
		return A2(
			$author$project$Chunky$chunk,
			_List_fromArray(
				[
					'antialiased',
					'flex-shrink-0',
					'font-semibold',
					A3($author$project$Conditional$ifThenElse, options.horizontal, 'flex', 'block'),
					A3($author$project$Conditional$ifThenElse, options.horizontal, 'mb-0', 'mb-5'),
					function () {
					var _v0 = _Utils_Tuple2(options.horizontal, deps.columns);
					if (_v0.a) {
						return 'w-auto';
					} else {
						switch (_v0.b) {
							case 1:
								return 'w-full';
							case 2:
								return 'w-1/2';
							case 3:
								return 'w-1/3';
							default:
								return 'w-1/4';
						}
					}
				}()
				]),
			_List_fromArray(
				[
					A3($author$project$UI$Tracks$Scene$Covers$coverView, options, deps, cover),
					A3($author$project$UI$Tracks$Scene$Covers$metadataView, options, deps, cover)
				]));
	});
var $author$project$UI$Tracks$Scene$Covers$rowView = F4(
	function (itemDeps, _v0, idx, row) {
		var maybeIdentifiers = A2(
			$elm$core$Maybe$map,
			$elm$core$Tuple$first,
			A2(
				$elm$core$Maybe$andThen,
				A2(
					$elm$core$Basics$composeR,
					function ($) {
						return $.tracks;
					},
					$elm$core$List$head),
				$elm$core$List$head(row)));
		var shouldRenderGroup = A2(
			$elm$core$Maybe$withDefault,
			false,
			A2($elm$core$Maybe$map, $author$project$Tracks$shouldRenderGroup, maybeIdentifiers));
		return $author$project$Chunky$raw(
			_List_fromArray(
				[
					function () {
					var _v1 = _Utils_Tuple2(shouldRenderGroup, maybeIdentifiers);
					if (_v1.a && (_v1.b.$ === 'Just')) {
						var identifiers = _v1.b.a;
						return A2(
							$author$project$Chunky$chunk,
							_List_fromArray(
								['-ml-4']),
							_List_fromArray(
								[
									A2(
									$author$project$UI$Tracks$Scene$group,
									{index: idx},
									identifiers)
								]));
					} else {
						return $author$project$Chunky$nothing;
					}
				}(),
					A2(
					$author$project$Chunky$chunk,
					_List_fromArray(
						['flex', 'flex-wrap']),
					A2(
						$elm$core$List$map,
						A2(
							$author$project$UI$Tracks$Scene$Covers$itemView,
							{clickable: true, horizontal: false},
							itemDeps),
						row))
				]));
	});
var $FabienHenon$elm_infinite_list_view$InfiniteList$addAttribute = F3(
	function (f, value, newAttributes) {
		if (value.$ === 'Nothing') {
			return newAttributes;
		} else {
			var v = value.a;
			return A2(
				$elm$core$List$cons,
				f(v),
				newAttributes);
		}
	});
var $elm$html$Html$Attributes$id = $elm$html$Html$Attributes$stringProperty('id');
var $FabienHenon$elm_infinite_list_view$InfiniteList$attributes = F2(
	function (totalHeight, _v0) {
		var styles = _v0.a.styles;
		var id = _v0.a.id;
		var _class = _v0.a._class;
		return A3(
			$FabienHenon$elm_infinite_list_view$InfiniteList$addAttribute,
			$elm$html$Html$Attributes$class,
			_class,
			A3(
				$FabienHenon$elm_infinite_list_view$InfiniteList$addAttribute,
				$elm$html$Html$Attributes$id,
				id,
				A2(
					$elm$core$List$map,
					function (_v1) {
						var attr = _v1.a;
						var value = _v1.b;
						return A2($elm$html$Html$Attributes$style, attr, value);
					},
					_Utils_ap(
						styles,
						_List_fromArray(
							[
								_Utils_Tuple2('margin', '0'),
								_Utils_Tuple2('padding', '0'),
								_Utils_Tuple2('box-sizing', 'border-box'),
								_Utils_Tuple2(
								'height',
								$elm$core$String$fromInt(totalHeight) + 'px'),
								_Utils_Tuple2('width', '100%')
							])))));
	});
var $FabienHenon$elm_infinite_list_view$InfiniteList$computeElementsAndSizesForMultipleHeights = F4(
	function (_v0, getHeight, scrollTop, items) {
		var offset = _v0.a.offset;
		var containerHeight = _v0.a.containerHeight;
		var keepFirst = _v0.a.keepFirst;
		var updateComputations = F2(
			function (item, calculatedTuple) {
				var _v1 = calculatedTuple;
				var idx = _v1.idx;
				var elementsCountToSkip = _v1.elementsCountToSkip;
				var elementsToShow = _v1.elementsToShow;
				var topMargin = _v1.topMargin;
				var currentHeight = _v1.currentHeight;
				var height = A2(getHeight, idx, item);
				var newCurrentHeight = currentHeight + height;
				return ((_Utils_cmp(
					newCurrentHeight,
					$elm$core$Basics$ceiling(scrollTop) - offset) < 1) && (_Utils_cmp(idx, keepFirst) < 0)) ? _Utils_update(
					calculatedTuple,
					{
						currentHeight: newCurrentHeight,
						elementsToShow: A2($elm$core$List$cons, item, elementsToShow),
						idx: idx + 1
					}) : ((_Utils_cmp(
					newCurrentHeight,
					$elm$core$Basics$ceiling(scrollTop) - offset) < 1) ? _Utils_update(
					calculatedTuple,
					{currentHeight: newCurrentHeight, elementsCountToSkip: elementsCountToSkip + 1, idx: idx + 1, topMargin: topMargin + height}) : ((_Utils_cmp(
					currentHeight,
					($elm$core$Basics$floor(scrollTop) + containerHeight) + offset) < 0) ? _Utils_update(
					calculatedTuple,
					{
						currentHeight: newCurrentHeight,
						elementsToShow: A2($elm$core$List$cons, item, elementsToShow),
						idx: idx + 1
					}) : _Utils_update(
					calculatedTuple,
					{currentHeight: newCurrentHeight, idx: idx + 1})));
			});
		var initialValue = {currentHeight: 0, elementsCountToSkip: 0, elementsToShow: _List_Nil, idx: 0, topMargin: 0};
		var computedValues = A3($elm$core$List$foldl, updateComputations, initialValue, items);
		return {
			elements: $elm$core$List$reverse(computedValues.elementsToShow),
			skipCount: computedValues.elementsCountToSkip,
			topMargin: computedValues.topMargin,
			totalHeight: computedValues.currentHeight
		};
	});
var $FabienHenon$elm_infinite_list_view$InfiniteList$computeElementsAndSizesForSimpleHeight = F4(
	function (_v0, itemHeight, scrollTop, items) {
		var offset = _v0.a.offset;
		var containerHeight = _v0.a.containerHeight;
		var keepFirst = _v0.a.keepFirst;
		var totalHeight = $elm$core$List$length(items) * itemHeight;
		var elementsCountToSkip = (A2(
			$elm$core$Basics$max,
			0,
			$elm$core$Basics$ceiling(scrollTop) - offset) / itemHeight) | 0;
		var topMargin = elementsCountToSkip * itemHeight;
		var elementsCountToShow = ((((offset * 2) + containerHeight) / itemHeight) | 0) + 1;
		var elementsToShow = _Utils_ap(
			A2($elm$core$List$take, keepFirst, items),
			A2(
				$elm$core$Basics$composeR,
				$elm$core$List$drop(keepFirst + elementsCountToSkip),
				$elm$core$List$take(elementsCountToShow))(items));
		return {elements: elementsToShow, skipCount: elementsCountToSkip, topMargin: topMargin, totalHeight: totalHeight};
	});
var $FabienHenon$elm_infinite_list_view$InfiniteList$computeElementsAndSizes = F3(
	function (configValue, scrollTop, items) {
		var itemHeight = configValue.a.itemHeight;
		var itemView = configValue.a.itemView;
		var customContainer = configValue.a.customContainer;
		if (itemHeight.$ === 'Constant') {
			var height = itemHeight.a;
			return A4($FabienHenon$elm_infinite_list_view$InfiniteList$computeElementsAndSizesForSimpleHeight, configValue, height, scrollTop, items);
		} else {
			var _function = itemHeight.a;
			return A4($FabienHenon$elm_infinite_list_view$InfiniteList$computeElementsAndSizesForMultipleHeights, configValue, _function, scrollTop, items);
		}
	});
var $FabienHenon$elm_infinite_list_view$InfiniteList$lazyView = F3(
	function (configValue, _v0, items) {
		var itemView = configValue.a.itemView;
		var customContainer = configValue.a.customContainer;
		var scrollTop = _v0.a;
		var _v1 = A3($FabienHenon$elm_infinite_list_view$InfiniteList$computeElementsAndSizes, configValue, scrollTop, items);
		var skipCount = _v1.skipCount;
		var elements = _v1.elements;
		var topMargin = _v1.topMargin;
		var totalHeight = _v1.totalHeight;
		var elementsToShow = elements;
		var elementsCountToSkip = skipCount;
		return A2(
			$elm$html$Html$div,
			A2($FabienHenon$elm_infinite_list_view$InfiniteList$attributes, totalHeight, configValue),
			_List_fromArray(
				[
					A2(
					customContainer,
					_List_fromArray(
						[
							_Utils_Tuple2('margin', '0'),
							_Utils_Tuple2('padding', '0'),
							_Utils_Tuple2('box-sizing', 'border-box'),
							_Utils_Tuple2(
							'top',
							$elm$core$String$fromInt(topMargin) + 'px'),
							_Utils_Tuple2('position', 'relative')
						]),
					A2(
						$elm$core$List$indexedMap,
						F2(
							function (idx, item) {
								return A4($elm$html$Html$Lazy$lazy3, itemView, idx, elementsCountToSkip + idx, item);
							}),
						elementsToShow))
				]));
	});
var $FabienHenon$elm_infinite_list_view$InfiniteList$view = F3(
	function (configValue, model, list) {
		return A4($elm$html$Html$Lazy$lazy3, $FabienHenon$elm_infinite_list_view$InfiniteList$lazyView, configValue, model, list);
	});
var $FabienHenon$elm_infinite_list_view$InfiniteList$withCustomContainer = F2(
	function (customContainer, _v0) {
		var value = _v0.a;
		return $FabienHenon$elm_infinite_list_view$InfiniteList$Config(
			_Utils_update(
				value,
				{customContainer: customContainer}));
	});
var $FabienHenon$elm_infinite_list_view$InfiniteList$Variable = function (a) {
	return {$: 'Variable', a: a};
};
var $FabienHenon$elm_infinite_list_view$InfiniteList$withVariableHeight = function (getHeight) {
	return $FabienHenon$elm_infinite_list_view$InfiniteList$Variable(getHeight);
};
var $author$project$UI$Tracks$Scene$Covers$infiniteListView = function (deps) {
	var itemDeps = $author$project$UI$Tracks$Scene$Covers$compileItemDependencies(deps);
	var rowHeightArgs = {columns: itemDeps.columns, containerWidth: itemDeps.containerWidth};
	return function (config) {
		return A3(
			$FabienHenon$elm_infinite_list_view$InfiniteList$view,
			config,
			deps.infiniteList,
			A3($author$project$UI$Tracks$Scene$Covers$coverRows, $elm$core$Maybe$Nothing, itemDeps.columns, deps.covers).rows);
	}(
		A2(
			$FabienHenon$elm_infinite_list_view$InfiniteList$withCustomContainer,
			$author$project$UI$Tracks$Scene$Covers$infiniteListContainer,
			$FabienHenon$elm_infinite_list_view$InfiniteList$config(
				{
					containerHeight: $elm$core$Basics$round(deps.viewportHeight) - 262,
					itemHeight: $FabienHenon$elm_infinite_list_view$InfiniteList$withVariableHeight(
						$author$project$UI$Tracks$Scene$Covers$dynamicRowHeight(rowHeightArgs)),
					itemView: $author$project$UI$Tracks$Scene$Covers$rowView(itemDeps)
				})));
};
var $author$project$UI$Tracks$Scene$shadow = A2(
	$author$project$Chunky$chunk,
	_List_fromArray(
		['h-10', 'left-0', '-mt-10', '-translate-y-full', 'opacity-30', 'right-0', 'shadow-md', 'sticky', 'top-0', 'transform', 'z-10', 'dark:shadow-md-darker']),
	_List_Nil);
var $elm$svg$Svg$circle = $elm$svg$Svg$trustedNode('circle');
var $icidasset$elm_material_icons$Material$Icons$Internal$c = $elm$svg$Svg$circle;
var $elm$svg$Svg$Attributes$cx = _VirtualDom_attribute('cx');
var $elm$svg$Svg$Attributes$cy = _VirtualDom_attribute('cy');
var $elm$svg$Svg$Attributes$r = _VirtualDom_attribute('r');
var $icidasset$elm_material_icons$Material$Icons$Round$people_alt = A2(
	$icidasset$elm_material_icons$Material$Icons$Internal$icon,
	_List_fromArray(
		[
			$icidasset$elm_material_icons$Material$Icons$Internal$b('new 0 0 24 24'),
			$icidasset$elm_material_icons$Material$Icons$Internal$v('0 0 24 24')
		]),
	_List_fromArray(
		[
			A2(
			$elm$svg$Svg$g,
			_List_Nil,
			_List_fromArray(
				[
					A2(
					$elm$svg$Svg$rect,
					_List_fromArray(
						[
							$icidasset$elm_material_icons$Material$Icons$Internal$f('none')
						]),
					_List_Nil),
					A2(
					$elm$svg$Svg$rect,
					_List_fromArray(
						[
							$icidasset$elm_material_icons$Material$Icons$Internal$f('none')
						]),
					_List_Nil)
				])),
			A2(
			$elm$svg$Svg$g,
			_List_Nil,
			_List_fromArray(
				[
					A2($elm$svg$Svg$g, _List_Nil, _List_Nil),
					A2(
					$elm$svg$Svg$g,
					_List_Nil,
					_List_fromArray(
						[
							A2(
							$elm$svg$Svg$g,
							_List_Nil,
							_List_fromArray(
								[
									A2(
									$icidasset$elm_material_icons$Material$Icons$Internal$p,
									_List_fromArray(
										[
											$elm$svg$Svg$Attributes$d('M16.67,13.13C18.04,14.06,19,15.32,19,17v3h3c0.55,0,1-0.45,1-1v-2 C23,14.82,19.43,13.53,16.67,13.13z'),
											$elm$svg$Svg$Attributes$fillRule('evenodd')
										]),
									_List_Nil)
								])),
							A2(
							$elm$svg$Svg$g,
							_List_Nil,
							_List_fromArray(
								[
									A2(
									$icidasset$elm_material_icons$Material$Icons$Internal$c,
									_List_fromArray(
										[
											$elm$svg$Svg$Attributes$cx('9'),
											$elm$svg$Svg$Attributes$cy('8'),
											$elm$svg$Svg$Attributes$fillRule('evenodd'),
											$elm$svg$Svg$Attributes$r('4')
										]),
									_List_Nil)
								])),
							A2(
							$elm$svg$Svg$g,
							_List_Nil,
							_List_fromArray(
								[
									A2(
									$icidasset$elm_material_icons$Material$Icons$Internal$p,
									_List_fromArray(
										[
											$elm$svg$Svg$Attributes$d('M15,12c2.21,0,4-1.79,4-4c0-2.21-1.79-4-4-4c-0.47,0-0.91,0.1-1.33,0.24 C14.5,5.27,15,6.58,15,8s-0.5,2.73-1.33,3.76C14.09,11.9,14.53,12,15,12z'),
											$elm$svg$Svg$Attributes$fillRule('evenodd')
										]),
									_List_Nil)
								])),
							A2(
							$elm$svg$Svg$g,
							_List_Nil,
							_List_fromArray(
								[
									A2(
									$icidasset$elm_material_icons$Material$Icons$Internal$p,
									_List_fromArray(
										[
											$elm$svg$Svg$Attributes$d('M9,13c-2.67,0-8,1.34-8,4v2c0,0.55,0.45,1,1,1h14c0.55,0,1-0.45,1-1v-2 C17,14.34,11.67,13,9,13z'),
											$elm$svg$Svg$Attributes$fillRule('evenodd')
										]),
									_List_Nil)
								]))
						]))
				]))
		]));
var $author$project$UI$Tracks$Scene$Covers$headerButton = F2(
	function (attributes, _v0) {
		var active = _v0.active;
		var label = _v0.label;
		return A3(
			$author$project$Chunky$brick,
			attributes,
			_List_fromArray(
				[
					'cursor-pointer',
					'inline-flex',
					'h-8',
					'items-center',
					'overflow-hidden',
					'px-2',
					'rounded',
					A3($author$project$Conditional$ifThenElse, active, 'bg-gray-300', 'bg-transparent'),
					A3($author$project$Conditional$ifThenElse, active, 'dark:bg-base01', 'dark:bg-transparent')
				]),
			_List_fromArray(
				[
					A2(
					$author$project$Chunky$chunk,
					_List_fromArray(
						['mt-px', 'pt-px']),
					_List_fromArray(
						[label]))
				]));
	});
var $author$project$UI$Tracks$Scene$Covers$sortGroupButton = F2(
	function (_v0, label) {
		var current = _v0.current;
		var btn = _v0.btn;
		return A2(
			$author$project$UI$Tracks$Scene$Covers$headerButton,
			_List_fromArray(
				[
					$elm$html$Html$Events$onClick(
					$author$project$UI$Types$TracksMsg(
						$author$project$UI$Tracks$Types$SortBy(btn))),
					$elm$html$Html$Attributes$class('mr-1')
				]),
			{
				active: _Utils_eq(current, btn),
				label: label
			});
	});
var $author$project$UI$Tracks$Scene$Covers$sortGroupButtons = function (sortBy) {
	return A2(
		$author$project$Chunky$chunk,
		_List_fromArray(
			['flex', 'h-8', 'items-center', 'leading-none', 'mr-3', 'text-xs', 'tracking-tad-further']),
		_List_fromArray(
			[
				A2(
				$author$project$UI$Tracks$Scene$Covers$sortGroupButton,
				{btn: $author$project$Tracks$Artist, current: sortBy},
				A2(
					$author$project$Chunky$chunk,
					_List_fromArray(
						['inline-flex', 'items-center']),
					_List_fromArray(
						[
							A2(
							$author$project$Chunky$inline,
							_List_fromArray(
								['mr-px']),
							_List_fromArray(
								[
									A2($icidasset$elm_material_icons$Material$Icons$Round$people_alt, 16, $icidasset$elm_material_icons$Material$Icons$Types$Inherit)
								])),
							A2(
							$author$project$Chunky$inline,
							_List_fromArray(
								['ml-1', 'mt-px', 'pl-px', 'pt-px']),
							_List_fromArray(
								[
									$elm$html$Html$text('Artists')
								]))
						]))),
				A2(
				$author$project$UI$Tracks$Scene$Covers$sortGroupButton,
				{btn: $author$project$Tracks$Album, current: sortBy},
				A2(
					$author$project$Chunky$chunk,
					_List_fromArray(
						['inline-flex', 'items-center']),
					_List_fromArray(
						[
							A2(
							$author$project$Chunky$inline,
							_List_fromArray(
								['mr-px']),
							_List_fromArray(
								[
									A2($icidasset$elm_material_icons$Material$Icons$Round$album, 16, $icidasset$elm_material_icons$Material$Icons$Types$Inherit)
								])),
							A2(
							$author$project$Chunky$inline,
							_List_fromArray(
								['ml-1', 'mt-px', 'pt-px']),
							_List_fromArray(
								[
									$elm$html$Html$text('Albums')
								]))
						])))
			]));
};
var $author$project$UI$Tracks$Types$InfiniteListMsg = function (a) {
	return {$: 'InfiniteListMsg', a: a};
};
var $FabienHenon$elm_infinite_list_view$InfiniteList$decodeScroll = function (scrollMsg) {
	return A2(
		$elm$json$Json$Decode$map,
		function (s) {
			return scrollMsg(s);
		},
		$FabienHenon$elm_infinite_list_view$InfiniteList$decodeToModel);
};
var $FabienHenon$elm_infinite_list_view$InfiniteList$onScroll = function (scrollMsg) {
	return A2(
		$elm$html$Html$Events$on,
		'scroll',
		$FabienHenon$elm_infinite_list_view$InfiniteList$decodeScroll(scrollMsg));
};
var $author$project$UI$Tracks$Scene$Covers$viewAttributes = _List_fromArray(
	[
		$FabienHenon$elm_infinite_list_view$InfiniteList$onScroll(
		A2($elm$core$Basics$composeR, $author$project$UI$Tracks$Types$InfiniteListMsg, $author$project$UI$Types$TracksMsg)),
		$elm$html$Html$Attributes$id($author$project$UI$Tracks$Scene$Covers$containerId)
	]);
var $author$project$UI$Tracks$Scene$Covers$collectionView = function (deps) {
	var amountOfCovers = $elm$core$List$length(deps.covers);
	return A3(
		$author$project$Chunky$brick,
		A2(
			$elm$core$List$cons,
			$elm$html$Html$Attributes$tabindex(
				A3($author$project$Conditional$ifThenElse, deps.isVisible, 0, -1)),
			$author$project$UI$Tracks$Scene$Covers$viewAttributes),
		_List_fromArray(
			['flex-basis-0', 'flex-grow', 'outline-none', 'overflow-x-hidden', 'overflow-y-auto', 'relative', 'scrolling-touch', 'text-almost-sm']),
		_List_fromArray(
			[
				$author$project$UI$Tracks$Scene$shadow,
				A2(
				$author$project$Chunky$chunk,
				_List_fromArray(
					['bg-white', 'flex', 'items-center', 'pt-5', 'px-5', 'relative', 'z-20', 'dark:bg-darkest-hour']),
				_List_fromArray(
					[
						$author$project$UI$Tracks$Scene$Covers$sortGroupButtons(deps.sortBy),
						A2(
						$author$project$Chunky$chunk,
						_List_fromArray(
							['flex', 'flex-auto', 'items-center', 'justify-end', 'text-base05', 'text-right', 'text-xs']),
						_List_fromArray(
							[
								$elm$html$Html$text(
								$elm$core$String$fromInt(amountOfCovers)),
								function () {
								var _v0 = deps.sortBy;
								switch (_v0.$) {
									case 'Album':
										return $elm$html$Html$text(' albums');
									case 'Artist':
										return $elm$html$Html$text(' artists');
									default:
										return $author$project$Chunky$nothing;
								}
							}(),
								$elm$html$Html$text(' '),
								A4(
								$author$project$Chunky$slab,
								$elm$html$Html$span,
								_List_fromArray(
									[
										$elm$html$Html$Events$onClick(
										$author$project$UI$Types$TracksMsg(
											$author$project$UI$Tracks$Types$SortBy(deps.sortBy))),
										function () {
										var _v1 = deps.sortDirection;
										if (_v1.$ === 'Asc') {
											return $elm$html$Html$Attributes$title('Sorted alphabetically ascending');
										} else {
											return $elm$html$Html$Attributes$title('Sorted alphabetically descending');
										}
									}()
									]),
								_List_fromArray(
									['cursor-pointer', 'ml-1', 'opacity-60']),
								_List_fromArray(
									[
										function () {
										var _v2 = deps.sortDirection;
										if (_v2.$ === 'Asc') {
											return A2($icidasset$elm_material_icons$Material$Icons$Round$arrow_downward, 16, $icidasset$elm_material_icons$Material$Icons$Types$Inherit);
										} else {
											return A2($icidasset$elm_material_icons$Material$Icons$Round$arrow_upward, 16, $icidasset$elm_material_icons$Material$Icons$Types$Inherit);
										}
									}()
									]))
							]))
					])),
				$author$project$UI$Tracks$Scene$Covers$infiniteListView(deps)
			]));
};
var $author$project$UI$Tracks$Types$DeselectCover = {$: 'DeselectCover'};
var $author$project$UI$Tracks$Scene$List$defFavColWidth = '4.5%';
var $author$project$UI$Tracks$Scene$List$columnMinWidth = '28px';
var $author$project$UI$Tracks$Scene$List$favColors = {
	gray: $avh4$elm_color$Color$toCssString(
		A3($avh4$elm_color$Color$rgb255, 220, 220, 220)),
	red: $avh4$elm_color$Color$toCssString($author$project$UI$Kit$colorKit.base08)
};
var $author$project$UI$Tracks$Scene$List$favouriteColumnStyles = F3(
	function (favouritesOnly, _v0, derivedColors) {
		var isFavourite = _v0.isFavourite;
		var isNowPlaying = _v0.isNowPlaying;
		var color = (isNowPlaying && isFavourite) ? derivedColors.text : (isNowPlaying ? derivedColors.subtle : ((favouritesOnly || (!isFavourite)) ? '' : $author$project$UI$Tracks$Scene$List$favColors.red));
		return _List_fromArray(
			[
				A2($elm$html$Html$Attributes$style, 'color', color),
				A2($elm$html$Html$Attributes$style, 'font-family', 'or-favourites'),
				A2($elm$html$Html$Attributes$style, 'min-width', $author$project$UI$Tracks$Scene$List$columnMinWidth)
			]);
	});
var $author$project$UI$Tracks$Scene$List$favouriteColumn = F4(
	function (columnWidth, favouritesOnly, identifiers, derivedColors) {
		return A3(
			$author$project$Chunky$brick,
			A2(
				$elm$core$List$append,
				_List_fromArray(
					[
						A2($elm$html$Html$Attributes$style, 'width', columnWidth),
						$elm$html$Html$Events$onClick(
						$author$project$UI$Types$TracksMsg(
							$author$project$UI$Tracks$Types$ToggleFavourite(identifiers.indexInList)))
					]),
				A3($author$project$UI$Tracks$Scene$List$favouriteColumnStyles, favouritesOnly, identifiers, derivedColors)),
			_List_fromArray(
				['flex-shrink-0', 'font-normal', 'pl-4', 'text-gray-500', 'dark:text-base02']),
			_List_fromArray(
				[
					identifiers.isFavourite ? $elm$html$Html$text('t') : $elm$html$Html$text('f')
				]));
	});
var $author$project$UI$Tracks$Types$ShowTracksMenuWithSmallDelay = F3(
	function (a, b, c) {
		return {$: 'ShowTracksMenuWithSmallDelay', a: a, b: b, c: c};
	});
var $author$project$UI$Tracks$Scene$List$mouseContextMenuEvent = function (_v0) {
	var i = _v0.a;
	return A2(
		$elm$html$Html$Events$custom,
		'contextmenu',
		A2(
			$elm$json$Json$Decode$map,
			function (event) {
				return {
					message: event.keys.shift ? $author$project$UI$Types$Bypass : $author$project$UI$Types$TracksMsg(
						A3(
							$author$project$UI$Tracks$Types$ShowTracksMenuWithSmallDelay,
							$elm$core$Maybe$Just(i.indexInList),
							{alt: event.keys.alt},
							$author$project$Coordinates$fromTuple(event.clientPos))),
					preventDefault: true,
					stopPropagation: true
				};
			},
			$mpizenberg$elm_pointer_events$Html$Events$Extra$Mouse$eventDecoder));
};
var $author$project$UI$Tracks$Scene$List$otherColumnStyles = function (columnWidth) {
	return _List_fromArray(
		[
			A2($elm$html$Html$Attributes$style, 'min-width', $author$project$UI$Tracks$Scene$List$columnMinWidth),
			A2($elm$html$Html$Attributes$style, 'width', columnWidth)
		]);
};
var $author$project$UI$Tracks$Scene$List$otherColumn = F3(
	function (width, _v0, text_) {
		return A3(
			$author$project$Chunky$brick,
			$author$project$UI$Tracks$Scene$List$otherColumnStyles(width),
			_List_fromArray(
				['pl-2', 'pr-2', 'pointer-events-none', 'truncate', 'last:pr-4']),
			_List_fromArray(
				[
					$elm$html$Html$text(text_)
				]));
	});
var $author$project$UI$Queue$Types$InjectFirstAndPlay = function (a) {
	return {$: 'InjectFirstAndPlay', a: a};
};
var $author$project$UI$Tracks$Scene$List$playEvent = function (_v0) {
	var i = _v0.a;
	var t = _v0.b;
	return A2(
		$elm$html$Html$Events$custom,
		'dbltap',
		$elm$json$Json$Decode$succeed(
			{
				message: i.isMissing ? $author$project$UI$Types$Bypass : $author$project$UI$Types$QueueMsg(
					$author$project$UI$Queue$Types$InjectFirstAndPlay(
						_Utils_Tuple2(i, t))),
				preventDefault: true,
				stopPropagation: true
			}));
};
var $avh4$elm_color$Color$rgb = F3(
	function (r, g, b) {
		return A4($avh4$elm_color$Color$RgbaSpace, r, g, b, 1.0);
	});
var $author$project$UI$Tracks$Scene$List$rowFontColors = {
	gray: $avh4$elm_color$Color$toCssString($author$project$UI$Kit$colorKit.base04),
	white: $avh4$elm_color$Color$toCssString(
		A3($avh4$elm_color$Color$rgb, 1, 1, 1))
};
var $author$project$UI$Tracks$Scene$List$rowStyles = F3(
	function (_v0, _v1, derivedColors) {
		var isMissing = _v1.isMissing;
		var isNowPlaying = _v1.isNowPlaying;
		var color = isNowPlaying ? derivedColors.text : (isMissing ? $author$project$UI$Tracks$Scene$List$rowFontColors.gray : '');
		var bgColor = isNowPlaying ? derivedColors.background : '';
		return _List_fromArray(
			[
				A2($elm$html$Html$Attributes$style, 'background-color', bgColor),
				A2($elm$html$Html$Attributes$style, 'color', color),
				A2(
				$elm$html$Html$Attributes$style,
				'height',
				$elm$core$String$fromInt($author$project$UI$Tracks$Scene$List$rowHeight) + 'px')
			]);
	});
var $author$project$UI$Tracks$Types$MarkAsSelected = F2(
	function (a, b) {
		return {$: 'MarkAsSelected', a: a, b: b};
	});
var $author$project$UI$Tracks$Scene$List$selectEvent = function (idx) {
	return A2(
		$elm$html$Html$Events$custom,
		'tap',
		A3(
			$elm$json$Json$Decode$map2,
			F2(
				function (shiftKey, button) {
					return {
						message: function () {
							if (!button) {
								return $author$project$UI$Types$TracksMsg(
									A2(
										$author$project$UI$Tracks$Types$MarkAsSelected,
										idx,
										{shiftKey: shiftKey}));
							} else {
								return $author$project$UI$Types$Bypass;
							}
						}(),
						preventDefault: false,
						stopPropagation: true
					};
				}),
			A2(
				$elm$json$Json$Decode$at,
				_List_fromArray(
					['originalEvent', 'shiftKey']),
				$elm$json$Json$Decode$bool),
			$elm$json$Json$Decode$oneOf(
				_List_fromArray(
					[
						A2(
						$elm$json$Json$Decode$at,
						_List_fromArray(
							['originalEvent', 'button']),
						$elm$json$Json$Decode$int),
						$elm$json$Json$Decode$succeed(0)
					]))));
};
var $author$project$UI$Tracks$Scene$List$touchContextMenuEvent = F2(
	function (_v0, maybeDragEnv) {
		var i = _v0.a;
		return A2(
			$elm$html$Html$Events$custom,
			'longtap',
			A3(
				$elm$json$Json$Decode$map2,
				F2(
					function (x, y) {
						return {
							message: function () {
								var _v1 = A2(
									$elm$core$Maybe$andThen,
									A2(
										$elm$core$Basics$composeR,
										function ($) {
											return $.model;
										},
										$author$project$UI$DnD$modelTarget),
									maybeDragEnv);
								if (_v1.$ === 'Just') {
									return $author$project$UI$Types$Bypass;
								} else {
									return $author$project$UI$Types$TracksMsg(
										A3(
											$author$project$UI$Tracks$Types$ShowTracksMenu,
											$elm$core$Maybe$Just(i.indexInList),
											{alt: false},
											{x: x, y: y}));
								}
							}(),
							preventDefault: false,
							stopPropagation: false
						};
					}),
				A2($elm$json$Json$Decode$field, 'x', $elm$json$Json$Decode$float),
				A2($elm$json$Json$Decode$field, 'y', $elm$json$Json$Decode$float)));
	});
var $author$project$UI$Tracks$Scene$List$defaultItemView = F4(
	function (args, _v0, idx, identifiedTrack) {
		var isOddRow = A2($elm$core$Basics$modBy, 2, idx) === 1;
		var _v1 = identifiedTrack;
		var identifiers = _v1.a;
		var track = _v1.b;
		var _v2 = args;
		var derivedColors = _v2.derivedColors;
		var favouritesOnly = _v2.favouritesOnly;
		var nowPlaying = _v2.nowPlaying;
		var roundedCorners = _v2.roundedCorners;
		var selectedTrackIndexes = _v2.selectedTrackIndexes;
		var showAlbum = _v2.showAlbum;
		var showArtist = _v2.showArtist;
		var showGroup = _v2.showGroup;
		var isSelected = A2($elm$core$List$member, idx, selectedTrackIndexes);
		var rowIdentifiers = {
			isMissing: identifiers.isMissing,
			isNowPlaying: A3(
				$elm_community$maybe_extra$Maybe$Extra$unwrap,
				false,
				A2(
					$elm$core$Basics$composeR,
					function ($) {
						return $.identifiedTrack;
					},
					$author$project$Tracks$isNowPlaying(identifiedTrack)),
				nowPlaying),
			isSelected: isSelected
		};
		var favIdentifiers = {indexInList: identifiers.indexInList, isFavourite: identifiers.isFavourite, isNowPlaying: rowIdentifiers.isNowPlaying, isSelected: isSelected};
		var shouldRenderGroup = showGroup && $author$project$Tracks$shouldRenderGroup(identifiers);
		return A2(
			$elm$html$Html$div,
			_List_Nil,
			_List_fromArray(
				[
					shouldRenderGroup ? A2(
					$author$project$UI$Tracks$Scene$group,
					{index: idx},
					identifiers) : $author$project$Chunky$nothing,
					A3(
					$author$project$Chunky$brick,
					$elm$core$List$concat(
						_List_fromArray(
							[
								A3($author$project$UI$Tracks$Scene$List$rowStyles, idx, rowIdentifiers, derivedColors),
								A2(
								$elm$core$List$append,
								isSelected ? _List_fromArray(
									[
										A2($author$project$UI$Tracks$Scene$List$touchContextMenuEvent, identifiedTrack, $elm$core$Maybe$Nothing)
									]) : _List_Nil,
								_List_fromArray(
									[
										$author$project$UI$Tracks$Scene$List$mouseContextMenuEvent(identifiedTrack),
										$author$project$UI$Tracks$Scene$List$playEvent(identifiedTrack),
										$author$project$UI$Tracks$Scene$List$selectEvent(idx)
									]))
							])),
					_List_fromArray(
						[
							'flex',
							'items-center',
							A3($author$project$Conditional$ifThenElse, identifiers.isMissing, 'cursor-default', 'cursor-pointer'),
							A3($author$project$Conditional$ifThenElse, isSelected, 'font-semibold', 'font-normal'),
							A3($author$project$Conditional$ifThenElse, roundedCorners, 'rounded', 'border-r-0'),
							A3($author$project$Conditional$ifThenElse, isOddRow, 'bg-white', 'bg-gray-100'),
							A3($author$project$Conditional$ifThenElse, isOddRow, 'dark:bg-darkest-hour', 'dark:bg-near-darkest-hour')
						]),
					((!showArtist) && (!showAlbum)) ? _List_fromArray(
						[
							A4($author$project$UI$Tracks$Scene$List$favouriteColumn, '5.75%', favouritesOnly, favIdentifiers, derivedColors),
							A3($author$project$UI$Tracks$Scene$List$otherColumn, '94.25%', false, track.tags.title)
						]) : (((!showArtist) && showAlbum) ? _List_fromArray(
						[
							A4($author$project$UI$Tracks$Scene$List$favouriteColumn, '5.75%', favouritesOnly, favIdentifiers, derivedColors),
							A3($author$project$UI$Tracks$Scene$List$otherColumn, '51.25%', false, track.tags.title),
							A3($author$project$UI$Tracks$Scene$List$otherColumn, '43%', false, track.tags.album)
						]) : ((showArtist && (!showAlbum)) ? _List_fromArray(
						[
							A4($author$project$UI$Tracks$Scene$List$favouriteColumn, '5.75%', favouritesOnly, favIdentifiers, derivedColors),
							A3($author$project$UI$Tracks$Scene$List$otherColumn, '51.25%', false, track.tags.title),
							A3($author$project$UI$Tracks$Scene$List$otherColumn, '43%', false, track.tags.artist)
						]) : _List_fromArray(
						[
							A4($author$project$UI$Tracks$Scene$List$favouriteColumn, $author$project$UI$Tracks$Scene$List$defFavColWidth, favouritesOnly, favIdentifiers, derivedColors),
							A3($author$project$UI$Tracks$Scene$List$otherColumn, '37.5%', false, track.tags.title),
							A3($author$project$UI$Tracks$Scene$List$otherColumn, '29.0%', false, track.tags.artist),
							A3($author$project$UI$Tracks$Scene$List$otherColumn, '29.0%', true, track.tags.album)
						]))))
				]));
	});
var $elm$core$Basics$clamp = F3(
	function (low, high, number) {
		return (_Utils_cmp(number, low) < 0) ? low : ((_Utils_cmp(number, high) > 0) ? high : number);
	});
var $noahzgordon$elm_color_extra$Color$Manipulate$limit = A2($elm$core$Basics$clamp, 0, 1);
var $elm$core$Basics$isNaN = _Basics_isNaN;
var $avh4$elm_color$Color$toHsla = function (_v0) {
	var r = _v0.a;
	var g = _v0.b;
	var b = _v0.c;
	var a = _v0.d;
	var minColor = A2(
		$elm$core$Basics$min,
		r,
		A2($elm$core$Basics$min, g, b));
	var maxColor = A2(
		$elm$core$Basics$max,
		r,
		A2($elm$core$Basics$max, g, b));
	var l = (minColor + maxColor) / 2;
	var s = _Utils_eq(minColor, maxColor) ? 0 : ((l < 0.5) ? ((maxColor - minColor) / (maxColor + minColor)) : ((maxColor - minColor) / ((2 - maxColor) - minColor)));
	var h1 = _Utils_eq(maxColor, r) ? ((g - b) / (maxColor - minColor)) : (_Utils_eq(maxColor, g) ? (2 + ((b - r) / (maxColor - minColor))) : (4 + ((r - g) / (maxColor - minColor))));
	var h2 = h1 * (1 / 6);
	var h3 = $elm$core$Basics$isNaN(h2) ? 0 : ((h2 < 0) ? (h2 + 1) : h2);
	return {alpha: a, hue: h3, lightness: l, saturation: s};
};
var $noahzgordon$elm_color_extra$Color$Manipulate$darken = F2(
	function (offset, cl) {
		var _v0 = $avh4$elm_color$Color$toHsla(cl);
		var hue = _v0.hue;
		var saturation = _v0.saturation;
		var lightness = _v0.lightness;
		var alpha = _v0.alpha;
		return A4(
			$avh4$elm_color$Color$hsla,
			hue,
			saturation,
			$noahzgordon$elm_color_extra$Color$Manipulate$limit(lightness - offset),
			alpha);
	});
var $noahzgordon$elm_color_extra$Color$Manipulate$fadeIn = F2(
	function (offset, cl) {
		var _v0 = $avh4$elm_color$Color$toHsla(cl);
		var hue = _v0.hue;
		var saturation = _v0.saturation;
		var lightness = _v0.lightness;
		var alpha = _v0.alpha;
		return A4(
			$avh4$elm_color$Color$hsla,
			hue,
			saturation,
			lightness,
			$noahzgordon$elm_color_extra$Color$Manipulate$limit(alpha + offset));
	});
var $noahzgordon$elm_color_extra$Color$Manipulate$fadeOut = F2(
	function (offset, cl) {
		return A2($noahzgordon$elm_color_extra$Color$Manipulate$fadeIn, -offset, cl);
	});
var $author$project$UI$Tracks$Scene$List$deriveColors = function (_v0) {
	var bgColor = _v0.bgColor;
	var darkMode = _v0.darkMode;
	var color = A2($elm$core$Maybe$withDefault, $author$project$UI$Kit$colors.text, bgColor);
	return darkMode ? {
		background: $avh4$elm_color$Color$toCssString(color),
		subtle: $avh4$elm_color$Color$toCssString(
			A2($noahzgordon$elm_color_extra$Color$Manipulate$darken, 0.1, color)),
		text: $avh4$elm_color$Color$toCssString(
			A2($noahzgordon$elm_color_extra$Color$Manipulate$darken, 0.475, color))
	} : {
		background: $avh4$elm_color$Color$toCssString(
			A2($noahzgordon$elm_color_extra$Color$Manipulate$fadeOut, 0.625, color)),
		subtle: $avh4$elm_color$Color$toCssString(
			A2($noahzgordon$elm_color_extra$Color$Manipulate$fadeOut, 0.575, color)),
		text: $avh4$elm_color$Color$toCssString(
			A2($noahzgordon$elm_color_extra$Color$Manipulate$darken, 0.3, color))
	};
};
var $icidasset$elm_material_icons$Material$Icons$Round$more_horiz = A2(
	$icidasset$elm_material_icons$Material$Icons$Internal$icon,
	_List_fromArray(
		[
			$icidasset$elm_material_icons$Material$Icons$Internal$v('0 0 24 24')
		]),
	_List_fromArray(
		[
			A2(
			$icidasset$elm_material_icons$Material$Icons$Internal$p,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$d('M0 0h24v24H0V0z'),
					$icidasset$elm_material_icons$Material$Icons$Internal$f('none')
				]),
			_List_Nil),
			A2(
			$icidasset$elm_material_icons$Material$Icons$Internal$p,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$d('M6 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-6 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z')
				]),
			_List_Nil)
		]));
var $author$project$UI$Tracks$Scene$Covers$singleCoverView = F2(
	function (cover, deps) {
		var derivedColors = $author$project$UI$Tracks$Scene$List$deriveColors(
			{bgColor: deps.bgColor, darkMode: deps.darkMode});
		var columns = $author$project$UI$Tracks$Scene$Covers$determineColumns(deps.viewportWidth);
		var condensedView = columns < 4;
		return A3(
			$author$project$Chunky$brick,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$tabindex(
					A3($author$project$Conditional$ifThenElse, deps.isVisible, 0, -1))
				]),
			_List_fromArray(
				['absolute', 'bg-white', 'flex-basis-0', 'flex-grow', 'inset-0', 'leading-tight', 'outline-none', 'overflow-x-hidden', 'overflow-y-auto', 'text-almost-sm', 'z-30', 'dark:bg-darkest-hour']),
			_List_fromArray(
				[
					A2(
					$author$project$Chunky$chunk,
					_List_fromArray(
						['flex', 'font-semibold', 'h-8', 'items-center', 'leading-none', '-ml-2', 'mt-5', 'px-5']),
					_List_fromArray(
						[
							A2(
							$author$project$UI$Tracks$Scene$Covers$headerButton,
							_List_fromArray(
								[
									$elm$html$Html$Events$onClick(
									$author$project$UI$Types$TracksMsg($author$project$UI$Tracks$Types$DeselectCover))
								]),
							{
								active: false,
								label: A2($icidasset$elm_material_icons$Material$Icons$Round$arrow_back, 16, $icidasset$elm_material_icons$Material$Icons$Types$Inherit)
							}),
							A2(
							$author$project$UI$Tracks$Scene$Covers$headerButton,
							_List_fromArray(
								[
									$mpizenberg$elm_pointer_events$Html$Events$Extra$Mouse$onClick(
									$author$project$UI$Tracks$Scene$Covers$showCoverMenu(cover))
								]),
							{
								active: true,
								label: A2($icidasset$elm_material_icons$Material$Icons$Round$more_horiz, 16, $icidasset$elm_material_icons$Material$Icons$Types$Inherit)
							})
						])),
					A2(
					$author$project$Chunky$chunk,
					_List_fromArray(
						[
							'mb-6',
							'-top-px',
							'mt-4',
							'relative',
							A3($author$project$Conditional$ifThenElse, condensedView, 'block', 'flex'),
							A3($author$project$Conditional$ifThenElse, condensedView, 'mx-5', 'ml-5')
						]),
					_List_fromArray(
						[
							A3(
							$author$project$UI$Tracks$Scene$Covers$itemView,
							{clickable: false, horizontal: condensedView},
							$author$project$UI$Tracks$Scene$Covers$compileItemDependencies(deps),
							cover),
							A2(
							$author$project$Chunky$chunk,
							_List_fromArray(
								[
									'flex-auto',
									'flex-basis-0',
									'overflow-hidden',
									'select-none',
									A3($author$project$Conditional$ifThenElse, condensedView, '-mx-5', 'mx-5'),
									A3($author$project$Conditional$ifThenElse, condensedView, 'px-1', 'px-0')
								]),
							$elm$core$List$singleton(
								A2(
									$author$project$Chunky$chunk,
									_List_fromArray(
										[
											A3($author$project$Conditional$ifThenElse, condensedView, 'px-px', 'px-0')
										]),
									A2(
										$elm$core$List$indexedMap,
										A2(
											$author$project$UI$Tracks$Scene$List$defaultItemView,
											{
												derivedColors: derivedColors,
												favouritesOnly: deps.favouritesOnly,
												nowPlaying: deps.nowPlaying,
												roundedCorners: true,
												selectedTrackIndexes: deps.selectedTrackIndexes,
												showAlbum: !cover.sameAlbum,
												showArtist: (!_Utils_eq(deps.sortBy, $author$project$Tracks$Artist)) && (!cover.sameArtist),
												showGroup: false
											},
											0),
										cover.tracks))))
						]))
				]));
	});
var $author$project$UI$Tracks$Scene$Covers$view_ = function (deps) {
	return A2(
		$author$project$Chunky$chunk,
		_List_fromArray(
			['flex', 'flex-basis-0', 'flex-col', 'flex-grow', 'relative']),
		_List_fromArray(
			[
				$author$project$UI$Tracks$Scene$Covers$collectionView(deps),
				function () {
				var _v0 = deps.selectedCover;
				if (_v0.$ === 'Just') {
					var cover = _v0.a;
					return A2($author$project$UI$Tracks$Scene$Covers$singleCoverView, cover, deps);
				} else {
					return $author$project$Chunky$nothing;
				}
			}()
			]));
};
var $author$project$UI$Tracks$Scene$Covers$view = function (deps) {
	return A2($elm$html$Html$Lazy$lazy, $author$project$UI$Tracks$Scene$Covers$view_, deps);
};
var $icidasset$elm_material_icons$Material$Icons$Round$expand_less = A2(
	$icidasset$elm_material_icons$Material$Icons$Internal$icon,
	_List_fromArray(
		[
			$icidasset$elm_material_icons$Material$Icons$Internal$v('0 0 24 24')
		]),
	_List_fromArray(
		[
			A2(
			$icidasset$elm_material_icons$Material$Icons$Internal$p,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$d('M0 0h24v24H0V0z'),
					$icidasset$elm_material_icons$Material$Icons$Internal$f('none')
				]),
			_List_Nil),
			A2(
			$icidasset$elm_material_icons$Material$Icons$Internal$p,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$d('M11.29 8.71L6.7 13.3c-.39.39-.39 1.02 0 1.41.39.39 1.02.39 1.41 0L12 10.83l3.88 3.88c.39.39 1.02.39 1.41 0 .39-.39.39-1.02 0-1.41L12.7 8.71c-.38-.39-1.02-.39-1.41 0z')
				]),
			_List_Nil)
		]));
var $icidasset$elm_material_icons$Material$Icons$Round$expand_more = A2(
	$icidasset$elm_material_icons$Material$Icons$Internal$icon,
	_List_fromArray(
		[
			$icidasset$elm_material_icons$Material$Icons$Internal$v('0 0 24 24')
		]),
	_List_fromArray(
		[
			A2(
			$icidasset$elm_material_icons$Material$Icons$Internal$p,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$d('M24 24H0V0h24v24z'),
					$icidasset$elm_material_icons$Material$Icons$Internal$f('none'),
					$icidasset$elm_material_icons$Material$Icons$Internal$o('.87')
				]),
			_List_Nil),
			A2(
			$icidasset$elm_material_icons$Material$Icons$Internal$p,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$d('M15.88 9.29L12 13.17 8.12 9.29c-.39-.39-1.02-.39-1.41 0-.39.39-.39 1.02 0 1.41l4.59 4.59c.39.39 1.02.39 1.41 0l4.59-4.59c.39-.39.39-1.02 0-1.41-.39-.38-1.03-.39-1.42 0z')
				]),
			_List_Nil)
		]));
var $author$project$UI$Tracks$Scene$List$headerColumn = F4(
	function (text_, width, maybeSortIcon, msg) {
		return A3(
			$author$project$Chunky$brick,
			_List_fromArray(
				[
					$elm$html$Html$Events$onClick(msg),
					A2($elm$html$Html$Attributes$style, 'min-width', $author$project$UI$Tracks$Scene$List$columnMinWidth),
					A2(
					$elm$html$Html$Attributes$style,
					'width',
					$elm$core$String$fromFloat(width) + '%')
				]),
			_List_fromArray(
				[
					'border-l',
					'border-gray-300',
					'leading-relaxed',
					'pl-2',
					'pr-2',
					'pt-px',
					'relative',
					function () {
					if (msg.$ === 'Bypass') {
						return 'cursor-default';
					} else {
						return 'cursor-pointer';
					}
				}(),
					'first:border-l-0',
					'first:cursor-default',
					'first:pl-4',
					'last:pr-4',
					'dark:border-base01'
				]),
			_List_fromArray(
				[
					A2(
					$author$project$Chunky$chunk,
					_List_fromArray(
						['mt-px', 'opacity-90', 'pt-px']),
					_List_fromArray(
						[
							$elm$html$Html$text(text_)
						])),
					function () {
					if (maybeSortIcon.$ === 'Just') {
						var sortIcon = maybeSortIcon.a;
						return A2(
							$author$project$Chunky$chunk,
							_List_fromArray(
								['absolute', '-translate-y-1/2', 'mr-1', 'opacity-90', 'right-0', 'top-1/2', 'transform']),
							_List_fromArray(
								[sortIcon]));
					} else {
						return $author$project$Chunky$nothing;
					}
				}()
				]));
	});
var $author$project$UI$Tracks$Scene$List$header = F4(
	function (isPlaylist, showAlbum, sortBy, sortDirection) {
		var sortIcon = A2(
			_Utils_eq(sortDirection, $author$project$Tracks$Desc) ? $icidasset$elm_material_icons$Material$Icons$Round$expand_less : $icidasset$elm_material_icons$Material$Icons$Round$expand_more,
			15,
			$icidasset$elm_material_icons$Material$Icons$Types$Inherit);
		var maybeSortIcon = function (s) {
			return A3(
				$author$project$Conditional$ifThenElse,
				_Utils_eq(sortBy, s),
				$elm$core$Maybe$Just(sortIcon),
				$elm$core$Maybe$Nothing);
		};
		return A2(
			$author$project$Chunky$chunk,
			_List_fromArray(
				['antialiased', 'bg-white', 'border-b', 'border-gray-300', 'flex', 'font-semibold', 'relative', 'text-base06', 'text-xxs', 'z-20', 'dark:bg-darkest-hour', 'dark:border-base01', 'dark:text-base03']),
			(isPlaylist && showAlbum) ? _List_fromArray(
				[
					A4($author$project$UI$Tracks$Scene$List$headerColumn, '', 4.5, $elm$core$Maybe$Nothing, $author$project$UI$Types$Bypass),
					A4($author$project$UI$Tracks$Scene$List$headerColumn, '#', 4.5, $elm$core$Maybe$Nothing, $author$project$UI$Types$Bypass),
					A4($author$project$UI$Tracks$Scene$List$headerColumn, 'Title', 36.0, $elm$core$Maybe$Nothing, $author$project$UI$Types$Bypass),
					A4($author$project$UI$Tracks$Scene$List$headerColumn, 'Artist', 27.5, $elm$core$Maybe$Nothing, $author$project$UI$Types$Bypass),
					A4($author$project$UI$Tracks$Scene$List$headerColumn, 'Album', 27.5, $elm$core$Maybe$Nothing, $author$project$UI$Types$Bypass)
				]) : (isPlaylist ? _List_fromArray(
				[
					A4($author$project$UI$Tracks$Scene$List$headerColumn, '', 4.5, $elm$core$Maybe$Nothing, $author$project$UI$Types$Bypass),
					A4($author$project$UI$Tracks$Scene$List$headerColumn, '#', 4.5, $elm$core$Maybe$Nothing, $author$project$UI$Types$Bypass),
					A4($author$project$UI$Tracks$Scene$List$headerColumn, 'Title', 49.75, $elm$core$Maybe$Nothing, $author$project$UI$Types$Bypass),
					A4($author$project$UI$Tracks$Scene$List$headerColumn, 'Artist', 41.25, $elm$core$Maybe$Nothing, $author$project$UI$Types$Bypass)
				]) : (showAlbum ? _List_fromArray(
				[
					A4($author$project$UI$Tracks$Scene$List$headerColumn, '', 4.5, $elm$core$Maybe$Nothing, $author$project$UI$Types$Bypass),
					A4(
					$author$project$UI$Tracks$Scene$List$headerColumn,
					'Title',
					37.5,
					maybeSortIcon($author$project$Tracks$Title),
					$author$project$UI$Types$TracksMsg(
						$author$project$UI$Tracks$Types$SortBy($author$project$Tracks$Title))),
					A4(
					$author$project$UI$Tracks$Scene$List$headerColumn,
					'Artist',
					29.0,
					maybeSortIcon($author$project$Tracks$Artist),
					$author$project$UI$Types$TracksMsg(
						$author$project$UI$Tracks$Types$SortBy($author$project$Tracks$Artist))),
					A4(
					$author$project$UI$Tracks$Scene$List$headerColumn,
					'Album',
					29.0,
					maybeSortIcon($author$project$Tracks$Album),
					$author$project$UI$Types$TracksMsg(
						$author$project$UI$Tracks$Types$SortBy($author$project$Tracks$Album)))
				]) : _List_fromArray(
				[
					A4($author$project$UI$Tracks$Scene$List$headerColumn, '', 5.75, $elm$core$Maybe$Nothing, $author$project$UI$Types$Bypass),
					A4(
					$author$project$UI$Tracks$Scene$List$headerColumn,
					'Title',
					51.25,
					maybeSortIcon($author$project$Tracks$Title),
					$author$project$UI$Types$TracksMsg(
						$author$project$UI$Tracks$Types$SortBy($author$project$Tracks$Title))),
					A4(
					$author$project$UI$Tracks$Scene$List$headerColumn,
					'Artist',
					43,
					maybeSortIcon($author$project$Tracks$Artist),
					$author$project$UI$Types$TracksMsg(
						$author$project$UI$Tracks$Types$SortBy($author$project$Tracks$Artist)))
				]))));
	});
var $author$project$UI$Tracks$Scene$List$listStyles = _List_fromArray(
	[
		$elm$html$Html$Attributes$class('pb-2 pt-1')
	]);
var $author$project$UI$Tracks$Scene$List$infiniteListContainer = function (styles) {
	return $elm$html$Html$div(
		A2(
			$elm$core$List$append,
			$author$project$UI$Tracks$Scene$List$listStyles,
			A2(
				$elm$core$List$filterMap,
				function (_v0) {
					var k = _v0.a;
					var v = _v0.b;
					return (k === 'padding') ? $elm$core$Maybe$Nothing : $elm$core$Maybe$Just(
						A2($elm$html$Html$Attributes$style, k, v));
				},
				styles)));
};
var $author$project$UI$Tracks$Scene$List$dragIndicator = function (darkMode) {
	var color = darkMode ? $author$project$UI$Kit$colors.gray_300 : $author$project$UI$Kit$colorKit.base03;
	return A2(
		$elm$html$Html$Attributes$style,
		'box-shadow',
		'0 1px 0 0 ' + ($avh4$elm_color$Color$toCssString(color) + ' inset'));
};
var $author$project$UI$DnD$isBeingDraggedOver = F2(
	function (context, model) {
		if (model.$ === 'DraggingOver') {
			var target = model.a.target;
			return _Utils_eq(context, target);
		} else {
			return false;
		}
	});
var $author$project$UI$Tracks$Scene$List$playlistIndexColumn = function (indexInPlaylist) {
	return A3(
		$author$project$Chunky$brick,
		$author$project$UI$Tracks$Scene$List$otherColumnStyles('4.5%'),
		_List_fromArray(
			['pl-2', 'pr-2', 'pointer-events-none', 'truncate']),
		_List_fromArray(
			[
				$elm$html$Html$text(
				$elm$core$String$fromInt(1 + indexInPlaylist))
			]));
};
var $author$project$UI$Tracks$Scene$List$playlistItemView = function (favouritesOnly) {
	return function (nowPlaying) {
		return function (_v0) {
			return function (selectedTrackIndexes) {
				return function (dnd) {
					return function (showAlbum) {
						return function (darkMode) {
							return function (derivedColors) {
								return function (_v1) {
									return function (idx) {
										return function (identifiedTrack) {
											var isSelected = A2($elm$core$List$member, idx, selectedTrackIndexes);
											var isOddRow = A2($elm$core$Basics$modBy, 2, idx) === 1;
											var dragEnv = {model: dnd, toMsg: $author$project$UI$Types$DnD};
											var _v2 = identifiedTrack;
											var identifiers = _v2.a;
											var track = _v2.b;
											var listIdx = identifiers.indexInList;
											var rowIdentifiers = {
												isMissing: identifiers.isMissing,
												isNowPlaying: A3(
													$elm_community$maybe_extra$Maybe$Extra$unwrap,
													false,
													A2(
														$elm$core$Basics$composeR,
														function ($) {
															return $.identifiedTrack;
														},
														$author$project$Tracks$isNowPlaying(identifiedTrack)),
													nowPlaying),
												isSelected: isSelected
											};
											var favIdentifiers = {indexInList: identifiers.indexInList, isFavourite: identifiers.isFavourite, isNowPlaying: rowIdentifiers.isNowPlaying, isSelected: isSelected};
											return A3(
												$author$project$Chunky$brick,
												$elm$core$List$concat(
													_List_fromArray(
														[
															A3($author$project$UI$Tracks$Scene$List$rowStyles, idx, rowIdentifiers, derivedColors),
															A2(
															$elm$core$List$append,
															isSelected ? _List_fromArray(
																[
																	A2(
																	$author$project$UI$Tracks$Scene$List$touchContextMenuEvent,
																	identifiedTrack,
																	$elm$core$Maybe$Just(dragEnv)),
																	A2($author$project$UI$DnD$listenToStart, dragEnv, listIdx)
																]) : _List_Nil,
															_List_fromArray(
																[
																	$author$project$UI$Tracks$Scene$List$mouseContextMenuEvent(identifiedTrack),
																	$author$project$UI$Tracks$Scene$List$playEvent(identifiedTrack),
																	$author$project$UI$Tracks$Scene$List$selectEvent(idx)
																])),
															A2($author$project$UI$DnD$listenToEnterLeave, dragEnv, listIdx),
															A2($author$project$UI$DnD$isBeingDraggedOver, listIdx, dnd) ? _List_fromArray(
															[
																$author$project$UI$Tracks$Scene$List$dragIndicator(darkMode)
															]) : _List_Nil
														])),
												_List_fromArray(
													[
														'flex',
														'items-center',
														A3($author$project$Conditional$ifThenElse, identifiers.isMissing, 'cursor-default', 'cursor-pointer'),
														A3($author$project$Conditional$ifThenElse, isSelected, 'font-semibold', 'font-normal'),
														A3($author$project$Conditional$ifThenElse, isOddRow, 'bg-white', 'bg-gray-100'),
														A3($author$project$Conditional$ifThenElse, isOddRow, 'dark:bg-darkest-hour', 'dark:bg-near-darkest-hour')
													]),
												showAlbum ? _List_fromArray(
													[
														A4($author$project$UI$Tracks$Scene$List$favouriteColumn, $author$project$UI$Tracks$Scene$List$defFavColWidth, favouritesOnly, favIdentifiers, derivedColors),
														$author$project$UI$Tracks$Scene$List$playlistIndexColumn(
														A2($elm$core$Maybe$withDefault, 0, identifiers.indexInPlaylist)),
														A3($author$project$UI$Tracks$Scene$List$otherColumn, '36.0%', false, track.tags.title),
														A3($author$project$UI$Tracks$Scene$List$otherColumn, '27.5%', false, track.tags.artist),
														A3($author$project$UI$Tracks$Scene$List$otherColumn, '27.5%', true, track.tags.album)
													]) : _List_fromArray(
													[
														A4($author$project$UI$Tracks$Scene$List$favouriteColumn, $author$project$UI$Tracks$Scene$List$defFavColWidth, favouritesOnly, favIdentifiers, derivedColors),
														$author$project$UI$Tracks$Scene$List$playlistIndexColumn(
														A2($elm$core$Maybe$withDefault, 0, identifiers.indexInPlaylist)),
														A3($author$project$UI$Tracks$Scene$List$otherColumn, '49.75%', false, track.tags.title),
														A3($author$project$UI$Tracks$Scene$List$otherColumn, '41.25%', false, track.tags.artist)
													]));
										};
									};
								};
							};
						};
					};
				};
			};
		};
	};
};
var $author$project$UI$Tracks$Scene$List$infiniteListView = F7(
	function (deps, harvest, infiniteList, favouritesOnly, searchTerm, _v0, maybeDnD) {
		var nowPlaying = _v0.a;
		var selectedTrackIndexes = _v0.b;
		var derivedColors = $author$project$UI$Tracks$Scene$List$deriveColors(
			{bgColor: deps.bgColor, darkMode: deps.darkMode});
		return function (config) {
			return A3($FabienHenon$elm_infinite_list_view$InfiniteList$view, config, infiniteList, harvest);
		}(
			A2(
				$FabienHenon$elm_infinite_list_view$InfiniteList$withCustomContainer,
				$author$project$UI$Tracks$Scene$List$infiniteListContainer,
				$FabienHenon$elm_infinite_list_view$InfiniteList$config(
					{
						containerHeight: $elm$core$Basics$round(deps.height),
						itemHeight: $FabienHenon$elm_infinite_list_view$InfiniteList$withVariableHeight($author$project$UI$Tracks$Scene$List$dynamicRowHeight),
						itemView: function () {
							if (maybeDnD.$ === 'Just') {
								var dnd = maybeDnD.a;
								return A8($author$project$UI$Tracks$Scene$List$playlistItemView, favouritesOnly, nowPlaying, searchTerm, selectedTrackIndexes, dnd, deps.showAlbum, deps.darkMode, derivedColors);
							} else {
								return $author$project$UI$Tracks$Scene$List$defaultItemView(
									{derivedColors: derivedColors, favouritesOnly: favouritesOnly, nowPlaying: nowPlaying, roundedCorners: false, selectedTrackIndexes: selectedTrackIndexes, showAlbum: deps.showAlbum, showArtist: true, showGroup: true});
							}
						}()
					})));
	});
var $elm$virtual_dom$VirtualDom$lazy4 = _VirtualDom_lazy4;
var $elm$html$Html$Lazy$lazy4 = $elm$virtual_dom$VirtualDom$lazy4;
var $elm$virtual_dom$VirtualDom$lazy7 = _VirtualDom_lazy7;
var $elm$html$Html$Lazy$lazy7 = $elm$virtual_dom$VirtualDom$lazy7;
var $author$project$UI$Tracks$Scene$List$viewAttributes = _List_fromArray(
	[
		$FabienHenon$elm_infinite_list_view$InfiniteList$onScroll(
		A2($elm$core$Basics$composeR, $author$project$UI$Tracks$Types$InfiniteListMsg, $author$project$UI$Types$TracksMsg)),
		$elm$html$Html$Attributes$id($author$project$UI$Tracks$Scene$List$containerId),
		$elm$html$Html$Attributes$class('overscroll-none')
	]);
var $author$project$UI$Tracks$Scene$List$view = function (deps) {
	return function (harvest) {
		return function (infiniteList) {
			return function (favouritesOnly) {
				return function (nowPlaying) {
					return function (searchTerm) {
						return function (sortBy) {
							return function (sortDirection) {
								return function (selectedTrackIndexes) {
									return function (maybeDnD) {
										return A3(
											$author$project$Chunky$brick,
											A2(
												$elm$core$List$cons,
												$elm$html$Html$Attributes$tabindex(
													A3($author$project$Conditional$ifThenElse, deps.isVisible, 0, -1)),
												$author$project$UI$Tracks$Scene$List$viewAttributes),
											_List_fromArray(
												[
													'flex-basis-0',
													'flex-grow',
													'outline-none',
													'overflow-x-hidden',
													'relative',
													'select-none',
													'scrolling-touch',
													'text-xs',
													'md:text-almost-sm',
													function () {
													if (maybeDnD.$ === 'Just') {
														var dnd = maybeDnD.a;
														return (deps.isTouchDevice && $author$project$UI$DnD$isDragging(dnd)) ? 'overflow-y-hidden' : 'overflow-y-auto';
													} else {
														return 'overflow-y-auto';
													}
												}()
												]),
											_List_fromArray(
												[
													$author$project$UI$Tracks$Scene$shadow,
													A5(
													$elm$html$Html$Lazy$lazy4,
													$author$project$UI$Tracks$Scene$List$header,
													$elm_community$maybe_extra$Maybe$Extra$isJust(maybeDnD),
													deps.showAlbum,
													sortBy,
													sortDirection),
													A8(
													$elm$html$Html$Lazy$lazy7,
													$author$project$UI$Tracks$Scene$List$infiniteListView,
													deps,
													harvest,
													infiniteList,
													favouritesOnly,
													searchTerm,
													_Utils_Tuple2(nowPlaying, selectedTrackIndexes),
													maybeDnD)
												]));
									};
								};
							};
						};
					};
				};
			};
		};
	};
};
var $author$project$UI$Tracks$View$viewClasses = _List_fromArray(
	['flex', 'flex-col', 'flex-grow', 'relative']);
var $author$project$UI$Tracks$View$view = function (model) {
	var isOnIndexPage = _Utils_eq(model.page, $author$project$UI$Page$Index);
	return A2(
		$author$project$Chunky$chunk,
		$author$project$UI$Tracks$View$viewClasses,
		_List_fromArray(
			[
				A2(
				$elm$html$Html$Lazy$lazy,
				$author$project$UI$Tracks$View$navigation,
				{
					bgColor: model.extractedBackdropColor,
					favouritesOnly: model.favouritesOnly,
					grouping: model.grouping,
					isOnIndexPage: isOnIndexPage,
					pressedShift: A2($elm$core$List$member, $ohanhi$keyboard$Keyboard$Shift, model.pressedKeys),
					scene: model.scene,
					searchTerm: model.searchTerm,
					selectedPlaylist: model.selectedPlaylist,
					showVolumeSlider: model.showVolumeSlider,
					volume: model.eqSettings.volume
				}),
				function () {
				if ($elm$core$List$isEmpty(model.tracks.harvested)) {
					return A6(
						$elm$html$Html$Lazy$lazy5,
						$author$project$UI$Tracks$View$noTracksView,
						A2($elm$core$List$map, $elm$core$Tuple$first, model.processingContext),
						$elm$core$List$length(model.sources),
						$elm$core$List$length(model.tracks.harvested),
						$elm$core$List$length(model.favourites),
						$author$project$UI$Syncing$Common$extractMethod(model.syncing));
				} else {
					var _v0 = model.scene;
					if (_v0.$ === 'Covers') {
						return $author$project$UI$Tracks$Scene$Covers$view(
							{bgColor: model.extractedBackdropColor, cachedCovers: model.cachedCovers, covers: model.covers.harvested, darkMode: model.darkMode, favouritesOnly: model.favouritesOnly, infiniteList: model.infiniteList, isVisible: isOnIndexPage, nowPlaying: model.nowPlaying, selectedCover: model.selectedCover, selectedTrackIndexes: model.selectedTrackIndexes, sortBy: model.sortBy, sortDirection: model.sortDirection, viewportHeight: model.viewport.height, viewportWidth: model.viewport.width});
					} else {
						return $author$project$UI$Tracks$Scene$List$view(
							{bgColor: model.extractedBackdropColor, darkMode: model.darkMode, height: model.viewport.height, isTouchDevice: model.isTouchDevice, isVisible: isOnIndexPage, showAlbum: model.viewport.width >= 720})(model.tracks.harvested)(model.infiniteList)(model.favouritesOnly)(model.nowPlaying)(model.searchTerm)(model.sortBy)(model.sortDirection)(model.selectedTrackIndexes)(
							A2(
								$elm$core$Maybe$andThen,
								function (bool) {
									return bool ? $elm$core$Maybe$Nothing : $elm$core$Maybe$Just(model.dnd);
								},
								A2(
									$elm$core$Maybe$map,
									function ($) {
										return $.autoGenerated;
									},
									model.selectedPlaylist)));
					}
				}
			}()
			]));
};
var $author$project$UI$View$defaultScreen = function (model) {
	return _List_fromArray(
		[
			A3(
			$elm$html$Html$Lazy$lazy2,
			$author$project$UI$Navigation$global(
				_List_fromArray(
					[
						_Utils_Tuple2($author$project$UI$Page$Index, 'Tracks'),
						_Utils_Tuple2(
						$author$project$UI$Page$Sources($author$project$UI$Sources$Page$Index),
						'Sources'),
						_Utils_Tuple2(
						$author$project$UI$Page$Settings($author$project$UI$Settings$Page$Index),
						'Settings')
					])),
			model.alfred,
			model.page),
			$author$project$UI$View$vessel(
			_List_fromArray(
				[
					$author$project$UI$Tracks$View$view(model),
					function () {
					var _v0 = model.page;
					switch (_v0.$) {
						case 'Index':
							return $author$project$Chunky$nothing;
						case 'Playlists':
							var subPage = _v0.a;
							return A7(
								$elm$html$Html$Lazy$lazy6,
								$author$project$UI$Playlists$View$view,
								subPage,
								model.playlists,
								model.selectedPlaylist,
								model.editPlaylistContext,
								model.extractedBackdropColor,
								A3(
									$elm_community$maybe_extra$Maybe$Extra$unwrap,
									false,
									$author$project$User$Layer$methodSupportsPublicData,
									$author$project$UI$Syncing$Common$extractMethod(model.syncing)));
						case 'Queue':
							var subPage = _v0.a;
							return A2($author$project$UI$Queue$View$view, subPage, model);
						case 'Settings':
							var subPage = _v0.a;
							return A3(
								$elm$html$Html$Lazy$lazy2,
								$author$project$UI$Settings$view,
								subPage,
								{
									buildTimestamp: model.buildTimestamp,
									chosenBackgroundImage: model.chosenBackdrop,
									coverSelectionReducesPool: model.coverSelectionReducesPool,
									currentTimeZone: model.currentTimeZone,
									extractedBackdropColor: model.extractedBackdropColor,
									hideDuplicateTracks: model.hideDuplicates,
									lastFm: model.lastFm,
									processAutomatically: model.processAutomatically,
									rememberProgress: model.rememberProgress,
									serviceWorkerStatus: model.serviceWorkerStatus,
									syncMethod: $author$project$UI$Syncing$Common$extractMethod(model.syncing),
									version: model.version
								});
						default:
							var subPage = _v0.a;
							return A2($author$project$UI$Sources$View$view, subPage, model);
					}
				}(),
					$author$project$UI$Syncing$View$view(model)
				])),
			A5(
			$author$project$UI$Console$view,
			model.nowPlaying,
			model.repeat,
			model.shuffle,
			{loading: model.audioIsLoading, playing: model.audioIsPlaying, stalled: model.audioHasStalled},
			_Utils_Tuple2(model.audioPosition, model.audioDuration))
		]);
};
var $elm$svg$Svg$Attributes$class = _VirtualDom_attribute('class');
var $elm$svg$Svg$Attributes$strokeLinecap = _VirtualDom_attribute('stroke-linecap');
var $elm$svg$Svg$Attributes$strokeWidth = _VirtualDom_attribute('stroke-width');
var $author$project$UI$Svg$Elements$loadingWithSize = function (size) {
	return A2(
		$elm$svg$Svg$svg,
		_List_fromArray(
			[
				$elm$svg$Svg$Attributes$class('loading-animation'),
				$elm$svg$Svg$Attributes$height(
				$elm$core$String$fromInt(size)),
				$elm$svg$Svg$Attributes$viewBox('0 0 30 30'),
				$elm$svg$Svg$Attributes$width(
				$elm$core$String$fromInt(size))
			]),
		_List_fromArray(
			[
				A2(
				$elm$svg$Svg$circle,
				_List_fromArray(
					[
						$elm$svg$Svg$Attributes$class('loading-animation__circle'),
						$elm$svg$Svg$Attributes$cx('15'),
						$elm$svg$Svg$Attributes$cy('15'),
						$elm$svg$Svg$Attributes$fill('none'),
						$elm$svg$Svg$Attributes$r('14'),
						$elm$svg$Svg$Attributes$strokeLinecap('round'),
						$elm$svg$Svg$Attributes$strokeWidth('2')
					]),
				_List_Nil)
			]));
};
var $author$project$UI$Svg$Elements$loading = $author$project$UI$Svg$Elements$loadingWithSize(29);
var $author$project$UI$View$loadingAnimation = A2($elm$html$Html$map, $elm$core$Basics$never, $author$project$UI$Svg$Elements$loading);
var $author$project$UI$View$overlay = F2(
	function (maybeAlfred, maybeContextMenu) {
		var isShown = $elm_community$maybe_extra$Maybe$Extra$isJust(maybeAlfred) || $elm_community$maybe_extra$Maybe$Extra$isJust(maybeContextMenu);
		return A3(
			$author$project$Chunky$brick,
			_List_Nil,
			_List_fromArray(
				[
					'inset-0',
					'bg-darkest-hour',
					'duration-500',
					'ease-in-out',
					'fixed',
					'transition-opacity',
					'z-30',
					A3($author$project$Conditional$ifThenElse, isShown, 'pointer-events-auto', 'pointer-events-none'),
					A3($author$project$Conditional$ifThenElse, isShown, 'opacity-50', 'opacity-0')
				]),
			_List_Nil);
	});
var $elm$html$Html$section = _VirtualDom_node('section');
var $author$project$UI$Types$GotAlfredInput = function (a) {
	return {$: 'GotAlfredInput', a: a};
};
var $elm$html$Html$Attributes$autofocus = $elm$html$Html$Attributes$boolProperty('autofocus');
var $author$project$UI$Types$SelectAlfredItem = function (a) {
	return {$: 'SelectAlfredItem', a: a};
};
var $icidasset$elm_material_icons$Material$Icons$Round$keyboard_return = A2(
	$icidasset$elm_material_icons$Material$Icons$Internal$icon,
	_List_fromArray(
		[
			$icidasset$elm_material_icons$Material$Icons$Internal$v('0 0 24 24')
		]),
	_List_fromArray(
		[
			A2(
			$icidasset$elm_material_icons$Material$Icons$Internal$p,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$d('M19 8v3H5.83l2.88-2.88c.39-.39.39-1.02 0-1.41-.39-.39-1.02-.39-1.41 0L2.71 11.3c-.39.39-.39 1.02 0 1.41L7.3 17.3c.39.39 1.02.39 1.41 0 .39-.39.39-1.02 0-1.41L5.83 13H20c.55 0 1-.45 1-1V8c0-.55-.45-1-1-1s-1 .45-1 1z')
				]),
			_List_Nil)
		]));
var $author$project$Html$Ext$onTapPreventDefault = function (msg) {
	return A2(
		$elm$html$Html$Events$preventDefaultOn,
		'tap',
		$elm$json$Json$Decode$succeed(
			_Utils_Tuple2(msg, true)));
};
var $author$project$UI$Alfred$View$itemView = F4(
	function (bgColor, instance, idx, item) {
		return A3(
			$author$project$Chunky$brick,
			_List_fromArray(
				[
					$author$project$Html$Ext$onTapPreventDefault(
					$author$project$UI$Types$SelectAlfredItem(idx)),
					_Utils_eq(idx, instance.focus) ? $elm$html$Html$Attributes$id('alfred__results__focus') : $elm$html$Html$Attributes$id(
					'alfred__results__' + $elm$core$String$fromInt(idx)),
					_Utils_eq(idx, instance.focus) ? A2($elm$html$Html$Attributes$style, 'background-color', bgColor) : A2($elm$html$Html$Attributes$style, '', '')
				]),
			$elm$core$List$concat(
				_List_fromArray(
					[
						_List_fromArray(
						['flex', 'items-center', 'm-2', 'p-3', 'relative', 'rounded']),
						_Utils_eq(idx, instance.focus) ? _List_fromArray(
						['text-white', 'dark:opacity-80', 'dark:text-base07']) : _List_fromArray(
						['text-inherit'])
					])),
			_List_fromArray(
				[
					function () {
					var _v0 = item.icon;
					if (_v0.$ === 'Just') {
						var icon = _v0.a;
						return A4(
							$author$project$Chunky$slab,
							$elm$html$Html$span,
							_List_Nil,
							_List_fromArray(
								['inline-block', 'mr-2', 'w-5']),
							_List_fromArray(
								[
									icon($icidasset$elm_material_icons$Material$Icons$Types$Inherit)
								]));
					} else {
						return $elm$html$Html$text('');
					}
				}(),
					A4(
					$author$project$Chunky$slab,
					$elm$html$Html$span,
					_List_Nil,
					_List_fromArray(
						['flex-1', 'inline-block', 'pt-px']),
					_List_fromArray(
						[
							$elm$html$Html$text(item.title)
						])),
					_Utils_eq(idx, instance.focus) ? A2(
					$author$project$Chunky$chunk,
					_List_fromArray(
						['leading-0', 'ml-2']),
					_List_fromArray(
						[
							A2($icidasset$elm_material_icons$Material$Icons$Round$keyboard_return, 13, $icidasset$elm_material_icons$Material$Icons$Types$Inherit)
						])) : $author$project$Chunky$nothing
				]));
	});
var $author$project$UI$Alfred$View$groupView = F4(
	function (bgColor, instance, group, indexBase) {
		return $author$project$Chunky$raw(
			_List_fromArray(
				[
					function () {
					var _v0 = group.name;
					if (_v0.$ === 'Just') {
						var name = _v0.a;
						return A2(
							$author$project$Chunky$chunk,
							_List_fromArray(
								['all-small-caps', 'antialiased', 'font-semibold', 'leading-tight', 'mb-2', 'mx-2', 'mt-5', 'opacity-60', 'px-3', 'text-sm', 'tracking-wider']),
							_List_fromArray(
								[
									$elm$html$Html$text(name)
								]));
					} else {
						return $elm$html$Html$text('');
					}
				}(),
					$author$project$Chunky$raw(
					A2(
						$elm$core$List$indexedMap,
						function (i) {
							return A3($author$project$UI$Alfred$View$itemView, bgColor, instance, indexBase + i);
						},
						group.items))
				]));
	});
var $author$project$UI$Alfred$View$view = F2(
	function (maybeInstance, extractedBackdropColor) {
		var bgColor = A3($elm_community$maybe_extra$Maybe$Extra$unwrap, 'inherit', $avh4$elm_color$Color$toCssString, extractedBackdropColor);
		if (maybeInstance.$ === 'Just') {
			var instance = maybeInstance.a;
			var hasResults = $elm$core$List$sum(
				A2(
					$elm$core$List$map,
					A2(
						$elm$core$Basics$composeR,
						function ($) {
							return $.items;
						},
						$elm$core$List$length),
					instance.results)) > 0;
			return A2(
				$author$project$Chunky$chunk,
				_List_fromArray(
					['inset-0', 'flex', 'flex-col', 'fixed', 'items-center', 'px-3', 'cursor-pointer', 'z-50']),
				_List_fromArray(
					[
						A2(
						$author$project$Chunky$chunk,
						_List_fromArray(
							['italic', 'leading-normal', 'mt-12', 'opacity-75', 'text-center', 'text-white', 'dark:text-base07']),
						_List_fromArray(
							[
								$elm$html$Html$text(instance.message)
							])),
						A3(
						$author$project$Chunky$brick,
						_List_fromArray(
							[
								A2(
								$elm$html$Html$Events$custom,
								'tap',
								$elm$json$Json$Decode$succeed(
									{message: $author$project$UI$Types$Bypass, preventDefault: true, stopPropagation: true}))
							]),
						_List_fromArray(
							['text-sm', 'max-w-xl', 'mt-8', 'w-full']),
						_List_fromArray(
							[
								A4(
								$author$project$Chunky$slab,
								$elm$html$Html$input,
								_List_fromArray(
									[
										$elm$html$Html$Attributes$autofocus(true),
										$elm$html$Html$Attributes$id('diffuse__alfred'),
										$elm$html$Html$Events$onInput($author$project$UI$Types$GotAlfredInput),
										$elm$html$Html$Attributes$type_('text'),
										A2($elm$html$Html$Attributes$attribute, 'spellcheck', 'false'),
										function () {
										var _v1 = instance.operation;
										switch (_v1.$) {
											case 'Query':
												return $elm$html$Html$Attributes$placeholder('Type to search');
											case 'QueryOrMutation':
												return $elm$html$Html$Attributes$placeholder('Type to search or create');
											default:
												return $elm$html$Html$Attributes$placeholder('Type to create');
										}
									}()
									]),
								_List_fromArray(
									[
										'border',
										'bg-white',
										'block',
										'leading-normal',
										'opacity-95',
										'outline-none',
										'p-4',
										'rounded-t',
										'shadow-md',
										'text-xl',
										'tracking-tad-closer',
										'w-full',
										(!hasResults) ? 'rounded-b' : '',
										'dark:bg-darkest-hour',
										'dark:border-base00'
									]),
								_List_Nil)
							])),
						A3(
						$author$project$Chunky$brick,
						_List_fromArray(
							[
								$elm$html$Html$Attributes$id('alfred__results')
							]),
						_List_fromArray(
							[
								'bg-white',
								'border-t-0',
								'leading-tight',
								'max-w-xl',
								'mb-32',
								'opacity-95',
								'overflow-x-hidden',
								'overflow-y-auto',
								'rounded-b',
								'shadow-md',
								'smooth-scrolling',
								'text-nearly-sm',
								'w-full',
								A3($author$project$Conditional$ifThenElse, hasResults, 'border', ''),
								'dark:bg-darkest-hour',
								'dark:border-base00'
							]),
						$elm$core$List$reverse(
							A3(
								$elm$core$List$foldl,
								F2(
									function (group, _v2) {
										var acc = _v2.a;
										var indexBase = _v2.b;
										var _v3 = $elm$core$List$length(group.items);
										if (!_v3) {
											return _Utils_Tuple2(acc, indexBase);
										} else {
											var x = _v3;
											return _Utils_Tuple2(
												A2(
													$elm$core$List$cons,
													A4($author$project$UI$Alfred$View$groupView, bgColor, instance, group, indexBase),
													acc),
												indexBase + x);
										}
									}),
								_Utils_Tuple2(_List_Nil, 0),
								instance.results).a))
					]));
		} else {
			return $author$project$Chunky$nothing;
		}
	});
var $author$project$UI$Types$LoadBackdrop = function (a) {
	return {$: 'LoadBackdrop', a: a};
};
var $author$project$UI$Backdrop$chosen = function (maybeChosen) {
	if (maybeChosen.$ === 'Just') {
		var c = maybeChosen.a;
		var loadingDecoder = $elm$json$Json$Decode$succeed(
			$author$project$UI$Types$LoadBackdrop(c));
		return A4(
			$author$project$Chunky$slab,
			$elm$html$Html$img,
			_List_fromArray(
				[
					A2($elm$html$Html$Events$on, 'load', loadingDecoder),
					$elm$html$Html$Attributes$src('images/Background/' + c),
					A2($elm$html$Html$Attributes$style, 'opacity', '0.00001')
				]),
			_List_fromArray(
				['fixed', 'h-px', 'left-full', 'overflow-hidden', 'top-full', 'w-px']),
			_List_Nil);
	} else {
		return $author$project$Chunky$nothing;
	}
};
var $author$project$UI$Backdrop$backgroundImage = function (backdrop) {
	return A2($elm$html$Html$Attributes$style, 'background-image', 'url(images/Background/' + (backdrop + ')'));
};
var $author$project$UI$Backdrop$image = F3(
	function (fadeIn, isPrevious, loadedBackdrop) {
		var defaultClasses = _List_fromArray(
			[
				'bg-cover',
				'fixed',
				'inset-0',
				(isPrevious || (!fadeIn)) ? 'opacity-100' : 'opacity-0'
			]);
		var animationClasses = ((!isPrevious) && fadeIn) ? _List_fromArray(
			['animation-2s', 'animation-delay-50ms', 'animation-fadeIn', 'animation-fill-forwards', 'animation-once']) : _List_Nil;
		return A3(
			$author$project$Chunky$brick,
			_List_fromArray(
				[
					$author$project$UI$Backdrop$backgroundImage(loadedBackdrop),
					$author$project$UI$Backdrop$backgroundPositioning(loadedBackdrop)
				]),
			A2($elm$core$List$append, defaultClasses, animationClasses),
			_List_Nil);
	});
var $author$project$UI$Backdrop$loaded = F2(
	function (list, fadeIn) {
		var amount = $elm$core$List$length(list);
		var indexedMapFn = function (idx) {
			return A2(
				$author$project$UI$Backdrop$image,
				fadeIn,
				_Utils_cmp(idx + 1, amount) < 0);
		};
		return $author$project$Chunky$raw(
			A2($elm$core$List$indexedMap, indexedMapFn, list));
	});
var $author$project$UI$Backdrop$view = function (model) {
	return A2(
		$author$project$Chunky$chunk,
		_List_fromArray(
			['fixed', '-inset-px', 'z-0']),
		_List_fromArray(
			[
				A2($elm$html$Html$Lazy$lazy, $author$project$UI$Backdrop$chosen, model.chosenBackdrop),
				A3($elm$html$Html$Lazy$lazy2, $author$project$UI$Backdrop$loaded, model.loadedBackdrops, model.fadeInBackdrop),
				A3(
				$author$project$Chunky$brick,
				_List_fromArray(
					[
						A2($elm$html$Html$Attributes$style, 'background', 'linear-gradient(#0000, rgba(0, 0, 0, 0.175))')
					]),
				_List_fromArray(
					['absolute', 'bottom-0', 'h-64', 'inset-x-0', 'z-10']),
				_List_Nil)
			]));
};
var $author$project$UI$Types$MsgViaContextMenu = function (a) {
	return {$: 'MsgViaContextMenu', a: a};
};
var $author$project$UI$ContextMenu$itemView = function (_v0) {
	var icon = _v0.icon;
	var label = _v0.label;
	var msg = _v0.msg;
	var active = _v0.active;
	return A3(
		$author$project$Chunky$brick,
		_List_fromArray(
			[
				A2(
				$elm$html$Html$Events$custom,
				'tap',
				$elm$json$Json$Decode$succeed(
					{
						message: $author$project$UI$Types$MsgViaContextMenu(msg),
						preventDefault: true,
						stopPropagation: true
					}))
			]),
		_List_fromArray(
			[
				'border-b',
				'cursor-pointer',
				'pl-4',
				'pr-8',
				'py-3',
				'truncate',
				'last:border-transparent',
				A3($author$project$Conditional$ifThenElse, active, 'antialiased', 'subpixel-antialiased'),
				A3($author$project$Conditional$ifThenElse, active, 'border-transparent', 'border-gray-200'),
				A3($author$project$Conditional$ifThenElse, active, 'bg-base00', 'bg-transparent'),
				A3($author$project$Conditional$ifThenElse, active, 'text-white', 'text-inherit'),
				A3($author$project$Conditional$ifThenElse, active, 'font-semibold', 'font-normal'),
				'dark:border-base00',
				A3($author$project$Conditional$ifThenElse, active, 'dark:bg-base07', 'dark:bg-transparent'),
				A3($author$project$Conditional$ifThenElse, active, 'dark:text-darkest-hour', 'dark:text-inherit')
			]),
		_List_fromArray(
			[
				A2(
				$author$project$Chunky$inline,
				_List_fromArray(
					['align-middle', 'inline-block', 'leading-0']),
				_List_fromArray(
					[
						A2(icon, 14, $icidasset$elm_material_icons$Material$Icons$Types$Inherit)
					])),
				A2(
				$author$project$Chunky$inline,
				_List_fromArray(
					['align-middle', 'inline-block', 'leading-0', 'ml-2', 'pl-1', 'relative']),
				_List_fromArray(
					[
						$elm$html$Html$text(label)
					]))
			]));
};
var $author$project$UI$ContextMenu$view = F2(
	function (viewportWidth, m) {
		if (m.$ === 'Just') {
			var _v1 = m.a;
			var items = _v1.a;
			var coordinates = _v1.b;
			var _v2 = _Utils_Tuple2(250, 170);
			var height = _v2.a;
			var width = _v2.b;
			var top = A2($elm$core$Basics$max, (height / 2) + 12, coordinates.y);
			var left = A2(
				$elm$core$Basics$min,
				(viewportWidth - (width / 2)) - 12,
				A2($elm$core$Basics$max, (width / 2) + 12, coordinates.x));
			return A3(
				$author$project$Chunky$brick,
				_List_fromArray(
					[
						A2(
						$elm$html$Html$Attributes$style,
						'left',
						$elm$core$String$fromFloat(left) + 'px'),
						A2(
						$elm$html$Html$Attributes$style,
						'top',
						$elm$core$String$fromFloat(top) + 'px'),
						A2($elm$html$Html$Attributes$style, 'min-width', '170px')
					]),
				_List_fromArray(
					['absolute', 'bg-white', 'leading-loose', 'opacity-95', 'overflow-hidden', '-translate-x-1/2', '-translate-y-1/2', 'rounded', 'shadow-md', 'select-none', 'text-almost-sm', 'transform', 'z-50', 'dark:bg-darkest-hour', 'dark:border', 'dark:border-base00']),
				A2(
					$elm$core$List$map,
					function (item) {
						if (item.$ === 'Item') {
							var i = item.a;
							return $author$project$UI$ContextMenu$itemView(i);
						} else {
							return $author$project$Chunky$nothing;
						}
					},
					items));
		} else {
			return $author$project$Chunky$nothing;
		}
	});
var $author$project$Notifications$contents = function (_v0) {
	var c = _v0.d;
	return c;
};
var $author$project$Html$Ext$onDoubleTap = function (msg) {
	return A2(
		$elm$html$Html$Events$on,
		'dbltap',
		$elm$json$Json$Decode$succeed(msg));
};
var $author$project$Html$Ext$onTap = function (msg) {
	return A2(
		$elm$html$Html$Events$on,
		'tap',
		$elm$json$Json$Decode$succeed(msg));
};
var $elm$html$Html$Attributes$rel = _VirtualDom_attribute('rel');
var $author$project$UI$Notifications$notificationView = F2(
	function (extractedBackdropColor, notification) {
		var options = $author$project$Notifications$options(notification);
		var kind = $author$project$Notifications$kind(notification);
		var id = $author$project$Notifications$id(notification);
		var dismissMsg = $author$project$UI$Types$DismissNotification(
			{id: id});
		return A3(
			$author$project$Chunky$brick,
			_List_fromArray(
				[
					options.sticky ? $author$project$Html$Ext$onDoubleTap(dismissMsg) : $author$project$Html$Ext$onTap(dismissMsg),
					$elm$html$Html$Attributes$rel(
					$elm$core$String$fromInt(id)),
					function () {
					switch (kind.$) {
						case 'Casual':
							return A3(
								$elm_community$maybe_extra$Maybe$Extra$unwrap,
								$elm$html$Html$Attributes$class('bg-white-20'),
								A2(
									$elm$core$Basics$composeL,
									$elm$html$Html$Attributes$style('background-color'),
									$avh4$elm_color$Color$toCssString),
								extractedBackdropColor);
						case 'Error':
							return $elm$html$Html$Attributes$class('bg-base08');
						default:
							return $elm$html$Html$Attributes$class('bg-base0b');
					}
				}()
				]),
			_List_fromArray(
				[
					'duration-200',
					'max-w-xs',
					'mt-2',
					'p-4',
					'rounded',
					'text-white-90',
					A3($author$project$Conditional$ifThenElse, options.sticky, 'cursor-pointer', 'cursor-default'),
					A3($author$project$Conditional$ifThenElse, options.sticky, 'select-none', 'select-auto'),
					options.wasDismissed ? 'transition' : 'transition-colors',
					options.wasDismissed ? 'opacity-0' : 'opacity-100'
				]),
			_List_fromArray(
				[
					A2(
					$author$project$Chunky$chunk,
					_List_fromArray(
						['mt-px', 'pt-px']),
					_List_fromArray(
						[
							$author$project$Notifications$contents(notification)
						])),
					(options.sticky && (!_Utils_eq(kind, $author$project$Notifications$Casual))) ? A2(
					$author$project$Chunky$chunk,
					_List_fromArray(
						['cursor-pointer', 'italic', 'mt-2', 'opacity-60', 'select-none', 'text-xs']),
					_List_fromArray(
						[
							$elm$html$Html$text('Double click to dismiss')
						])) : $author$project$Chunky$nothing
				]));
	});
var $author$project$UI$Notifications$view = F2(
	function (extractedBackdropColor, collection) {
		var manipulatedColor = A2(
			$elm$core$Maybe$map,
			$noahzgordon$elm_color_extra$Color$Manipulate$darken(0.125),
			extractedBackdropColor);
		return A2(
			$author$project$Chunky$chunk,
			_List_fromArray(
				['notifications', 'absolute', 'bottom-0', 'flex', 'flex-col', 'items-end', 'leading-snug', 'mb-4', 'mr-3', 'right-0', 'text-sm', 'z-50']),
			A2(
				$elm$core$List$map,
				A2($elm$html$Html$Lazy$lazy2, $author$project$UI$Notifications$notificationView, manipulatedColor),
				$elm$core$List$reverse(collection)));
	});
var $author$project$UI$View$body = function (model) {
	return A2(
		$elm$html$Html$section,
		($elm_community$maybe_extra$Maybe$Extra$isJust(model.contextMenu) || $elm_community$maybe_extra$Maybe$Extra$isJust(model.alfred)) ? _List_fromArray(
			[
				A2(
				$elm$html$Html$Events$on,
				'tap',
				$elm$json$Json$Decode$succeed($author$project$UI$Types$HideOverlay))
			]) : (model.showVolumeSlider ? _List_fromArray(
			[
				A2(
				$elm$html$Html$Events$on,
				'tap',
				$elm$json$Json$Decode$succeed(
					$author$project$UI$Types$ToggleVolumeSlider($author$project$Common$Off)))
			]) : (model.isDragging ? _List_fromArray(
			[
				$elm$html$Html$Attributes$class('dragging-something'),
				A2(
				$elm$html$Html$Events$on,
				'mouseup',
				$elm$json$Json$Decode$succeed($author$project$UI$Types$StoppedDragging)),
				A2(
				$elm$html$Html$Events$on,
				'touchcancel',
				$elm$json$Json$Decode$succeed($author$project$UI$Types$StoppedDragging)),
				A2(
				$elm$html$Html$Events$on,
				'touchend',
				$elm$json$Json$Decode$succeed($author$project$UI$Types$StoppedDragging))
			]) : ($elm_community$maybe_extra$Maybe$Extra$isJust(model.selectedQueueItem) ? _List_fromArray(
			[
				A2(
				$elm$html$Html$Events$on,
				'tap',
				$elm$json$Json$Decode$succeed($author$project$UI$Types$RemoveQueueSelection))
			]) : ((!$elm$core$List$isEmpty(model.selectedTrackIndexes)) ? _List_fromArray(
			[
				A2(
				$elm$html$Html$Events$on,
				'tap',
				$elm$json$Json$Decode$succeed($author$project$UI$Types$RemoveTrackSelection))
			]) : _List_Nil)))),
		_List_fromArray(
			[
				A3($elm$html$Html$Lazy$lazy2, $author$project$UI$Alfred$View$view, model.alfred, model.extractedBackdropColor),
				A2($elm$html$Html$Lazy$lazy, $author$project$UI$Backdrop$view, model),
				A3($elm$html$Html$Lazy$lazy2, $author$project$UI$ContextMenu$view, model.viewport.width, model.contextMenu),
				A3($elm$html$Html$Lazy$lazy2, $author$project$UI$Notifications$view, model.extractedBackdropColor, model.notifications),
				A3($elm$html$Html$Lazy$lazy2, $author$project$UI$View$overlay, model.alfred, model.contextMenu),
				function () {
				var opts = {justifyCenter: false, scrolling: !model.isDragging};
				return model.isLoading ? A2(
					$author$project$UI$View$content,
					_Utils_update(
						opts,
						{justifyCenter: true}),
					_List_fromArray(
						[
							$author$project$UI$View$loadingAnimation,
							A2(
							$author$project$Chunky$chunk,
							_List_fromArray(
								['italic', 'mt-5', 'text-white', 'text-opacity-30']),
							_List_fromArray(
								[
									$elm$html$Html$text('Transmitting particles')
								]))
						])) : A2(
					$author$project$UI$View$content,
					opts,
					$author$project$UI$View$defaultScreen(model));
			}()
			]));
};
var $author$project$UI$View$view = function (model) {
	return {
		body: _List_fromArray(
			[
				$author$project$UI$View$body(model)
			]),
		title: 'Diffuse'
	};
};
var $author$project$UI$main = $elm$browser$Browser$application(
	{init: $author$project$UI$init, onUrlChange: $author$project$UI$Types$UrlChanged, onUrlRequest: $author$project$UI$Types$LinkClicked, subscriptions: $author$project$UI$subscriptions, update: $author$project$UI$update, view: $author$project$UI$View$view});
_Platform_export({'UI':{'init':$author$project$UI$main(
	A2(
		$elm$json$Json$Decode$andThen,
		function (viewport) {
			return A2(
				$elm$json$Json$Decode$andThen,
				function (version) {
					return A2(
						$elm$json$Json$Decode$andThen,
						function (upgrade) {
							return A2(
								$elm$json$Json$Decode$andThen,
								function (isOnline) {
									return A2(
										$elm$json$Json$Decode$andThen,
										function (isInstallingServiceWorker) {
											return A2(
												$elm$json$Json$Decode$andThen,
												function (initialTime) {
													return A2(
														$elm$json$Json$Decode$andThen,
														function (darkMode) {
															return A2(
																$elm$json$Json$Decode$andThen,
																function (buildTimestamp) {
																	return $elm$json$Json$Decode$succeed(
																		{buildTimestamp: buildTimestamp, darkMode: darkMode, initialTime: initialTime, isInstallingServiceWorker: isInstallingServiceWorker, isOnline: isOnline, upgrade: upgrade, version: version, viewport: viewport});
																},
																A2($elm$json$Json$Decode$field, 'buildTimestamp', $elm$json$Json$Decode$int));
														},
														A2($elm$json$Json$Decode$field, 'darkMode', $elm$json$Json$Decode$bool));
												},
												A2($elm$json$Json$Decode$field, 'initialTime', $elm$json$Json$Decode$int));
										},
										A2($elm$json$Json$Decode$field, 'isInstallingServiceWorker', $elm$json$Json$Decode$bool));
								},
								A2($elm$json$Json$Decode$field, 'isOnline', $elm$json$Json$Decode$bool));
						},
						A2($elm$json$Json$Decode$field, 'upgrade', $elm$json$Json$Decode$bool));
				},
				A2($elm$json$Json$Decode$field, 'version', $elm$json$Json$Decode$string));
		},
		A2(
			$elm$json$Json$Decode$field,
			'viewport',
			A2(
				$elm$json$Json$Decode$andThen,
				function (width) {
					return A2(
						$elm$json$Json$Decode$andThen,
						function (height) {
							return $elm$json$Json$Decode$succeed(
								{height: height, width: width});
						},
						A2($elm$json$Json$Decode$field, 'height', $elm$json$Json$Decode$float));
				},
				A2($elm$json$Json$Decode$field, 'width', $elm$json$Json$Decode$float)))))(0)}});}(this));